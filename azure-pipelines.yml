name: $(Year:yy)$(DayOfYear)$(Rev:r)
trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - readme.md

variables:
  azureNuget: https://pkgs.dev.azure.com/saucecontrol/PhotoSauce/_packaging/photosauce_ci/nuget/v3/index.json

jobs:
- job: native
  timeoutInMinutes: 0
  variables:
    VCPKG_BINARY_SOURCES: clear;nuget,$(azureNuget),readwrite

  strategy:
    matrix:
      linux:
        imageName: ubuntu-latest
        setupScript: |
          sudo apt-get update
          sudo apt-get install -y g++-aarch64-linux-gnu
          modules/vcpkg/bootstrap-vcpkg.sh
        buildScript: modules/vcpkg/vcpkg install libjxl:x64-linux-staticdependencies libjxl:arm64-linux-staticdependencies @build/vcpkg/response
      windows:
        imageName: windows-latest
        setupScript: modules\vcpkg\bootstrap-vcpkg.bat
        buildScript: modules\vcpkg\vcpkg install libjxl:x86-windows-staticdependencies libjxl:x64-windows-staticdependencies libjxl:arm64-windows-staticdependencies @build\vcpkg\response

  pool:
    vmImage: $(imageName)

  steps:
  - checkout: self
    submodules: true

  - task: NuGetAuthenticate@0

  - script: $(setupScript)
    displayName: Setup

  - script: $(buildScript)
    displayName: Build Native

  - publish: out/vcpkg/install
    displayName: Publish Native Binaries
    artifact: $(System.JobIdentifier)

- job: managed
  dependsOn: native

  pool:
    vmImage: ubuntu-latest

  steps:
  - checkout: self
    submodules: true

  - download: current
    displayName: Download Native Binaries

  - task: CopyFiles@2
    displayName: Copy Linux Binaries
    inputs:
      sourceFolder: $(Pipeline.Workspace)/native.linux
      targetFolder: out/vcpkg/install

  - task: CopyFiles@2
    displayName: Copy Windows Binaries
    inputs:
      sourceFolder: $(Pipeline.Workspace)/native.windows
      targetFolder: out/vcpkg/install

  - task: UseDotNet@2
    displayName: Ensure 6.0 SDK
    inputs:
      version: 6.0.x
      performMultiLevelLookup: true

  - script: |
      dotnet build -c Dist --version-suffix ci$(Build.BuildNumber) src/MagicScaler
      dotnet build -c Dist --version-suffix ci$(Build.BuildNumber) --no-dependencies src/WebRSize
      dotnet build -c Dist --version-suffix ci$(Build.BuildNumber) --no-dependencies src/NativeCodecs/Libjxl
    displayName: Build Managed

  - publish: out/bin
    displayName: Publish Managed Binaries
    artifact: managed

  - task: NuGetAuthenticate@0
    condition: ne(variables['Build.Reason'], 'PullRequest')

  - script: |
      dotnet nuget push --source $(azureNuget) --api-key AzureArtifacts out/bin/MagicScaler/Dist/PhotoSauce.MagicScaler.*.nupkg
      dotnet nuget push --source $(azureNuget) --api-key AzureArtifacts out/bin/WebRSize/Dist/PhotoSauce.WebRSize.*.nupkg
      dotnet nuget push --source $(azureNuget) --api-key AzureArtifacts out/bin/NativeCodecs.Libjxl/Dist/PhotoSauce.NativeCodecs.*.nupkg
    displayName: Push Packages
    condition: ne(variables['Build.Reason'], 'PullRequest')
