diff --git a/lib/jxl/dec_modular.cc b/lib/jxl/dec_modular.cc
index 0509b32..2dc2080 100644
--- a/lib/jxl/dec_modular.cc
+++ b/lib/jxl/dec_modular.cc
@@ -153,7 +153,7 @@ void int_to_float(const pixel_type* const JXL_RESTRICT row_in,
   }
 }
 
-#if JXL_DEBUG_V_LEVEL >= 1
+#if JXL_DEBUG_V_LEVEL >= 0
 std::string ModularStreamId::DebugString() const {
   std::ostringstream os;
   os << (kind == kGlobalData   ? "ModularGlobal"
diff --git a/lib/jxl/frame_header.cc b/lib/jxl/frame_header.cc
index 824aa8e..fc48e95 100644
--- a/lib/jxl/frame_header.cc
+++ b/lib/jxl/frame_header.cc
@@ -80,7 +80,7 @@ Status BlendingInfo::VisitFields(Visitor* JXL_RESTRICT visitor) {
   return true;
 }
 
-#if JXL_DEBUG_V_LEVEL >= 1
+#if JXL_DEBUG_V_LEVEL >= 0
 std::string BlendingInfo::DebugString() const {
   std::ostringstream os;
   os << (mode == BlendMode::kReplace            ? "Replace"
@@ -164,7 +164,7 @@ Status Passes::VisitFields(Visitor* JXL_RESTRICT visitor) {
   return true;
 }
 
-#if JXL_DEBUG_V_LEVEL >= 1
+#if JXL_DEBUG_V_LEVEL >= 0
 std::string Passes::DebugString() const {
   std::ostringstream os;
   os << "p=" << num_passes;
@@ -425,7 +425,7 @@ Status FrameHeader::VisitFields(Visitor* JXL_RESTRICT visitor) {
   return visitor->EndExtensions();
 }
 
-#if JXL_DEBUG_V_LEVEL >= 1
+#if JXL_DEBUG_V_LEVEL >= 0
 std::string FrameHeader::DebugString() const {
   std::ostringstream os;
   os << (encoding == FrameEncoding::kVarDCT ? "VarDCT" : "Modular");
diff --git a/lib/jxl/image_metadata.cc b/lib/jxl/image_metadata.cc
index 4cca910..434dc66 100644
--- a/lib/jxl/image_metadata.cc
+++ b/lib/jxl/image_metadata.cc
@@ -58,7 +58,7 @@ Status BitDepth::VisitFields(Visitor* JXL_RESTRICT visitor) {
   return true;
 }
 
-#if JXL_DEBUG_V_LEVEL >= 1
+#if JXL_DEBUG_V_LEVEL >= 0
 std::string BitDepth::DebugString() const {
   std::ostringstream os;
   os << (floating_point_sample ? "F" : "U");
@@ -253,7 +253,7 @@ Status ExtraChannelInfo::VisitFields(Visitor* JXL_RESTRICT visitor) {
   return true;
 }
 
-#if JXL_DEBUG_V_LEVEL >= 1
+#if JXL_DEBUG_V_LEVEL >= 0
 std::string ExtraChannelInfo::DebugString() const {
   std::ostringstream os;
   os << (type == ExtraChannel::kAlpha           ? "Alpha"
@@ -441,7 +441,7 @@ void ImageMetadata::SetAlphaBits(uint32_t bits, bool alpha_is_premultiplied) {
   if (bits > 12) modular_16_bit_buffer_sufficient = false;
 }
 
-#if JXL_DEBUG_V_LEVEL >= 1
+#if JXL_DEBUG_V_LEVEL >= 0
 std::string ImageMetadata::DebugString() const {
   std::ostringstream os;
   os << bit_depth.DebugString();
diff --git a/lib/jxl/modular/modular_image.cc b/lib/jxl/modular/modular_image.cc
index 746d7c8..fe174bb 100644
--- a/lib/jxl/modular/modular_image.cc
+++ b/lib/jxl/modular/modular_image.cc
@@ -59,7 +59,7 @@ Image Image::clone() {
   return c;
 }
 
-#if JXL_DEBUG_V_LEVEL >= 1
+#if JXL_DEBUG_V_LEVEL >= 0
 std::string Image::DebugString() const {
   std::ostringstream os;
   os << w << "x" << h << ", depth: " << bitdepth;
