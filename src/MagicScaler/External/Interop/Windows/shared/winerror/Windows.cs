// Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT).
// See third-party-notices in the repository root for more information.

// Ported from shared/winerror.h in the Windows SDK for Windows 10.0.19041.0
// Original source is Copyright © Microsoft. All rights reserved.

// <auto-generated />
#pragma warning disable CS0649

namespace TerraFX.Interop
{
    internal static partial class Windows
    {
        [return: NativeTypeName("HRESULT")]
        public static int HRESULT_FROM_WIN32([NativeTypeName("unsigned long")] uint x)
        {
            return (int)(x) <= 0 ? (int)(x) : (int)(((x) & 0x0000FFFF) | (7 << 16) | 0x80000000);
        }

#if false
        [NativeTypeName("#define FACILITY_NULL 0")]
        public const int FACILITY_NULL = 0;

        [NativeTypeName("#define FACILITY_RPC 1")]
        public const int FACILITY_RPC = 1;

        [NativeTypeName("#define FACILITY_DISPATCH 2")]
        public const int FACILITY_DISPATCH = 2;

        [NativeTypeName("#define FACILITY_STORAGE 3")]
        public const int FACILITY_STORAGE = 3;

        [NativeTypeName("#define FACILITY_ITF 4")]
        public const int FACILITY_ITF = 4;

        [NativeTypeName("#define FACILITY_WIN32 7")]
        public const int FACILITY_WIN32 = 7;

        [NativeTypeName("#define FACILITY_WINDOWS 8")]
        public const int FACILITY_WINDOWS = 8;

        [NativeTypeName("#define FACILITY_SSPI 9")]
        public const int FACILITY_SSPI = 9;

        [NativeTypeName("#define FACILITY_SECURITY 9")]
        public const int FACILITY_SECURITY = 9;

        [NativeTypeName("#define FACILITY_CONTROL 10")]
        public const int FACILITY_CONTROL = 10;

        [NativeTypeName("#define FACILITY_CERT 11")]
        public const int FACILITY_CERT = 11;

        [NativeTypeName("#define FACILITY_INTERNET 12")]
        public const int FACILITY_INTERNET = 12;

        [NativeTypeName("#define FACILITY_MEDIASERVER 13")]
        public const int FACILITY_MEDIASERVER = 13;

        [NativeTypeName("#define FACILITY_MSMQ 14")]
        public const int FACILITY_MSMQ = 14;

        [NativeTypeName("#define FACILITY_SETUPAPI 15")]
        public const int FACILITY_SETUPAPI = 15;

        [NativeTypeName("#define FACILITY_SCARD 16")]
        public const int FACILITY_SCARD = 16;

        [NativeTypeName("#define FACILITY_COMPLUS 17")]
        public const int FACILITY_COMPLUS = 17;

        [NativeTypeName("#define FACILITY_AAF 18")]
        public const int FACILITY_AAF = 18;

        [NativeTypeName("#define FACILITY_URT 19")]
        public const int FACILITY_URT = 19;

        [NativeTypeName("#define FACILITY_ACS 20")]
        public const int FACILITY_ACS = 20;

        [NativeTypeName("#define FACILITY_DPLAY 21")]
        public const int FACILITY_DPLAY = 21;

        [NativeTypeName("#define FACILITY_UMI 22")]
        public const int FACILITY_UMI = 22;

        [NativeTypeName("#define FACILITY_SXS 23")]
        public const int FACILITY_SXS = 23;

        [NativeTypeName("#define FACILITY_WINDOWS_CE 24")]
        public const int FACILITY_WINDOWS_CE = 24;

        [NativeTypeName("#define FACILITY_HTTP 25")]
        public const int FACILITY_HTTP = 25;

        [NativeTypeName("#define FACILITY_USERMODE_COMMONLOG 26")]
        public const int FACILITY_USERMODE_COMMONLOG = 26;

        [NativeTypeName("#define FACILITY_WER 27")]
        public const int FACILITY_WER = 27;

        [NativeTypeName("#define FACILITY_USERMODE_FILTER_MANAGER 31")]
        public const int FACILITY_USERMODE_FILTER_MANAGER = 31;

        [NativeTypeName("#define FACILITY_BACKGROUNDCOPY 32")]
        public const int FACILITY_BACKGROUNDCOPY = 32;

        [NativeTypeName("#define FACILITY_CONFIGURATION 33")]
        public const int FACILITY_CONFIGURATION = 33;

        [NativeTypeName("#define FACILITY_WIA 33")]
        public const int FACILITY_WIA = 33;

        [NativeTypeName("#define FACILITY_STATE_MANAGEMENT 34")]
        public const int FACILITY_STATE_MANAGEMENT = 34;

        [NativeTypeName("#define FACILITY_METADIRECTORY 35")]
        public const int FACILITY_METADIRECTORY = 35;

        [NativeTypeName("#define FACILITY_WINDOWSUPDATE 36")]
        public const int FACILITY_WINDOWSUPDATE = 36;

        [NativeTypeName("#define FACILITY_DIRECTORYSERVICE 37")]
        public const int FACILITY_DIRECTORYSERVICE = 37;

        [NativeTypeName("#define FACILITY_GRAPHICS 38")]
        public const int FACILITY_GRAPHICS = 38;

        [NativeTypeName("#define FACILITY_SHELL 39")]
        public const int FACILITY_SHELL = 39;

        [NativeTypeName("#define FACILITY_NAP 39")]
        public const int FACILITY_NAP = 39;

        [NativeTypeName("#define FACILITY_TPM_SERVICES 40")]
        public const int FACILITY_TPM_SERVICES = 40;

        [NativeTypeName("#define FACILITY_TPM_SOFTWARE 41")]
        public const int FACILITY_TPM_SOFTWARE = 41;

        [NativeTypeName("#define FACILITY_UI 42")]
        public const int FACILITY_UI = 42;

        [NativeTypeName("#define FACILITY_XAML 43")]
        public const int FACILITY_XAML = 43;

        [NativeTypeName("#define FACILITY_ACTION_QUEUE 44")]
        public const int FACILITY_ACTION_QUEUE = 44;

        [NativeTypeName("#define FACILITY_PLA 48")]
        public const int FACILITY_PLA = 48;

        [NativeTypeName("#define FACILITY_WINDOWS_SETUP 48")]
        public const int FACILITY_WINDOWS_SETUP = 48;

        [NativeTypeName("#define FACILITY_FVE 49")]
        public const int FACILITY_FVE = 49;

        [NativeTypeName("#define FACILITY_FWP 50")]
        public const int FACILITY_FWP = 50;

        [NativeTypeName("#define FACILITY_WINRM 51")]
        public const int FACILITY_WINRM = 51;

        [NativeTypeName("#define FACILITY_NDIS 52")]
        public const int FACILITY_NDIS = 52;

        [NativeTypeName("#define FACILITY_USERMODE_HYPERVISOR 53")]
        public const int FACILITY_USERMODE_HYPERVISOR = 53;

        [NativeTypeName("#define FACILITY_CMI 54")]
        public const int FACILITY_CMI = 54;

        [NativeTypeName("#define FACILITY_USERMODE_VIRTUALIZATION 55")]
        public const int FACILITY_USERMODE_VIRTUALIZATION = 55;

        [NativeTypeName("#define FACILITY_USERMODE_VOLMGR 56")]
        public const int FACILITY_USERMODE_VOLMGR = 56;

        [NativeTypeName("#define FACILITY_BCD 57")]
        public const int FACILITY_BCD = 57;

        [NativeTypeName("#define FACILITY_USERMODE_VHD 58")]
        public const int FACILITY_USERMODE_VHD = 58;

        [NativeTypeName("#define FACILITY_USERMODE_HNS 59")]
        public const int FACILITY_USERMODE_HNS = 59;

        [NativeTypeName("#define FACILITY_SDIAG 60")]
        public const int FACILITY_SDIAG = 60;

        [NativeTypeName("#define FACILITY_WEBSERVICES 61")]
        public const int FACILITY_WEBSERVICES = 61;

        [NativeTypeName("#define FACILITY_WINPE 61")]
        public const int FACILITY_WINPE = 61;

        [NativeTypeName("#define FACILITY_WPN 62")]
        public const int FACILITY_WPN = 62;

        [NativeTypeName("#define FACILITY_WINDOWS_STORE 63")]
        public const int FACILITY_WINDOWS_STORE = 63;

        [NativeTypeName("#define FACILITY_INPUT 64")]
        public const int FACILITY_INPUT = 64;

        [NativeTypeName("#define FACILITY_QUIC 65")]
        public const int FACILITY_QUIC = 65;

        [NativeTypeName("#define FACILITY_EAP 66")]
        public const int FACILITY_EAP = 66;

        [NativeTypeName("#define FACILITY_WINDOWS_DEFENDER 80")]
        public const int FACILITY_WINDOWS_DEFENDER = 80;

        [NativeTypeName("#define FACILITY_OPC 81")]
        public const int FACILITY_OPC = 81;

        [NativeTypeName("#define FACILITY_XPS 82")]
        public const int FACILITY_XPS = 82;

        [NativeTypeName("#define FACILITY_MBN 84")]
        public const int FACILITY_MBN = 84;

        [NativeTypeName("#define FACILITY_POWERSHELL 84")]
        public const int FACILITY_POWERSHELL = 84;

        [NativeTypeName("#define FACILITY_RAS 83")]
        public const int FACILITY_RAS = 83;

        [NativeTypeName("#define FACILITY_P2P_INT 98")]
        public const int FACILITY_P2P_INT = 98;

        [NativeTypeName("#define FACILITY_P2P 99")]
        public const int FACILITY_P2P = 99;

        [NativeTypeName("#define FACILITY_DAF 100")]
        public const int FACILITY_DAF = 100;

        [NativeTypeName("#define FACILITY_BLUETOOTH_ATT 101")]
        public const int FACILITY_BLUETOOTH_ATT = 101;

        [NativeTypeName("#define FACILITY_AUDIO 102")]
        public const int FACILITY_AUDIO = 102;

        [NativeTypeName("#define FACILITY_STATEREPOSITORY 103")]
        public const int FACILITY_STATEREPOSITORY = 103;

        [NativeTypeName("#define FACILITY_VISUALCPP 109")]
        public const int FACILITY_VISUALCPP = 109;

        [NativeTypeName("#define FACILITY_SCRIPT 112")]
        public const int FACILITY_SCRIPT = 112;

        [NativeTypeName("#define FACILITY_PARSE 113")]
        public const int FACILITY_PARSE = 113;

        [NativeTypeName("#define FACILITY_BLB 120")]
        public const int FACILITY_BLB = 120;

        [NativeTypeName("#define FACILITY_BLB_CLI 121")]
        public const int FACILITY_BLB_CLI = 121;

        [NativeTypeName("#define FACILITY_WSBAPP 122")]
        public const int FACILITY_WSBAPP = 122;

        [NativeTypeName("#define FACILITY_BLBUI 128")]
        public const int FACILITY_BLBUI = 128;

        [NativeTypeName("#define FACILITY_USN 129")]
        public const int FACILITY_USN = 129;

        [NativeTypeName("#define FACILITY_USERMODE_VOLSNAP 130")]
        public const int FACILITY_USERMODE_VOLSNAP = 130;

        [NativeTypeName("#define FACILITY_TIERING 131")]
        public const int FACILITY_TIERING = 131;

        [NativeTypeName("#define FACILITY_WSB_ONLINE 133")]
        public const int FACILITY_WSB_ONLINE = 133;

        [NativeTypeName("#define FACILITY_ONLINE_ID 134")]
        public const int FACILITY_ONLINE_ID = 134;

        [NativeTypeName("#define FACILITY_DEVICE_UPDATE_AGENT 135")]
        public const int FACILITY_DEVICE_UPDATE_AGENT = 135;

        [NativeTypeName("#define FACILITY_DRVSERVICING 136")]
        public const int FACILITY_DRVSERVICING = 136;

        [NativeTypeName("#define FACILITY_DLS 153")]
        public const int FACILITY_DLS = 153;

        [NativeTypeName("#define FACILITY_DELIVERY_OPTIMIZATION 208")]
        public const int FACILITY_DELIVERY_OPTIMIZATION = 208;

        [NativeTypeName("#define FACILITY_USERMODE_SPACES 231")]
        public const int FACILITY_USERMODE_SPACES = 231;

        [NativeTypeName("#define FACILITY_USER_MODE_SECURITY_CORE 232")]
        public const int FACILITY_USER_MODE_SECURITY_CORE = 232;

        [NativeTypeName("#define FACILITY_USERMODE_LICENSING 234")]
        public const int FACILITY_USERMODE_LICENSING = 234;

        [NativeTypeName("#define FACILITY_SOS 160")]
        public const int FACILITY_SOS = 160;

        [NativeTypeName("#define FACILITY_DEBUGGERS 176")]
        public const int FACILITY_DEBUGGERS = 176;

        [NativeTypeName("#define FACILITY_SPP 256")]
        public const int FACILITY_SPP = 256;

        [NativeTypeName("#define FACILITY_RESTORE 256")]
        public const int FACILITY_RESTORE = 256;

        [NativeTypeName("#define FACILITY_DMSERVER 256")]
        public const int FACILITY_DMSERVER = 256;

        [NativeTypeName("#define FACILITY_DEPLOYMENT_SERVICES_SERVER 257")]
        public const int FACILITY_DEPLOYMENT_SERVICES_SERVER = 257;

        [NativeTypeName("#define FACILITY_DEPLOYMENT_SERVICES_IMAGING 258")]
        public const int FACILITY_DEPLOYMENT_SERVICES_IMAGING = 258;

        [NativeTypeName("#define FACILITY_DEPLOYMENT_SERVICES_MANAGEMENT 259")]
        public const int FACILITY_DEPLOYMENT_SERVICES_MANAGEMENT = 259;

        [NativeTypeName("#define FACILITY_DEPLOYMENT_SERVICES_UTIL 260")]
        public const int FACILITY_DEPLOYMENT_SERVICES_UTIL = 260;

        [NativeTypeName("#define FACILITY_DEPLOYMENT_SERVICES_BINLSVC 261")]
        public const int FACILITY_DEPLOYMENT_SERVICES_BINLSVC = 261;

        [NativeTypeName("#define FACILITY_DEPLOYMENT_SERVICES_PXE 263")]
        public const int FACILITY_DEPLOYMENT_SERVICES_PXE = 263;

        [NativeTypeName("#define FACILITY_DEPLOYMENT_SERVICES_TFTP 264")]
        public const int FACILITY_DEPLOYMENT_SERVICES_TFTP = 264;

        [NativeTypeName("#define FACILITY_DEPLOYMENT_SERVICES_TRANSPORT_MANAGEMENT 272")]
        public const int FACILITY_DEPLOYMENT_SERVICES_TRANSPORT_MANAGEMENT = 272;

        [NativeTypeName("#define FACILITY_DEPLOYMENT_SERVICES_DRIVER_PROVISIONING 278")]
        public const int FACILITY_DEPLOYMENT_SERVICES_DRIVER_PROVISIONING = 278;

        [NativeTypeName("#define FACILITY_DEPLOYMENT_SERVICES_MULTICAST_SERVER 289")]
        public const int FACILITY_DEPLOYMENT_SERVICES_MULTICAST_SERVER = 289;

        [NativeTypeName("#define FACILITY_DEPLOYMENT_SERVICES_MULTICAST_CLIENT 290")]
        public const int FACILITY_DEPLOYMENT_SERVICES_MULTICAST_CLIENT = 290;

        [NativeTypeName("#define FACILITY_DEPLOYMENT_SERVICES_CONTENT_PROVIDER 293")]
        public const int FACILITY_DEPLOYMENT_SERVICES_CONTENT_PROVIDER = 293;

        [NativeTypeName("#define FACILITY_LINGUISTIC_SERVICES 305")]
        public const int FACILITY_LINGUISTIC_SERVICES = 305;

        [NativeTypeName("#define FACILITY_AUDIOSTREAMING 1094")]
        public const int FACILITY_AUDIOSTREAMING = 1094;

        [NativeTypeName("#define FACILITY_TTD 1490")]
        public const int FACILITY_TTD = 1490;

        [NativeTypeName("#define FACILITY_ACCELERATOR 1536")]
        public const int FACILITY_ACCELERATOR = 1536;

        [NativeTypeName("#define FACILITY_WMAAECMA 1996")]
        public const int FACILITY_WMAAECMA = 1996;

        [NativeTypeName("#define FACILITY_DIRECTMUSIC 2168")]
        public const int FACILITY_DIRECTMUSIC = 2168;

        [NativeTypeName("#define FACILITY_DIRECT3D10 2169")]
        public const int FACILITY_DIRECT3D10 = 2169;

        [NativeTypeName("#define FACILITY_DXGI 2170")]
        public const int FACILITY_DXGI = 2170;

        [NativeTypeName("#define FACILITY_DXGI_DDI 2171")]
        public const int FACILITY_DXGI_DDI = 2171;

        [NativeTypeName("#define FACILITY_DIRECT3D11 2172")]
        public const int FACILITY_DIRECT3D11 = 2172;

        [NativeTypeName("#define FACILITY_DIRECT3D11_DEBUG 2173")]
        public const int FACILITY_DIRECT3D11_DEBUG = 2173;

        [NativeTypeName("#define FACILITY_DIRECT3D12 2174")]
        public const int FACILITY_DIRECT3D12 = 2174;

        [NativeTypeName("#define FACILITY_DIRECT3D12_DEBUG 2175")]
        public const int FACILITY_DIRECT3D12_DEBUG = 2175;

        [NativeTypeName("#define FACILITY_DXCORE 2176")]
        public const int FACILITY_DXCORE = 2176;

        [NativeTypeName("#define FACILITY_LEAP 2184")]
        public const int FACILITY_LEAP = 2184;

        [NativeTypeName("#define FACILITY_AUDCLNT 2185")]
        public const int FACILITY_AUDCLNT = 2185;

        [NativeTypeName("#define FACILITY_WINCODEC_DWRITE_DWM 2200")]
        public const int FACILITY_WINCODEC_DWRITE_DWM = 2200;

        [NativeTypeName("#define FACILITY_WINML 2192")]
        public const int FACILITY_WINML = 2192;

        [NativeTypeName("#define FACILITY_DIRECT2D 2201")]
        public const int FACILITY_DIRECT2D = 2201;

        [NativeTypeName("#define FACILITY_DEFRAG 2304")]
        public const int FACILITY_DEFRAG = 2304;

        [NativeTypeName("#define FACILITY_USERMODE_SDBUS 2305")]
        public const int FACILITY_USERMODE_SDBUS = 2305;

        [NativeTypeName("#define FACILITY_JSCRIPT 2306")]
        public const int FACILITY_JSCRIPT = 2306;

        [NativeTypeName("#define FACILITY_PIDGENX 2561")]
        public const int FACILITY_PIDGENX = 2561;

        [NativeTypeName("#define FACILITY_EAS 85")]
        public const int FACILITY_EAS = 85;

        [NativeTypeName("#define FACILITY_WEB 885")]
        public const int FACILITY_WEB = 885;

        [NativeTypeName("#define FACILITY_WEB_SOCKET 886")]
        public const int FACILITY_WEB_SOCKET = 886;

        [NativeTypeName("#define FACILITY_MOBILE 1793")]
        public const int FACILITY_MOBILE = 1793;

        [NativeTypeName("#define FACILITY_SQLITE 1967")]
        public const int FACILITY_SQLITE = 1967;

        [NativeTypeName("#define FACILITY_UTC 1989")]
        public const int FACILITY_UTC = 1989;

        [NativeTypeName("#define FACILITY_WEP 2049")]
        public const int FACILITY_WEP = 2049;

        [NativeTypeName("#define FACILITY_SYNCENGINE 2050")]
        public const int FACILITY_SYNCENGINE = 2050;

        [NativeTypeName("#define FACILITY_XBOX 2339")]
        public const int FACILITY_XBOX = 2339;

        [NativeTypeName("#define FACILITY_GAME 2340")]
        public const int FACILITY_GAME = 2340;

        [NativeTypeName("#define FACILITY_PIX 2748")]
        public const int FACILITY_PIX = 2748;

        [NativeTypeName("#define ERROR_SUCCESS 0L")]
        public const int ERROR_SUCCESS = 0;

        [NativeTypeName("#define NO_ERROR 0L")]
        public const int NO_ERROR = 0;

        [NativeTypeName("#define SEC_E_OK ((HRESULT)0x00000000L)")]
        public const int SEC_E_OK = ((int)(0x00000000));

        [NativeTypeName("#define ERROR_INVALID_FUNCTION 1L")]
        public const int ERROR_INVALID_FUNCTION = 1;

        [NativeTypeName("#define ERROR_FILE_NOT_FOUND 2L")]
        public const int ERROR_FILE_NOT_FOUND = 2;

        [NativeTypeName("#define ERROR_PATH_NOT_FOUND 3L")]
        public const int ERROR_PATH_NOT_FOUND = 3;

        [NativeTypeName("#define ERROR_TOO_MANY_OPEN_FILES 4L")]
        public const int ERROR_TOO_MANY_OPEN_FILES = 4;

        [NativeTypeName("#define ERROR_ACCESS_DENIED 5L")]
        public const int ERROR_ACCESS_DENIED = 5;

        [NativeTypeName("#define ERROR_INVALID_HANDLE 6L")]
        public const int ERROR_INVALID_HANDLE = 6;

        [NativeTypeName("#define ERROR_ARENA_TRASHED 7L")]
        public const int ERROR_ARENA_TRASHED = 7;

        [NativeTypeName("#define ERROR_NOT_ENOUGH_MEMORY 8L")]
        public const int ERROR_NOT_ENOUGH_MEMORY = 8;

        [NativeTypeName("#define ERROR_INVALID_BLOCK 9L")]
        public const int ERROR_INVALID_BLOCK = 9;

        [NativeTypeName("#define ERROR_BAD_ENVIRONMENT 10L")]
        public const int ERROR_BAD_ENVIRONMENT = 10;

        [NativeTypeName("#define ERROR_BAD_FORMAT 11L")]
        public const int ERROR_BAD_FORMAT = 11;

        [NativeTypeName("#define ERROR_INVALID_ACCESS 12L")]
        public const int ERROR_INVALID_ACCESS = 12;

        [NativeTypeName("#define ERROR_INVALID_DATA 13L")]
        public const int ERROR_INVALID_DATA = 13;

        [NativeTypeName("#define ERROR_OUTOFMEMORY 14L")]
        public const int ERROR_OUTOFMEMORY = 14;

        [NativeTypeName("#define ERROR_INVALID_DRIVE 15L")]
        public const int ERROR_INVALID_DRIVE = 15;

        [NativeTypeName("#define ERROR_CURRENT_DIRECTORY 16L")]
        public const int ERROR_CURRENT_DIRECTORY = 16;

        [NativeTypeName("#define ERROR_NOT_SAME_DEVICE 17L")]
        public const int ERROR_NOT_SAME_DEVICE = 17;

        [NativeTypeName("#define ERROR_NO_MORE_FILES 18L")]
        public const int ERROR_NO_MORE_FILES = 18;

        [NativeTypeName("#define ERROR_WRITE_PROTECT 19L")]
        public const int ERROR_WRITE_PROTECT = 19;

        [NativeTypeName("#define ERROR_BAD_UNIT 20L")]
        public const int ERROR_BAD_UNIT = 20;

        [NativeTypeName("#define ERROR_NOT_READY 21L")]
        public const int ERROR_NOT_READY = 21;

        [NativeTypeName("#define ERROR_BAD_COMMAND 22L")]
        public const int ERROR_BAD_COMMAND = 22;

        [NativeTypeName("#define ERROR_CRC 23L")]
        public const int ERROR_CRC = 23;

        [NativeTypeName("#define ERROR_BAD_LENGTH 24L")]
        public const int ERROR_BAD_LENGTH = 24;

        [NativeTypeName("#define ERROR_SEEK 25L")]
        public const int ERROR_SEEK = 25;

        [NativeTypeName("#define ERROR_NOT_DOS_DISK 26L")]
        public const int ERROR_NOT_DOS_DISK = 26;

        [NativeTypeName("#define ERROR_SECTOR_NOT_FOUND 27L")]
        public const int ERROR_SECTOR_NOT_FOUND = 27;

        [NativeTypeName("#define ERROR_OUT_OF_PAPER 28L")]
        public const int ERROR_OUT_OF_PAPER = 28;

        [NativeTypeName("#define ERROR_WRITE_FAULT 29L")]
        public const int ERROR_WRITE_FAULT = 29;

        [NativeTypeName("#define ERROR_READ_FAULT 30L")]
        public const int ERROR_READ_FAULT = 30;

        [NativeTypeName("#define ERROR_GEN_FAILURE 31L")]
        public const int ERROR_GEN_FAILURE = 31;

        [NativeTypeName("#define ERROR_SHARING_VIOLATION 32L")]
        public const int ERROR_SHARING_VIOLATION = 32;

        [NativeTypeName("#define ERROR_LOCK_VIOLATION 33L")]
        public const int ERROR_LOCK_VIOLATION = 33;

        [NativeTypeName("#define ERROR_WRONG_DISK 34L")]
        public const int ERROR_WRONG_DISK = 34;

        [NativeTypeName("#define ERROR_SHARING_BUFFER_EXCEEDED 36L")]
        public const int ERROR_SHARING_BUFFER_EXCEEDED = 36;

        [NativeTypeName("#define ERROR_HANDLE_EOF 38L")]
        public const int ERROR_HANDLE_EOF = 38;

        [NativeTypeName("#define ERROR_HANDLE_DISK_FULL 39L")]
        public const int ERROR_HANDLE_DISK_FULL = 39;

        [NativeTypeName("#define ERROR_NOT_SUPPORTED 50L")]
        public const int ERROR_NOT_SUPPORTED = 50;

        [NativeTypeName("#define ERROR_REM_NOT_LIST 51L")]
        public const int ERROR_REM_NOT_LIST = 51;

        [NativeTypeName("#define ERROR_DUP_NAME 52L")]
        public const int ERROR_DUP_NAME = 52;

        [NativeTypeName("#define ERROR_BAD_NETPATH 53L")]
        public const int ERROR_BAD_NETPATH = 53;

        [NativeTypeName("#define ERROR_NETWORK_BUSY 54L")]
        public const int ERROR_NETWORK_BUSY = 54;

        [NativeTypeName("#define ERROR_DEV_NOT_EXIST 55L")]
        public const int ERROR_DEV_NOT_EXIST = 55;

        [NativeTypeName("#define ERROR_TOO_MANY_CMDS 56L")]
        public const int ERROR_TOO_MANY_CMDS = 56;

        [NativeTypeName("#define ERROR_ADAP_HDW_ERR 57L")]
        public const int ERROR_ADAP_HDW_ERR = 57;

        [NativeTypeName("#define ERROR_BAD_NET_RESP 58L")]
        public const int ERROR_BAD_NET_RESP = 58;

        [NativeTypeName("#define ERROR_UNEXP_NET_ERR 59L")]
        public const int ERROR_UNEXP_NET_ERR = 59;

        [NativeTypeName("#define ERROR_BAD_REM_ADAP 60L")]
        public const int ERROR_BAD_REM_ADAP = 60;

        [NativeTypeName("#define ERROR_PRINTQ_FULL 61L")]
        public const int ERROR_PRINTQ_FULL = 61;

        [NativeTypeName("#define ERROR_NO_SPOOL_SPACE 62L")]
        public const int ERROR_NO_SPOOL_SPACE = 62;

        [NativeTypeName("#define ERROR_PRINT_CANCELLED 63L")]
        public const int ERROR_PRINT_CANCELLED = 63;

        [NativeTypeName("#define ERROR_NETNAME_DELETED 64L")]
        public const int ERROR_NETNAME_DELETED = 64;

        [NativeTypeName("#define ERROR_NETWORK_ACCESS_DENIED 65L")]
        public const int ERROR_NETWORK_ACCESS_DENIED = 65;

        [NativeTypeName("#define ERROR_BAD_DEV_TYPE 66L")]
        public const int ERROR_BAD_DEV_TYPE = 66;

        [NativeTypeName("#define ERROR_BAD_NET_NAME 67L")]
        public const int ERROR_BAD_NET_NAME = 67;

        [NativeTypeName("#define ERROR_TOO_MANY_NAMES 68L")]
        public const int ERROR_TOO_MANY_NAMES = 68;

        [NativeTypeName("#define ERROR_TOO_MANY_SESS 69L")]
        public const int ERROR_TOO_MANY_SESS = 69;

        [NativeTypeName("#define ERROR_SHARING_PAUSED 70L")]
        public const int ERROR_SHARING_PAUSED = 70;

        [NativeTypeName("#define ERROR_REQ_NOT_ACCEP 71L")]
        public const int ERROR_REQ_NOT_ACCEP = 71;

        [NativeTypeName("#define ERROR_REDIR_PAUSED 72L")]
        public const int ERROR_REDIR_PAUSED = 72;

        [NativeTypeName("#define ERROR_FILE_EXISTS 80L")]
        public const int ERROR_FILE_EXISTS = 80;

        [NativeTypeName("#define ERROR_CANNOT_MAKE 82L")]
        public const int ERROR_CANNOT_MAKE = 82;

        [NativeTypeName("#define ERROR_FAIL_I24 83L")]
        public const int ERROR_FAIL_I24 = 83;

        [NativeTypeName("#define ERROR_OUT_OF_STRUCTURES 84L")]
        public const int ERROR_OUT_OF_STRUCTURES = 84;

        [NativeTypeName("#define ERROR_ALREADY_ASSIGNED 85L")]
        public const int ERROR_ALREADY_ASSIGNED = 85;

        [NativeTypeName("#define ERROR_INVALID_PASSWORD 86L")]
        public const int ERROR_INVALID_PASSWORD = 86;

        [NativeTypeName("#define ERROR_INVALID_PARAMETER 87L")]
        public const int ERROR_INVALID_PARAMETER = 87;

        [NativeTypeName("#define ERROR_NET_WRITE_FAULT 88L")]
        public const int ERROR_NET_WRITE_FAULT = 88;

        [NativeTypeName("#define ERROR_NO_PROC_SLOTS 89L")]
        public const int ERROR_NO_PROC_SLOTS = 89;

        [NativeTypeName("#define ERROR_TOO_MANY_SEMAPHORES 100L")]
        public const int ERROR_TOO_MANY_SEMAPHORES = 100;

        [NativeTypeName("#define ERROR_EXCL_SEM_ALREADY_OWNED 101L")]
        public const int ERROR_EXCL_SEM_ALREADY_OWNED = 101;

        [NativeTypeName("#define ERROR_SEM_IS_SET 102L")]
        public const int ERROR_SEM_IS_SET = 102;

        [NativeTypeName("#define ERROR_TOO_MANY_SEM_REQUESTS 103L")]
        public const int ERROR_TOO_MANY_SEM_REQUESTS = 103;

        [NativeTypeName("#define ERROR_INVALID_AT_INTERRUPT_TIME 104L")]
        public const int ERROR_INVALID_AT_INTERRUPT_TIME = 104;

        [NativeTypeName("#define ERROR_SEM_OWNER_DIED 105L")]
        public const int ERROR_SEM_OWNER_DIED = 105;

        [NativeTypeName("#define ERROR_SEM_USER_LIMIT 106L")]
        public const int ERROR_SEM_USER_LIMIT = 106;

        [NativeTypeName("#define ERROR_DISK_CHANGE 107L")]
        public const int ERROR_DISK_CHANGE = 107;

        [NativeTypeName("#define ERROR_DRIVE_LOCKED 108L")]
        public const int ERROR_DRIVE_LOCKED = 108;

        [NativeTypeName("#define ERROR_BROKEN_PIPE 109L")]
        public const int ERROR_BROKEN_PIPE = 109;

        [NativeTypeName("#define ERROR_OPEN_FAILED 110L")]
        public const int ERROR_OPEN_FAILED = 110;

        [NativeTypeName("#define ERROR_BUFFER_OVERFLOW 111L")]
        public const int ERROR_BUFFER_OVERFLOW = 111;

        [NativeTypeName("#define ERROR_DISK_FULL 112L")]
        public const int ERROR_DISK_FULL = 112;

        [NativeTypeName("#define ERROR_NO_MORE_SEARCH_HANDLES 113L")]
        public const int ERROR_NO_MORE_SEARCH_HANDLES = 113;

        [NativeTypeName("#define ERROR_INVALID_TARGET_HANDLE 114L")]
        public const int ERROR_INVALID_TARGET_HANDLE = 114;

        [NativeTypeName("#define ERROR_INVALID_CATEGORY 117L")]
        public const int ERROR_INVALID_CATEGORY = 117;

        [NativeTypeName("#define ERROR_INVALID_VERIFY_SWITCH 118L")]
        public const int ERROR_INVALID_VERIFY_SWITCH = 118;

        [NativeTypeName("#define ERROR_BAD_DRIVER_LEVEL 119L")]
        public const int ERROR_BAD_DRIVER_LEVEL = 119;

        [NativeTypeName("#define ERROR_CALL_NOT_IMPLEMENTED 120L")]
        public const int ERROR_CALL_NOT_IMPLEMENTED = 120;

        [NativeTypeName("#define ERROR_SEM_TIMEOUT 121L")]
        public const int ERROR_SEM_TIMEOUT = 121;

        [NativeTypeName("#define ERROR_INSUFFICIENT_BUFFER 122L")]
        public const int ERROR_INSUFFICIENT_BUFFER = 122;

        [NativeTypeName("#define ERROR_INVALID_NAME 123L")]
        public const int ERROR_INVALID_NAME = 123;

        [NativeTypeName("#define ERROR_INVALID_LEVEL 124L")]
        public const int ERROR_INVALID_LEVEL = 124;

        [NativeTypeName("#define ERROR_NO_VOLUME_LABEL 125L")]
        public const int ERROR_NO_VOLUME_LABEL = 125;

        [NativeTypeName("#define ERROR_MOD_NOT_FOUND 126L")]
        public const int ERROR_MOD_NOT_FOUND = 126;

        [NativeTypeName("#define ERROR_PROC_NOT_FOUND 127L")]
        public const int ERROR_PROC_NOT_FOUND = 127;

        [NativeTypeName("#define ERROR_WAIT_NO_CHILDREN 128L")]
        public const int ERROR_WAIT_NO_CHILDREN = 128;

        [NativeTypeName("#define ERROR_CHILD_NOT_COMPLETE 129L")]
        public const int ERROR_CHILD_NOT_COMPLETE = 129;

        [NativeTypeName("#define ERROR_DIRECT_ACCESS_HANDLE 130L")]
        public const int ERROR_DIRECT_ACCESS_HANDLE = 130;

        [NativeTypeName("#define ERROR_NEGATIVE_SEEK 131L")]
        public const int ERROR_NEGATIVE_SEEK = 131;

        [NativeTypeName("#define ERROR_SEEK_ON_DEVICE 132L")]
        public const int ERROR_SEEK_ON_DEVICE = 132;

        [NativeTypeName("#define ERROR_IS_JOIN_TARGET 133L")]
        public const int ERROR_IS_JOIN_TARGET = 133;

        [NativeTypeName("#define ERROR_IS_JOINED 134L")]
        public const int ERROR_IS_JOINED = 134;

        [NativeTypeName("#define ERROR_IS_SUBSTED 135L")]
        public const int ERROR_IS_SUBSTED = 135;

        [NativeTypeName("#define ERROR_NOT_JOINED 136L")]
        public const int ERROR_NOT_JOINED = 136;

        [NativeTypeName("#define ERROR_NOT_SUBSTED 137L")]
        public const int ERROR_NOT_SUBSTED = 137;

        [NativeTypeName("#define ERROR_JOIN_TO_JOIN 138L")]
        public const int ERROR_JOIN_TO_JOIN = 138;

        [NativeTypeName("#define ERROR_SUBST_TO_SUBST 139L")]
        public const int ERROR_SUBST_TO_SUBST = 139;

        [NativeTypeName("#define ERROR_JOIN_TO_SUBST 140L")]
        public const int ERROR_JOIN_TO_SUBST = 140;

        [NativeTypeName("#define ERROR_SUBST_TO_JOIN 141L")]
        public const int ERROR_SUBST_TO_JOIN = 141;

        [NativeTypeName("#define ERROR_BUSY_DRIVE 142L")]
        public const int ERROR_BUSY_DRIVE = 142;

        [NativeTypeName("#define ERROR_SAME_DRIVE 143L")]
        public const int ERROR_SAME_DRIVE = 143;

        [NativeTypeName("#define ERROR_DIR_NOT_ROOT 144L")]
        public const int ERROR_DIR_NOT_ROOT = 144;

        [NativeTypeName("#define ERROR_DIR_NOT_EMPTY 145L")]
        public const int ERROR_DIR_NOT_EMPTY = 145;

        [NativeTypeName("#define ERROR_IS_SUBST_PATH 146L")]
        public const int ERROR_IS_SUBST_PATH = 146;

        [NativeTypeName("#define ERROR_IS_JOIN_PATH 147L")]
        public const int ERROR_IS_JOIN_PATH = 147;

        [NativeTypeName("#define ERROR_PATH_BUSY 148L")]
        public const int ERROR_PATH_BUSY = 148;

        [NativeTypeName("#define ERROR_IS_SUBST_TARGET 149L")]
        public const int ERROR_IS_SUBST_TARGET = 149;

        [NativeTypeName("#define ERROR_SYSTEM_TRACE 150L")]
        public const int ERROR_SYSTEM_TRACE = 150;

        [NativeTypeName("#define ERROR_INVALID_EVENT_COUNT 151L")]
        public const int ERROR_INVALID_EVENT_COUNT = 151;

        [NativeTypeName("#define ERROR_TOO_MANY_MUXWAITERS 152L")]
        public const int ERROR_TOO_MANY_MUXWAITERS = 152;

        [NativeTypeName("#define ERROR_INVALID_LIST_FORMAT 153L")]
        public const int ERROR_INVALID_LIST_FORMAT = 153;

        [NativeTypeName("#define ERROR_LABEL_TOO_LONG 154L")]
        public const int ERROR_LABEL_TOO_LONG = 154;

        [NativeTypeName("#define ERROR_TOO_MANY_TCBS 155L")]
        public const int ERROR_TOO_MANY_TCBS = 155;

        [NativeTypeName("#define ERROR_SIGNAL_REFUSED 156L")]
        public const int ERROR_SIGNAL_REFUSED = 156;

        [NativeTypeName("#define ERROR_DISCARDED 157L")]
        public const int ERROR_DISCARDED = 157;

        [NativeTypeName("#define ERROR_NOT_LOCKED 158L")]
        public const int ERROR_NOT_LOCKED = 158;

        [NativeTypeName("#define ERROR_BAD_THREADID_ADDR 159L")]
        public const int ERROR_BAD_THREADID_ADDR = 159;

        [NativeTypeName("#define ERROR_BAD_ARGUMENTS 160L")]
        public const int ERROR_BAD_ARGUMENTS = 160;

        [NativeTypeName("#define ERROR_BAD_PATHNAME 161L")]
        public const int ERROR_BAD_PATHNAME = 161;

        [NativeTypeName("#define ERROR_SIGNAL_PENDING 162L")]
        public const int ERROR_SIGNAL_PENDING = 162;

        [NativeTypeName("#define ERROR_MAX_THRDS_REACHED 164L")]
        public const int ERROR_MAX_THRDS_REACHED = 164;

        [NativeTypeName("#define ERROR_LOCK_FAILED 167L")]
        public const int ERROR_LOCK_FAILED = 167;

        [NativeTypeName("#define ERROR_BUSY 170L")]
        public const int ERROR_BUSY = 170;

        [NativeTypeName("#define ERROR_DEVICE_SUPPORT_IN_PROGRESS 171L")]
        public const int ERROR_DEVICE_SUPPORT_IN_PROGRESS = 171;

        [NativeTypeName("#define ERROR_CANCEL_VIOLATION 173L")]
        public const int ERROR_CANCEL_VIOLATION = 173;

        [NativeTypeName("#define ERROR_ATOMIC_LOCKS_NOT_SUPPORTED 174L")]
        public const int ERROR_ATOMIC_LOCKS_NOT_SUPPORTED = 174;

        [NativeTypeName("#define ERROR_INVALID_SEGMENT_NUMBER 180L")]
        public const int ERROR_INVALID_SEGMENT_NUMBER = 180;

        [NativeTypeName("#define ERROR_INVALID_ORDINAL 182L")]
        public const int ERROR_INVALID_ORDINAL = 182;

        [NativeTypeName("#define ERROR_ALREADY_EXISTS 183L")]
        public const int ERROR_ALREADY_EXISTS = 183;

        [NativeTypeName("#define ERROR_INVALID_FLAG_NUMBER 186L")]
        public const int ERROR_INVALID_FLAG_NUMBER = 186;

        [NativeTypeName("#define ERROR_SEM_NOT_FOUND 187L")]
        public const int ERROR_SEM_NOT_FOUND = 187;

        [NativeTypeName("#define ERROR_INVALID_STARTING_CODESEG 188L")]
        public const int ERROR_INVALID_STARTING_CODESEG = 188;

        [NativeTypeName("#define ERROR_INVALID_STACKSEG 189L")]
        public const int ERROR_INVALID_STACKSEG = 189;

        [NativeTypeName("#define ERROR_INVALID_MODULETYPE 190L")]
        public const int ERROR_INVALID_MODULETYPE = 190;

        [NativeTypeName("#define ERROR_INVALID_EXE_SIGNATURE 191L")]
        public const int ERROR_INVALID_EXE_SIGNATURE = 191;

        [NativeTypeName("#define ERROR_EXE_MARKED_INVALID 192L")]
        public const int ERROR_EXE_MARKED_INVALID = 192;

        [NativeTypeName("#define ERROR_BAD_EXE_FORMAT 193L")]
        public const int ERROR_BAD_EXE_FORMAT = 193;

        [NativeTypeName("#define ERROR_ITERATED_DATA_EXCEEDS_64k 194L")]
        public const int ERROR_ITERATED_DATA_EXCEEDS_64k = 194;

        [NativeTypeName("#define ERROR_INVALID_MINALLOCSIZE 195L")]
        public const int ERROR_INVALID_MINALLOCSIZE = 195;

        [NativeTypeName("#define ERROR_DYNLINK_FROM_INVALID_RING 196L")]
        public const int ERROR_DYNLINK_FROM_INVALID_RING = 196;

        [NativeTypeName("#define ERROR_IOPL_NOT_ENABLED 197L")]
        public const int ERROR_IOPL_NOT_ENABLED = 197;

        [NativeTypeName("#define ERROR_INVALID_SEGDPL 198L")]
        public const int ERROR_INVALID_SEGDPL = 198;

        [NativeTypeName("#define ERROR_AUTODATASEG_EXCEEDS_64k 199L")]
        public const int ERROR_AUTODATASEG_EXCEEDS_64k = 199;

        [NativeTypeName("#define ERROR_RING2SEG_MUST_BE_MOVABLE 200L")]
        public const int ERROR_RING2SEG_MUST_BE_MOVABLE = 200;

        [NativeTypeName("#define ERROR_RELOC_CHAIN_XEEDS_SEGLIM 201L")]
        public const int ERROR_RELOC_CHAIN_XEEDS_SEGLIM = 201;

        [NativeTypeName("#define ERROR_INFLOOP_IN_RELOC_CHAIN 202L")]
        public const int ERROR_INFLOOP_IN_RELOC_CHAIN = 202;

        [NativeTypeName("#define ERROR_ENVVAR_NOT_FOUND 203L")]
        public const int ERROR_ENVVAR_NOT_FOUND = 203;

        [NativeTypeName("#define ERROR_NO_SIGNAL_SENT 205L")]
        public const int ERROR_NO_SIGNAL_SENT = 205;

        [NativeTypeName("#define ERROR_FILENAME_EXCED_RANGE 206L")]
        public const int ERROR_FILENAME_EXCED_RANGE = 206;

        [NativeTypeName("#define ERROR_RING2_STACK_IN_USE 207L")]
        public const int ERROR_RING2_STACK_IN_USE = 207;

        [NativeTypeName("#define ERROR_META_EXPANSION_TOO_LONG 208L")]
        public const int ERROR_META_EXPANSION_TOO_LONG = 208;

        [NativeTypeName("#define ERROR_INVALID_SIGNAL_NUMBER 209L")]
        public const int ERROR_INVALID_SIGNAL_NUMBER = 209;

        [NativeTypeName("#define ERROR_THREAD_1_INACTIVE 210L")]
        public const int ERROR_THREAD_1_INACTIVE = 210;

        [NativeTypeName("#define ERROR_LOCKED 212L")]
        public const int ERROR_LOCKED = 212;

        [NativeTypeName("#define ERROR_TOO_MANY_MODULES 214L")]
        public const int ERROR_TOO_MANY_MODULES = 214;

        [NativeTypeName("#define ERROR_NESTING_NOT_ALLOWED 215L")]
        public const int ERROR_NESTING_NOT_ALLOWED = 215;

        [NativeTypeName("#define ERROR_EXE_MACHINE_TYPE_MISMATCH 216L")]
        public const int ERROR_EXE_MACHINE_TYPE_MISMATCH = 216;

        [NativeTypeName("#define ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY 217L")]
        public const int ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY = 217;

        [NativeTypeName("#define ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY 218L")]
        public const int ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY = 218;

        [NativeTypeName("#define ERROR_FILE_CHECKED_OUT 220L")]
        public const int ERROR_FILE_CHECKED_OUT = 220;

        [NativeTypeName("#define ERROR_CHECKOUT_REQUIRED 221L")]
        public const int ERROR_CHECKOUT_REQUIRED = 221;

        [NativeTypeName("#define ERROR_BAD_FILE_TYPE 222L")]
        public const int ERROR_BAD_FILE_TYPE = 222;

        [NativeTypeName("#define ERROR_FILE_TOO_LARGE 223L")]
        public const int ERROR_FILE_TOO_LARGE = 223;

        [NativeTypeName("#define ERROR_FORMS_AUTH_REQUIRED 224L")]
        public const int ERROR_FORMS_AUTH_REQUIRED = 224;

        [NativeTypeName("#define ERROR_VIRUS_INFECTED 225L")]
        public const int ERROR_VIRUS_INFECTED = 225;

        [NativeTypeName("#define ERROR_VIRUS_DELETED 226L")]
        public const int ERROR_VIRUS_DELETED = 226;

        [NativeTypeName("#define ERROR_PIPE_LOCAL 229L")]
        public const int ERROR_PIPE_LOCAL = 229;

        [NativeTypeName("#define ERROR_BAD_PIPE 230L")]
        public const int ERROR_BAD_PIPE = 230;

        [NativeTypeName("#define ERROR_PIPE_BUSY 231L")]
        public const int ERROR_PIPE_BUSY = 231;

        [NativeTypeName("#define ERROR_NO_DATA 232L")]
        public const int ERROR_NO_DATA = 232;

        [NativeTypeName("#define ERROR_PIPE_NOT_CONNECTED 233L")]
        public const int ERROR_PIPE_NOT_CONNECTED = 233;

        [NativeTypeName("#define ERROR_MORE_DATA 234L")]
        public const int ERROR_MORE_DATA = 234;

        [NativeTypeName("#define ERROR_NO_WORK_DONE 235L")]
        public const int ERROR_NO_WORK_DONE = 235;

        [NativeTypeName("#define ERROR_VC_DISCONNECTED 240L")]
        public const int ERROR_VC_DISCONNECTED = 240;

        [NativeTypeName("#define ERROR_INVALID_EA_NAME 254L")]
        public const int ERROR_INVALID_EA_NAME = 254;

        [NativeTypeName("#define ERROR_EA_LIST_INCONSISTENT 255L")]
        public const int ERROR_EA_LIST_INCONSISTENT = 255;

        [NativeTypeName("#define WAIT_TIMEOUT 258L")]
        public const int WAIT_TIMEOUT = 258;

        [NativeTypeName("#define ERROR_NO_MORE_ITEMS 259L")]
        public const int ERROR_NO_MORE_ITEMS = 259;

        [NativeTypeName("#define ERROR_CANNOT_COPY 266L")]
        public const int ERROR_CANNOT_COPY = 266;

        [NativeTypeName("#define ERROR_DIRECTORY 267L")]
        public const int ERROR_DIRECTORY = 267;

        [NativeTypeName("#define ERROR_EAS_DIDNT_FIT 275L")]
        public const int ERROR_EAS_DIDNT_FIT = 275;

        [NativeTypeName("#define ERROR_EA_FILE_CORRUPT 276L")]
        public const int ERROR_EA_FILE_CORRUPT = 276;

        [NativeTypeName("#define ERROR_EA_TABLE_FULL 277L")]
        public const int ERROR_EA_TABLE_FULL = 277;

        [NativeTypeName("#define ERROR_INVALID_EA_HANDLE 278L")]
        public const int ERROR_INVALID_EA_HANDLE = 278;

        [NativeTypeName("#define ERROR_EAS_NOT_SUPPORTED 282L")]
        public const int ERROR_EAS_NOT_SUPPORTED = 282;

        [NativeTypeName("#define ERROR_NOT_OWNER 288L")]
        public const int ERROR_NOT_OWNER = 288;

        [NativeTypeName("#define ERROR_TOO_MANY_POSTS 298L")]
        public const int ERROR_TOO_MANY_POSTS = 298;

        [NativeTypeName("#define ERROR_PARTIAL_COPY 299L")]
        public const int ERROR_PARTIAL_COPY = 299;

        [NativeTypeName("#define ERROR_OPLOCK_NOT_GRANTED 300L")]
        public const int ERROR_OPLOCK_NOT_GRANTED = 300;

        [NativeTypeName("#define ERROR_INVALID_OPLOCK_PROTOCOL 301L")]
        public const int ERROR_INVALID_OPLOCK_PROTOCOL = 301;

        [NativeTypeName("#define ERROR_DISK_TOO_FRAGMENTED 302L")]
        public const int ERROR_DISK_TOO_FRAGMENTED = 302;

        [NativeTypeName("#define ERROR_DELETE_PENDING 303L")]
        public const int ERROR_DELETE_PENDING = 303;

        [NativeTypeName("#define ERROR_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING 304L")]
        public const int ERROR_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING = 304;

        [NativeTypeName("#define ERROR_SHORT_NAMES_NOT_ENABLED_ON_VOLUME 305L")]
        public const int ERROR_SHORT_NAMES_NOT_ENABLED_ON_VOLUME = 305;

        [NativeTypeName("#define ERROR_SECURITY_STREAM_IS_INCONSISTENT 306L")]
        public const int ERROR_SECURITY_STREAM_IS_INCONSISTENT = 306;

        [NativeTypeName("#define ERROR_INVALID_LOCK_RANGE 307L")]
        public const int ERROR_INVALID_LOCK_RANGE = 307;

        [NativeTypeName("#define ERROR_IMAGE_SUBSYSTEM_NOT_PRESENT 308L")]
        public const int ERROR_IMAGE_SUBSYSTEM_NOT_PRESENT = 308;

        [NativeTypeName("#define ERROR_NOTIFICATION_GUID_ALREADY_DEFINED 309L")]
        public const int ERROR_NOTIFICATION_GUID_ALREADY_DEFINED = 309;

        [NativeTypeName("#define ERROR_INVALID_EXCEPTION_HANDLER 310L")]
        public const int ERROR_INVALID_EXCEPTION_HANDLER = 310;

        [NativeTypeName("#define ERROR_DUPLICATE_PRIVILEGES 311L")]
        public const int ERROR_DUPLICATE_PRIVILEGES = 311;

        [NativeTypeName("#define ERROR_NO_RANGES_PROCESSED 312L")]
        public const int ERROR_NO_RANGES_PROCESSED = 312;

        [NativeTypeName("#define ERROR_NOT_ALLOWED_ON_SYSTEM_FILE 313L")]
        public const int ERROR_NOT_ALLOWED_ON_SYSTEM_FILE = 313;

        [NativeTypeName("#define ERROR_DISK_RESOURCES_EXHAUSTED 314L")]
        public const int ERROR_DISK_RESOURCES_EXHAUSTED = 314;

        [NativeTypeName("#define ERROR_INVALID_TOKEN 315L")]
        public const int ERROR_INVALID_TOKEN = 315;

        [NativeTypeName("#define ERROR_DEVICE_FEATURE_NOT_SUPPORTED 316L")]
        public const int ERROR_DEVICE_FEATURE_NOT_SUPPORTED = 316;

        [NativeTypeName("#define ERROR_MR_MID_NOT_FOUND 317L")]
        public const int ERROR_MR_MID_NOT_FOUND = 317;

        [NativeTypeName("#define ERROR_SCOPE_NOT_FOUND 318L")]
        public const int ERROR_SCOPE_NOT_FOUND = 318;

        [NativeTypeName("#define ERROR_UNDEFINED_SCOPE 319L")]
        public const int ERROR_UNDEFINED_SCOPE = 319;

        [NativeTypeName("#define ERROR_INVALID_CAP 320L")]
        public const int ERROR_INVALID_CAP = 320;

        [NativeTypeName("#define ERROR_DEVICE_UNREACHABLE 321L")]
        public const int ERROR_DEVICE_UNREACHABLE = 321;

        [NativeTypeName("#define ERROR_DEVICE_NO_RESOURCES 322L")]
        public const int ERROR_DEVICE_NO_RESOURCES = 322;

        [NativeTypeName("#define ERROR_DATA_CHECKSUM_ERROR 323L")]
        public const int ERROR_DATA_CHECKSUM_ERROR = 323;

        [NativeTypeName("#define ERROR_INTERMIXED_KERNEL_EA_OPERATION 324L")]
        public const int ERROR_INTERMIXED_KERNEL_EA_OPERATION = 324;

        [NativeTypeName("#define ERROR_FILE_LEVEL_TRIM_NOT_SUPPORTED 326L")]
        public const int ERROR_FILE_LEVEL_TRIM_NOT_SUPPORTED = 326;

        [NativeTypeName("#define ERROR_OFFSET_ALIGNMENT_VIOLATION 327L")]
        public const int ERROR_OFFSET_ALIGNMENT_VIOLATION = 327;

        [NativeTypeName("#define ERROR_INVALID_FIELD_IN_PARAMETER_LIST 328L")]
        public const int ERROR_INVALID_FIELD_IN_PARAMETER_LIST = 328;

        [NativeTypeName("#define ERROR_OPERATION_IN_PROGRESS 329L")]
        public const int ERROR_OPERATION_IN_PROGRESS = 329;

        [NativeTypeName("#define ERROR_BAD_DEVICE_PATH 330L")]
        public const int ERROR_BAD_DEVICE_PATH = 330;

        [NativeTypeName("#define ERROR_TOO_MANY_DESCRIPTORS 331L")]
        public const int ERROR_TOO_MANY_DESCRIPTORS = 331;

        [NativeTypeName("#define ERROR_SCRUB_DATA_DISABLED 332L")]
        public const int ERROR_SCRUB_DATA_DISABLED = 332;

        [NativeTypeName("#define ERROR_NOT_REDUNDANT_STORAGE 333L")]
        public const int ERROR_NOT_REDUNDANT_STORAGE = 333;

        [NativeTypeName("#define ERROR_RESIDENT_FILE_NOT_SUPPORTED 334L")]
        public const int ERROR_RESIDENT_FILE_NOT_SUPPORTED = 334;

        [NativeTypeName("#define ERROR_COMPRESSED_FILE_NOT_SUPPORTED 335L")]
        public const int ERROR_COMPRESSED_FILE_NOT_SUPPORTED = 335;

        [NativeTypeName("#define ERROR_DIRECTORY_NOT_SUPPORTED 336L")]
        public const int ERROR_DIRECTORY_NOT_SUPPORTED = 336;

        [NativeTypeName("#define ERROR_NOT_READ_FROM_COPY 337L")]
        public const int ERROR_NOT_READ_FROM_COPY = 337;

        [NativeTypeName("#define ERROR_FT_WRITE_FAILURE 338L")]
        public const int ERROR_FT_WRITE_FAILURE = 338;

        [NativeTypeName("#define ERROR_FT_DI_SCAN_REQUIRED 339L")]
        public const int ERROR_FT_DI_SCAN_REQUIRED = 339;

        [NativeTypeName("#define ERROR_INVALID_KERNEL_INFO_VERSION 340L")]
        public const int ERROR_INVALID_KERNEL_INFO_VERSION = 340;

        [NativeTypeName("#define ERROR_INVALID_PEP_INFO_VERSION 341L")]
        public const int ERROR_INVALID_PEP_INFO_VERSION = 341;

        [NativeTypeName("#define ERROR_OBJECT_NOT_EXTERNALLY_BACKED 342L")]
        public const int ERROR_OBJECT_NOT_EXTERNALLY_BACKED = 342;

        [NativeTypeName("#define ERROR_EXTERNAL_BACKING_PROVIDER_UNKNOWN 343L")]
        public const int ERROR_EXTERNAL_BACKING_PROVIDER_UNKNOWN = 343;

        [NativeTypeName("#define ERROR_COMPRESSION_NOT_BENEFICIAL 344L")]
        public const int ERROR_COMPRESSION_NOT_BENEFICIAL = 344;

        [NativeTypeName("#define ERROR_STORAGE_TOPOLOGY_ID_MISMATCH 345L")]
        public const int ERROR_STORAGE_TOPOLOGY_ID_MISMATCH = 345;

        [NativeTypeName("#define ERROR_BLOCKED_BY_PARENTAL_CONTROLS 346L")]
        public const int ERROR_BLOCKED_BY_PARENTAL_CONTROLS = 346;

        [NativeTypeName("#define ERROR_BLOCK_TOO_MANY_REFERENCES 347L")]
        public const int ERROR_BLOCK_TOO_MANY_REFERENCES = 347;

        [NativeTypeName("#define ERROR_MARKED_TO_DISALLOW_WRITES 348L")]
        public const int ERROR_MARKED_TO_DISALLOW_WRITES = 348;

        [NativeTypeName("#define ERROR_ENCLAVE_FAILURE 349L")]
        public const int ERROR_ENCLAVE_FAILURE = 349;

        [NativeTypeName("#define ERROR_FAIL_NOACTION_REBOOT 350L")]
        public const int ERROR_FAIL_NOACTION_REBOOT = 350;

        [NativeTypeName("#define ERROR_FAIL_SHUTDOWN 351L")]
        public const int ERROR_FAIL_SHUTDOWN = 351;

        [NativeTypeName("#define ERROR_FAIL_RESTART 352L")]
        public const int ERROR_FAIL_RESTART = 352;

        [NativeTypeName("#define ERROR_MAX_SESSIONS_REACHED 353L")]
        public const int ERROR_MAX_SESSIONS_REACHED = 353;

        [NativeTypeName("#define ERROR_NETWORK_ACCESS_DENIED_EDP 354L")]
        public const int ERROR_NETWORK_ACCESS_DENIED_EDP = 354;

        [NativeTypeName("#define ERROR_DEVICE_HINT_NAME_BUFFER_TOO_SMALL 355L")]
        public const int ERROR_DEVICE_HINT_NAME_BUFFER_TOO_SMALL = 355;

        [NativeTypeName("#define ERROR_EDP_POLICY_DENIES_OPERATION 356L")]
        public const int ERROR_EDP_POLICY_DENIES_OPERATION = 356;

        [NativeTypeName("#define ERROR_EDP_DPL_POLICY_CANT_BE_SATISFIED 357L")]
        public const int ERROR_EDP_DPL_POLICY_CANT_BE_SATISFIED = 357;

        [NativeTypeName("#define ERROR_CLOUD_FILE_SYNC_ROOT_METADATA_CORRUPT 358L")]
        public const int ERROR_CLOUD_FILE_SYNC_ROOT_METADATA_CORRUPT = 358;

        [NativeTypeName("#define ERROR_DEVICE_IN_MAINTENANCE 359L")]
        public const int ERROR_DEVICE_IN_MAINTENANCE = 359;

        [NativeTypeName("#define ERROR_NOT_SUPPORTED_ON_DAX 360L")]
        public const int ERROR_NOT_SUPPORTED_ON_DAX = 360;

        [NativeTypeName("#define ERROR_DAX_MAPPING_EXISTS 361L")]
        public const int ERROR_DAX_MAPPING_EXISTS = 361;

        [NativeTypeName("#define ERROR_CLOUD_FILE_PROVIDER_NOT_RUNNING 362L")]
        public const int ERROR_CLOUD_FILE_PROVIDER_NOT_RUNNING = 362;

        [NativeTypeName("#define ERROR_CLOUD_FILE_METADATA_CORRUPT 363L")]
        public const int ERROR_CLOUD_FILE_METADATA_CORRUPT = 363;

        [NativeTypeName("#define ERROR_CLOUD_FILE_METADATA_TOO_LARGE 364L")]
        public const int ERROR_CLOUD_FILE_METADATA_TOO_LARGE = 364;

        [NativeTypeName("#define ERROR_CLOUD_FILE_PROPERTY_BLOB_TOO_LARGE 365L")]
        public const int ERROR_CLOUD_FILE_PROPERTY_BLOB_TOO_LARGE = 365;

        [NativeTypeName("#define ERROR_CLOUD_FILE_PROPERTY_BLOB_CHECKSUM_MISMATCH 366L")]
        public const int ERROR_CLOUD_FILE_PROPERTY_BLOB_CHECKSUM_MISMATCH = 366;

        [NativeTypeName("#define ERROR_CHILD_PROCESS_BLOCKED 367L")]
        public const int ERROR_CHILD_PROCESS_BLOCKED = 367;

        [NativeTypeName("#define ERROR_STORAGE_LOST_DATA_PERSISTENCE 368L")]
        public const int ERROR_STORAGE_LOST_DATA_PERSISTENCE = 368;

        [NativeTypeName("#define ERROR_FILE_SYSTEM_VIRTUALIZATION_UNAVAILABLE 369L")]
        public const int ERROR_FILE_SYSTEM_VIRTUALIZATION_UNAVAILABLE = 369;

        [NativeTypeName("#define ERROR_FILE_SYSTEM_VIRTUALIZATION_METADATA_CORRUPT 370L")]
        public const int ERROR_FILE_SYSTEM_VIRTUALIZATION_METADATA_CORRUPT = 370;

        [NativeTypeName("#define ERROR_FILE_SYSTEM_VIRTUALIZATION_BUSY 371L")]
        public const int ERROR_FILE_SYSTEM_VIRTUALIZATION_BUSY = 371;

        [NativeTypeName("#define ERROR_FILE_SYSTEM_VIRTUALIZATION_PROVIDER_UNKNOWN 372L")]
        public const int ERROR_FILE_SYSTEM_VIRTUALIZATION_PROVIDER_UNKNOWN = 372;

        [NativeTypeName("#define ERROR_GDI_HANDLE_LEAK 373L")]
        public const int ERROR_GDI_HANDLE_LEAK = 373;

        [NativeTypeName("#define ERROR_CLOUD_FILE_TOO_MANY_PROPERTY_BLOBS 374L")]
        public const int ERROR_CLOUD_FILE_TOO_MANY_PROPERTY_BLOBS = 374;

        [NativeTypeName("#define ERROR_CLOUD_FILE_PROPERTY_VERSION_NOT_SUPPORTED 375L")]
        public const int ERROR_CLOUD_FILE_PROPERTY_VERSION_NOT_SUPPORTED = 375;

        [NativeTypeName("#define ERROR_NOT_A_CLOUD_FILE 376L")]
        public const int ERROR_NOT_A_CLOUD_FILE = 376;

        [NativeTypeName("#define ERROR_CLOUD_FILE_NOT_IN_SYNC 377L")]
        public const int ERROR_CLOUD_FILE_NOT_IN_SYNC = 377;

        [NativeTypeName("#define ERROR_CLOUD_FILE_ALREADY_CONNECTED 378L")]
        public const int ERROR_CLOUD_FILE_ALREADY_CONNECTED = 378;

        [NativeTypeName("#define ERROR_CLOUD_FILE_NOT_SUPPORTED 379L")]
        public const int ERROR_CLOUD_FILE_NOT_SUPPORTED = 379;

        [NativeTypeName("#define ERROR_CLOUD_FILE_INVALID_REQUEST 380L")]
        public const int ERROR_CLOUD_FILE_INVALID_REQUEST = 380;

        [NativeTypeName("#define ERROR_CLOUD_FILE_READ_ONLY_VOLUME 381L")]
        public const int ERROR_CLOUD_FILE_READ_ONLY_VOLUME = 381;

        [NativeTypeName("#define ERROR_CLOUD_FILE_CONNECTED_PROVIDER_ONLY 382L")]
        public const int ERROR_CLOUD_FILE_CONNECTED_PROVIDER_ONLY = 382;

        [NativeTypeName("#define ERROR_CLOUD_FILE_VALIDATION_FAILED 383L")]
        public const int ERROR_CLOUD_FILE_VALIDATION_FAILED = 383;

        [NativeTypeName("#define ERROR_SMB1_NOT_AVAILABLE 384L")]
        public const int ERROR_SMB1_NOT_AVAILABLE = 384;

        [NativeTypeName("#define ERROR_FILE_SYSTEM_VIRTUALIZATION_INVALID_OPERATION 385L")]
        public const int ERROR_FILE_SYSTEM_VIRTUALIZATION_INVALID_OPERATION = 385;

        [NativeTypeName("#define ERROR_CLOUD_FILE_AUTHENTICATION_FAILED 386L")]
        public const int ERROR_CLOUD_FILE_AUTHENTICATION_FAILED = 386;

        [NativeTypeName("#define ERROR_CLOUD_FILE_INSUFFICIENT_RESOURCES 387L")]
        public const int ERROR_CLOUD_FILE_INSUFFICIENT_RESOURCES = 387;

        [NativeTypeName("#define ERROR_CLOUD_FILE_NETWORK_UNAVAILABLE 388L")]
        public const int ERROR_CLOUD_FILE_NETWORK_UNAVAILABLE = 388;

        [NativeTypeName("#define ERROR_CLOUD_FILE_UNSUCCESSFUL 389L")]
        public const int ERROR_CLOUD_FILE_UNSUCCESSFUL = 389;

        [NativeTypeName("#define ERROR_CLOUD_FILE_NOT_UNDER_SYNC_ROOT 390L")]
        public const int ERROR_CLOUD_FILE_NOT_UNDER_SYNC_ROOT = 390;

        [NativeTypeName("#define ERROR_CLOUD_FILE_IN_USE 391L")]
        public const int ERROR_CLOUD_FILE_IN_USE = 391;

        [NativeTypeName("#define ERROR_CLOUD_FILE_PINNED 392L")]
        public const int ERROR_CLOUD_FILE_PINNED = 392;

        [NativeTypeName("#define ERROR_CLOUD_FILE_REQUEST_ABORTED 393L")]
        public const int ERROR_CLOUD_FILE_REQUEST_ABORTED = 393;

        [NativeTypeName("#define ERROR_CLOUD_FILE_PROPERTY_CORRUPT 394L")]
        public const int ERROR_CLOUD_FILE_PROPERTY_CORRUPT = 394;

        [NativeTypeName("#define ERROR_CLOUD_FILE_ACCESS_DENIED 395L")]
        public const int ERROR_CLOUD_FILE_ACCESS_DENIED = 395;

        [NativeTypeName("#define ERROR_CLOUD_FILE_INCOMPATIBLE_HARDLINKS 396L")]
        public const int ERROR_CLOUD_FILE_INCOMPATIBLE_HARDLINKS = 396;

        [NativeTypeName("#define ERROR_CLOUD_FILE_PROPERTY_LOCK_CONFLICT 397L")]
        public const int ERROR_CLOUD_FILE_PROPERTY_LOCK_CONFLICT = 397;

        [NativeTypeName("#define ERROR_CLOUD_FILE_REQUEST_CANCELED 398L")]
        public const int ERROR_CLOUD_FILE_REQUEST_CANCELED = 398;

        [NativeTypeName("#define ERROR_EXTERNAL_SYSKEY_NOT_SUPPORTED 399L")]
        public const int ERROR_EXTERNAL_SYSKEY_NOT_SUPPORTED = 399;

        [NativeTypeName("#define ERROR_THREAD_MODE_ALREADY_BACKGROUND 400L")]
        public const int ERROR_THREAD_MODE_ALREADY_BACKGROUND = 400;

        [NativeTypeName("#define ERROR_THREAD_MODE_NOT_BACKGROUND 401L")]
        public const int ERROR_THREAD_MODE_NOT_BACKGROUND = 401;

        [NativeTypeName("#define ERROR_PROCESS_MODE_ALREADY_BACKGROUND 402L")]
        public const int ERROR_PROCESS_MODE_ALREADY_BACKGROUND = 402;

        [NativeTypeName("#define ERROR_PROCESS_MODE_NOT_BACKGROUND 403L")]
        public const int ERROR_PROCESS_MODE_NOT_BACKGROUND = 403;

        [NativeTypeName("#define ERROR_CLOUD_FILE_PROVIDER_TERMINATED 404L")]
        public const int ERROR_CLOUD_FILE_PROVIDER_TERMINATED = 404;

        [NativeTypeName("#define ERROR_NOT_A_CLOUD_SYNC_ROOT 405L")]
        public const int ERROR_NOT_A_CLOUD_SYNC_ROOT = 405;

        [NativeTypeName("#define ERROR_FILE_PROTECTED_UNDER_DPL 406L")]
        public const int ERROR_FILE_PROTECTED_UNDER_DPL = 406;

        [NativeTypeName("#define ERROR_VOLUME_NOT_CLUSTER_ALIGNED 407L")]
        public const int ERROR_VOLUME_NOT_CLUSTER_ALIGNED = 407;

        [NativeTypeName("#define ERROR_NO_PHYSICALLY_ALIGNED_FREE_SPACE_FOUND 408L")]
        public const int ERROR_NO_PHYSICALLY_ALIGNED_FREE_SPACE_FOUND = 408;

        [NativeTypeName("#define ERROR_APPX_FILE_NOT_ENCRYPTED 409L")]
        public const int ERROR_APPX_FILE_NOT_ENCRYPTED = 409;

        [NativeTypeName("#define ERROR_RWRAW_ENCRYPTED_FILE_NOT_ENCRYPTED 410L")]
        public const int ERROR_RWRAW_ENCRYPTED_FILE_NOT_ENCRYPTED = 410;

        [NativeTypeName("#define ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILEOFFSET 411L")]
        public const int ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILEOFFSET = 411;

        [NativeTypeName("#define ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILERANGE 412L")]
        public const int ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILERANGE = 412;

        [NativeTypeName("#define ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_PARAMETER 413L")]
        public const int ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_PARAMETER = 413;

        [NativeTypeName("#define ERROR_LINUX_SUBSYSTEM_NOT_PRESENT 414L")]
        public const int ERROR_LINUX_SUBSYSTEM_NOT_PRESENT = 414;

        [NativeTypeName("#define ERROR_FT_READ_FAILURE 415L")]
        public const int ERROR_FT_READ_FAILURE = 415;

        [NativeTypeName("#define ERROR_STORAGE_RESERVE_ID_INVALID 416L")]
        public const int ERROR_STORAGE_RESERVE_ID_INVALID = 416;

        [NativeTypeName("#define ERROR_STORAGE_RESERVE_DOES_NOT_EXIST 417L")]
        public const int ERROR_STORAGE_RESERVE_DOES_NOT_EXIST = 417;

        [NativeTypeName("#define ERROR_STORAGE_RESERVE_ALREADY_EXISTS 418L")]
        public const int ERROR_STORAGE_RESERVE_ALREADY_EXISTS = 418;

        [NativeTypeName("#define ERROR_STORAGE_RESERVE_NOT_EMPTY 419L")]
        public const int ERROR_STORAGE_RESERVE_NOT_EMPTY = 419;

        [NativeTypeName("#define ERROR_NOT_A_DAX_VOLUME 420L")]
        public const int ERROR_NOT_A_DAX_VOLUME = 420;

        [NativeTypeName("#define ERROR_NOT_DAX_MAPPABLE 421L")]
        public const int ERROR_NOT_DAX_MAPPABLE = 421;

        [NativeTypeName("#define ERROR_TIME_SENSITIVE_THREAD 422L")]
        public const int ERROR_TIME_SENSITIVE_THREAD = 422;

        [NativeTypeName("#define ERROR_DPL_NOT_SUPPORTED_FOR_USER 423L")]
        public const int ERROR_DPL_NOT_SUPPORTED_FOR_USER = 423;

        [NativeTypeName("#define ERROR_CASE_DIFFERING_NAMES_IN_DIR 424L")]
        public const int ERROR_CASE_DIFFERING_NAMES_IN_DIR = 424;

        [NativeTypeName("#define ERROR_FILE_NOT_SUPPORTED 425L")]
        public const int ERROR_FILE_NOT_SUPPORTED = 425;

        [NativeTypeName("#define ERROR_CLOUD_FILE_REQUEST_TIMEOUT 426L")]
        public const int ERROR_CLOUD_FILE_REQUEST_TIMEOUT = 426;

        [NativeTypeName("#define ERROR_NO_TASK_QUEUE 427L")]
        public const int ERROR_NO_TASK_QUEUE = 427;

        [NativeTypeName("#define ERROR_SRC_SRV_DLL_LOAD_FAILED 428L")]
        public const int ERROR_SRC_SRV_DLL_LOAD_FAILED = 428;

        [NativeTypeName("#define ERROR_NOT_SUPPORTED_WITH_BTT 429L")]
        public const int ERROR_NOT_SUPPORTED_WITH_BTT = 429;

        [NativeTypeName("#define ERROR_ENCRYPTION_DISABLED 430L")]
        public const int ERROR_ENCRYPTION_DISABLED = 430;

        [NativeTypeName("#define ERROR_ENCRYPTING_METADATA_DISALLOWED 431L")]
        public const int ERROR_ENCRYPTING_METADATA_DISALLOWED = 431;

        [NativeTypeName("#define ERROR_CANT_CLEAR_ENCRYPTION_FLAG 432L")]
        public const int ERROR_CANT_CLEAR_ENCRYPTION_FLAG = 432;

        [NativeTypeName("#define ERROR_NO_SUCH_DEVICE 433L")]
        public const int ERROR_NO_SUCH_DEVICE = 433;

        [NativeTypeName("#define ERROR_CLOUD_FILE_DEHYDRATION_DISALLOWED 434L")]
        public const int ERROR_CLOUD_FILE_DEHYDRATION_DISALLOWED = 434;

        [NativeTypeName("#define ERROR_FILE_SNAP_IN_PROGRESS 435L")]
        public const int ERROR_FILE_SNAP_IN_PROGRESS = 435;

        [NativeTypeName("#define ERROR_FILE_SNAP_USER_SECTION_NOT_SUPPORTED 436L")]
        public const int ERROR_FILE_SNAP_USER_SECTION_NOT_SUPPORTED = 436;

        [NativeTypeName("#define ERROR_FILE_SNAP_MODIFY_NOT_SUPPORTED 437L")]
        public const int ERROR_FILE_SNAP_MODIFY_NOT_SUPPORTED = 437;

        [NativeTypeName("#define ERROR_FILE_SNAP_IO_NOT_COORDINATED 438L")]
        public const int ERROR_FILE_SNAP_IO_NOT_COORDINATED = 438;

        [NativeTypeName("#define ERROR_FILE_SNAP_UNEXPECTED_ERROR 439L")]
        public const int ERROR_FILE_SNAP_UNEXPECTED_ERROR = 439;

        [NativeTypeName("#define ERROR_FILE_SNAP_INVALID_PARAMETER 440L")]
        public const int ERROR_FILE_SNAP_INVALID_PARAMETER = 440;

        [NativeTypeName("#define ERROR_UNSATISFIED_DEPENDENCIES 441L")]
        public const int ERROR_UNSATISFIED_DEPENDENCIES = 441;

        [NativeTypeName("#define ERROR_CASE_SENSITIVE_PATH 442L")]
        public const int ERROR_CASE_SENSITIVE_PATH = 442;

        [NativeTypeName("#define ERROR_UNEXPECTED_NTCACHEMANAGER_ERROR 443L")]
        public const int ERROR_UNEXPECTED_NTCACHEMANAGER_ERROR = 443;

        [NativeTypeName("#define ERROR_CAPAUTHZ_NOT_DEVUNLOCKED 450L")]
        public const int ERROR_CAPAUTHZ_NOT_DEVUNLOCKED = 450;

        [NativeTypeName("#define ERROR_CAPAUTHZ_CHANGE_TYPE 451L")]
        public const int ERROR_CAPAUTHZ_CHANGE_TYPE = 451;

        [NativeTypeName("#define ERROR_CAPAUTHZ_NOT_PROVISIONED 452L")]
        public const int ERROR_CAPAUTHZ_NOT_PROVISIONED = 452;

        [NativeTypeName("#define ERROR_CAPAUTHZ_NOT_AUTHORIZED 453L")]
        public const int ERROR_CAPAUTHZ_NOT_AUTHORIZED = 453;

        [NativeTypeName("#define ERROR_CAPAUTHZ_NO_POLICY 454L")]
        public const int ERROR_CAPAUTHZ_NO_POLICY = 454;

        [NativeTypeName("#define ERROR_CAPAUTHZ_DB_CORRUPTED 455L")]
        public const int ERROR_CAPAUTHZ_DB_CORRUPTED = 455;

        [NativeTypeName("#define ERROR_CAPAUTHZ_SCCD_INVALID_CATALOG 456L")]
        public const int ERROR_CAPAUTHZ_SCCD_INVALID_CATALOG = 456;

        [NativeTypeName("#define ERROR_CAPAUTHZ_SCCD_NO_AUTH_ENTITY 457L")]
        public const int ERROR_CAPAUTHZ_SCCD_NO_AUTH_ENTITY = 457;

        [NativeTypeName("#define ERROR_CAPAUTHZ_SCCD_PARSE_ERROR 458L")]
        public const int ERROR_CAPAUTHZ_SCCD_PARSE_ERROR = 458;

        [NativeTypeName("#define ERROR_CAPAUTHZ_SCCD_DEV_MODE_REQUIRED 459L")]
        public const int ERROR_CAPAUTHZ_SCCD_DEV_MODE_REQUIRED = 459;

        [NativeTypeName("#define ERROR_CAPAUTHZ_SCCD_NO_CAPABILITY_MATCH 460L")]
        public const int ERROR_CAPAUTHZ_SCCD_NO_CAPABILITY_MATCH = 460;

        [NativeTypeName("#define ERROR_CIMFS_IMAGE_CORRUPT 470L")]
        public const int ERROR_CIMFS_IMAGE_CORRUPT = 470;

        [NativeTypeName("#define ERROR_PNP_QUERY_REMOVE_DEVICE_TIMEOUT 480L")]
        public const int ERROR_PNP_QUERY_REMOVE_DEVICE_TIMEOUT = 480;

        [NativeTypeName("#define ERROR_PNP_QUERY_REMOVE_RELATED_DEVICE_TIMEOUT 481L")]
        public const int ERROR_PNP_QUERY_REMOVE_RELATED_DEVICE_TIMEOUT = 481;

        [NativeTypeName("#define ERROR_PNP_QUERY_REMOVE_UNRELATED_DEVICE_TIMEOUT 482L")]
        public const int ERROR_PNP_QUERY_REMOVE_UNRELATED_DEVICE_TIMEOUT = 482;

        [NativeTypeName("#define ERROR_DEVICE_HARDWARE_ERROR 483L")]
        public const int ERROR_DEVICE_HARDWARE_ERROR = 483;

        [NativeTypeName("#define ERROR_INVALID_ADDRESS 487L")]
        public const int ERROR_INVALID_ADDRESS = 487;

        [NativeTypeName("#define ERROR_VRF_CFG_AND_IO_ENABLED 1183L")]
        public const int ERROR_VRF_CFG_AND_IO_ENABLED = 1183;

        [NativeTypeName("#define ERROR_PARTITION_TERMINATING 1184L")]
        public const int ERROR_PARTITION_TERMINATING = 1184;

        [NativeTypeName("#define ERROR_USER_PROFILE_LOAD 500L")]
        public const int ERROR_USER_PROFILE_LOAD = 500;

        [NativeTypeName("#define ERROR_ARITHMETIC_OVERFLOW 534L")]
        public const int ERROR_ARITHMETIC_OVERFLOW = 534;

        [NativeTypeName("#define ERROR_PIPE_CONNECTED 535L")]
        public const int ERROR_PIPE_CONNECTED = 535;

        [NativeTypeName("#define ERROR_PIPE_LISTENING 536L")]
        public const int ERROR_PIPE_LISTENING = 536;

        [NativeTypeName("#define ERROR_VERIFIER_STOP 537L")]
        public const int ERROR_VERIFIER_STOP = 537;

        [NativeTypeName("#define ERROR_ABIOS_ERROR 538L")]
        public const int ERROR_ABIOS_ERROR = 538;

        [NativeTypeName("#define ERROR_WX86_WARNING 539L")]
        public const int ERROR_WX86_WARNING = 539;

        [NativeTypeName("#define ERROR_WX86_ERROR 540L")]
        public const int ERROR_WX86_ERROR = 540;

        [NativeTypeName("#define ERROR_TIMER_NOT_CANCELED 541L")]
        public const int ERROR_TIMER_NOT_CANCELED = 541;

        [NativeTypeName("#define ERROR_UNWIND 542L")]
        public const int ERROR_UNWIND = 542;

        [NativeTypeName("#define ERROR_BAD_STACK 543L")]
        public const int ERROR_BAD_STACK = 543;

        [NativeTypeName("#define ERROR_INVALID_UNWIND_TARGET 544L")]
        public const int ERROR_INVALID_UNWIND_TARGET = 544;

        [NativeTypeName("#define ERROR_INVALID_PORT_ATTRIBUTES 545L")]
        public const int ERROR_INVALID_PORT_ATTRIBUTES = 545;

        [NativeTypeName("#define ERROR_PORT_MESSAGE_TOO_LONG 546L")]
        public const int ERROR_PORT_MESSAGE_TOO_LONG = 546;

        [NativeTypeName("#define ERROR_INVALID_QUOTA_LOWER 547L")]
        public const int ERROR_INVALID_QUOTA_LOWER = 547;

        [NativeTypeName("#define ERROR_DEVICE_ALREADY_ATTACHED 548L")]
        public const int ERROR_DEVICE_ALREADY_ATTACHED = 548;

        [NativeTypeName("#define ERROR_INSTRUCTION_MISALIGNMENT 549L")]
        public const int ERROR_INSTRUCTION_MISALIGNMENT = 549;

        [NativeTypeName("#define ERROR_PROFILING_NOT_STARTED 550L")]
        public const int ERROR_PROFILING_NOT_STARTED = 550;

        [NativeTypeName("#define ERROR_PROFILING_NOT_STOPPED 551L")]
        public const int ERROR_PROFILING_NOT_STOPPED = 551;

        [NativeTypeName("#define ERROR_COULD_NOT_INTERPRET 552L")]
        public const int ERROR_COULD_NOT_INTERPRET = 552;

        [NativeTypeName("#define ERROR_PROFILING_AT_LIMIT 553L")]
        public const int ERROR_PROFILING_AT_LIMIT = 553;

        [NativeTypeName("#define ERROR_CANT_WAIT 554L")]
        public const int ERROR_CANT_WAIT = 554;

        [NativeTypeName("#define ERROR_CANT_TERMINATE_SELF 555L")]
        public const int ERROR_CANT_TERMINATE_SELF = 555;

        [NativeTypeName("#define ERROR_UNEXPECTED_MM_CREATE_ERR 556L")]
        public const int ERROR_UNEXPECTED_MM_CREATE_ERR = 556;

        [NativeTypeName("#define ERROR_UNEXPECTED_MM_MAP_ERROR 557L")]
        public const int ERROR_UNEXPECTED_MM_MAP_ERROR = 557;

        [NativeTypeName("#define ERROR_UNEXPECTED_MM_EXTEND_ERR 558L")]
        public const int ERROR_UNEXPECTED_MM_EXTEND_ERR = 558;

        [NativeTypeName("#define ERROR_BAD_FUNCTION_TABLE 559L")]
        public const int ERROR_BAD_FUNCTION_TABLE = 559;

        [NativeTypeName("#define ERROR_NO_GUID_TRANSLATION 560L")]
        public const int ERROR_NO_GUID_TRANSLATION = 560;

        [NativeTypeName("#define ERROR_INVALID_LDT_SIZE 561L")]
        public const int ERROR_INVALID_LDT_SIZE = 561;

        [NativeTypeName("#define ERROR_INVALID_LDT_OFFSET 563L")]
        public const int ERROR_INVALID_LDT_OFFSET = 563;

        [NativeTypeName("#define ERROR_INVALID_LDT_DESCRIPTOR 564L")]
        public const int ERROR_INVALID_LDT_DESCRIPTOR = 564;

        [NativeTypeName("#define ERROR_TOO_MANY_THREADS 565L")]
        public const int ERROR_TOO_MANY_THREADS = 565;

        [NativeTypeName("#define ERROR_THREAD_NOT_IN_PROCESS 566L")]
        public const int ERROR_THREAD_NOT_IN_PROCESS = 566;

        [NativeTypeName("#define ERROR_PAGEFILE_QUOTA_EXCEEDED 567L")]
        public const int ERROR_PAGEFILE_QUOTA_EXCEEDED = 567;

        [NativeTypeName("#define ERROR_LOGON_SERVER_CONFLICT 568L")]
        public const int ERROR_LOGON_SERVER_CONFLICT = 568;

        [NativeTypeName("#define ERROR_SYNCHRONIZATION_REQUIRED 569L")]
        public const int ERROR_SYNCHRONIZATION_REQUIRED = 569;

        [NativeTypeName("#define ERROR_NET_OPEN_FAILED 570L")]
        public const int ERROR_NET_OPEN_FAILED = 570;

        [NativeTypeName("#define ERROR_IO_PRIVILEGE_FAILED 571L")]
        public const int ERROR_IO_PRIVILEGE_FAILED = 571;

        [NativeTypeName("#define ERROR_CONTROL_C_EXIT 572L")]
        public const int ERROR_CONTROL_C_EXIT = 572;

        [NativeTypeName("#define ERROR_MISSING_SYSTEMFILE 573L")]
        public const int ERROR_MISSING_SYSTEMFILE = 573;

        [NativeTypeName("#define ERROR_UNHANDLED_EXCEPTION 574L")]
        public const int ERROR_UNHANDLED_EXCEPTION = 574;

        [NativeTypeName("#define ERROR_APP_INIT_FAILURE 575L")]
        public const int ERROR_APP_INIT_FAILURE = 575;

        [NativeTypeName("#define ERROR_PAGEFILE_CREATE_FAILED 576L")]
        public const int ERROR_PAGEFILE_CREATE_FAILED = 576;

        [NativeTypeName("#define ERROR_INVALID_IMAGE_HASH 577L")]
        public const int ERROR_INVALID_IMAGE_HASH = 577;

        [NativeTypeName("#define ERROR_NO_PAGEFILE 578L")]
        public const int ERROR_NO_PAGEFILE = 578;

        [NativeTypeName("#define ERROR_ILLEGAL_FLOAT_CONTEXT 579L")]
        public const int ERROR_ILLEGAL_FLOAT_CONTEXT = 579;

        [NativeTypeName("#define ERROR_NO_EVENT_PAIR 580L")]
        public const int ERROR_NO_EVENT_PAIR = 580;

        [NativeTypeName("#define ERROR_DOMAIN_CTRLR_CONFIG_ERROR 581L")]
        public const int ERROR_DOMAIN_CTRLR_CONFIG_ERROR = 581;

        [NativeTypeName("#define ERROR_ILLEGAL_CHARACTER 582L")]
        public const int ERROR_ILLEGAL_CHARACTER = 582;

        [NativeTypeName("#define ERROR_UNDEFINED_CHARACTER 583L")]
        public const int ERROR_UNDEFINED_CHARACTER = 583;

        [NativeTypeName("#define ERROR_FLOPPY_VOLUME 584L")]
        public const int ERROR_FLOPPY_VOLUME = 584;

        [NativeTypeName("#define ERROR_BIOS_FAILED_TO_CONNECT_INTERRUPT 585L")]
        public const int ERROR_BIOS_FAILED_TO_CONNECT_INTERRUPT = 585;

        [NativeTypeName("#define ERROR_BACKUP_CONTROLLER 586L")]
        public const int ERROR_BACKUP_CONTROLLER = 586;

        [NativeTypeName("#define ERROR_MUTANT_LIMIT_EXCEEDED 587L")]
        public const int ERROR_MUTANT_LIMIT_EXCEEDED = 587;

        [NativeTypeName("#define ERROR_FS_DRIVER_REQUIRED 588L")]
        public const int ERROR_FS_DRIVER_REQUIRED = 588;

        [NativeTypeName("#define ERROR_CANNOT_LOAD_REGISTRY_FILE 589L")]
        public const int ERROR_CANNOT_LOAD_REGISTRY_FILE = 589;

        [NativeTypeName("#define ERROR_DEBUG_ATTACH_FAILED 590L")]
        public const int ERROR_DEBUG_ATTACH_FAILED = 590;

        [NativeTypeName("#define ERROR_SYSTEM_PROCESS_TERMINATED 591L")]
        public const int ERROR_SYSTEM_PROCESS_TERMINATED = 591;

        [NativeTypeName("#define ERROR_DATA_NOT_ACCEPTED 592L")]
        public const int ERROR_DATA_NOT_ACCEPTED = 592;

        [NativeTypeName("#define ERROR_VDM_HARD_ERROR 593L")]
        public const int ERROR_VDM_HARD_ERROR = 593;

        [NativeTypeName("#define ERROR_DRIVER_CANCEL_TIMEOUT 594L")]
        public const int ERROR_DRIVER_CANCEL_TIMEOUT = 594;

        [NativeTypeName("#define ERROR_REPLY_MESSAGE_MISMATCH 595L")]
        public const int ERROR_REPLY_MESSAGE_MISMATCH = 595;

        [NativeTypeName("#define ERROR_LOST_WRITEBEHIND_DATA 596L")]
        public const int ERROR_LOST_WRITEBEHIND_DATA = 596;

        [NativeTypeName("#define ERROR_CLIENT_SERVER_PARAMETERS_INVALID 597L")]
        public const int ERROR_CLIENT_SERVER_PARAMETERS_INVALID = 597;

        [NativeTypeName("#define ERROR_NOT_TINY_STREAM 598L")]
        public const int ERROR_NOT_TINY_STREAM = 598;

        [NativeTypeName("#define ERROR_STACK_OVERFLOW_READ 599L")]
        public const int ERROR_STACK_OVERFLOW_READ = 599;

        [NativeTypeName("#define ERROR_CONVERT_TO_LARGE 600L")]
        public const int ERROR_CONVERT_TO_LARGE = 600;

        [NativeTypeName("#define ERROR_FOUND_OUT_OF_SCOPE 601L")]
        public const int ERROR_FOUND_OUT_OF_SCOPE = 601;

        [NativeTypeName("#define ERROR_ALLOCATE_BUCKET 602L")]
        public const int ERROR_ALLOCATE_BUCKET = 602;

        [NativeTypeName("#define ERROR_MARSHALL_OVERFLOW 603L")]
        public const int ERROR_MARSHALL_OVERFLOW = 603;

        [NativeTypeName("#define ERROR_INVALID_VARIANT 604L")]
        public const int ERROR_INVALID_VARIANT = 604;

        [NativeTypeName("#define ERROR_BAD_COMPRESSION_BUFFER 605L")]
        public const int ERROR_BAD_COMPRESSION_BUFFER = 605;

        [NativeTypeName("#define ERROR_AUDIT_FAILED 606L")]
        public const int ERROR_AUDIT_FAILED = 606;

        [NativeTypeName("#define ERROR_TIMER_RESOLUTION_NOT_SET 607L")]
        public const int ERROR_TIMER_RESOLUTION_NOT_SET = 607;

        [NativeTypeName("#define ERROR_INSUFFICIENT_LOGON_INFO 608L")]
        public const int ERROR_INSUFFICIENT_LOGON_INFO = 608;

        [NativeTypeName("#define ERROR_BAD_DLL_ENTRYPOINT 609L")]
        public const int ERROR_BAD_DLL_ENTRYPOINT = 609;

        [NativeTypeName("#define ERROR_BAD_SERVICE_ENTRYPOINT 610L")]
        public const int ERROR_BAD_SERVICE_ENTRYPOINT = 610;

        [NativeTypeName("#define ERROR_IP_ADDRESS_CONFLICT1 611L")]
        public const int ERROR_IP_ADDRESS_CONFLICT1 = 611;

        [NativeTypeName("#define ERROR_IP_ADDRESS_CONFLICT2 612L")]
        public const int ERROR_IP_ADDRESS_CONFLICT2 = 612;

        [NativeTypeName("#define ERROR_REGISTRY_QUOTA_LIMIT 613L")]
        public const int ERROR_REGISTRY_QUOTA_LIMIT = 613;

        [NativeTypeName("#define ERROR_NO_CALLBACK_ACTIVE 614L")]
        public const int ERROR_NO_CALLBACK_ACTIVE = 614;

        [NativeTypeName("#define ERROR_PWD_TOO_SHORT 615L")]
        public const int ERROR_PWD_TOO_SHORT = 615;

        [NativeTypeName("#define ERROR_PWD_TOO_RECENT 616L")]
        public const int ERROR_PWD_TOO_RECENT = 616;

        [NativeTypeName("#define ERROR_PWD_HISTORY_CONFLICT 617L")]
        public const int ERROR_PWD_HISTORY_CONFLICT = 617;

        [NativeTypeName("#define ERROR_UNSUPPORTED_COMPRESSION 618L")]
        public const int ERROR_UNSUPPORTED_COMPRESSION = 618;

        [NativeTypeName("#define ERROR_INVALID_HW_PROFILE 619L")]
        public const int ERROR_INVALID_HW_PROFILE = 619;

        [NativeTypeName("#define ERROR_INVALID_PLUGPLAY_DEVICE_PATH 620L")]
        public const int ERROR_INVALID_PLUGPLAY_DEVICE_PATH = 620;

        [NativeTypeName("#define ERROR_QUOTA_LIST_INCONSISTENT 621L")]
        public const int ERROR_QUOTA_LIST_INCONSISTENT = 621;

        [NativeTypeName("#define ERROR_EVALUATION_EXPIRATION 622L")]
        public const int ERROR_EVALUATION_EXPIRATION = 622;

        [NativeTypeName("#define ERROR_ILLEGAL_DLL_RELOCATION 623L")]
        public const int ERROR_ILLEGAL_DLL_RELOCATION = 623;

        [NativeTypeName("#define ERROR_DLL_INIT_FAILED_LOGOFF 624L")]
        public const int ERROR_DLL_INIT_FAILED_LOGOFF = 624;

        [NativeTypeName("#define ERROR_VALIDATE_CONTINUE 625L")]
        public const int ERROR_VALIDATE_CONTINUE = 625;

        [NativeTypeName("#define ERROR_NO_MORE_MATCHES 626L")]
        public const int ERROR_NO_MORE_MATCHES = 626;

        [NativeTypeName("#define ERROR_RANGE_LIST_CONFLICT 627L")]
        public const int ERROR_RANGE_LIST_CONFLICT = 627;

        [NativeTypeName("#define ERROR_SERVER_SID_MISMATCH 628L")]
        public const int ERROR_SERVER_SID_MISMATCH = 628;

        [NativeTypeName("#define ERROR_CANT_ENABLE_DENY_ONLY 629L")]
        public const int ERROR_CANT_ENABLE_DENY_ONLY = 629;

        [NativeTypeName("#define ERROR_FLOAT_MULTIPLE_FAULTS 630L")]
        public const int ERROR_FLOAT_MULTIPLE_FAULTS = 630;

        [NativeTypeName("#define ERROR_FLOAT_MULTIPLE_TRAPS 631L")]
        public const int ERROR_FLOAT_MULTIPLE_TRAPS = 631;

        [NativeTypeName("#define ERROR_NOINTERFACE 632L")]
        public const int ERROR_NOINTERFACE = 632;

        [NativeTypeName("#define ERROR_DRIVER_FAILED_SLEEP 633L")]
        public const int ERROR_DRIVER_FAILED_SLEEP = 633;

        [NativeTypeName("#define ERROR_CORRUPT_SYSTEM_FILE 634L")]
        public const int ERROR_CORRUPT_SYSTEM_FILE = 634;

        [NativeTypeName("#define ERROR_COMMITMENT_MINIMUM 635L")]
        public const int ERROR_COMMITMENT_MINIMUM = 635;

        [NativeTypeName("#define ERROR_PNP_RESTART_ENUMERATION 636L")]
        public const int ERROR_PNP_RESTART_ENUMERATION = 636;

        [NativeTypeName("#define ERROR_SYSTEM_IMAGE_BAD_SIGNATURE 637L")]
        public const int ERROR_SYSTEM_IMAGE_BAD_SIGNATURE = 637;

        [NativeTypeName("#define ERROR_PNP_REBOOT_REQUIRED 638L")]
        public const int ERROR_PNP_REBOOT_REQUIRED = 638;

        [NativeTypeName("#define ERROR_INSUFFICIENT_POWER 639L")]
        public const int ERROR_INSUFFICIENT_POWER = 639;

        [NativeTypeName("#define ERROR_MULTIPLE_FAULT_VIOLATION 640L")]
        public const int ERROR_MULTIPLE_FAULT_VIOLATION = 640;

        [NativeTypeName("#define ERROR_SYSTEM_SHUTDOWN 641L")]
        public const int ERROR_SYSTEM_SHUTDOWN = 641;

        [NativeTypeName("#define ERROR_PORT_NOT_SET 642L")]
        public const int ERROR_PORT_NOT_SET = 642;

        [NativeTypeName("#define ERROR_DS_VERSION_CHECK_FAILURE 643L")]
        public const int ERROR_DS_VERSION_CHECK_FAILURE = 643;

        [NativeTypeName("#define ERROR_RANGE_NOT_FOUND 644L")]
        public const int ERROR_RANGE_NOT_FOUND = 644;

        [NativeTypeName("#define ERROR_NOT_SAFE_MODE_DRIVER 646L")]
        public const int ERROR_NOT_SAFE_MODE_DRIVER = 646;

        [NativeTypeName("#define ERROR_FAILED_DRIVER_ENTRY 647L")]
        public const int ERROR_FAILED_DRIVER_ENTRY = 647;

        [NativeTypeName("#define ERROR_DEVICE_ENUMERATION_ERROR 648L")]
        public const int ERROR_DEVICE_ENUMERATION_ERROR = 648;

        [NativeTypeName("#define ERROR_MOUNT_POINT_NOT_RESOLVED 649L")]
        public const int ERROR_MOUNT_POINT_NOT_RESOLVED = 649;

        [NativeTypeName("#define ERROR_INVALID_DEVICE_OBJECT_PARAMETER 650L")]
        public const int ERROR_INVALID_DEVICE_OBJECT_PARAMETER = 650;

        [NativeTypeName("#define ERROR_MCA_OCCURED 651L")]
        public const int ERROR_MCA_OCCURED = 651;

        [NativeTypeName("#define ERROR_DRIVER_DATABASE_ERROR 652L")]
        public const int ERROR_DRIVER_DATABASE_ERROR = 652;

        [NativeTypeName("#define ERROR_SYSTEM_HIVE_TOO_LARGE 653L")]
        public const int ERROR_SYSTEM_HIVE_TOO_LARGE = 653;

        [NativeTypeName("#define ERROR_DRIVER_FAILED_PRIOR_UNLOAD 654L")]
        public const int ERROR_DRIVER_FAILED_PRIOR_UNLOAD = 654;

        [NativeTypeName("#define ERROR_VOLSNAP_PREPARE_HIBERNATE 655L")]
        public const int ERROR_VOLSNAP_PREPARE_HIBERNATE = 655;

        [NativeTypeName("#define ERROR_HIBERNATION_FAILURE 656L")]
        public const int ERROR_HIBERNATION_FAILURE = 656;

        [NativeTypeName("#define ERROR_PWD_TOO_LONG 657L")]
        public const int ERROR_PWD_TOO_LONG = 657;

        [NativeTypeName("#define ERROR_FILE_SYSTEM_LIMITATION 665L")]
        public const int ERROR_FILE_SYSTEM_LIMITATION = 665;

        [NativeTypeName("#define ERROR_ASSERTION_FAILURE 668L")]
        public const int ERROR_ASSERTION_FAILURE = 668;

        [NativeTypeName("#define ERROR_ACPI_ERROR 669L")]
        public const int ERROR_ACPI_ERROR = 669;

        [NativeTypeName("#define ERROR_WOW_ASSERTION 670L")]
        public const int ERROR_WOW_ASSERTION = 670;

        [NativeTypeName("#define ERROR_PNP_BAD_MPS_TABLE 671L")]
        public const int ERROR_PNP_BAD_MPS_TABLE = 671;

        [NativeTypeName("#define ERROR_PNP_TRANSLATION_FAILED 672L")]
        public const int ERROR_PNP_TRANSLATION_FAILED = 672;

        [NativeTypeName("#define ERROR_PNP_IRQ_TRANSLATION_FAILED 673L")]
        public const int ERROR_PNP_IRQ_TRANSLATION_FAILED = 673;

        [NativeTypeName("#define ERROR_PNP_INVALID_ID 674L")]
        public const int ERROR_PNP_INVALID_ID = 674;

        [NativeTypeName("#define ERROR_WAKE_SYSTEM_DEBUGGER 675L")]
        public const int ERROR_WAKE_SYSTEM_DEBUGGER = 675;

        [NativeTypeName("#define ERROR_HANDLES_CLOSED 676L")]
        public const int ERROR_HANDLES_CLOSED = 676;

        [NativeTypeName("#define ERROR_EXTRANEOUS_INFORMATION 677L")]
        public const int ERROR_EXTRANEOUS_INFORMATION = 677;

        [NativeTypeName("#define ERROR_RXACT_COMMIT_NECESSARY 678L")]
        public const int ERROR_RXACT_COMMIT_NECESSARY = 678;

        [NativeTypeName("#define ERROR_MEDIA_CHECK 679L")]
        public const int ERROR_MEDIA_CHECK = 679;

        [NativeTypeName("#define ERROR_GUID_SUBSTITUTION_MADE 680L")]
        public const int ERROR_GUID_SUBSTITUTION_MADE = 680;

        [NativeTypeName("#define ERROR_STOPPED_ON_SYMLINK 681L")]
        public const int ERROR_STOPPED_ON_SYMLINK = 681;

        [NativeTypeName("#define ERROR_LONGJUMP 682L")]
        public const int ERROR_LONGJUMP = 682;

        [NativeTypeName("#define ERROR_PLUGPLAY_QUERY_VETOED 683L")]
        public const int ERROR_PLUGPLAY_QUERY_VETOED = 683;

        [NativeTypeName("#define ERROR_UNWIND_CONSOLIDATE 684L")]
        public const int ERROR_UNWIND_CONSOLIDATE = 684;

        [NativeTypeName("#define ERROR_REGISTRY_HIVE_RECOVERED 685L")]
        public const int ERROR_REGISTRY_HIVE_RECOVERED = 685;

        [NativeTypeName("#define ERROR_DLL_MIGHT_BE_INSECURE 686L")]
        public const int ERROR_DLL_MIGHT_BE_INSECURE = 686;

        [NativeTypeName("#define ERROR_DLL_MIGHT_BE_INCOMPATIBLE 687L")]
        public const int ERROR_DLL_MIGHT_BE_INCOMPATIBLE = 687;

        [NativeTypeName("#define ERROR_DBG_EXCEPTION_NOT_HANDLED 688L")]
        public const int ERROR_DBG_EXCEPTION_NOT_HANDLED = 688;

        [NativeTypeName("#define ERROR_DBG_REPLY_LATER 689L")]
        public const int ERROR_DBG_REPLY_LATER = 689;

        [NativeTypeName("#define ERROR_DBG_UNABLE_TO_PROVIDE_HANDLE 690L")]
        public const int ERROR_DBG_UNABLE_TO_PROVIDE_HANDLE = 690;

        [NativeTypeName("#define ERROR_DBG_TERMINATE_THREAD 691L")]
        public const int ERROR_DBG_TERMINATE_THREAD = 691;

        [NativeTypeName("#define ERROR_DBG_TERMINATE_PROCESS 692L")]
        public const int ERROR_DBG_TERMINATE_PROCESS = 692;

        [NativeTypeName("#define ERROR_DBG_CONTROL_C 693L")]
        public const int ERROR_DBG_CONTROL_C = 693;

        [NativeTypeName("#define ERROR_DBG_PRINTEXCEPTION_C 694L")]
        public const int ERROR_DBG_PRINTEXCEPTION_C = 694;

        [NativeTypeName("#define ERROR_DBG_RIPEXCEPTION 695L")]
        public const int ERROR_DBG_RIPEXCEPTION = 695;

        [NativeTypeName("#define ERROR_DBG_CONTROL_BREAK 696L")]
        public const int ERROR_DBG_CONTROL_BREAK = 696;

        [NativeTypeName("#define ERROR_DBG_COMMAND_EXCEPTION 697L")]
        public const int ERROR_DBG_COMMAND_EXCEPTION = 697;

        [NativeTypeName("#define ERROR_OBJECT_NAME_EXISTS 698L")]
        public const int ERROR_OBJECT_NAME_EXISTS = 698;

        [NativeTypeName("#define ERROR_THREAD_WAS_SUSPENDED 699L")]
        public const int ERROR_THREAD_WAS_SUSPENDED = 699;

        [NativeTypeName("#define ERROR_IMAGE_NOT_AT_BASE 700L")]
        public const int ERROR_IMAGE_NOT_AT_BASE = 700;

        [NativeTypeName("#define ERROR_RXACT_STATE_CREATED 701L")]
        public const int ERROR_RXACT_STATE_CREATED = 701;

        [NativeTypeName("#define ERROR_SEGMENT_NOTIFICATION 702L")]
        public const int ERROR_SEGMENT_NOTIFICATION = 702;

        [NativeTypeName("#define ERROR_BAD_CURRENT_DIRECTORY 703L")]
        public const int ERROR_BAD_CURRENT_DIRECTORY = 703;

        [NativeTypeName("#define ERROR_FT_READ_RECOVERY_FROM_BACKUP 704L")]
        public const int ERROR_FT_READ_RECOVERY_FROM_BACKUP = 704;

        [NativeTypeName("#define ERROR_FT_WRITE_RECOVERY 705L")]
        public const int ERROR_FT_WRITE_RECOVERY = 705;

        [NativeTypeName("#define ERROR_IMAGE_MACHINE_TYPE_MISMATCH 706L")]
        public const int ERROR_IMAGE_MACHINE_TYPE_MISMATCH = 706;

        [NativeTypeName("#define ERROR_RECEIVE_PARTIAL 707L")]
        public const int ERROR_RECEIVE_PARTIAL = 707;

        [NativeTypeName("#define ERROR_RECEIVE_EXPEDITED 708L")]
        public const int ERROR_RECEIVE_EXPEDITED = 708;

        [NativeTypeName("#define ERROR_RECEIVE_PARTIAL_EXPEDITED 709L")]
        public const int ERROR_RECEIVE_PARTIAL_EXPEDITED = 709;

        [NativeTypeName("#define ERROR_EVENT_DONE 710L")]
        public const int ERROR_EVENT_DONE = 710;

        [NativeTypeName("#define ERROR_EVENT_PENDING 711L")]
        public const int ERROR_EVENT_PENDING = 711;

        [NativeTypeName("#define ERROR_CHECKING_FILE_SYSTEM 712L")]
        public const int ERROR_CHECKING_FILE_SYSTEM = 712;

        [NativeTypeName("#define ERROR_FATAL_APP_EXIT 713L")]
        public const int ERROR_FATAL_APP_EXIT = 713;

        [NativeTypeName("#define ERROR_PREDEFINED_HANDLE 714L")]
        public const int ERROR_PREDEFINED_HANDLE = 714;

        [NativeTypeName("#define ERROR_WAS_UNLOCKED 715L")]
        public const int ERROR_WAS_UNLOCKED = 715;

        [NativeTypeName("#define ERROR_SERVICE_NOTIFICATION 716L")]
        public const int ERROR_SERVICE_NOTIFICATION = 716;

        [NativeTypeName("#define ERROR_WAS_LOCKED 717L")]
        public const int ERROR_WAS_LOCKED = 717;

        [NativeTypeName("#define ERROR_LOG_HARD_ERROR 718L")]
        public const int ERROR_LOG_HARD_ERROR = 718;

        [NativeTypeName("#define ERROR_ALREADY_WIN32 719L")]
        public const int ERROR_ALREADY_WIN32 = 719;

        [NativeTypeName("#define ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE 720L")]
        public const int ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE = 720;

        [NativeTypeName("#define ERROR_NO_YIELD_PERFORMED 721L")]
        public const int ERROR_NO_YIELD_PERFORMED = 721;

        [NativeTypeName("#define ERROR_TIMER_RESUME_IGNORED 722L")]
        public const int ERROR_TIMER_RESUME_IGNORED = 722;

        [NativeTypeName("#define ERROR_ARBITRATION_UNHANDLED 723L")]
        public const int ERROR_ARBITRATION_UNHANDLED = 723;

        [NativeTypeName("#define ERROR_CARDBUS_NOT_SUPPORTED 724L")]
        public const int ERROR_CARDBUS_NOT_SUPPORTED = 724;

        [NativeTypeName("#define ERROR_MP_PROCESSOR_MISMATCH 725L")]
        public const int ERROR_MP_PROCESSOR_MISMATCH = 725;

        [NativeTypeName("#define ERROR_HIBERNATED 726L")]
        public const int ERROR_HIBERNATED = 726;

        [NativeTypeName("#define ERROR_RESUME_HIBERNATION 727L")]
        public const int ERROR_RESUME_HIBERNATION = 727;

        [NativeTypeName("#define ERROR_FIRMWARE_UPDATED 728L")]
        public const int ERROR_FIRMWARE_UPDATED = 728;

        [NativeTypeName("#define ERROR_DRIVERS_LEAKING_LOCKED_PAGES 729L")]
        public const int ERROR_DRIVERS_LEAKING_LOCKED_PAGES = 729;

        [NativeTypeName("#define ERROR_WAKE_SYSTEM 730L")]
        public const int ERROR_WAKE_SYSTEM = 730;

        [NativeTypeName("#define ERROR_WAIT_1 731L")]
        public const int ERROR_WAIT_1 = 731;

        [NativeTypeName("#define ERROR_WAIT_2 732L")]
        public const int ERROR_WAIT_2 = 732;

        [NativeTypeName("#define ERROR_WAIT_3 733L")]
        public const int ERROR_WAIT_3 = 733;

        [NativeTypeName("#define ERROR_WAIT_63 734L")]
        public const int ERROR_WAIT_63 = 734;

        [NativeTypeName("#define ERROR_ABANDONED_WAIT_0 735L")]
        public const int ERROR_ABANDONED_WAIT_0 = 735;

        [NativeTypeName("#define ERROR_ABANDONED_WAIT_63 736L")]
        public const int ERROR_ABANDONED_WAIT_63 = 736;

        [NativeTypeName("#define ERROR_USER_APC 737L")]
        public const int ERROR_USER_APC = 737;

        [NativeTypeName("#define ERROR_KERNEL_APC 738L")]
        public const int ERROR_KERNEL_APC = 738;

        [NativeTypeName("#define ERROR_ALERTED 739L")]
        public const int ERROR_ALERTED = 739;

        [NativeTypeName("#define ERROR_ELEVATION_REQUIRED 740L")]
        public const int ERROR_ELEVATION_REQUIRED = 740;

        [NativeTypeName("#define ERROR_REPARSE 741L")]
        public const int ERROR_REPARSE = 741;

        [NativeTypeName("#define ERROR_OPLOCK_BREAK_IN_PROGRESS 742L")]
        public const int ERROR_OPLOCK_BREAK_IN_PROGRESS = 742;

        [NativeTypeName("#define ERROR_VOLUME_MOUNTED 743L")]
        public const int ERROR_VOLUME_MOUNTED = 743;

        [NativeTypeName("#define ERROR_RXACT_COMMITTED 744L")]
        public const int ERROR_RXACT_COMMITTED = 744;

        [NativeTypeName("#define ERROR_NOTIFY_CLEANUP 745L")]
        public const int ERROR_NOTIFY_CLEANUP = 745;

        [NativeTypeName("#define ERROR_PRIMARY_TRANSPORT_CONNECT_FAILED 746L")]
        public const int ERROR_PRIMARY_TRANSPORT_CONNECT_FAILED = 746;

        [NativeTypeName("#define ERROR_PAGE_FAULT_TRANSITION 747L")]
        public const int ERROR_PAGE_FAULT_TRANSITION = 747;

        [NativeTypeName("#define ERROR_PAGE_FAULT_DEMAND_ZERO 748L")]
        public const int ERROR_PAGE_FAULT_DEMAND_ZERO = 748;

        [NativeTypeName("#define ERROR_PAGE_FAULT_COPY_ON_WRITE 749L")]
        public const int ERROR_PAGE_FAULT_COPY_ON_WRITE = 749;

        [NativeTypeName("#define ERROR_PAGE_FAULT_GUARD_PAGE 750L")]
        public const int ERROR_PAGE_FAULT_GUARD_PAGE = 750;

        [NativeTypeName("#define ERROR_PAGE_FAULT_PAGING_FILE 751L")]
        public const int ERROR_PAGE_FAULT_PAGING_FILE = 751;

        [NativeTypeName("#define ERROR_CACHE_PAGE_LOCKED 752L")]
        public const int ERROR_CACHE_PAGE_LOCKED = 752;

        [NativeTypeName("#define ERROR_CRASH_DUMP 753L")]
        public const int ERROR_CRASH_DUMP = 753;

        [NativeTypeName("#define ERROR_BUFFER_ALL_ZEROS 754L")]
        public const int ERROR_BUFFER_ALL_ZEROS = 754;

        [NativeTypeName("#define ERROR_REPARSE_OBJECT 755L")]
        public const int ERROR_REPARSE_OBJECT = 755;

        [NativeTypeName("#define ERROR_RESOURCE_REQUIREMENTS_CHANGED 756L")]
        public const int ERROR_RESOURCE_REQUIREMENTS_CHANGED = 756;

        [NativeTypeName("#define ERROR_TRANSLATION_COMPLETE 757L")]
        public const int ERROR_TRANSLATION_COMPLETE = 757;

        [NativeTypeName("#define ERROR_NOTHING_TO_TERMINATE 758L")]
        public const int ERROR_NOTHING_TO_TERMINATE = 758;

        [NativeTypeName("#define ERROR_PROCESS_NOT_IN_JOB 759L")]
        public const int ERROR_PROCESS_NOT_IN_JOB = 759;

        [NativeTypeName("#define ERROR_PROCESS_IN_JOB 760L")]
        public const int ERROR_PROCESS_IN_JOB = 760;

        [NativeTypeName("#define ERROR_VOLSNAP_HIBERNATE_READY 761L")]
        public const int ERROR_VOLSNAP_HIBERNATE_READY = 761;

        [NativeTypeName("#define ERROR_FSFILTER_OP_COMPLETED_SUCCESSFULLY 762L")]
        public const int ERROR_FSFILTER_OP_COMPLETED_SUCCESSFULLY = 762;

        [NativeTypeName("#define ERROR_INTERRUPT_VECTOR_ALREADY_CONNECTED 763L")]
        public const int ERROR_INTERRUPT_VECTOR_ALREADY_CONNECTED = 763;

        [NativeTypeName("#define ERROR_INTERRUPT_STILL_CONNECTED 764L")]
        public const int ERROR_INTERRUPT_STILL_CONNECTED = 764;

        [NativeTypeName("#define ERROR_WAIT_FOR_OPLOCK 765L")]
        public const int ERROR_WAIT_FOR_OPLOCK = 765;

        [NativeTypeName("#define ERROR_DBG_EXCEPTION_HANDLED 766L")]
        public const int ERROR_DBG_EXCEPTION_HANDLED = 766;

        [NativeTypeName("#define ERROR_DBG_CONTINUE 767L")]
        public const int ERROR_DBG_CONTINUE = 767;

        [NativeTypeName("#define ERROR_CALLBACK_POP_STACK 768L")]
        public const int ERROR_CALLBACK_POP_STACK = 768;

        [NativeTypeName("#define ERROR_COMPRESSION_DISABLED 769L")]
        public const int ERROR_COMPRESSION_DISABLED = 769;

        [NativeTypeName("#define ERROR_CANTFETCHBACKWARDS 770L")]
        public const int ERROR_CANTFETCHBACKWARDS = 770;

        [NativeTypeName("#define ERROR_CANTSCROLLBACKWARDS 771L")]
        public const int ERROR_CANTSCROLLBACKWARDS = 771;

        [NativeTypeName("#define ERROR_ROWSNOTRELEASED 772L")]
        public const int ERROR_ROWSNOTRELEASED = 772;

        [NativeTypeName("#define ERROR_BAD_ACCESSOR_FLAGS 773L")]
        public const int ERROR_BAD_ACCESSOR_FLAGS = 773;

        [NativeTypeName("#define ERROR_ERRORS_ENCOUNTERED 774L")]
        public const int ERROR_ERRORS_ENCOUNTERED = 774;

        [NativeTypeName("#define ERROR_NOT_CAPABLE 775L")]
        public const int ERROR_NOT_CAPABLE = 775;

        [NativeTypeName("#define ERROR_REQUEST_OUT_OF_SEQUENCE 776L")]
        public const int ERROR_REQUEST_OUT_OF_SEQUENCE = 776;

        [NativeTypeName("#define ERROR_VERSION_PARSE_ERROR 777L")]
        public const int ERROR_VERSION_PARSE_ERROR = 777;

        [NativeTypeName("#define ERROR_BADSTARTPOSITION 778L")]
        public const int ERROR_BADSTARTPOSITION = 778;

        [NativeTypeName("#define ERROR_MEMORY_HARDWARE 779L")]
        public const int ERROR_MEMORY_HARDWARE = 779;

        [NativeTypeName("#define ERROR_DISK_REPAIR_DISABLED 780L")]
        public const int ERROR_DISK_REPAIR_DISABLED = 780;

        [NativeTypeName("#define ERROR_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE 781L")]
        public const int ERROR_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE = 781;

        [NativeTypeName("#define ERROR_SYSTEM_POWERSTATE_TRANSITION 782L")]
        public const int ERROR_SYSTEM_POWERSTATE_TRANSITION = 782;

        [NativeTypeName("#define ERROR_SYSTEM_POWERSTATE_COMPLEX_TRANSITION 783L")]
        public const int ERROR_SYSTEM_POWERSTATE_COMPLEX_TRANSITION = 783;

        [NativeTypeName("#define ERROR_MCA_EXCEPTION 784L")]
        public const int ERROR_MCA_EXCEPTION = 784;

        [NativeTypeName("#define ERROR_ACCESS_AUDIT_BY_POLICY 785L")]
        public const int ERROR_ACCESS_AUDIT_BY_POLICY = 785;

        [NativeTypeName("#define ERROR_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY 786L")]
        public const int ERROR_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY = 786;

        [NativeTypeName("#define ERROR_ABANDON_HIBERFILE 787L")]
        public const int ERROR_ABANDON_HIBERFILE = 787;

        [NativeTypeName("#define ERROR_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED 788L")]
        public const int ERROR_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED = 788;

        [NativeTypeName("#define ERROR_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR 789L")]
        public const int ERROR_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR = 789;

        [NativeTypeName("#define ERROR_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR 790L")]
        public const int ERROR_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR = 790;

        [NativeTypeName("#define ERROR_BAD_MCFG_TABLE 791L")]
        public const int ERROR_BAD_MCFG_TABLE = 791;

        [NativeTypeName("#define ERROR_DISK_REPAIR_REDIRECTED 792L")]
        public const int ERROR_DISK_REPAIR_REDIRECTED = 792;

        [NativeTypeName("#define ERROR_DISK_REPAIR_UNSUCCESSFUL 793L")]
        public const int ERROR_DISK_REPAIR_UNSUCCESSFUL = 793;

        [NativeTypeName("#define ERROR_CORRUPT_LOG_OVERFULL 794L")]
        public const int ERROR_CORRUPT_LOG_OVERFULL = 794;

        [NativeTypeName("#define ERROR_CORRUPT_LOG_CORRUPTED 795L")]
        public const int ERROR_CORRUPT_LOG_CORRUPTED = 795;

        [NativeTypeName("#define ERROR_CORRUPT_LOG_UNAVAILABLE 796L")]
        public const int ERROR_CORRUPT_LOG_UNAVAILABLE = 796;

        [NativeTypeName("#define ERROR_CORRUPT_LOG_DELETED_FULL 797L")]
        public const int ERROR_CORRUPT_LOG_DELETED_FULL = 797;

        [NativeTypeName("#define ERROR_CORRUPT_LOG_CLEARED 798L")]
        public const int ERROR_CORRUPT_LOG_CLEARED = 798;

        [NativeTypeName("#define ERROR_ORPHAN_NAME_EXHAUSTED 799L")]
        public const int ERROR_ORPHAN_NAME_EXHAUSTED = 799;

        [NativeTypeName("#define ERROR_OPLOCK_SWITCHED_TO_NEW_HANDLE 800L")]
        public const int ERROR_OPLOCK_SWITCHED_TO_NEW_HANDLE = 800;

        [NativeTypeName("#define ERROR_CANNOT_GRANT_REQUESTED_OPLOCK 801L")]
        public const int ERROR_CANNOT_GRANT_REQUESTED_OPLOCK = 801;

        [NativeTypeName("#define ERROR_CANNOT_BREAK_OPLOCK 802L")]
        public const int ERROR_CANNOT_BREAK_OPLOCK = 802;

        [NativeTypeName("#define ERROR_OPLOCK_HANDLE_CLOSED 803L")]
        public const int ERROR_OPLOCK_HANDLE_CLOSED = 803;

        [NativeTypeName("#define ERROR_NO_ACE_CONDITION 804L")]
        public const int ERROR_NO_ACE_CONDITION = 804;

        [NativeTypeName("#define ERROR_INVALID_ACE_CONDITION 805L")]
        public const int ERROR_INVALID_ACE_CONDITION = 805;

        [NativeTypeName("#define ERROR_FILE_HANDLE_REVOKED 806L")]
        public const int ERROR_FILE_HANDLE_REVOKED = 806;

        [NativeTypeName("#define ERROR_IMAGE_AT_DIFFERENT_BASE 807L")]
        public const int ERROR_IMAGE_AT_DIFFERENT_BASE = 807;

        [NativeTypeName("#define ERROR_ENCRYPTED_IO_NOT_POSSIBLE 808L")]
        public const int ERROR_ENCRYPTED_IO_NOT_POSSIBLE = 808;

        [NativeTypeName("#define ERROR_FILE_METADATA_OPTIMIZATION_IN_PROGRESS 809L")]
        public const int ERROR_FILE_METADATA_OPTIMIZATION_IN_PROGRESS = 809;

        [NativeTypeName("#define ERROR_QUOTA_ACTIVITY 810L")]
        public const int ERROR_QUOTA_ACTIVITY = 810;

        [NativeTypeName("#define ERROR_HANDLE_REVOKED 811L")]
        public const int ERROR_HANDLE_REVOKED = 811;

        [NativeTypeName("#define ERROR_CALLBACK_INVOKE_INLINE 812L")]
        public const int ERROR_CALLBACK_INVOKE_INLINE = 812;

        [NativeTypeName("#define ERROR_CPU_SET_INVALID 813L")]
        public const int ERROR_CPU_SET_INVALID = 813;

        [NativeTypeName("#define ERROR_ENCLAVE_NOT_TERMINATED 814L")]
        public const int ERROR_ENCLAVE_NOT_TERMINATED = 814;

        [NativeTypeName("#define ERROR_ENCLAVE_VIOLATION 815L")]
        public const int ERROR_ENCLAVE_VIOLATION = 815;

        [NativeTypeName("#define ERROR_EA_ACCESS_DENIED 994L")]
        public const int ERROR_EA_ACCESS_DENIED = 994;

        [NativeTypeName("#define ERROR_OPERATION_ABORTED 995L")]
        public const int ERROR_OPERATION_ABORTED = 995;

        [NativeTypeName("#define ERROR_IO_INCOMPLETE 996L")]
        public const int ERROR_IO_INCOMPLETE = 996;

        [NativeTypeName("#define ERROR_IO_PENDING 997L")]
        public const int ERROR_IO_PENDING = 997;

        [NativeTypeName("#define ERROR_NOACCESS 998L")]
        public const int ERROR_NOACCESS = 998;

        [NativeTypeName("#define ERROR_SWAPERROR 999L")]
        public const int ERROR_SWAPERROR = 999;

        [NativeTypeName("#define ERROR_STACK_OVERFLOW 1001L")]
        public const int ERROR_STACK_OVERFLOW = 1001;

        [NativeTypeName("#define ERROR_INVALID_MESSAGE 1002L")]
        public const int ERROR_INVALID_MESSAGE = 1002;

        [NativeTypeName("#define ERROR_CAN_NOT_COMPLETE 1003L")]
        public const int ERROR_CAN_NOT_COMPLETE = 1003;

        [NativeTypeName("#define ERROR_INVALID_FLAGS 1004L")]
        public const int ERROR_INVALID_FLAGS = 1004;

        [NativeTypeName("#define ERROR_UNRECOGNIZED_VOLUME 1005L")]
        public const int ERROR_UNRECOGNIZED_VOLUME = 1005;

        [NativeTypeName("#define ERROR_FILE_INVALID 1006L")]
        public const int ERROR_FILE_INVALID = 1006;

        [NativeTypeName("#define ERROR_FULLSCREEN_MODE 1007L")]
        public const int ERROR_FULLSCREEN_MODE = 1007;

        [NativeTypeName("#define ERROR_NO_TOKEN 1008L")]
        public const int ERROR_NO_TOKEN = 1008;

        [NativeTypeName("#define ERROR_BADDB 1009L")]
        public const int ERROR_BADDB = 1009;

        [NativeTypeName("#define ERROR_BADKEY 1010L")]
        public const int ERROR_BADKEY = 1010;

        [NativeTypeName("#define ERROR_CANTOPEN 1011L")]
        public const int ERROR_CANTOPEN = 1011;

        [NativeTypeName("#define ERROR_CANTREAD 1012L")]
        public const int ERROR_CANTREAD = 1012;

        [NativeTypeName("#define ERROR_CANTWRITE 1013L")]
        public const int ERROR_CANTWRITE = 1013;

        [NativeTypeName("#define ERROR_REGISTRY_RECOVERED 1014L")]
        public const int ERROR_REGISTRY_RECOVERED = 1014;

        [NativeTypeName("#define ERROR_REGISTRY_CORRUPT 1015L")]
        public const int ERROR_REGISTRY_CORRUPT = 1015;

        [NativeTypeName("#define ERROR_REGISTRY_IO_FAILED 1016L")]
        public const int ERROR_REGISTRY_IO_FAILED = 1016;

        [NativeTypeName("#define ERROR_NOT_REGISTRY_FILE 1017L")]
        public const int ERROR_NOT_REGISTRY_FILE = 1017;

        [NativeTypeName("#define ERROR_KEY_DELETED 1018L")]
        public const int ERROR_KEY_DELETED = 1018;

        [NativeTypeName("#define ERROR_NO_LOG_SPACE 1019L")]
        public const int ERROR_NO_LOG_SPACE = 1019;

        [NativeTypeName("#define ERROR_KEY_HAS_CHILDREN 1020L")]
        public const int ERROR_KEY_HAS_CHILDREN = 1020;

        [NativeTypeName("#define ERROR_CHILD_MUST_BE_VOLATILE 1021L")]
        public const int ERROR_CHILD_MUST_BE_VOLATILE = 1021;

        [NativeTypeName("#define ERROR_NOTIFY_ENUM_DIR 1022L")]
        public const int ERROR_NOTIFY_ENUM_DIR = 1022;

        [NativeTypeName("#define ERROR_DEPENDENT_SERVICES_RUNNING 1051L")]
        public const int ERROR_DEPENDENT_SERVICES_RUNNING = 1051;

        [NativeTypeName("#define ERROR_INVALID_SERVICE_CONTROL 1052L")]
        public const int ERROR_INVALID_SERVICE_CONTROL = 1052;

        [NativeTypeName("#define ERROR_SERVICE_REQUEST_TIMEOUT 1053L")]
        public const int ERROR_SERVICE_REQUEST_TIMEOUT = 1053;

        [NativeTypeName("#define ERROR_SERVICE_NO_THREAD 1054L")]
        public const int ERROR_SERVICE_NO_THREAD = 1054;

        [NativeTypeName("#define ERROR_SERVICE_DATABASE_LOCKED 1055L")]
        public const int ERROR_SERVICE_DATABASE_LOCKED = 1055;

        [NativeTypeName("#define ERROR_SERVICE_ALREADY_RUNNING 1056L")]
        public const int ERROR_SERVICE_ALREADY_RUNNING = 1056;

        [NativeTypeName("#define ERROR_INVALID_SERVICE_ACCOUNT 1057L")]
        public const int ERROR_INVALID_SERVICE_ACCOUNT = 1057;

        [NativeTypeName("#define ERROR_SERVICE_DISABLED 1058L")]
        public const int ERROR_SERVICE_DISABLED = 1058;

        [NativeTypeName("#define ERROR_CIRCULAR_DEPENDENCY 1059L")]
        public const int ERROR_CIRCULAR_DEPENDENCY = 1059;

        [NativeTypeName("#define ERROR_SERVICE_DOES_NOT_EXIST 1060L")]
        public const int ERROR_SERVICE_DOES_NOT_EXIST = 1060;

        [NativeTypeName("#define ERROR_SERVICE_CANNOT_ACCEPT_CTRL 1061L")]
        public const int ERROR_SERVICE_CANNOT_ACCEPT_CTRL = 1061;

        [NativeTypeName("#define ERROR_SERVICE_NOT_ACTIVE 1062L")]
        public const int ERROR_SERVICE_NOT_ACTIVE = 1062;

        [NativeTypeName("#define ERROR_FAILED_SERVICE_CONTROLLER_CONNECT 1063L")]
        public const int ERROR_FAILED_SERVICE_CONTROLLER_CONNECT = 1063;

        [NativeTypeName("#define ERROR_EXCEPTION_IN_SERVICE 1064L")]
        public const int ERROR_EXCEPTION_IN_SERVICE = 1064;

        [NativeTypeName("#define ERROR_DATABASE_DOES_NOT_EXIST 1065L")]
        public const int ERROR_DATABASE_DOES_NOT_EXIST = 1065;

        [NativeTypeName("#define ERROR_SERVICE_SPECIFIC_ERROR 1066L")]
        public const int ERROR_SERVICE_SPECIFIC_ERROR = 1066;

        [NativeTypeName("#define ERROR_PROCESS_ABORTED 1067L")]
        public const int ERROR_PROCESS_ABORTED = 1067;

        [NativeTypeName("#define ERROR_SERVICE_DEPENDENCY_FAIL 1068L")]
        public const int ERROR_SERVICE_DEPENDENCY_FAIL = 1068;

        [NativeTypeName("#define ERROR_SERVICE_LOGON_FAILED 1069L")]
        public const int ERROR_SERVICE_LOGON_FAILED = 1069;

        [NativeTypeName("#define ERROR_SERVICE_START_HANG 1070L")]
        public const int ERROR_SERVICE_START_HANG = 1070;

        [NativeTypeName("#define ERROR_INVALID_SERVICE_LOCK 1071L")]
        public const int ERROR_INVALID_SERVICE_LOCK = 1071;

        [NativeTypeName("#define ERROR_SERVICE_MARKED_FOR_DELETE 1072L")]
        public const int ERROR_SERVICE_MARKED_FOR_DELETE = 1072;

        [NativeTypeName("#define ERROR_SERVICE_EXISTS 1073L")]
        public const int ERROR_SERVICE_EXISTS = 1073;

        [NativeTypeName("#define ERROR_ALREADY_RUNNING_LKG 1074L")]
        public const int ERROR_ALREADY_RUNNING_LKG = 1074;

        [NativeTypeName("#define ERROR_SERVICE_DEPENDENCY_DELETED 1075L")]
        public const int ERROR_SERVICE_DEPENDENCY_DELETED = 1075;

        [NativeTypeName("#define ERROR_BOOT_ALREADY_ACCEPTED 1076L")]
        public const int ERROR_BOOT_ALREADY_ACCEPTED = 1076;

        [NativeTypeName("#define ERROR_SERVICE_NEVER_STARTED 1077L")]
        public const int ERROR_SERVICE_NEVER_STARTED = 1077;

        [NativeTypeName("#define ERROR_DUPLICATE_SERVICE_NAME 1078L")]
        public const int ERROR_DUPLICATE_SERVICE_NAME = 1078;

        [NativeTypeName("#define ERROR_DIFFERENT_SERVICE_ACCOUNT 1079L")]
        public const int ERROR_DIFFERENT_SERVICE_ACCOUNT = 1079;

        [NativeTypeName("#define ERROR_CANNOT_DETECT_DRIVER_FAILURE 1080L")]
        public const int ERROR_CANNOT_DETECT_DRIVER_FAILURE = 1080;

        [NativeTypeName("#define ERROR_CANNOT_DETECT_PROCESS_ABORT 1081L")]
        public const int ERROR_CANNOT_DETECT_PROCESS_ABORT = 1081;

        [NativeTypeName("#define ERROR_NO_RECOVERY_PROGRAM 1082L")]
        public const int ERROR_NO_RECOVERY_PROGRAM = 1082;

        [NativeTypeName("#define ERROR_SERVICE_NOT_IN_EXE 1083L")]
        public const int ERROR_SERVICE_NOT_IN_EXE = 1083;

        [NativeTypeName("#define ERROR_NOT_SAFEBOOT_SERVICE 1084L")]
        public const int ERROR_NOT_SAFEBOOT_SERVICE = 1084;

        [NativeTypeName("#define ERROR_END_OF_MEDIA 1100L")]
        public const int ERROR_END_OF_MEDIA = 1100;

        [NativeTypeName("#define ERROR_FILEMARK_DETECTED 1101L")]
        public const int ERROR_FILEMARK_DETECTED = 1101;

        [NativeTypeName("#define ERROR_BEGINNING_OF_MEDIA 1102L")]
        public const int ERROR_BEGINNING_OF_MEDIA = 1102;

        [NativeTypeName("#define ERROR_SETMARK_DETECTED 1103L")]
        public const int ERROR_SETMARK_DETECTED = 1103;

        [NativeTypeName("#define ERROR_NO_DATA_DETECTED 1104L")]
        public const int ERROR_NO_DATA_DETECTED = 1104;

        [NativeTypeName("#define ERROR_PARTITION_FAILURE 1105L")]
        public const int ERROR_PARTITION_FAILURE = 1105;

        [NativeTypeName("#define ERROR_INVALID_BLOCK_LENGTH 1106L")]
        public const int ERROR_INVALID_BLOCK_LENGTH = 1106;

        [NativeTypeName("#define ERROR_DEVICE_NOT_PARTITIONED 1107L")]
        public const int ERROR_DEVICE_NOT_PARTITIONED = 1107;

        [NativeTypeName("#define ERROR_UNABLE_TO_LOCK_MEDIA 1108L")]
        public const int ERROR_UNABLE_TO_LOCK_MEDIA = 1108;

        [NativeTypeName("#define ERROR_UNABLE_TO_UNLOAD_MEDIA 1109L")]
        public const int ERROR_UNABLE_TO_UNLOAD_MEDIA = 1109;

        [NativeTypeName("#define ERROR_MEDIA_CHANGED 1110L")]
        public const int ERROR_MEDIA_CHANGED = 1110;

        [NativeTypeName("#define ERROR_BUS_RESET 1111L")]
        public const int ERROR_BUS_RESET = 1111;

        [NativeTypeName("#define ERROR_NO_MEDIA_IN_DRIVE 1112L")]
        public const int ERROR_NO_MEDIA_IN_DRIVE = 1112;

        [NativeTypeName("#define ERROR_NO_UNICODE_TRANSLATION 1113L")]
        public const int ERROR_NO_UNICODE_TRANSLATION = 1113;

        [NativeTypeName("#define ERROR_DLL_INIT_FAILED 1114L")]
        public const int ERROR_DLL_INIT_FAILED = 1114;

        [NativeTypeName("#define ERROR_SHUTDOWN_IN_PROGRESS 1115L")]
        public const int ERROR_SHUTDOWN_IN_PROGRESS = 1115;

        [NativeTypeName("#define ERROR_NO_SHUTDOWN_IN_PROGRESS 1116L")]
        public const int ERROR_NO_SHUTDOWN_IN_PROGRESS = 1116;

        [NativeTypeName("#define ERROR_IO_DEVICE 1117L")]
        public const int ERROR_IO_DEVICE = 1117;

        [NativeTypeName("#define ERROR_SERIAL_NO_DEVICE 1118L")]
        public const int ERROR_SERIAL_NO_DEVICE = 1118;

        [NativeTypeName("#define ERROR_IRQ_BUSY 1119L")]
        public const int ERROR_IRQ_BUSY = 1119;

        [NativeTypeName("#define ERROR_MORE_WRITES 1120L")]
        public const int ERROR_MORE_WRITES = 1120;

        [NativeTypeName("#define ERROR_COUNTER_TIMEOUT 1121L")]
        public const int ERROR_COUNTER_TIMEOUT = 1121;

        [NativeTypeName("#define ERROR_FLOPPY_ID_MARK_NOT_FOUND 1122L")]
        public const int ERROR_FLOPPY_ID_MARK_NOT_FOUND = 1122;

        [NativeTypeName("#define ERROR_FLOPPY_WRONG_CYLINDER 1123L")]
        public const int ERROR_FLOPPY_WRONG_CYLINDER = 1123;

        [NativeTypeName("#define ERROR_FLOPPY_UNKNOWN_ERROR 1124L")]
        public const int ERROR_FLOPPY_UNKNOWN_ERROR = 1124;

        [NativeTypeName("#define ERROR_FLOPPY_BAD_REGISTERS 1125L")]
        public const int ERROR_FLOPPY_BAD_REGISTERS = 1125;

        [NativeTypeName("#define ERROR_DISK_RECALIBRATE_FAILED 1126L")]
        public const int ERROR_DISK_RECALIBRATE_FAILED = 1126;

        [NativeTypeName("#define ERROR_DISK_OPERATION_FAILED 1127L")]
        public const int ERROR_DISK_OPERATION_FAILED = 1127;

        [NativeTypeName("#define ERROR_DISK_RESET_FAILED 1128L")]
        public const int ERROR_DISK_RESET_FAILED = 1128;

        [NativeTypeName("#define ERROR_EOM_OVERFLOW 1129L")]
        public const int ERROR_EOM_OVERFLOW = 1129;

        [NativeTypeName("#define ERROR_NOT_ENOUGH_SERVER_MEMORY 1130L")]
        public const int ERROR_NOT_ENOUGH_SERVER_MEMORY = 1130;

        [NativeTypeName("#define ERROR_POSSIBLE_DEADLOCK 1131L")]
        public const int ERROR_POSSIBLE_DEADLOCK = 1131;

        [NativeTypeName("#define ERROR_MAPPED_ALIGNMENT 1132L")]
        public const int ERROR_MAPPED_ALIGNMENT = 1132;

        [NativeTypeName("#define ERROR_SET_POWER_STATE_VETOED 1140L")]
        public const int ERROR_SET_POWER_STATE_VETOED = 1140;

        [NativeTypeName("#define ERROR_SET_POWER_STATE_FAILED 1141L")]
        public const int ERROR_SET_POWER_STATE_FAILED = 1141;

        [NativeTypeName("#define ERROR_TOO_MANY_LINKS 1142L")]
        public const int ERROR_TOO_MANY_LINKS = 1142;

        [NativeTypeName("#define ERROR_OLD_WIN_VERSION 1150L")]
        public const int ERROR_OLD_WIN_VERSION = 1150;

        [NativeTypeName("#define ERROR_APP_WRONG_OS 1151L")]
        public const int ERROR_APP_WRONG_OS = 1151;

        [NativeTypeName("#define ERROR_SINGLE_INSTANCE_APP 1152L")]
        public const int ERROR_SINGLE_INSTANCE_APP = 1152;

        [NativeTypeName("#define ERROR_RMODE_APP 1153L")]
        public const int ERROR_RMODE_APP = 1153;

        [NativeTypeName("#define ERROR_INVALID_DLL 1154L")]
        public const int ERROR_INVALID_DLL = 1154;

        [NativeTypeName("#define ERROR_NO_ASSOCIATION 1155L")]
        public const int ERROR_NO_ASSOCIATION = 1155;

        [NativeTypeName("#define ERROR_DDE_FAIL 1156L")]
        public const int ERROR_DDE_FAIL = 1156;

        [NativeTypeName("#define ERROR_DLL_NOT_FOUND 1157L")]
        public const int ERROR_DLL_NOT_FOUND = 1157;

        [NativeTypeName("#define ERROR_NO_MORE_USER_HANDLES 1158L")]
        public const int ERROR_NO_MORE_USER_HANDLES = 1158;

        [NativeTypeName("#define ERROR_MESSAGE_SYNC_ONLY 1159L")]
        public const int ERROR_MESSAGE_SYNC_ONLY = 1159;

        [NativeTypeName("#define ERROR_SOURCE_ELEMENT_EMPTY 1160L")]
        public const int ERROR_SOURCE_ELEMENT_EMPTY = 1160;

        [NativeTypeName("#define ERROR_DESTINATION_ELEMENT_FULL 1161L")]
        public const int ERROR_DESTINATION_ELEMENT_FULL = 1161;

        [NativeTypeName("#define ERROR_ILLEGAL_ELEMENT_ADDRESS 1162L")]
        public const int ERROR_ILLEGAL_ELEMENT_ADDRESS = 1162;

        [NativeTypeName("#define ERROR_MAGAZINE_NOT_PRESENT 1163L")]
        public const int ERROR_MAGAZINE_NOT_PRESENT = 1163;

        [NativeTypeName("#define ERROR_DEVICE_REINITIALIZATION_NEEDED 1164L")]
        public const int ERROR_DEVICE_REINITIALIZATION_NEEDED = 1164;

        [NativeTypeName("#define ERROR_DEVICE_REQUIRES_CLEANING 1165L")]
        public const int ERROR_DEVICE_REQUIRES_CLEANING = 1165;

        [NativeTypeName("#define ERROR_DEVICE_DOOR_OPEN 1166L")]
        public const int ERROR_DEVICE_DOOR_OPEN = 1166;

        [NativeTypeName("#define ERROR_DEVICE_NOT_CONNECTED 1167L")]
        public const int ERROR_DEVICE_NOT_CONNECTED = 1167;

        [NativeTypeName("#define ERROR_NOT_FOUND 1168L")]
        public const int ERROR_NOT_FOUND = 1168;

        [NativeTypeName("#define ERROR_NO_MATCH 1169L")]
        public const int ERROR_NO_MATCH = 1169;

        [NativeTypeName("#define ERROR_SET_NOT_FOUND 1170L")]
        public const int ERROR_SET_NOT_FOUND = 1170;

        [NativeTypeName("#define ERROR_POINT_NOT_FOUND 1171L")]
        public const int ERROR_POINT_NOT_FOUND = 1171;

        [NativeTypeName("#define ERROR_NO_TRACKING_SERVICE 1172L")]
        public const int ERROR_NO_TRACKING_SERVICE = 1172;

        [NativeTypeName("#define ERROR_NO_VOLUME_ID 1173L")]
        public const int ERROR_NO_VOLUME_ID = 1173;

        [NativeTypeName("#define ERROR_UNABLE_TO_REMOVE_REPLACED 1175L")]
        public const int ERROR_UNABLE_TO_REMOVE_REPLACED = 1175;

        [NativeTypeName("#define ERROR_UNABLE_TO_MOVE_REPLACEMENT 1176L")]
        public const int ERROR_UNABLE_TO_MOVE_REPLACEMENT = 1176;

        [NativeTypeName("#define ERROR_UNABLE_TO_MOVE_REPLACEMENT_2 1177L")]
        public const int ERROR_UNABLE_TO_MOVE_REPLACEMENT_2 = 1177;

        [NativeTypeName("#define ERROR_JOURNAL_DELETE_IN_PROGRESS 1178L")]
        public const int ERROR_JOURNAL_DELETE_IN_PROGRESS = 1178;

        [NativeTypeName("#define ERROR_JOURNAL_NOT_ACTIVE 1179L")]
        public const int ERROR_JOURNAL_NOT_ACTIVE = 1179;

        [NativeTypeName("#define ERROR_POTENTIAL_FILE_FOUND 1180L")]
        public const int ERROR_POTENTIAL_FILE_FOUND = 1180;

        [NativeTypeName("#define ERROR_JOURNAL_ENTRY_DELETED 1181L")]
        public const int ERROR_JOURNAL_ENTRY_DELETED = 1181;

        [NativeTypeName("#define ERROR_SHUTDOWN_IS_SCHEDULED 1190L")]
        public const int ERROR_SHUTDOWN_IS_SCHEDULED = 1190;

        [NativeTypeName("#define ERROR_SHUTDOWN_USERS_LOGGED_ON 1191L")]
        public const int ERROR_SHUTDOWN_USERS_LOGGED_ON = 1191;

        [NativeTypeName("#define ERROR_BAD_DEVICE 1200L")]
        public const int ERROR_BAD_DEVICE = 1200;

        [NativeTypeName("#define ERROR_CONNECTION_UNAVAIL 1201L")]
        public const int ERROR_CONNECTION_UNAVAIL = 1201;

        [NativeTypeName("#define ERROR_DEVICE_ALREADY_REMEMBERED 1202L")]
        public const int ERROR_DEVICE_ALREADY_REMEMBERED = 1202;

        [NativeTypeName("#define ERROR_NO_NET_OR_BAD_PATH 1203L")]
        public const int ERROR_NO_NET_OR_BAD_PATH = 1203;

        [NativeTypeName("#define ERROR_BAD_PROVIDER 1204L")]
        public const int ERROR_BAD_PROVIDER = 1204;

        [NativeTypeName("#define ERROR_CANNOT_OPEN_PROFILE 1205L")]
        public const int ERROR_CANNOT_OPEN_PROFILE = 1205;

        [NativeTypeName("#define ERROR_BAD_PROFILE 1206L")]
        public const int ERROR_BAD_PROFILE = 1206;

        [NativeTypeName("#define ERROR_NOT_CONTAINER 1207L")]
        public const int ERROR_NOT_CONTAINER = 1207;

        [NativeTypeName("#define ERROR_EXTENDED_ERROR 1208L")]
        public const int ERROR_EXTENDED_ERROR = 1208;

        [NativeTypeName("#define ERROR_INVALID_GROUPNAME 1209L")]
        public const int ERROR_INVALID_GROUPNAME = 1209;

        [NativeTypeName("#define ERROR_INVALID_COMPUTERNAME 1210L")]
        public const int ERROR_INVALID_COMPUTERNAME = 1210;

        [NativeTypeName("#define ERROR_INVALID_EVENTNAME 1211L")]
        public const int ERROR_INVALID_EVENTNAME = 1211;

        [NativeTypeName("#define ERROR_INVALID_DOMAINNAME 1212L")]
        public const int ERROR_INVALID_DOMAINNAME = 1212;

        [NativeTypeName("#define ERROR_INVALID_SERVICENAME 1213L")]
        public const int ERROR_INVALID_SERVICENAME = 1213;

        [NativeTypeName("#define ERROR_INVALID_NETNAME 1214L")]
        public const int ERROR_INVALID_NETNAME = 1214;

        [NativeTypeName("#define ERROR_INVALID_SHARENAME 1215L")]
        public const int ERROR_INVALID_SHARENAME = 1215;

        [NativeTypeName("#define ERROR_INVALID_PASSWORDNAME 1216L")]
        public const int ERROR_INVALID_PASSWORDNAME = 1216;

        [NativeTypeName("#define ERROR_INVALID_MESSAGENAME 1217L")]
        public const int ERROR_INVALID_MESSAGENAME = 1217;

        [NativeTypeName("#define ERROR_INVALID_MESSAGEDEST 1218L")]
        public const int ERROR_INVALID_MESSAGEDEST = 1218;

        [NativeTypeName("#define ERROR_SESSION_CREDENTIAL_CONFLICT 1219L")]
        public const int ERROR_SESSION_CREDENTIAL_CONFLICT = 1219;

        [NativeTypeName("#define ERROR_REMOTE_SESSION_LIMIT_EXCEEDED 1220L")]
        public const int ERROR_REMOTE_SESSION_LIMIT_EXCEEDED = 1220;

        [NativeTypeName("#define ERROR_DUP_DOMAINNAME 1221L")]
        public const int ERROR_DUP_DOMAINNAME = 1221;

        [NativeTypeName("#define ERROR_NO_NETWORK 1222L")]
        public const int ERROR_NO_NETWORK = 1222;

        [NativeTypeName("#define ERROR_CANCELLED 1223L")]
        public const int ERROR_CANCELLED = 1223;

        [NativeTypeName("#define ERROR_USER_MAPPED_FILE 1224L")]
        public const int ERROR_USER_MAPPED_FILE = 1224;

        [NativeTypeName("#define ERROR_CONNECTION_REFUSED 1225L")]
        public const int ERROR_CONNECTION_REFUSED = 1225;

        [NativeTypeName("#define ERROR_GRACEFUL_DISCONNECT 1226L")]
        public const int ERROR_GRACEFUL_DISCONNECT = 1226;

        [NativeTypeName("#define ERROR_ADDRESS_ALREADY_ASSOCIATED 1227L")]
        public const int ERROR_ADDRESS_ALREADY_ASSOCIATED = 1227;

        [NativeTypeName("#define ERROR_ADDRESS_NOT_ASSOCIATED 1228L")]
        public const int ERROR_ADDRESS_NOT_ASSOCIATED = 1228;

        [NativeTypeName("#define ERROR_CONNECTION_INVALID 1229L")]
        public const int ERROR_CONNECTION_INVALID = 1229;

        [NativeTypeName("#define ERROR_CONNECTION_ACTIVE 1230L")]
        public const int ERROR_CONNECTION_ACTIVE = 1230;

        [NativeTypeName("#define ERROR_NETWORK_UNREACHABLE 1231L")]
        public const int ERROR_NETWORK_UNREACHABLE = 1231;

        [NativeTypeName("#define ERROR_HOST_UNREACHABLE 1232L")]
        public const int ERROR_HOST_UNREACHABLE = 1232;

        [NativeTypeName("#define ERROR_PROTOCOL_UNREACHABLE 1233L")]
        public const int ERROR_PROTOCOL_UNREACHABLE = 1233;

        [NativeTypeName("#define ERROR_PORT_UNREACHABLE 1234L")]
        public const int ERROR_PORT_UNREACHABLE = 1234;

        [NativeTypeName("#define ERROR_REQUEST_ABORTED 1235L")]
        public const int ERROR_REQUEST_ABORTED = 1235;

        [NativeTypeName("#define ERROR_CONNECTION_ABORTED 1236L")]
        public const int ERROR_CONNECTION_ABORTED = 1236;

        [NativeTypeName("#define ERROR_RETRY 1237L")]
        public const int ERROR_RETRY = 1237;

        [NativeTypeName("#define ERROR_CONNECTION_COUNT_LIMIT 1238L")]
        public const int ERROR_CONNECTION_COUNT_LIMIT = 1238;

        [NativeTypeName("#define ERROR_LOGIN_TIME_RESTRICTION 1239L")]
        public const int ERROR_LOGIN_TIME_RESTRICTION = 1239;

        [NativeTypeName("#define ERROR_LOGIN_WKSTA_RESTRICTION 1240L")]
        public const int ERROR_LOGIN_WKSTA_RESTRICTION = 1240;

        [NativeTypeName("#define ERROR_INCORRECT_ADDRESS 1241L")]
        public const int ERROR_INCORRECT_ADDRESS = 1241;

        [NativeTypeName("#define ERROR_ALREADY_REGISTERED 1242L")]
        public const int ERROR_ALREADY_REGISTERED = 1242;

        [NativeTypeName("#define ERROR_SERVICE_NOT_FOUND 1243L")]
        public const int ERROR_SERVICE_NOT_FOUND = 1243;

        [NativeTypeName("#define ERROR_NOT_AUTHENTICATED 1244L")]
        public const int ERROR_NOT_AUTHENTICATED = 1244;

        [NativeTypeName("#define ERROR_NOT_LOGGED_ON 1245L")]
        public const int ERROR_NOT_LOGGED_ON = 1245;

        [NativeTypeName("#define ERROR_CONTINUE 1246L")]
        public const int ERROR_CONTINUE = 1246;

        [NativeTypeName("#define ERROR_ALREADY_INITIALIZED 1247L")]
        public const int ERROR_ALREADY_INITIALIZED = 1247;

        [NativeTypeName("#define ERROR_NO_MORE_DEVICES 1248L")]
        public const int ERROR_NO_MORE_DEVICES = 1248;

        [NativeTypeName("#define ERROR_NO_SUCH_SITE 1249L")]
        public const int ERROR_NO_SUCH_SITE = 1249;

        [NativeTypeName("#define ERROR_DOMAIN_CONTROLLER_EXISTS 1250L")]
        public const int ERROR_DOMAIN_CONTROLLER_EXISTS = 1250;

        [NativeTypeName("#define ERROR_ONLY_IF_CONNECTED 1251L")]
        public const int ERROR_ONLY_IF_CONNECTED = 1251;

        [NativeTypeName("#define ERROR_OVERRIDE_NOCHANGES 1252L")]
        public const int ERROR_OVERRIDE_NOCHANGES = 1252;

        [NativeTypeName("#define ERROR_BAD_USER_PROFILE 1253L")]
        public const int ERROR_BAD_USER_PROFILE = 1253;

        [NativeTypeName("#define ERROR_NOT_SUPPORTED_ON_SBS 1254L")]
        public const int ERROR_NOT_SUPPORTED_ON_SBS = 1254;

        [NativeTypeName("#define ERROR_SERVER_SHUTDOWN_IN_PROGRESS 1255L")]
        public const int ERROR_SERVER_SHUTDOWN_IN_PROGRESS = 1255;

        [NativeTypeName("#define ERROR_HOST_DOWN 1256L")]
        public const int ERROR_HOST_DOWN = 1256;

        [NativeTypeName("#define ERROR_NON_ACCOUNT_SID 1257L")]
        public const int ERROR_NON_ACCOUNT_SID = 1257;

        [NativeTypeName("#define ERROR_NON_DOMAIN_SID 1258L")]
        public const int ERROR_NON_DOMAIN_SID = 1258;

        [NativeTypeName("#define ERROR_APPHELP_BLOCK 1259L")]
        public const int ERROR_APPHELP_BLOCK = 1259;

        [NativeTypeName("#define ERROR_ACCESS_DISABLED_BY_POLICY 1260L")]
        public const int ERROR_ACCESS_DISABLED_BY_POLICY = 1260;

        [NativeTypeName("#define ERROR_REG_NAT_CONSUMPTION 1261L")]
        public const int ERROR_REG_NAT_CONSUMPTION = 1261;

        [NativeTypeName("#define ERROR_CSCSHARE_OFFLINE 1262L")]
        public const int ERROR_CSCSHARE_OFFLINE = 1262;

        [NativeTypeName("#define ERROR_PKINIT_FAILURE 1263L")]
        public const int ERROR_PKINIT_FAILURE = 1263;

        [NativeTypeName("#define ERROR_SMARTCARD_SUBSYSTEM_FAILURE 1264L")]
        public const int ERROR_SMARTCARD_SUBSYSTEM_FAILURE = 1264;

        [NativeTypeName("#define ERROR_DOWNGRADE_DETECTED 1265L")]
        public const int ERROR_DOWNGRADE_DETECTED = 1265;

        [NativeTypeName("#define ERROR_MACHINE_LOCKED 1271L")]
        public const int ERROR_MACHINE_LOCKED = 1271;

        [NativeTypeName("#define ERROR_SMB_GUEST_LOGON_BLOCKED 1272L")]
        public const int ERROR_SMB_GUEST_LOGON_BLOCKED = 1272;

        [NativeTypeName("#define ERROR_CALLBACK_SUPPLIED_INVALID_DATA 1273L")]
        public const int ERROR_CALLBACK_SUPPLIED_INVALID_DATA = 1273;

        [NativeTypeName("#define ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED 1274L")]
        public const int ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED = 1274;

        [NativeTypeName("#define ERROR_DRIVER_BLOCKED 1275L")]
        public const int ERROR_DRIVER_BLOCKED = 1275;

        [NativeTypeName("#define ERROR_INVALID_IMPORT_OF_NON_DLL 1276L")]
        public const int ERROR_INVALID_IMPORT_OF_NON_DLL = 1276;

        [NativeTypeName("#define ERROR_ACCESS_DISABLED_WEBBLADE 1277L")]
        public const int ERROR_ACCESS_DISABLED_WEBBLADE = 1277;

        [NativeTypeName("#define ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER 1278L")]
        public const int ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER = 1278;

        [NativeTypeName("#define ERROR_RECOVERY_FAILURE 1279L")]
        public const int ERROR_RECOVERY_FAILURE = 1279;

        [NativeTypeName("#define ERROR_ALREADY_FIBER 1280L")]
        public const int ERROR_ALREADY_FIBER = 1280;

        [NativeTypeName("#define ERROR_ALREADY_THREAD 1281L")]
        public const int ERROR_ALREADY_THREAD = 1281;

        [NativeTypeName("#define ERROR_STACK_BUFFER_OVERRUN 1282L")]
        public const int ERROR_STACK_BUFFER_OVERRUN = 1282;

        [NativeTypeName("#define ERROR_PARAMETER_QUOTA_EXCEEDED 1283L")]
        public const int ERROR_PARAMETER_QUOTA_EXCEEDED = 1283;

        [NativeTypeName("#define ERROR_DEBUGGER_INACTIVE 1284L")]
        public const int ERROR_DEBUGGER_INACTIVE = 1284;

        [NativeTypeName("#define ERROR_DELAY_LOAD_FAILED 1285L")]
        public const int ERROR_DELAY_LOAD_FAILED = 1285;

        [NativeTypeName("#define ERROR_VDM_DISALLOWED 1286L")]
        public const int ERROR_VDM_DISALLOWED = 1286;

        [NativeTypeName("#define ERROR_UNIDENTIFIED_ERROR 1287L")]
        public const int ERROR_UNIDENTIFIED_ERROR = 1287;

        [NativeTypeName("#define ERROR_INVALID_CRUNTIME_PARAMETER 1288L")]
        public const int ERROR_INVALID_CRUNTIME_PARAMETER = 1288;

        [NativeTypeName("#define ERROR_BEYOND_VDL 1289L")]
        public const int ERROR_BEYOND_VDL = 1289;

        [NativeTypeName("#define ERROR_INCOMPATIBLE_SERVICE_SID_TYPE 1290L")]
        public const int ERROR_INCOMPATIBLE_SERVICE_SID_TYPE = 1290;

        [NativeTypeName("#define ERROR_DRIVER_PROCESS_TERMINATED 1291L")]
        public const int ERROR_DRIVER_PROCESS_TERMINATED = 1291;

        [NativeTypeName("#define ERROR_IMPLEMENTATION_LIMIT 1292L")]
        public const int ERROR_IMPLEMENTATION_LIMIT = 1292;

        [NativeTypeName("#define ERROR_PROCESS_IS_PROTECTED 1293L")]
        public const int ERROR_PROCESS_IS_PROTECTED = 1293;

        [NativeTypeName("#define ERROR_SERVICE_NOTIFY_CLIENT_LAGGING 1294L")]
        public const int ERROR_SERVICE_NOTIFY_CLIENT_LAGGING = 1294;

        [NativeTypeName("#define ERROR_DISK_QUOTA_EXCEEDED 1295L")]
        public const int ERROR_DISK_QUOTA_EXCEEDED = 1295;

        [NativeTypeName("#define ERROR_CONTENT_BLOCKED 1296L")]
        public const int ERROR_CONTENT_BLOCKED = 1296;

        [NativeTypeName("#define ERROR_INCOMPATIBLE_SERVICE_PRIVILEGE 1297L")]
        public const int ERROR_INCOMPATIBLE_SERVICE_PRIVILEGE = 1297;

        [NativeTypeName("#define ERROR_APP_HANG 1298L")]
        public const int ERROR_APP_HANG = 1298;

        [NativeTypeName("#define ERROR_INVALID_LABEL 1299L")]
        public const int ERROR_INVALID_LABEL = 1299;

        [NativeTypeName("#define ERROR_NOT_ALL_ASSIGNED 1300L")]
        public const int ERROR_NOT_ALL_ASSIGNED = 1300;

        [NativeTypeName("#define ERROR_SOME_NOT_MAPPED 1301L")]
        public const int ERROR_SOME_NOT_MAPPED = 1301;

        [NativeTypeName("#define ERROR_NO_QUOTAS_FOR_ACCOUNT 1302L")]
        public const int ERROR_NO_QUOTAS_FOR_ACCOUNT = 1302;

        [NativeTypeName("#define ERROR_LOCAL_USER_SESSION_KEY 1303L")]
        public const int ERROR_LOCAL_USER_SESSION_KEY = 1303;

        [NativeTypeName("#define ERROR_NULL_LM_PASSWORD 1304L")]
        public const int ERROR_NULL_LM_PASSWORD = 1304;

        [NativeTypeName("#define ERROR_UNKNOWN_REVISION 1305L")]
        public const int ERROR_UNKNOWN_REVISION = 1305;

        [NativeTypeName("#define ERROR_REVISION_MISMATCH 1306L")]
        public const int ERROR_REVISION_MISMATCH = 1306;

        [NativeTypeName("#define ERROR_INVALID_OWNER 1307L")]
        public const int ERROR_INVALID_OWNER = 1307;

        [NativeTypeName("#define ERROR_INVALID_PRIMARY_GROUP 1308L")]
        public const int ERROR_INVALID_PRIMARY_GROUP = 1308;

        [NativeTypeName("#define ERROR_NO_IMPERSONATION_TOKEN 1309L")]
        public const int ERROR_NO_IMPERSONATION_TOKEN = 1309;

        [NativeTypeName("#define ERROR_CANT_DISABLE_MANDATORY 1310L")]
        public const int ERROR_CANT_DISABLE_MANDATORY = 1310;

        [NativeTypeName("#define ERROR_NO_LOGON_SERVERS 1311L")]
        public const int ERROR_NO_LOGON_SERVERS = 1311;

        [NativeTypeName("#define ERROR_NO_SUCH_LOGON_SESSION 1312L")]
        public const int ERROR_NO_SUCH_LOGON_SESSION = 1312;

        [NativeTypeName("#define ERROR_NO_SUCH_PRIVILEGE 1313L")]
        public const int ERROR_NO_SUCH_PRIVILEGE = 1313;

        [NativeTypeName("#define ERROR_PRIVILEGE_NOT_HELD 1314L")]
        public const int ERROR_PRIVILEGE_NOT_HELD = 1314;

        [NativeTypeName("#define ERROR_INVALID_ACCOUNT_NAME 1315L")]
        public const int ERROR_INVALID_ACCOUNT_NAME = 1315;

        [NativeTypeName("#define ERROR_USER_EXISTS 1316L")]
        public const int ERROR_USER_EXISTS = 1316;

        [NativeTypeName("#define ERROR_NO_SUCH_USER 1317L")]
        public const int ERROR_NO_SUCH_USER = 1317;

        [NativeTypeName("#define ERROR_GROUP_EXISTS 1318L")]
        public const int ERROR_GROUP_EXISTS = 1318;

        [NativeTypeName("#define ERROR_NO_SUCH_GROUP 1319L")]
        public const int ERROR_NO_SUCH_GROUP = 1319;

        [NativeTypeName("#define ERROR_MEMBER_IN_GROUP 1320L")]
        public const int ERROR_MEMBER_IN_GROUP = 1320;

        [NativeTypeName("#define ERROR_MEMBER_NOT_IN_GROUP 1321L")]
        public const int ERROR_MEMBER_NOT_IN_GROUP = 1321;

        [NativeTypeName("#define ERROR_LAST_ADMIN 1322L")]
        public const int ERROR_LAST_ADMIN = 1322;

        [NativeTypeName("#define ERROR_WRONG_PASSWORD 1323L")]
        public const int ERROR_WRONG_PASSWORD = 1323;

        [NativeTypeName("#define ERROR_ILL_FORMED_PASSWORD 1324L")]
        public const int ERROR_ILL_FORMED_PASSWORD = 1324;

        [NativeTypeName("#define ERROR_PASSWORD_RESTRICTION 1325L")]
        public const int ERROR_PASSWORD_RESTRICTION = 1325;

        [NativeTypeName("#define ERROR_LOGON_FAILURE 1326L")]
        public const int ERROR_LOGON_FAILURE = 1326;

        [NativeTypeName("#define ERROR_ACCOUNT_RESTRICTION 1327L")]
        public const int ERROR_ACCOUNT_RESTRICTION = 1327;

        [NativeTypeName("#define ERROR_INVALID_LOGON_HOURS 1328L")]
        public const int ERROR_INVALID_LOGON_HOURS = 1328;

        [NativeTypeName("#define ERROR_INVALID_WORKSTATION 1329L")]
        public const int ERROR_INVALID_WORKSTATION = 1329;

        [NativeTypeName("#define ERROR_PASSWORD_EXPIRED 1330L")]
        public const int ERROR_PASSWORD_EXPIRED = 1330;

        [NativeTypeName("#define ERROR_ACCOUNT_DISABLED 1331L")]
        public const int ERROR_ACCOUNT_DISABLED = 1331;

        [NativeTypeName("#define ERROR_NONE_MAPPED 1332L")]
        public const int ERROR_NONE_MAPPED = 1332;

        [NativeTypeName("#define ERROR_TOO_MANY_LUIDS_REQUESTED 1333L")]
        public const int ERROR_TOO_MANY_LUIDS_REQUESTED = 1333;

        [NativeTypeName("#define ERROR_LUIDS_EXHAUSTED 1334L")]
        public const int ERROR_LUIDS_EXHAUSTED = 1334;

        [NativeTypeName("#define ERROR_INVALID_SUB_AUTHORITY 1335L")]
        public const int ERROR_INVALID_SUB_AUTHORITY = 1335;

        [NativeTypeName("#define ERROR_INVALID_ACL 1336L")]
        public const int ERROR_INVALID_ACL = 1336;

        [NativeTypeName("#define ERROR_INVALID_SID 1337L")]
        public const int ERROR_INVALID_SID = 1337;

        [NativeTypeName("#define ERROR_INVALID_SECURITY_DESCR 1338L")]
        public const int ERROR_INVALID_SECURITY_DESCR = 1338;

        [NativeTypeName("#define ERROR_BAD_INHERITANCE_ACL 1340L")]
        public const int ERROR_BAD_INHERITANCE_ACL = 1340;

        [NativeTypeName("#define ERROR_SERVER_DISABLED 1341L")]
        public const int ERROR_SERVER_DISABLED = 1341;

        [NativeTypeName("#define ERROR_SERVER_NOT_DISABLED 1342L")]
        public const int ERROR_SERVER_NOT_DISABLED = 1342;

        [NativeTypeName("#define ERROR_INVALID_ID_AUTHORITY 1343L")]
        public const int ERROR_INVALID_ID_AUTHORITY = 1343;

        [NativeTypeName("#define ERROR_ALLOTTED_SPACE_EXCEEDED 1344L")]
        public const int ERROR_ALLOTTED_SPACE_EXCEEDED = 1344;

        [NativeTypeName("#define ERROR_INVALID_GROUP_ATTRIBUTES 1345L")]
        public const int ERROR_INVALID_GROUP_ATTRIBUTES = 1345;

        [NativeTypeName("#define ERROR_BAD_IMPERSONATION_LEVEL 1346L")]
        public const int ERROR_BAD_IMPERSONATION_LEVEL = 1346;

        [NativeTypeName("#define ERROR_CANT_OPEN_ANONYMOUS 1347L")]
        public const int ERROR_CANT_OPEN_ANONYMOUS = 1347;

        [NativeTypeName("#define ERROR_BAD_VALIDATION_CLASS 1348L")]
        public const int ERROR_BAD_VALIDATION_CLASS = 1348;

        [NativeTypeName("#define ERROR_BAD_TOKEN_TYPE 1349L")]
        public const int ERROR_BAD_TOKEN_TYPE = 1349;

        [NativeTypeName("#define ERROR_NO_SECURITY_ON_OBJECT 1350L")]
        public const int ERROR_NO_SECURITY_ON_OBJECT = 1350;

        [NativeTypeName("#define ERROR_CANT_ACCESS_DOMAIN_INFO 1351L")]
        public const int ERROR_CANT_ACCESS_DOMAIN_INFO = 1351;

        [NativeTypeName("#define ERROR_INVALID_SERVER_STATE 1352L")]
        public const int ERROR_INVALID_SERVER_STATE = 1352;

        [NativeTypeName("#define ERROR_INVALID_DOMAIN_STATE 1353L")]
        public const int ERROR_INVALID_DOMAIN_STATE = 1353;

        [NativeTypeName("#define ERROR_INVALID_DOMAIN_ROLE 1354L")]
        public const int ERROR_INVALID_DOMAIN_ROLE = 1354;

        [NativeTypeName("#define ERROR_NO_SUCH_DOMAIN 1355L")]
        public const int ERROR_NO_SUCH_DOMAIN = 1355;

        [NativeTypeName("#define ERROR_DOMAIN_EXISTS 1356L")]
        public const int ERROR_DOMAIN_EXISTS = 1356;

        [NativeTypeName("#define ERROR_DOMAIN_LIMIT_EXCEEDED 1357L")]
        public const int ERROR_DOMAIN_LIMIT_EXCEEDED = 1357;

        [NativeTypeName("#define ERROR_INTERNAL_DB_CORRUPTION 1358L")]
        public const int ERROR_INTERNAL_DB_CORRUPTION = 1358;

        [NativeTypeName("#define ERROR_INTERNAL_ERROR 1359L")]
        public const int ERROR_INTERNAL_ERROR = 1359;

        [NativeTypeName("#define ERROR_GENERIC_NOT_MAPPED 1360L")]
        public const int ERROR_GENERIC_NOT_MAPPED = 1360;

        [NativeTypeName("#define ERROR_BAD_DESCRIPTOR_FORMAT 1361L")]
        public const int ERROR_BAD_DESCRIPTOR_FORMAT = 1361;

        [NativeTypeName("#define ERROR_NOT_LOGON_PROCESS 1362L")]
        public const int ERROR_NOT_LOGON_PROCESS = 1362;

        [NativeTypeName("#define ERROR_LOGON_SESSION_EXISTS 1363L")]
        public const int ERROR_LOGON_SESSION_EXISTS = 1363;

        [NativeTypeName("#define ERROR_NO_SUCH_PACKAGE 1364L")]
        public const int ERROR_NO_SUCH_PACKAGE = 1364;

        [NativeTypeName("#define ERROR_BAD_LOGON_SESSION_STATE 1365L")]
        public const int ERROR_BAD_LOGON_SESSION_STATE = 1365;

        [NativeTypeName("#define ERROR_LOGON_SESSION_COLLISION 1366L")]
        public const int ERROR_LOGON_SESSION_COLLISION = 1366;

        [NativeTypeName("#define ERROR_INVALID_LOGON_TYPE 1367L")]
        public const int ERROR_INVALID_LOGON_TYPE = 1367;

        [NativeTypeName("#define ERROR_CANNOT_IMPERSONATE 1368L")]
        public const int ERROR_CANNOT_IMPERSONATE = 1368;

        [NativeTypeName("#define ERROR_RXACT_INVALID_STATE 1369L")]
        public const int ERROR_RXACT_INVALID_STATE = 1369;

        [NativeTypeName("#define ERROR_RXACT_COMMIT_FAILURE 1370L")]
        public const int ERROR_RXACT_COMMIT_FAILURE = 1370;

        [NativeTypeName("#define ERROR_SPECIAL_ACCOUNT 1371L")]
        public const int ERROR_SPECIAL_ACCOUNT = 1371;

        [NativeTypeName("#define ERROR_SPECIAL_GROUP 1372L")]
        public const int ERROR_SPECIAL_GROUP = 1372;

        [NativeTypeName("#define ERROR_SPECIAL_USER 1373L")]
        public const int ERROR_SPECIAL_USER = 1373;

        [NativeTypeName("#define ERROR_MEMBERS_PRIMARY_GROUP 1374L")]
        public const int ERROR_MEMBERS_PRIMARY_GROUP = 1374;

        [NativeTypeName("#define ERROR_TOKEN_ALREADY_IN_USE 1375L")]
        public const int ERROR_TOKEN_ALREADY_IN_USE = 1375;

        [NativeTypeName("#define ERROR_NO_SUCH_ALIAS 1376L")]
        public const int ERROR_NO_SUCH_ALIAS = 1376;

        [NativeTypeName("#define ERROR_MEMBER_NOT_IN_ALIAS 1377L")]
        public const int ERROR_MEMBER_NOT_IN_ALIAS = 1377;

        [NativeTypeName("#define ERROR_MEMBER_IN_ALIAS 1378L")]
        public const int ERROR_MEMBER_IN_ALIAS = 1378;

        [NativeTypeName("#define ERROR_ALIAS_EXISTS 1379L")]
        public const int ERROR_ALIAS_EXISTS = 1379;

        [NativeTypeName("#define ERROR_LOGON_NOT_GRANTED 1380L")]
        public const int ERROR_LOGON_NOT_GRANTED = 1380;

        [NativeTypeName("#define ERROR_TOO_MANY_SECRETS 1381L")]
        public const int ERROR_TOO_MANY_SECRETS = 1381;

        [NativeTypeName("#define ERROR_SECRET_TOO_LONG 1382L")]
        public const int ERROR_SECRET_TOO_LONG = 1382;

        [NativeTypeName("#define ERROR_INTERNAL_DB_ERROR 1383L")]
        public const int ERROR_INTERNAL_DB_ERROR = 1383;

        [NativeTypeName("#define ERROR_TOO_MANY_CONTEXT_IDS 1384L")]
        public const int ERROR_TOO_MANY_CONTEXT_IDS = 1384;

        [NativeTypeName("#define ERROR_LOGON_TYPE_NOT_GRANTED 1385L")]
        public const int ERROR_LOGON_TYPE_NOT_GRANTED = 1385;

        [NativeTypeName("#define ERROR_NT_CROSS_ENCRYPTION_REQUIRED 1386L")]
        public const int ERROR_NT_CROSS_ENCRYPTION_REQUIRED = 1386;

        [NativeTypeName("#define ERROR_NO_SUCH_MEMBER 1387L")]
        public const int ERROR_NO_SUCH_MEMBER = 1387;

        [NativeTypeName("#define ERROR_INVALID_MEMBER 1388L")]
        public const int ERROR_INVALID_MEMBER = 1388;

        [NativeTypeName("#define ERROR_TOO_MANY_SIDS 1389L")]
        public const int ERROR_TOO_MANY_SIDS = 1389;

        [NativeTypeName("#define ERROR_LM_CROSS_ENCRYPTION_REQUIRED 1390L")]
        public const int ERROR_LM_CROSS_ENCRYPTION_REQUIRED = 1390;

        [NativeTypeName("#define ERROR_NO_INHERITANCE 1391L")]
        public const int ERROR_NO_INHERITANCE = 1391;

        [NativeTypeName("#define ERROR_FILE_CORRUPT 1392L")]
        public const int ERROR_FILE_CORRUPT = 1392;

        [NativeTypeName("#define ERROR_DISK_CORRUPT 1393L")]
        public const int ERROR_DISK_CORRUPT = 1393;

        [NativeTypeName("#define ERROR_NO_USER_SESSION_KEY 1394L")]
        public const int ERROR_NO_USER_SESSION_KEY = 1394;

        [NativeTypeName("#define ERROR_LICENSE_QUOTA_EXCEEDED 1395L")]
        public const int ERROR_LICENSE_QUOTA_EXCEEDED = 1395;

        [NativeTypeName("#define ERROR_WRONG_TARGET_NAME 1396L")]
        public const int ERROR_WRONG_TARGET_NAME = 1396;

        [NativeTypeName("#define ERROR_MUTUAL_AUTH_FAILED 1397L")]
        public const int ERROR_MUTUAL_AUTH_FAILED = 1397;

        [NativeTypeName("#define ERROR_TIME_SKEW 1398L")]
        public const int ERROR_TIME_SKEW = 1398;

        [NativeTypeName("#define ERROR_CURRENT_DOMAIN_NOT_ALLOWED 1399L")]
        public const int ERROR_CURRENT_DOMAIN_NOT_ALLOWED = 1399;

        [NativeTypeName("#define ERROR_INVALID_WINDOW_HANDLE 1400L")]
        public const int ERROR_INVALID_WINDOW_HANDLE = 1400;

        [NativeTypeName("#define ERROR_INVALID_MENU_HANDLE 1401L")]
        public const int ERROR_INVALID_MENU_HANDLE = 1401;

        [NativeTypeName("#define ERROR_INVALID_CURSOR_HANDLE 1402L")]
        public const int ERROR_INVALID_CURSOR_HANDLE = 1402;

        [NativeTypeName("#define ERROR_INVALID_ACCEL_HANDLE 1403L")]
        public const int ERROR_INVALID_ACCEL_HANDLE = 1403;

        [NativeTypeName("#define ERROR_INVALID_HOOK_HANDLE 1404L")]
        public const int ERROR_INVALID_HOOK_HANDLE = 1404;

        [NativeTypeName("#define ERROR_INVALID_DWP_HANDLE 1405L")]
        public const int ERROR_INVALID_DWP_HANDLE = 1405;

        [NativeTypeName("#define ERROR_TLW_WITH_WSCHILD 1406L")]
        public const int ERROR_TLW_WITH_WSCHILD = 1406;

        [NativeTypeName("#define ERROR_CANNOT_FIND_WND_CLASS 1407L")]
        public const int ERROR_CANNOT_FIND_WND_CLASS = 1407;

        [NativeTypeName("#define ERROR_WINDOW_OF_OTHER_THREAD 1408L")]
        public const int ERROR_WINDOW_OF_OTHER_THREAD = 1408;

        [NativeTypeName("#define ERROR_HOTKEY_ALREADY_REGISTERED 1409L")]
        public const int ERROR_HOTKEY_ALREADY_REGISTERED = 1409;

        [NativeTypeName("#define ERROR_CLASS_ALREADY_EXISTS 1410L")]
        public const int ERROR_CLASS_ALREADY_EXISTS = 1410;

        [NativeTypeName("#define ERROR_CLASS_DOES_NOT_EXIST 1411L")]
        public const int ERROR_CLASS_DOES_NOT_EXIST = 1411;

        [NativeTypeName("#define ERROR_CLASS_HAS_WINDOWS 1412L")]
        public const int ERROR_CLASS_HAS_WINDOWS = 1412;

        [NativeTypeName("#define ERROR_INVALID_INDEX 1413L")]
        public const int ERROR_INVALID_INDEX = 1413;

        [NativeTypeName("#define ERROR_INVALID_ICON_HANDLE 1414L")]
        public const int ERROR_INVALID_ICON_HANDLE = 1414;

        [NativeTypeName("#define ERROR_PRIVATE_DIALOG_INDEX 1415L")]
        public const int ERROR_PRIVATE_DIALOG_INDEX = 1415;

        [NativeTypeName("#define ERROR_LISTBOX_ID_NOT_FOUND 1416L")]
        public const int ERROR_LISTBOX_ID_NOT_FOUND = 1416;

        [NativeTypeName("#define ERROR_NO_WILDCARD_CHARACTERS 1417L")]
        public const int ERROR_NO_WILDCARD_CHARACTERS = 1417;

        [NativeTypeName("#define ERROR_CLIPBOARD_NOT_OPEN 1418L")]
        public const int ERROR_CLIPBOARD_NOT_OPEN = 1418;

        [NativeTypeName("#define ERROR_HOTKEY_NOT_REGISTERED 1419L")]
        public const int ERROR_HOTKEY_NOT_REGISTERED = 1419;

        [NativeTypeName("#define ERROR_WINDOW_NOT_DIALOG 1420L")]
        public const int ERROR_WINDOW_NOT_DIALOG = 1420;

        [NativeTypeName("#define ERROR_CONTROL_ID_NOT_FOUND 1421L")]
        public const int ERROR_CONTROL_ID_NOT_FOUND = 1421;

        [NativeTypeName("#define ERROR_INVALID_COMBOBOX_MESSAGE 1422L")]
        public const int ERROR_INVALID_COMBOBOX_MESSAGE = 1422;

        [NativeTypeName("#define ERROR_WINDOW_NOT_COMBOBOX 1423L")]
        public const int ERROR_WINDOW_NOT_COMBOBOX = 1423;

        [NativeTypeName("#define ERROR_INVALID_EDIT_HEIGHT 1424L")]
        public const int ERROR_INVALID_EDIT_HEIGHT = 1424;

        [NativeTypeName("#define ERROR_DC_NOT_FOUND 1425L")]
        public const int ERROR_DC_NOT_FOUND = 1425;

        [NativeTypeName("#define ERROR_INVALID_HOOK_FILTER 1426L")]
        public const int ERROR_INVALID_HOOK_FILTER = 1426;

        [NativeTypeName("#define ERROR_INVALID_FILTER_PROC 1427L")]
        public const int ERROR_INVALID_FILTER_PROC = 1427;

        [NativeTypeName("#define ERROR_HOOK_NEEDS_HMOD 1428L")]
        public const int ERROR_HOOK_NEEDS_HMOD = 1428;

        [NativeTypeName("#define ERROR_GLOBAL_ONLY_HOOK 1429L")]
        public const int ERROR_GLOBAL_ONLY_HOOK = 1429;

        [NativeTypeName("#define ERROR_JOURNAL_HOOK_SET 1430L")]
        public const int ERROR_JOURNAL_HOOK_SET = 1430;

        [NativeTypeName("#define ERROR_HOOK_NOT_INSTALLED 1431L")]
        public const int ERROR_HOOK_NOT_INSTALLED = 1431;

        [NativeTypeName("#define ERROR_INVALID_LB_MESSAGE 1432L")]
        public const int ERROR_INVALID_LB_MESSAGE = 1432;

        [NativeTypeName("#define ERROR_SETCOUNT_ON_BAD_LB 1433L")]
        public const int ERROR_SETCOUNT_ON_BAD_LB = 1433;

        [NativeTypeName("#define ERROR_LB_WITHOUT_TABSTOPS 1434L")]
        public const int ERROR_LB_WITHOUT_TABSTOPS = 1434;

        [NativeTypeName("#define ERROR_DESTROY_OBJECT_OF_OTHER_THREAD 1435L")]
        public const int ERROR_DESTROY_OBJECT_OF_OTHER_THREAD = 1435;

        [NativeTypeName("#define ERROR_CHILD_WINDOW_MENU 1436L")]
        public const int ERROR_CHILD_WINDOW_MENU = 1436;

        [NativeTypeName("#define ERROR_NO_SYSTEM_MENU 1437L")]
        public const int ERROR_NO_SYSTEM_MENU = 1437;

        [NativeTypeName("#define ERROR_INVALID_MSGBOX_STYLE 1438L")]
        public const int ERROR_INVALID_MSGBOX_STYLE = 1438;

        [NativeTypeName("#define ERROR_INVALID_SPI_VALUE 1439L")]
        public const int ERROR_INVALID_SPI_VALUE = 1439;

        [NativeTypeName("#define ERROR_SCREEN_ALREADY_LOCKED 1440L")]
        public const int ERROR_SCREEN_ALREADY_LOCKED = 1440;

        [NativeTypeName("#define ERROR_HWNDS_HAVE_DIFF_PARENT 1441L")]
        public const int ERROR_HWNDS_HAVE_DIFF_PARENT = 1441;

        [NativeTypeName("#define ERROR_NOT_CHILD_WINDOW 1442L")]
        public const int ERROR_NOT_CHILD_WINDOW = 1442;

        [NativeTypeName("#define ERROR_INVALID_GW_COMMAND 1443L")]
        public const int ERROR_INVALID_GW_COMMAND = 1443;

        [NativeTypeName("#define ERROR_INVALID_THREAD_ID 1444L")]
        public const int ERROR_INVALID_THREAD_ID = 1444;

        [NativeTypeName("#define ERROR_NON_MDICHILD_WINDOW 1445L")]
        public const int ERROR_NON_MDICHILD_WINDOW = 1445;

        [NativeTypeName("#define ERROR_POPUP_ALREADY_ACTIVE 1446L")]
        public const int ERROR_POPUP_ALREADY_ACTIVE = 1446;

        [NativeTypeName("#define ERROR_NO_SCROLLBARS 1447L")]
        public const int ERROR_NO_SCROLLBARS = 1447;

        [NativeTypeName("#define ERROR_INVALID_SCROLLBAR_RANGE 1448L")]
        public const int ERROR_INVALID_SCROLLBAR_RANGE = 1448;

        [NativeTypeName("#define ERROR_INVALID_SHOWWIN_COMMAND 1449L")]
        public const int ERROR_INVALID_SHOWWIN_COMMAND = 1449;

        [NativeTypeName("#define ERROR_NO_SYSTEM_RESOURCES 1450L")]
        public const int ERROR_NO_SYSTEM_RESOURCES = 1450;

        [NativeTypeName("#define ERROR_NONPAGED_SYSTEM_RESOURCES 1451L")]
        public const int ERROR_NONPAGED_SYSTEM_RESOURCES = 1451;

        [NativeTypeName("#define ERROR_PAGED_SYSTEM_RESOURCES 1452L")]
        public const int ERROR_PAGED_SYSTEM_RESOURCES = 1452;

        [NativeTypeName("#define ERROR_WORKING_SET_QUOTA 1453L")]
        public const int ERROR_WORKING_SET_QUOTA = 1453;

        [NativeTypeName("#define ERROR_PAGEFILE_QUOTA 1454L")]
        public const int ERROR_PAGEFILE_QUOTA = 1454;

        [NativeTypeName("#define ERROR_COMMITMENT_LIMIT 1455L")]
        public const int ERROR_COMMITMENT_LIMIT = 1455;

        [NativeTypeName("#define ERROR_MENU_ITEM_NOT_FOUND 1456L")]
        public const int ERROR_MENU_ITEM_NOT_FOUND = 1456;

        [NativeTypeName("#define ERROR_INVALID_KEYBOARD_HANDLE 1457L")]
        public const int ERROR_INVALID_KEYBOARD_HANDLE = 1457;

        [NativeTypeName("#define ERROR_HOOK_TYPE_NOT_ALLOWED 1458L")]
        public const int ERROR_HOOK_TYPE_NOT_ALLOWED = 1458;

        [NativeTypeName("#define ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION 1459L")]
        public const int ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION = 1459;

        [NativeTypeName("#define ERROR_TIMEOUT 1460L")]
        public const int ERROR_TIMEOUT = 1460;

        [NativeTypeName("#define ERROR_INVALID_MONITOR_HANDLE 1461L")]
        public const int ERROR_INVALID_MONITOR_HANDLE = 1461;

        [NativeTypeName("#define ERROR_INCORRECT_SIZE 1462L")]
        public const int ERROR_INCORRECT_SIZE = 1462;

        [NativeTypeName("#define ERROR_SYMLINK_CLASS_DISABLED 1463L")]
        public const int ERROR_SYMLINK_CLASS_DISABLED = 1463;

        [NativeTypeName("#define ERROR_SYMLINK_NOT_SUPPORTED 1464L")]
        public const int ERROR_SYMLINK_NOT_SUPPORTED = 1464;

        [NativeTypeName("#define ERROR_XML_PARSE_ERROR 1465L")]
        public const int ERROR_XML_PARSE_ERROR = 1465;

        [NativeTypeName("#define ERROR_XMLDSIG_ERROR 1466L")]
        public const int ERROR_XMLDSIG_ERROR = 1466;

        [NativeTypeName("#define ERROR_RESTART_APPLICATION 1467L")]
        public const int ERROR_RESTART_APPLICATION = 1467;

        [NativeTypeName("#define ERROR_WRONG_COMPARTMENT 1468L")]
        public const int ERROR_WRONG_COMPARTMENT = 1468;

        [NativeTypeName("#define ERROR_AUTHIP_FAILURE 1469L")]
        public const int ERROR_AUTHIP_FAILURE = 1469;

        [NativeTypeName("#define ERROR_NO_NVRAM_RESOURCES 1470L")]
        public const int ERROR_NO_NVRAM_RESOURCES = 1470;

        [NativeTypeName("#define ERROR_NOT_GUI_PROCESS 1471L")]
        public const int ERROR_NOT_GUI_PROCESS = 1471;

        [NativeTypeName("#define ERROR_EVENTLOG_FILE_CORRUPT 1500L")]
        public const int ERROR_EVENTLOG_FILE_CORRUPT = 1500;

        [NativeTypeName("#define ERROR_EVENTLOG_CANT_START 1501L")]
        public const int ERROR_EVENTLOG_CANT_START = 1501;

        [NativeTypeName("#define ERROR_LOG_FILE_FULL 1502L")]
        public const int ERROR_LOG_FILE_FULL = 1502;

        [NativeTypeName("#define ERROR_EVENTLOG_FILE_CHANGED 1503L")]
        public const int ERROR_EVENTLOG_FILE_CHANGED = 1503;

        [NativeTypeName("#define ERROR_CONTAINER_ASSIGNED 1504L")]
        public const int ERROR_CONTAINER_ASSIGNED = 1504;

        [NativeTypeName("#define ERROR_JOB_NO_CONTAINER 1505L")]
        public const int ERROR_JOB_NO_CONTAINER = 1505;

        [NativeTypeName("#define ERROR_INVALID_TASK_NAME 1550L")]
        public const int ERROR_INVALID_TASK_NAME = 1550;

        [NativeTypeName("#define ERROR_INVALID_TASK_INDEX 1551L")]
        public const int ERROR_INVALID_TASK_INDEX = 1551;

        [NativeTypeName("#define ERROR_THREAD_ALREADY_IN_TASK 1552L")]
        public const int ERROR_THREAD_ALREADY_IN_TASK = 1552;

        [NativeTypeName("#define ERROR_INSTALL_SERVICE_FAILURE 1601L")]
        public const int ERROR_INSTALL_SERVICE_FAILURE = 1601;

        [NativeTypeName("#define ERROR_INSTALL_USEREXIT 1602L")]
        public const int ERROR_INSTALL_USEREXIT = 1602;

        [NativeTypeName("#define ERROR_INSTALL_FAILURE 1603L")]
        public const int ERROR_INSTALL_FAILURE = 1603;

        [NativeTypeName("#define ERROR_INSTALL_SUSPEND 1604L")]
        public const int ERROR_INSTALL_SUSPEND = 1604;

        [NativeTypeName("#define ERROR_UNKNOWN_PRODUCT 1605L")]
        public const int ERROR_UNKNOWN_PRODUCT = 1605;

        [NativeTypeName("#define ERROR_UNKNOWN_FEATURE 1606L")]
        public const int ERROR_UNKNOWN_FEATURE = 1606;

        [NativeTypeName("#define ERROR_UNKNOWN_COMPONENT 1607L")]
        public const int ERROR_UNKNOWN_COMPONENT = 1607;

        [NativeTypeName("#define ERROR_UNKNOWN_PROPERTY 1608L")]
        public const int ERROR_UNKNOWN_PROPERTY = 1608;

        [NativeTypeName("#define ERROR_INVALID_HANDLE_STATE 1609L")]
        public const int ERROR_INVALID_HANDLE_STATE = 1609;

        [NativeTypeName("#define ERROR_BAD_CONFIGURATION 1610L")]
        public const int ERROR_BAD_CONFIGURATION = 1610;

        [NativeTypeName("#define ERROR_INDEX_ABSENT 1611L")]
        public const int ERROR_INDEX_ABSENT = 1611;

        [NativeTypeName("#define ERROR_INSTALL_SOURCE_ABSENT 1612L")]
        public const int ERROR_INSTALL_SOURCE_ABSENT = 1612;

        [NativeTypeName("#define ERROR_INSTALL_PACKAGE_VERSION 1613L")]
        public const int ERROR_INSTALL_PACKAGE_VERSION = 1613;

        [NativeTypeName("#define ERROR_PRODUCT_UNINSTALLED 1614L")]
        public const int ERROR_PRODUCT_UNINSTALLED = 1614;

        [NativeTypeName("#define ERROR_BAD_QUERY_SYNTAX 1615L")]
        public const int ERROR_BAD_QUERY_SYNTAX = 1615;

        [NativeTypeName("#define ERROR_INVALID_FIELD 1616L")]
        public const int ERROR_INVALID_FIELD = 1616;

        [NativeTypeName("#define ERROR_DEVICE_REMOVED 1617L")]
        public const int ERROR_DEVICE_REMOVED = 1617;

        [NativeTypeName("#define ERROR_INSTALL_ALREADY_RUNNING 1618L")]
        public const int ERROR_INSTALL_ALREADY_RUNNING = 1618;

        [NativeTypeName("#define ERROR_INSTALL_PACKAGE_OPEN_FAILED 1619L")]
        public const int ERROR_INSTALL_PACKAGE_OPEN_FAILED = 1619;

        [NativeTypeName("#define ERROR_INSTALL_PACKAGE_INVALID 1620L")]
        public const int ERROR_INSTALL_PACKAGE_INVALID = 1620;

        [NativeTypeName("#define ERROR_INSTALL_UI_FAILURE 1621L")]
        public const int ERROR_INSTALL_UI_FAILURE = 1621;

        [NativeTypeName("#define ERROR_INSTALL_LOG_FAILURE 1622L")]
        public const int ERROR_INSTALL_LOG_FAILURE = 1622;

        [NativeTypeName("#define ERROR_INSTALL_LANGUAGE_UNSUPPORTED 1623L")]
        public const int ERROR_INSTALL_LANGUAGE_UNSUPPORTED = 1623;

        [NativeTypeName("#define ERROR_INSTALL_TRANSFORM_FAILURE 1624L")]
        public const int ERROR_INSTALL_TRANSFORM_FAILURE = 1624;

        [NativeTypeName("#define ERROR_INSTALL_PACKAGE_REJECTED 1625L")]
        public const int ERROR_INSTALL_PACKAGE_REJECTED = 1625;

        [NativeTypeName("#define ERROR_FUNCTION_NOT_CALLED 1626L")]
        public const int ERROR_FUNCTION_NOT_CALLED = 1626;

        [NativeTypeName("#define ERROR_FUNCTION_FAILED 1627L")]
        public const int ERROR_FUNCTION_FAILED = 1627;

        [NativeTypeName("#define ERROR_INVALID_TABLE 1628L")]
        public const int ERROR_INVALID_TABLE = 1628;

        [NativeTypeName("#define ERROR_DATATYPE_MISMATCH 1629L")]
        public const int ERROR_DATATYPE_MISMATCH = 1629;

        [NativeTypeName("#define ERROR_UNSUPPORTED_TYPE 1630L")]
        public const int ERROR_UNSUPPORTED_TYPE = 1630;

        [NativeTypeName("#define ERROR_CREATE_FAILED 1631L")]
        public const int ERROR_CREATE_FAILED = 1631;

        [NativeTypeName("#define ERROR_INSTALL_TEMP_UNWRITABLE 1632L")]
        public const int ERROR_INSTALL_TEMP_UNWRITABLE = 1632;

        [NativeTypeName("#define ERROR_INSTALL_PLATFORM_UNSUPPORTED 1633L")]
        public const int ERROR_INSTALL_PLATFORM_UNSUPPORTED = 1633;

        [NativeTypeName("#define ERROR_INSTALL_NOTUSED 1634L")]
        public const int ERROR_INSTALL_NOTUSED = 1634;

        [NativeTypeName("#define ERROR_PATCH_PACKAGE_OPEN_FAILED 1635L")]
        public const int ERROR_PATCH_PACKAGE_OPEN_FAILED = 1635;

        [NativeTypeName("#define ERROR_PATCH_PACKAGE_INVALID 1636L")]
        public const int ERROR_PATCH_PACKAGE_INVALID = 1636;

        [NativeTypeName("#define ERROR_PATCH_PACKAGE_UNSUPPORTED 1637L")]
        public const int ERROR_PATCH_PACKAGE_UNSUPPORTED = 1637;

        [NativeTypeName("#define ERROR_PRODUCT_VERSION 1638L")]
        public const int ERROR_PRODUCT_VERSION = 1638;

        [NativeTypeName("#define ERROR_INVALID_COMMAND_LINE 1639L")]
        public const int ERROR_INVALID_COMMAND_LINE = 1639;

        [NativeTypeName("#define ERROR_INSTALL_REMOTE_DISALLOWED 1640L")]
        public const int ERROR_INSTALL_REMOTE_DISALLOWED = 1640;

        [NativeTypeName("#define ERROR_SUCCESS_REBOOT_INITIATED 1641L")]
        public const int ERROR_SUCCESS_REBOOT_INITIATED = 1641;

        [NativeTypeName("#define ERROR_PATCH_TARGET_NOT_FOUND 1642L")]
        public const int ERROR_PATCH_TARGET_NOT_FOUND = 1642;

        [NativeTypeName("#define ERROR_PATCH_PACKAGE_REJECTED 1643L")]
        public const int ERROR_PATCH_PACKAGE_REJECTED = 1643;

        [NativeTypeName("#define ERROR_INSTALL_TRANSFORM_REJECTED 1644L")]
        public const int ERROR_INSTALL_TRANSFORM_REJECTED = 1644;

        [NativeTypeName("#define ERROR_INSTALL_REMOTE_PROHIBITED 1645L")]
        public const int ERROR_INSTALL_REMOTE_PROHIBITED = 1645;

        [NativeTypeName("#define ERROR_PATCH_REMOVAL_UNSUPPORTED 1646L")]
        public const int ERROR_PATCH_REMOVAL_UNSUPPORTED = 1646;

        [NativeTypeName("#define ERROR_UNKNOWN_PATCH 1647L")]
        public const int ERROR_UNKNOWN_PATCH = 1647;

        [NativeTypeName("#define ERROR_PATCH_NO_SEQUENCE 1648L")]
        public const int ERROR_PATCH_NO_SEQUENCE = 1648;

        [NativeTypeName("#define ERROR_PATCH_REMOVAL_DISALLOWED 1649L")]
        public const int ERROR_PATCH_REMOVAL_DISALLOWED = 1649;

        [NativeTypeName("#define ERROR_INVALID_PATCH_XML 1650L")]
        public const int ERROR_INVALID_PATCH_XML = 1650;

        [NativeTypeName("#define ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT 1651L")]
        public const int ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT = 1651;

        [NativeTypeName("#define ERROR_INSTALL_SERVICE_SAFEBOOT 1652L")]
        public const int ERROR_INSTALL_SERVICE_SAFEBOOT = 1652;

        [NativeTypeName("#define ERROR_FAIL_FAST_EXCEPTION 1653L")]
        public const int ERROR_FAIL_FAST_EXCEPTION = 1653;

        [NativeTypeName("#define ERROR_INSTALL_REJECTED 1654L")]
        public const int ERROR_INSTALL_REJECTED = 1654;

        [NativeTypeName("#define ERROR_DYNAMIC_CODE_BLOCKED 1655L")]
        public const int ERROR_DYNAMIC_CODE_BLOCKED = 1655;

        [NativeTypeName("#define ERROR_NOT_SAME_OBJECT 1656L")]
        public const int ERROR_NOT_SAME_OBJECT = 1656;

        [NativeTypeName("#define ERROR_STRICT_CFG_VIOLATION 1657L")]
        public const int ERROR_STRICT_CFG_VIOLATION = 1657;

        [NativeTypeName("#define ERROR_SET_CONTEXT_DENIED 1660L")]
        public const int ERROR_SET_CONTEXT_DENIED = 1660;

        [NativeTypeName("#define ERROR_CROSS_PARTITION_VIOLATION 1661L")]
        public const int ERROR_CROSS_PARTITION_VIOLATION = 1661;

        [NativeTypeName("#define ERROR_RETURN_ADDRESS_HIJACK_ATTEMPT 1662L")]
        public const int ERROR_RETURN_ADDRESS_HIJACK_ATTEMPT = 1662;

        [NativeTypeName("#define RPC_S_INVALID_STRING_BINDING 1700L")]
        public const int RPC_S_INVALID_STRING_BINDING = 1700;

        [NativeTypeName("#define RPC_S_WRONG_KIND_OF_BINDING 1701L")]
        public const int RPC_S_WRONG_KIND_OF_BINDING = 1701;

        [NativeTypeName("#define RPC_S_INVALID_BINDING 1702L")]
        public const int RPC_S_INVALID_BINDING = 1702;

        [NativeTypeName("#define RPC_S_PROTSEQ_NOT_SUPPORTED 1703L")]
        public const int RPC_S_PROTSEQ_NOT_SUPPORTED = 1703;

        [NativeTypeName("#define RPC_S_INVALID_RPC_PROTSEQ 1704L")]
        public const int RPC_S_INVALID_RPC_PROTSEQ = 1704;

        [NativeTypeName("#define RPC_S_INVALID_STRING_UUID 1705L")]
        public const int RPC_S_INVALID_STRING_UUID = 1705;

        [NativeTypeName("#define RPC_S_INVALID_ENDPOINT_FORMAT 1706L")]
        public const int RPC_S_INVALID_ENDPOINT_FORMAT = 1706;

        [NativeTypeName("#define RPC_S_INVALID_NET_ADDR 1707L")]
        public const int RPC_S_INVALID_NET_ADDR = 1707;

        [NativeTypeName("#define RPC_S_NO_ENDPOINT_FOUND 1708L")]
        public const int RPC_S_NO_ENDPOINT_FOUND = 1708;

        [NativeTypeName("#define RPC_S_INVALID_TIMEOUT 1709L")]
        public const int RPC_S_INVALID_TIMEOUT = 1709;

        [NativeTypeName("#define RPC_S_OBJECT_NOT_FOUND 1710L")]
        public const int RPC_S_OBJECT_NOT_FOUND = 1710;

        [NativeTypeName("#define RPC_S_ALREADY_REGISTERED 1711L")]
        public const int RPC_S_ALREADY_REGISTERED = 1711;

        [NativeTypeName("#define RPC_S_TYPE_ALREADY_REGISTERED 1712L")]
        public const int RPC_S_TYPE_ALREADY_REGISTERED = 1712;

        [NativeTypeName("#define RPC_S_ALREADY_LISTENING 1713L")]
        public const int RPC_S_ALREADY_LISTENING = 1713;

        [NativeTypeName("#define RPC_S_NO_PROTSEQS_REGISTERED 1714L")]
        public const int RPC_S_NO_PROTSEQS_REGISTERED = 1714;

        [NativeTypeName("#define RPC_S_NOT_LISTENING 1715L")]
        public const int RPC_S_NOT_LISTENING = 1715;

        [NativeTypeName("#define RPC_S_UNKNOWN_MGR_TYPE 1716L")]
        public const int RPC_S_UNKNOWN_MGR_TYPE = 1716;

        [NativeTypeName("#define RPC_S_UNKNOWN_IF 1717L")]
        public const int RPC_S_UNKNOWN_IF = 1717;

        [NativeTypeName("#define RPC_S_NO_BINDINGS 1718L")]
        public const int RPC_S_NO_BINDINGS = 1718;

        [NativeTypeName("#define RPC_S_NO_PROTSEQS 1719L")]
        public const int RPC_S_NO_PROTSEQS = 1719;

        [NativeTypeName("#define RPC_S_CANT_CREATE_ENDPOINT 1720L")]
        public const int RPC_S_CANT_CREATE_ENDPOINT = 1720;

        [NativeTypeName("#define RPC_S_OUT_OF_RESOURCES 1721L")]
        public const int RPC_S_OUT_OF_RESOURCES = 1721;

        [NativeTypeName("#define RPC_S_SERVER_UNAVAILABLE 1722L")]
        public const int RPC_S_SERVER_UNAVAILABLE = 1722;

        [NativeTypeName("#define RPC_S_SERVER_TOO_BUSY 1723L")]
        public const int RPC_S_SERVER_TOO_BUSY = 1723;

        [NativeTypeName("#define RPC_S_INVALID_NETWORK_OPTIONS 1724L")]
        public const int RPC_S_INVALID_NETWORK_OPTIONS = 1724;

        [NativeTypeName("#define RPC_S_NO_CALL_ACTIVE 1725L")]
        public const int RPC_S_NO_CALL_ACTIVE = 1725;

        [NativeTypeName("#define RPC_S_CALL_FAILED 1726L")]
        public const int RPC_S_CALL_FAILED = 1726;

        [NativeTypeName("#define RPC_S_CALL_FAILED_DNE 1727L")]
        public const int RPC_S_CALL_FAILED_DNE = 1727;

        [NativeTypeName("#define RPC_S_PROTOCOL_ERROR 1728L")]
        public const int RPC_S_PROTOCOL_ERROR = 1728;

        [NativeTypeName("#define RPC_S_PROXY_ACCESS_DENIED 1729L")]
        public const int RPC_S_PROXY_ACCESS_DENIED = 1729;

        [NativeTypeName("#define RPC_S_UNSUPPORTED_TRANS_SYN 1730L")]
        public const int RPC_S_UNSUPPORTED_TRANS_SYN = 1730;

        [NativeTypeName("#define RPC_S_UNSUPPORTED_TYPE 1732L")]
        public const int RPC_S_UNSUPPORTED_TYPE = 1732;

        [NativeTypeName("#define RPC_S_INVALID_TAG 1733L")]
        public const int RPC_S_INVALID_TAG = 1733;

        [NativeTypeName("#define RPC_S_INVALID_BOUND 1734L")]
        public const int RPC_S_INVALID_BOUND = 1734;

        [NativeTypeName("#define RPC_S_NO_ENTRY_NAME 1735L")]
        public const int RPC_S_NO_ENTRY_NAME = 1735;

        [NativeTypeName("#define RPC_S_INVALID_NAME_SYNTAX 1736L")]
        public const int RPC_S_INVALID_NAME_SYNTAX = 1736;

        [NativeTypeName("#define RPC_S_UNSUPPORTED_NAME_SYNTAX 1737L")]
        public const int RPC_S_UNSUPPORTED_NAME_SYNTAX = 1737;

        [NativeTypeName("#define RPC_S_UUID_NO_ADDRESS 1739L")]
        public const int RPC_S_UUID_NO_ADDRESS = 1739;

        [NativeTypeName("#define RPC_S_DUPLICATE_ENDPOINT 1740L")]
        public const int RPC_S_DUPLICATE_ENDPOINT = 1740;

        [NativeTypeName("#define RPC_S_UNKNOWN_AUTHN_TYPE 1741L")]
        public const int RPC_S_UNKNOWN_AUTHN_TYPE = 1741;

        [NativeTypeName("#define RPC_S_MAX_CALLS_TOO_SMALL 1742L")]
        public const int RPC_S_MAX_CALLS_TOO_SMALL = 1742;

        [NativeTypeName("#define RPC_S_STRING_TOO_LONG 1743L")]
        public const int RPC_S_STRING_TOO_LONG = 1743;

        [NativeTypeName("#define RPC_S_PROTSEQ_NOT_FOUND 1744L")]
        public const int RPC_S_PROTSEQ_NOT_FOUND = 1744;

        [NativeTypeName("#define RPC_S_PROCNUM_OUT_OF_RANGE 1745L")]
        public const int RPC_S_PROCNUM_OUT_OF_RANGE = 1745;

        [NativeTypeName("#define RPC_S_BINDING_HAS_NO_AUTH 1746L")]
        public const int RPC_S_BINDING_HAS_NO_AUTH = 1746;

        [NativeTypeName("#define RPC_S_UNKNOWN_AUTHN_SERVICE 1747L")]
        public const int RPC_S_UNKNOWN_AUTHN_SERVICE = 1747;

        [NativeTypeName("#define RPC_S_UNKNOWN_AUTHN_LEVEL 1748L")]
        public const int RPC_S_UNKNOWN_AUTHN_LEVEL = 1748;

        [NativeTypeName("#define RPC_S_INVALID_AUTH_IDENTITY 1749L")]
        public const int RPC_S_INVALID_AUTH_IDENTITY = 1749;

        [NativeTypeName("#define RPC_S_UNKNOWN_AUTHZ_SERVICE 1750L")]
        public const int RPC_S_UNKNOWN_AUTHZ_SERVICE = 1750;

        [NativeTypeName("#define EPT_S_INVALID_ENTRY 1751L")]
        public const int EPT_S_INVALID_ENTRY = 1751;

        [NativeTypeName("#define EPT_S_CANT_PERFORM_OP 1752L")]
        public const int EPT_S_CANT_PERFORM_OP = 1752;

        [NativeTypeName("#define EPT_S_NOT_REGISTERED 1753L")]
        public const int EPT_S_NOT_REGISTERED = 1753;

        [NativeTypeName("#define RPC_S_NOTHING_TO_EXPORT 1754L")]
        public const int RPC_S_NOTHING_TO_EXPORT = 1754;

        [NativeTypeName("#define RPC_S_INCOMPLETE_NAME 1755L")]
        public const int RPC_S_INCOMPLETE_NAME = 1755;

        [NativeTypeName("#define RPC_S_INVALID_VERS_OPTION 1756L")]
        public const int RPC_S_INVALID_VERS_OPTION = 1756;

        [NativeTypeName("#define RPC_S_NO_MORE_MEMBERS 1757L")]
        public const int RPC_S_NO_MORE_MEMBERS = 1757;

        [NativeTypeName("#define RPC_S_NOT_ALL_OBJS_UNEXPORTED 1758L")]
        public const int RPC_S_NOT_ALL_OBJS_UNEXPORTED = 1758;

        [NativeTypeName("#define RPC_S_INTERFACE_NOT_FOUND 1759L")]
        public const int RPC_S_INTERFACE_NOT_FOUND = 1759;

        [NativeTypeName("#define RPC_S_ENTRY_ALREADY_EXISTS 1760L")]
        public const int RPC_S_ENTRY_ALREADY_EXISTS = 1760;

        [NativeTypeName("#define RPC_S_ENTRY_NOT_FOUND 1761L")]
        public const int RPC_S_ENTRY_NOT_FOUND = 1761;

        [NativeTypeName("#define RPC_S_NAME_SERVICE_UNAVAILABLE 1762L")]
        public const int RPC_S_NAME_SERVICE_UNAVAILABLE = 1762;

        [NativeTypeName("#define RPC_S_INVALID_NAF_ID 1763L")]
        public const int RPC_S_INVALID_NAF_ID = 1763;

        [NativeTypeName("#define RPC_S_CANNOT_SUPPORT 1764L")]
        public const int RPC_S_CANNOT_SUPPORT = 1764;

        [NativeTypeName("#define RPC_S_NO_CONTEXT_AVAILABLE 1765L")]
        public const int RPC_S_NO_CONTEXT_AVAILABLE = 1765;

        [NativeTypeName("#define RPC_S_INTERNAL_ERROR 1766L")]
        public const int RPC_S_INTERNAL_ERROR = 1766;

        [NativeTypeName("#define RPC_S_ZERO_DIVIDE 1767L")]
        public const int RPC_S_ZERO_DIVIDE = 1767;

        [NativeTypeName("#define RPC_S_ADDRESS_ERROR 1768L")]
        public const int RPC_S_ADDRESS_ERROR = 1768;

        [NativeTypeName("#define RPC_S_FP_DIV_ZERO 1769L")]
        public const int RPC_S_FP_DIV_ZERO = 1769;

        [NativeTypeName("#define RPC_S_FP_UNDERFLOW 1770L")]
        public const int RPC_S_FP_UNDERFLOW = 1770;

        [NativeTypeName("#define RPC_S_FP_OVERFLOW 1771L")]
        public const int RPC_S_FP_OVERFLOW = 1771;

        [NativeTypeName("#define RPC_X_NO_MORE_ENTRIES 1772L")]
        public const int RPC_X_NO_MORE_ENTRIES = 1772;

        [NativeTypeName("#define RPC_X_SS_CHAR_TRANS_OPEN_FAIL 1773L")]
        public const int RPC_X_SS_CHAR_TRANS_OPEN_FAIL = 1773;

        [NativeTypeName("#define RPC_X_SS_CHAR_TRANS_SHORT_FILE 1774L")]
        public const int RPC_X_SS_CHAR_TRANS_SHORT_FILE = 1774;

        [NativeTypeName("#define RPC_X_SS_IN_NULL_CONTEXT 1775L")]
        public const int RPC_X_SS_IN_NULL_CONTEXT = 1775;

        [NativeTypeName("#define RPC_X_SS_CONTEXT_DAMAGED 1777L")]
        public const int RPC_X_SS_CONTEXT_DAMAGED = 1777;

        [NativeTypeName("#define RPC_X_SS_HANDLES_MISMATCH 1778L")]
        public const int RPC_X_SS_HANDLES_MISMATCH = 1778;

        [NativeTypeName("#define RPC_X_SS_CANNOT_GET_CALL_HANDLE 1779L")]
        public const int RPC_X_SS_CANNOT_GET_CALL_HANDLE = 1779;

        [NativeTypeName("#define RPC_X_NULL_REF_POINTER 1780L")]
        public const int RPC_X_NULL_REF_POINTER = 1780;

        [NativeTypeName("#define RPC_X_ENUM_VALUE_OUT_OF_RANGE 1781L")]
        public const int RPC_X_ENUM_VALUE_OUT_OF_RANGE = 1781;

        [NativeTypeName("#define RPC_X_BYTE_COUNT_TOO_SMALL 1782L")]
        public const int RPC_X_BYTE_COUNT_TOO_SMALL = 1782;

        [NativeTypeName("#define RPC_X_BAD_STUB_DATA 1783L")]
        public const int RPC_X_BAD_STUB_DATA = 1783;

        [NativeTypeName("#define ERROR_INVALID_USER_BUFFER 1784L")]
        public const int ERROR_INVALID_USER_BUFFER = 1784;

        [NativeTypeName("#define ERROR_UNRECOGNIZED_MEDIA 1785L")]
        public const int ERROR_UNRECOGNIZED_MEDIA = 1785;

        [NativeTypeName("#define ERROR_NO_TRUST_LSA_SECRET 1786L")]
        public const int ERROR_NO_TRUST_LSA_SECRET = 1786;

        [NativeTypeName("#define ERROR_NO_TRUST_SAM_ACCOUNT 1787L")]
        public const int ERROR_NO_TRUST_SAM_ACCOUNT = 1787;

        [NativeTypeName("#define ERROR_TRUSTED_DOMAIN_FAILURE 1788L")]
        public const int ERROR_TRUSTED_DOMAIN_FAILURE = 1788;

        [NativeTypeName("#define ERROR_TRUSTED_RELATIONSHIP_FAILURE 1789L")]
        public const int ERROR_TRUSTED_RELATIONSHIP_FAILURE = 1789;

        [NativeTypeName("#define ERROR_TRUST_FAILURE 1790L")]
        public const int ERROR_TRUST_FAILURE = 1790;

        [NativeTypeName("#define RPC_S_CALL_IN_PROGRESS 1791L")]
        public const int RPC_S_CALL_IN_PROGRESS = 1791;

        [NativeTypeName("#define ERROR_NETLOGON_NOT_STARTED 1792L")]
        public const int ERROR_NETLOGON_NOT_STARTED = 1792;

        [NativeTypeName("#define ERROR_ACCOUNT_EXPIRED 1793L")]
        public const int ERROR_ACCOUNT_EXPIRED = 1793;

        [NativeTypeName("#define ERROR_REDIRECTOR_HAS_OPEN_HANDLES 1794L")]
        public const int ERROR_REDIRECTOR_HAS_OPEN_HANDLES = 1794;

        [NativeTypeName("#define ERROR_PRINTER_DRIVER_ALREADY_INSTALLED 1795L")]
        public const int ERROR_PRINTER_DRIVER_ALREADY_INSTALLED = 1795;

        [NativeTypeName("#define ERROR_UNKNOWN_PORT 1796L")]
        public const int ERROR_UNKNOWN_PORT = 1796;

        [NativeTypeName("#define ERROR_UNKNOWN_PRINTER_DRIVER 1797L")]
        public const int ERROR_UNKNOWN_PRINTER_DRIVER = 1797;

        [NativeTypeName("#define ERROR_UNKNOWN_PRINTPROCESSOR 1798L")]
        public const int ERROR_UNKNOWN_PRINTPROCESSOR = 1798;

        [NativeTypeName("#define ERROR_INVALID_SEPARATOR_FILE 1799L")]
        public const int ERROR_INVALID_SEPARATOR_FILE = 1799;

        [NativeTypeName("#define ERROR_INVALID_PRIORITY 1800L")]
        public const int ERROR_INVALID_PRIORITY = 1800;

        [NativeTypeName("#define ERROR_INVALID_PRINTER_NAME 1801L")]
        public const int ERROR_INVALID_PRINTER_NAME = 1801;

        [NativeTypeName("#define ERROR_PRINTER_ALREADY_EXISTS 1802L")]
        public const int ERROR_PRINTER_ALREADY_EXISTS = 1802;

        [NativeTypeName("#define ERROR_INVALID_PRINTER_COMMAND 1803L")]
        public const int ERROR_INVALID_PRINTER_COMMAND = 1803;

        [NativeTypeName("#define ERROR_INVALID_DATATYPE 1804L")]
        public const int ERROR_INVALID_DATATYPE = 1804;

        [NativeTypeName("#define ERROR_INVALID_ENVIRONMENT 1805L")]
        public const int ERROR_INVALID_ENVIRONMENT = 1805;

        [NativeTypeName("#define RPC_S_NO_MORE_BINDINGS 1806L")]
        public const int RPC_S_NO_MORE_BINDINGS = 1806;

        [NativeTypeName("#define ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT 1807L")]
        public const int ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT = 1807;

        [NativeTypeName("#define ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT 1808L")]
        public const int ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT = 1808;

        [NativeTypeName("#define ERROR_NOLOGON_SERVER_TRUST_ACCOUNT 1809L")]
        public const int ERROR_NOLOGON_SERVER_TRUST_ACCOUNT = 1809;

        [NativeTypeName("#define ERROR_DOMAIN_TRUST_INCONSISTENT 1810L")]
        public const int ERROR_DOMAIN_TRUST_INCONSISTENT = 1810;

        [NativeTypeName("#define ERROR_SERVER_HAS_OPEN_HANDLES 1811L")]
        public const int ERROR_SERVER_HAS_OPEN_HANDLES = 1811;

        [NativeTypeName("#define ERROR_RESOURCE_DATA_NOT_FOUND 1812L")]
        public const int ERROR_RESOURCE_DATA_NOT_FOUND = 1812;

        [NativeTypeName("#define ERROR_RESOURCE_TYPE_NOT_FOUND 1813L")]
        public const int ERROR_RESOURCE_TYPE_NOT_FOUND = 1813;

        [NativeTypeName("#define ERROR_RESOURCE_NAME_NOT_FOUND 1814L")]
        public const int ERROR_RESOURCE_NAME_NOT_FOUND = 1814;

        [NativeTypeName("#define ERROR_RESOURCE_LANG_NOT_FOUND 1815L")]
        public const int ERROR_RESOURCE_LANG_NOT_FOUND = 1815;

        [NativeTypeName("#define ERROR_NOT_ENOUGH_QUOTA 1816L")]
        public const int ERROR_NOT_ENOUGH_QUOTA = 1816;

        [NativeTypeName("#define RPC_S_NO_INTERFACES 1817L")]
        public const int RPC_S_NO_INTERFACES = 1817;

        [NativeTypeName("#define RPC_S_CALL_CANCELLED 1818L")]
        public const int RPC_S_CALL_CANCELLED = 1818;

        [NativeTypeName("#define RPC_S_BINDING_INCOMPLETE 1819L")]
        public const int RPC_S_BINDING_INCOMPLETE = 1819;

        [NativeTypeName("#define RPC_S_COMM_FAILURE 1820L")]
        public const int RPC_S_COMM_FAILURE = 1820;

        [NativeTypeName("#define RPC_S_UNSUPPORTED_AUTHN_LEVEL 1821L")]
        public const int RPC_S_UNSUPPORTED_AUTHN_LEVEL = 1821;

        [NativeTypeName("#define RPC_S_NO_PRINC_NAME 1822L")]
        public const int RPC_S_NO_PRINC_NAME = 1822;

        [NativeTypeName("#define RPC_S_NOT_RPC_ERROR 1823L")]
        public const int RPC_S_NOT_RPC_ERROR = 1823;

        [NativeTypeName("#define RPC_S_UUID_LOCAL_ONLY 1824L")]
        public const int RPC_S_UUID_LOCAL_ONLY = 1824;

        [NativeTypeName("#define RPC_S_SEC_PKG_ERROR 1825L")]
        public const int RPC_S_SEC_PKG_ERROR = 1825;

        [NativeTypeName("#define RPC_S_NOT_CANCELLED 1826L")]
        public const int RPC_S_NOT_CANCELLED = 1826;

        [NativeTypeName("#define RPC_X_INVALID_ES_ACTION 1827L")]
        public const int RPC_X_INVALID_ES_ACTION = 1827;

        [NativeTypeName("#define RPC_X_WRONG_ES_VERSION 1828L")]
        public const int RPC_X_WRONG_ES_VERSION = 1828;

        [NativeTypeName("#define RPC_X_WRONG_STUB_VERSION 1829L")]
        public const int RPC_X_WRONG_STUB_VERSION = 1829;

        [NativeTypeName("#define RPC_X_INVALID_PIPE_OBJECT 1830L")]
        public const int RPC_X_INVALID_PIPE_OBJECT = 1830;

        [NativeTypeName("#define RPC_X_WRONG_PIPE_ORDER 1831L")]
        public const int RPC_X_WRONG_PIPE_ORDER = 1831;

        [NativeTypeName("#define RPC_X_WRONG_PIPE_VERSION 1832L")]
        public const int RPC_X_WRONG_PIPE_VERSION = 1832;

        [NativeTypeName("#define RPC_S_COOKIE_AUTH_FAILED 1833L")]
        public const int RPC_S_COOKIE_AUTH_FAILED = 1833;

        [NativeTypeName("#define RPC_S_DO_NOT_DISTURB 1834L")]
        public const int RPC_S_DO_NOT_DISTURB = 1834;

        [NativeTypeName("#define RPC_S_SYSTEM_HANDLE_COUNT_EXCEEDED 1835L")]
        public const int RPC_S_SYSTEM_HANDLE_COUNT_EXCEEDED = 1835;

        [NativeTypeName("#define RPC_S_SYSTEM_HANDLE_TYPE_MISMATCH 1836L")]
        public const int RPC_S_SYSTEM_HANDLE_TYPE_MISMATCH = 1836;

        [NativeTypeName("#define RPC_S_GROUP_MEMBER_NOT_FOUND 1898L")]
        public const int RPC_S_GROUP_MEMBER_NOT_FOUND = 1898;

        [NativeTypeName("#define EPT_S_CANT_CREATE 1899L")]
        public const int EPT_S_CANT_CREATE = 1899;

        [NativeTypeName("#define RPC_S_INVALID_OBJECT 1900L")]
        public const int RPC_S_INVALID_OBJECT = 1900;

        [NativeTypeName("#define ERROR_INVALID_TIME 1901L")]
        public const int ERROR_INVALID_TIME = 1901;

        [NativeTypeName("#define ERROR_INVALID_FORM_NAME 1902L")]
        public const int ERROR_INVALID_FORM_NAME = 1902;

        [NativeTypeName("#define ERROR_INVALID_FORM_SIZE 1903L")]
        public const int ERROR_INVALID_FORM_SIZE = 1903;

        [NativeTypeName("#define ERROR_ALREADY_WAITING 1904L")]
        public const int ERROR_ALREADY_WAITING = 1904;

        [NativeTypeName("#define ERROR_PRINTER_DELETED 1905L")]
        public const int ERROR_PRINTER_DELETED = 1905;

        [NativeTypeName("#define ERROR_INVALID_PRINTER_STATE 1906L")]
        public const int ERROR_INVALID_PRINTER_STATE = 1906;

        [NativeTypeName("#define ERROR_PASSWORD_MUST_CHANGE 1907L")]
        public const int ERROR_PASSWORD_MUST_CHANGE = 1907;

        [NativeTypeName("#define ERROR_DOMAIN_CONTROLLER_NOT_FOUND 1908L")]
        public const int ERROR_DOMAIN_CONTROLLER_NOT_FOUND = 1908;

        [NativeTypeName("#define ERROR_ACCOUNT_LOCKED_OUT 1909L")]
        public const int ERROR_ACCOUNT_LOCKED_OUT = 1909;

        [NativeTypeName("#define OR_INVALID_OXID 1910L")]
        public const int OR_INVALID_OXID = 1910;

        [NativeTypeName("#define OR_INVALID_OID 1911L")]
        public const int OR_INVALID_OID = 1911;

        [NativeTypeName("#define OR_INVALID_SET 1912L")]
        public const int OR_INVALID_SET = 1912;

        [NativeTypeName("#define RPC_S_SEND_INCOMPLETE 1913L")]
        public const int RPC_S_SEND_INCOMPLETE = 1913;

        [NativeTypeName("#define RPC_S_INVALID_ASYNC_HANDLE 1914L")]
        public const int RPC_S_INVALID_ASYNC_HANDLE = 1914;

        [NativeTypeName("#define RPC_S_INVALID_ASYNC_CALL 1915L")]
        public const int RPC_S_INVALID_ASYNC_CALL = 1915;

        [NativeTypeName("#define RPC_X_PIPE_CLOSED 1916L")]
        public const int RPC_X_PIPE_CLOSED = 1916;

        [NativeTypeName("#define RPC_X_PIPE_DISCIPLINE_ERROR 1917L")]
        public const int RPC_X_PIPE_DISCIPLINE_ERROR = 1917;

        [NativeTypeName("#define RPC_X_PIPE_EMPTY 1918L")]
        public const int RPC_X_PIPE_EMPTY = 1918;

        [NativeTypeName("#define ERROR_NO_SITENAME 1919L")]
        public const int ERROR_NO_SITENAME = 1919;

        [NativeTypeName("#define ERROR_CANT_ACCESS_FILE 1920L")]
        public const int ERROR_CANT_ACCESS_FILE = 1920;

        [NativeTypeName("#define ERROR_CANT_RESOLVE_FILENAME 1921L")]
        public const int ERROR_CANT_RESOLVE_FILENAME = 1921;

        [NativeTypeName("#define RPC_S_ENTRY_TYPE_MISMATCH 1922L")]
        public const int RPC_S_ENTRY_TYPE_MISMATCH = 1922;

        [NativeTypeName("#define RPC_S_NOT_ALL_OBJS_EXPORTED 1923L")]
        public const int RPC_S_NOT_ALL_OBJS_EXPORTED = 1923;

        [NativeTypeName("#define RPC_S_INTERFACE_NOT_EXPORTED 1924L")]
        public const int RPC_S_INTERFACE_NOT_EXPORTED = 1924;

        [NativeTypeName("#define RPC_S_PROFILE_NOT_ADDED 1925L")]
        public const int RPC_S_PROFILE_NOT_ADDED = 1925;

        [NativeTypeName("#define RPC_S_PRF_ELT_NOT_ADDED 1926L")]
        public const int RPC_S_PRF_ELT_NOT_ADDED = 1926;

        [NativeTypeName("#define RPC_S_PRF_ELT_NOT_REMOVED 1927L")]
        public const int RPC_S_PRF_ELT_NOT_REMOVED = 1927;

        [NativeTypeName("#define RPC_S_GRP_ELT_NOT_ADDED 1928L")]
        public const int RPC_S_GRP_ELT_NOT_ADDED = 1928;

        [NativeTypeName("#define RPC_S_GRP_ELT_NOT_REMOVED 1929L")]
        public const int RPC_S_GRP_ELT_NOT_REMOVED = 1929;

        [NativeTypeName("#define ERROR_KM_DRIVER_BLOCKED 1930L")]
        public const int ERROR_KM_DRIVER_BLOCKED = 1930;

        [NativeTypeName("#define ERROR_CONTEXT_EXPIRED 1931L")]
        public const int ERROR_CONTEXT_EXPIRED = 1931;

        [NativeTypeName("#define ERROR_PER_USER_TRUST_QUOTA_EXCEEDED 1932L")]
        public const int ERROR_PER_USER_TRUST_QUOTA_EXCEEDED = 1932;

        [NativeTypeName("#define ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED 1933L")]
        public const int ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED = 1933;

        [NativeTypeName("#define ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED 1934L")]
        public const int ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED = 1934;

        [NativeTypeName("#define ERROR_AUTHENTICATION_FIREWALL_FAILED 1935L")]
        public const int ERROR_AUTHENTICATION_FIREWALL_FAILED = 1935;

        [NativeTypeName("#define ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED 1936L")]
        public const int ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED = 1936;

        [NativeTypeName("#define ERROR_NTLM_BLOCKED 1937L")]
        public const int ERROR_NTLM_BLOCKED = 1937;

        [NativeTypeName("#define ERROR_PASSWORD_CHANGE_REQUIRED 1938L")]
        public const int ERROR_PASSWORD_CHANGE_REQUIRED = 1938;

        [NativeTypeName("#define ERROR_LOST_MODE_LOGON_RESTRICTION 1939L")]
        public const int ERROR_LOST_MODE_LOGON_RESTRICTION = 1939;

        [NativeTypeName("#define ERROR_INVALID_PIXEL_FORMAT 2000L")]
        public const int ERROR_INVALID_PIXEL_FORMAT = 2000;

        [NativeTypeName("#define ERROR_BAD_DRIVER 2001L")]
        public const int ERROR_BAD_DRIVER = 2001;

        [NativeTypeName("#define ERROR_INVALID_WINDOW_STYLE 2002L")]
        public const int ERROR_INVALID_WINDOW_STYLE = 2002;

        [NativeTypeName("#define ERROR_METAFILE_NOT_SUPPORTED 2003L")]
        public const int ERROR_METAFILE_NOT_SUPPORTED = 2003;

        [NativeTypeName("#define ERROR_TRANSFORM_NOT_SUPPORTED 2004L")]
        public const int ERROR_TRANSFORM_NOT_SUPPORTED = 2004;

        [NativeTypeName("#define ERROR_CLIPPING_NOT_SUPPORTED 2005L")]
        public const int ERROR_CLIPPING_NOT_SUPPORTED = 2005;

        [NativeTypeName("#define ERROR_INVALID_CMM 2010L")]
        public const int ERROR_INVALID_CMM = 2010;

        [NativeTypeName("#define ERROR_INVALID_PROFILE 2011L")]
        public const int ERROR_INVALID_PROFILE = 2011;

        [NativeTypeName("#define ERROR_TAG_NOT_FOUND 2012L")]
        public const int ERROR_TAG_NOT_FOUND = 2012;

        [NativeTypeName("#define ERROR_TAG_NOT_PRESENT 2013L")]
        public const int ERROR_TAG_NOT_PRESENT = 2013;

        [NativeTypeName("#define ERROR_DUPLICATE_TAG 2014L")]
        public const int ERROR_DUPLICATE_TAG = 2014;

        [NativeTypeName("#define ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE 2015L")]
        public const int ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE = 2015;

        [NativeTypeName("#define ERROR_PROFILE_NOT_FOUND 2016L")]
        public const int ERROR_PROFILE_NOT_FOUND = 2016;

        [NativeTypeName("#define ERROR_INVALID_COLORSPACE 2017L")]
        public const int ERROR_INVALID_COLORSPACE = 2017;

        [NativeTypeName("#define ERROR_ICM_NOT_ENABLED 2018L")]
        public const int ERROR_ICM_NOT_ENABLED = 2018;

        [NativeTypeName("#define ERROR_DELETING_ICM_XFORM 2019L")]
        public const int ERROR_DELETING_ICM_XFORM = 2019;

        [NativeTypeName("#define ERROR_INVALID_TRANSFORM 2020L")]
        public const int ERROR_INVALID_TRANSFORM = 2020;

        [NativeTypeName("#define ERROR_COLORSPACE_MISMATCH 2021L")]
        public const int ERROR_COLORSPACE_MISMATCH = 2021;

        [NativeTypeName("#define ERROR_INVALID_COLORINDEX 2022L")]
        public const int ERROR_INVALID_COLORINDEX = 2022;

        [NativeTypeName("#define ERROR_PROFILE_DOES_NOT_MATCH_DEVICE 2023L")]
        public const int ERROR_PROFILE_DOES_NOT_MATCH_DEVICE = 2023;

        [NativeTypeName("#define ERROR_CONNECTED_OTHER_PASSWORD 2108L")]
        public const int ERROR_CONNECTED_OTHER_PASSWORD = 2108;

        [NativeTypeName("#define ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT 2109L")]
        public const int ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT = 2109;

        [NativeTypeName("#define ERROR_BAD_USERNAME 2202L")]
        public const int ERROR_BAD_USERNAME = 2202;

        [NativeTypeName("#define ERROR_NOT_CONNECTED 2250L")]
        public const int ERROR_NOT_CONNECTED = 2250;

        [NativeTypeName("#define ERROR_OPEN_FILES 2401L")]
        public const int ERROR_OPEN_FILES = 2401;

        [NativeTypeName("#define ERROR_ACTIVE_CONNECTIONS 2402L")]
        public const int ERROR_ACTIVE_CONNECTIONS = 2402;

        [NativeTypeName("#define ERROR_DEVICE_IN_USE 2404L")]
        public const int ERROR_DEVICE_IN_USE = 2404;

        [NativeTypeName("#define ERROR_UNKNOWN_PRINT_MONITOR 3000L")]
        public const int ERROR_UNKNOWN_PRINT_MONITOR = 3000;

        [NativeTypeName("#define ERROR_PRINTER_DRIVER_IN_USE 3001L")]
        public const int ERROR_PRINTER_DRIVER_IN_USE = 3001;

        [NativeTypeName("#define ERROR_SPOOL_FILE_NOT_FOUND 3002L")]
        public const int ERROR_SPOOL_FILE_NOT_FOUND = 3002;

        [NativeTypeName("#define ERROR_SPL_NO_STARTDOC 3003L")]
        public const int ERROR_SPL_NO_STARTDOC = 3003;

        [NativeTypeName("#define ERROR_SPL_NO_ADDJOB 3004L")]
        public const int ERROR_SPL_NO_ADDJOB = 3004;

        [NativeTypeName("#define ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED 3005L")]
        public const int ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED = 3005;

        [NativeTypeName("#define ERROR_PRINT_MONITOR_ALREADY_INSTALLED 3006L")]
        public const int ERROR_PRINT_MONITOR_ALREADY_INSTALLED = 3006;

        [NativeTypeName("#define ERROR_INVALID_PRINT_MONITOR 3007L")]
        public const int ERROR_INVALID_PRINT_MONITOR = 3007;

        [NativeTypeName("#define ERROR_PRINT_MONITOR_IN_USE 3008L")]
        public const int ERROR_PRINT_MONITOR_IN_USE = 3008;

        [NativeTypeName("#define ERROR_PRINTER_HAS_JOBS_QUEUED 3009L")]
        public const int ERROR_PRINTER_HAS_JOBS_QUEUED = 3009;

        [NativeTypeName("#define ERROR_SUCCESS_REBOOT_REQUIRED 3010L")]
        public const int ERROR_SUCCESS_REBOOT_REQUIRED = 3010;

        [NativeTypeName("#define ERROR_SUCCESS_RESTART_REQUIRED 3011L")]
        public const int ERROR_SUCCESS_RESTART_REQUIRED = 3011;

        [NativeTypeName("#define ERROR_PRINTER_NOT_FOUND 3012L")]
        public const int ERROR_PRINTER_NOT_FOUND = 3012;

        [NativeTypeName("#define ERROR_PRINTER_DRIVER_WARNED 3013L")]
        public const int ERROR_PRINTER_DRIVER_WARNED = 3013;

        [NativeTypeName("#define ERROR_PRINTER_DRIVER_BLOCKED 3014L")]
        public const int ERROR_PRINTER_DRIVER_BLOCKED = 3014;

        [NativeTypeName("#define ERROR_PRINTER_DRIVER_PACKAGE_IN_USE 3015L")]
        public const int ERROR_PRINTER_DRIVER_PACKAGE_IN_USE = 3015;

        [NativeTypeName("#define ERROR_CORE_DRIVER_PACKAGE_NOT_FOUND 3016L")]
        public const int ERROR_CORE_DRIVER_PACKAGE_NOT_FOUND = 3016;

        [NativeTypeName("#define ERROR_FAIL_REBOOT_REQUIRED 3017L")]
        public const int ERROR_FAIL_REBOOT_REQUIRED = 3017;

        [NativeTypeName("#define ERROR_FAIL_REBOOT_INITIATED 3018L")]
        public const int ERROR_FAIL_REBOOT_INITIATED = 3018;

        [NativeTypeName("#define ERROR_PRINTER_DRIVER_DOWNLOAD_NEEDED 3019L")]
        public const int ERROR_PRINTER_DRIVER_DOWNLOAD_NEEDED = 3019;

        [NativeTypeName("#define ERROR_PRINT_JOB_RESTART_REQUIRED 3020L")]
        public const int ERROR_PRINT_JOB_RESTART_REQUIRED = 3020;

        [NativeTypeName("#define ERROR_INVALID_PRINTER_DRIVER_MANIFEST 3021L")]
        public const int ERROR_INVALID_PRINTER_DRIVER_MANIFEST = 3021;

        [NativeTypeName("#define ERROR_PRINTER_NOT_SHAREABLE 3022L")]
        public const int ERROR_PRINTER_NOT_SHAREABLE = 3022;

        [NativeTypeName("#define ERROR_REQUEST_PAUSED 3050L")]
        public const int ERROR_REQUEST_PAUSED = 3050;

        [NativeTypeName("#define ERROR_APPEXEC_CONDITION_NOT_SATISFIED 3060L")]
        public const int ERROR_APPEXEC_CONDITION_NOT_SATISFIED = 3060;

        [NativeTypeName("#define ERROR_APPEXEC_HANDLE_INVALIDATED 3061L")]
        public const int ERROR_APPEXEC_HANDLE_INVALIDATED = 3061;

        [NativeTypeName("#define ERROR_APPEXEC_INVALID_HOST_GENERATION 3062L")]
        public const int ERROR_APPEXEC_INVALID_HOST_GENERATION = 3062;

        [NativeTypeName("#define ERROR_APPEXEC_UNEXPECTED_PROCESS_REGISTRATION 3063L")]
        public const int ERROR_APPEXEC_UNEXPECTED_PROCESS_REGISTRATION = 3063;

        [NativeTypeName("#define ERROR_APPEXEC_INVALID_HOST_STATE 3064L")]
        public const int ERROR_APPEXEC_INVALID_HOST_STATE = 3064;

        [NativeTypeName("#define ERROR_APPEXEC_NO_DONOR 3065L")]
        public const int ERROR_APPEXEC_NO_DONOR = 3065;

        [NativeTypeName("#define ERROR_APPEXEC_HOST_ID_MISMATCH 3066L")]
        public const int ERROR_APPEXEC_HOST_ID_MISMATCH = 3066;

        [NativeTypeName("#define ERROR_APPEXEC_UNKNOWN_USER 3067L")]
        public const int ERROR_APPEXEC_UNKNOWN_USER = 3067;

        [NativeTypeName("#define ERROR_IO_REISSUE_AS_CACHED 3950L")]
        public const int ERROR_IO_REISSUE_AS_CACHED = 3950;

        [NativeTypeName("#define ERROR_WINS_INTERNAL 4000L")]
        public const int ERROR_WINS_INTERNAL = 4000;

        [NativeTypeName("#define ERROR_CAN_NOT_DEL_LOCAL_WINS 4001L")]
        public const int ERROR_CAN_NOT_DEL_LOCAL_WINS = 4001;

        [NativeTypeName("#define ERROR_STATIC_INIT 4002L")]
        public const int ERROR_STATIC_INIT = 4002;

        [NativeTypeName("#define ERROR_INC_BACKUP 4003L")]
        public const int ERROR_INC_BACKUP = 4003;

        [NativeTypeName("#define ERROR_FULL_BACKUP 4004L")]
        public const int ERROR_FULL_BACKUP = 4004;

        [NativeTypeName("#define ERROR_REC_NON_EXISTENT 4005L")]
        public const int ERROR_REC_NON_EXISTENT = 4005;

        [NativeTypeName("#define ERROR_RPL_NOT_ALLOWED 4006L")]
        public const int ERROR_RPL_NOT_ALLOWED = 4006;

        [NativeTypeName("#define PEERDIST_ERROR_CONTENTINFO_VERSION_UNSUPPORTED 4050L")]
        public const int PEERDIST_ERROR_CONTENTINFO_VERSION_UNSUPPORTED = 4050;

        [NativeTypeName("#define PEERDIST_ERROR_CANNOT_PARSE_CONTENTINFO 4051L")]
        public const int PEERDIST_ERROR_CANNOT_PARSE_CONTENTINFO = 4051;

        [NativeTypeName("#define PEERDIST_ERROR_MISSING_DATA 4052L")]
        public const int PEERDIST_ERROR_MISSING_DATA = 4052;

        [NativeTypeName("#define PEERDIST_ERROR_NO_MORE 4053L")]
        public const int PEERDIST_ERROR_NO_MORE = 4053;

        [NativeTypeName("#define PEERDIST_ERROR_NOT_INITIALIZED 4054L")]
        public const int PEERDIST_ERROR_NOT_INITIALIZED = 4054;

        [NativeTypeName("#define PEERDIST_ERROR_ALREADY_INITIALIZED 4055L")]
        public const int PEERDIST_ERROR_ALREADY_INITIALIZED = 4055;

        [NativeTypeName("#define PEERDIST_ERROR_SHUTDOWN_IN_PROGRESS 4056L")]
        public const int PEERDIST_ERROR_SHUTDOWN_IN_PROGRESS = 4056;

        [NativeTypeName("#define PEERDIST_ERROR_INVALIDATED 4057L")]
        public const int PEERDIST_ERROR_INVALIDATED = 4057;

        [NativeTypeName("#define PEERDIST_ERROR_ALREADY_EXISTS 4058L")]
        public const int PEERDIST_ERROR_ALREADY_EXISTS = 4058;

        [NativeTypeName("#define PEERDIST_ERROR_OPERATION_NOTFOUND 4059L")]
        public const int PEERDIST_ERROR_OPERATION_NOTFOUND = 4059;

        [NativeTypeName("#define PEERDIST_ERROR_ALREADY_COMPLETED 4060L")]
        public const int PEERDIST_ERROR_ALREADY_COMPLETED = 4060;

        [NativeTypeName("#define PEERDIST_ERROR_OUT_OF_BOUNDS 4061L")]
        public const int PEERDIST_ERROR_OUT_OF_BOUNDS = 4061;

        [NativeTypeName("#define PEERDIST_ERROR_VERSION_UNSUPPORTED 4062L")]
        public const int PEERDIST_ERROR_VERSION_UNSUPPORTED = 4062;

        [NativeTypeName("#define PEERDIST_ERROR_INVALID_CONFIGURATION 4063L")]
        public const int PEERDIST_ERROR_INVALID_CONFIGURATION = 4063;

        [NativeTypeName("#define PEERDIST_ERROR_NOT_LICENSED 4064L")]
        public const int PEERDIST_ERROR_NOT_LICENSED = 4064;

        [NativeTypeName("#define PEERDIST_ERROR_SERVICE_UNAVAILABLE 4065L")]
        public const int PEERDIST_ERROR_SERVICE_UNAVAILABLE = 4065;

        [NativeTypeName("#define PEERDIST_ERROR_TRUST_FAILURE 4066L")]
        public const int PEERDIST_ERROR_TRUST_FAILURE = 4066;

        [NativeTypeName("#define ERROR_DHCP_ADDRESS_CONFLICT 4100L")]
        public const int ERROR_DHCP_ADDRESS_CONFLICT = 4100;

        [NativeTypeName("#define ERROR_WMI_GUID_NOT_FOUND 4200L")]
        public const int ERROR_WMI_GUID_NOT_FOUND = 4200;

        [NativeTypeName("#define ERROR_WMI_INSTANCE_NOT_FOUND 4201L")]
        public const int ERROR_WMI_INSTANCE_NOT_FOUND = 4201;

        [NativeTypeName("#define ERROR_WMI_ITEMID_NOT_FOUND 4202L")]
        public const int ERROR_WMI_ITEMID_NOT_FOUND = 4202;

        [NativeTypeName("#define ERROR_WMI_TRY_AGAIN 4203L")]
        public const int ERROR_WMI_TRY_AGAIN = 4203;

        [NativeTypeName("#define ERROR_WMI_DP_NOT_FOUND 4204L")]
        public const int ERROR_WMI_DP_NOT_FOUND = 4204;

        [NativeTypeName("#define ERROR_WMI_UNRESOLVED_INSTANCE_REF 4205L")]
        public const int ERROR_WMI_UNRESOLVED_INSTANCE_REF = 4205;

        [NativeTypeName("#define ERROR_WMI_ALREADY_ENABLED 4206L")]
        public const int ERROR_WMI_ALREADY_ENABLED = 4206;

        [NativeTypeName("#define ERROR_WMI_GUID_DISCONNECTED 4207L")]
        public const int ERROR_WMI_GUID_DISCONNECTED = 4207;

        [NativeTypeName("#define ERROR_WMI_SERVER_UNAVAILABLE 4208L")]
        public const int ERROR_WMI_SERVER_UNAVAILABLE = 4208;

        [NativeTypeName("#define ERROR_WMI_DP_FAILED 4209L")]
        public const int ERROR_WMI_DP_FAILED = 4209;

        [NativeTypeName("#define ERROR_WMI_INVALID_MOF 4210L")]
        public const int ERROR_WMI_INVALID_MOF = 4210;

        [NativeTypeName("#define ERROR_WMI_INVALID_REGINFO 4211L")]
        public const int ERROR_WMI_INVALID_REGINFO = 4211;

        [NativeTypeName("#define ERROR_WMI_ALREADY_DISABLED 4212L")]
        public const int ERROR_WMI_ALREADY_DISABLED = 4212;

        [NativeTypeName("#define ERROR_WMI_READ_ONLY 4213L")]
        public const int ERROR_WMI_READ_ONLY = 4213;

        [NativeTypeName("#define ERROR_WMI_SET_FAILURE 4214L")]
        public const int ERROR_WMI_SET_FAILURE = 4214;

        [NativeTypeName("#define ERROR_NOT_APPCONTAINER 4250L")]
        public const int ERROR_NOT_APPCONTAINER = 4250;

        [NativeTypeName("#define ERROR_APPCONTAINER_REQUIRED 4251L")]
        public const int ERROR_APPCONTAINER_REQUIRED = 4251;

        [NativeTypeName("#define ERROR_NOT_SUPPORTED_IN_APPCONTAINER 4252L")]
        public const int ERROR_NOT_SUPPORTED_IN_APPCONTAINER = 4252;

        [NativeTypeName("#define ERROR_INVALID_PACKAGE_SID_LENGTH 4253L")]
        public const int ERROR_INVALID_PACKAGE_SID_LENGTH = 4253;

        [NativeTypeName("#define ERROR_INVALID_MEDIA 4300L")]
        public const int ERROR_INVALID_MEDIA = 4300;

        [NativeTypeName("#define ERROR_INVALID_LIBRARY 4301L")]
        public const int ERROR_INVALID_LIBRARY = 4301;

        [NativeTypeName("#define ERROR_INVALID_MEDIA_POOL 4302L")]
        public const int ERROR_INVALID_MEDIA_POOL = 4302;

        [NativeTypeName("#define ERROR_DRIVE_MEDIA_MISMATCH 4303L")]
        public const int ERROR_DRIVE_MEDIA_MISMATCH = 4303;

        [NativeTypeName("#define ERROR_MEDIA_OFFLINE 4304L")]
        public const int ERROR_MEDIA_OFFLINE = 4304;

        [NativeTypeName("#define ERROR_LIBRARY_OFFLINE 4305L")]
        public const int ERROR_LIBRARY_OFFLINE = 4305;

        [NativeTypeName("#define ERROR_EMPTY 4306L")]
        public const int ERROR_EMPTY = 4306;

        [NativeTypeName("#define ERROR_NOT_EMPTY 4307L")]
        public const int ERROR_NOT_EMPTY = 4307;

        [NativeTypeName("#define ERROR_MEDIA_UNAVAILABLE 4308L")]
        public const int ERROR_MEDIA_UNAVAILABLE = 4308;

        [NativeTypeName("#define ERROR_RESOURCE_DISABLED 4309L")]
        public const int ERROR_RESOURCE_DISABLED = 4309;

        [NativeTypeName("#define ERROR_INVALID_CLEANER 4310L")]
        public const int ERROR_INVALID_CLEANER = 4310;

        [NativeTypeName("#define ERROR_UNABLE_TO_CLEAN 4311L")]
        public const int ERROR_UNABLE_TO_CLEAN = 4311;

        [NativeTypeName("#define ERROR_OBJECT_NOT_FOUND 4312L")]
        public const int ERROR_OBJECT_NOT_FOUND = 4312;

        [NativeTypeName("#define ERROR_DATABASE_FAILURE 4313L")]
        public const int ERROR_DATABASE_FAILURE = 4313;

        [NativeTypeName("#define ERROR_DATABASE_FULL 4314L")]
        public const int ERROR_DATABASE_FULL = 4314;

        [NativeTypeName("#define ERROR_MEDIA_INCOMPATIBLE 4315L")]
        public const int ERROR_MEDIA_INCOMPATIBLE = 4315;

        [NativeTypeName("#define ERROR_RESOURCE_NOT_PRESENT 4316L")]
        public const int ERROR_RESOURCE_NOT_PRESENT = 4316;

        [NativeTypeName("#define ERROR_INVALID_OPERATION 4317L")]
        public const int ERROR_INVALID_OPERATION = 4317;

        [NativeTypeName("#define ERROR_MEDIA_NOT_AVAILABLE 4318L")]
        public const int ERROR_MEDIA_NOT_AVAILABLE = 4318;

        [NativeTypeName("#define ERROR_DEVICE_NOT_AVAILABLE 4319L")]
        public const int ERROR_DEVICE_NOT_AVAILABLE = 4319;

        [NativeTypeName("#define ERROR_REQUEST_REFUSED 4320L")]
        public const int ERROR_REQUEST_REFUSED = 4320;

        [NativeTypeName("#define ERROR_INVALID_DRIVE_OBJECT 4321L")]
        public const int ERROR_INVALID_DRIVE_OBJECT = 4321;

        [NativeTypeName("#define ERROR_LIBRARY_FULL 4322L")]
        public const int ERROR_LIBRARY_FULL = 4322;

        [NativeTypeName("#define ERROR_MEDIUM_NOT_ACCESSIBLE 4323L")]
        public const int ERROR_MEDIUM_NOT_ACCESSIBLE = 4323;

        [NativeTypeName("#define ERROR_UNABLE_TO_LOAD_MEDIUM 4324L")]
        public const int ERROR_UNABLE_TO_LOAD_MEDIUM = 4324;

        [NativeTypeName("#define ERROR_UNABLE_TO_INVENTORY_DRIVE 4325L")]
        public const int ERROR_UNABLE_TO_INVENTORY_DRIVE = 4325;

        [NativeTypeName("#define ERROR_UNABLE_TO_INVENTORY_SLOT 4326L")]
        public const int ERROR_UNABLE_TO_INVENTORY_SLOT = 4326;

        [NativeTypeName("#define ERROR_UNABLE_TO_INVENTORY_TRANSPORT 4327L")]
        public const int ERROR_UNABLE_TO_INVENTORY_TRANSPORT = 4327;

        [NativeTypeName("#define ERROR_TRANSPORT_FULL 4328L")]
        public const int ERROR_TRANSPORT_FULL = 4328;

        [NativeTypeName("#define ERROR_CONTROLLING_IEPORT 4329L")]
        public const int ERROR_CONTROLLING_IEPORT = 4329;

        [NativeTypeName("#define ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA 4330L")]
        public const int ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA = 4330;

        [NativeTypeName("#define ERROR_CLEANER_SLOT_SET 4331L")]
        public const int ERROR_CLEANER_SLOT_SET = 4331;

        [NativeTypeName("#define ERROR_CLEANER_SLOT_NOT_SET 4332L")]
        public const int ERROR_CLEANER_SLOT_NOT_SET = 4332;

        [NativeTypeName("#define ERROR_CLEANER_CARTRIDGE_SPENT 4333L")]
        public const int ERROR_CLEANER_CARTRIDGE_SPENT = 4333;

        [NativeTypeName("#define ERROR_UNEXPECTED_OMID 4334L")]
        public const int ERROR_UNEXPECTED_OMID = 4334;

        [NativeTypeName("#define ERROR_CANT_DELETE_LAST_ITEM 4335L")]
        public const int ERROR_CANT_DELETE_LAST_ITEM = 4335;

        [NativeTypeName("#define ERROR_MESSAGE_EXCEEDS_MAX_SIZE 4336L")]
        public const int ERROR_MESSAGE_EXCEEDS_MAX_SIZE = 4336;

        [NativeTypeName("#define ERROR_VOLUME_CONTAINS_SYS_FILES 4337L")]
        public const int ERROR_VOLUME_CONTAINS_SYS_FILES = 4337;

        [NativeTypeName("#define ERROR_INDIGENOUS_TYPE 4338L")]
        public const int ERROR_INDIGENOUS_TYPE = 4338;

        [NativeTypeName("#define ERROR_NO_SUPPORTING_DRIVES 4339L")]
        public const int ERROR_NO_SUPPORTING_DRIVES = 4339;

        [NativeTypeName("#define ERROR_CLEANER_CARTRIDGE_INSTALLED 4340L")]
        public const int ERROR_CLEANER_CARTRIDGE_INSTALLED = 4340;

        [NativeTypeName("#define ERROR_IEPORT_FULL 4341L")]
        public const int ERROR_IEPORT_FULL = 4341;

        [NativeTypeName("#define ERROR_FILE_OFFLINE 4350L")]
        public const int ERROR_FILE_OFFLINE = 4350;

        [NativeTypeName("#define ERROR_REMOTE_STORAGE_NOT_ACTIVE 4351L")]
        public const int ERROR_REMOTE_STORAGE_NOT_ACTIVE = 4351;

        [NativeTypeName("#define ERROR_REMOTE_STORAGE_MEDIA_ERROR 4352L")]
        public const int ERROR_REMOTE_STORAGE_MEDIA_ERROR = 4352;

        [NativeTypeName("#define ERROR_NOT_A_REPARSE_POINT 4390L")]
        public const int ERROR_NOT_A_REPARSE_POINT = 4390;

        [NativeTypeName("#define ERROR_REPARSE_ATTRIBUTE_CONFLICT 4391L")]
        public const int ERROR_REPARSE_ATTRIBUTE_CONFLICT = 4391;

        [NativeTypeName("#define ERROR_INVALID_REPARSE_DATA 4392L")]
        public const int ERROR_INVALID_REPARSE_DATA = 4392;

        [NativeTypeName("#define ERROR_REPARSE_TAG_INVALID 4393L")]
        public const int ERROR_REPARSE_TAG_INVALID = 4393;

        [NativeTypeName("#define ERROR_REPARSE_TAG_MISMATCH 4394L")]
        public const int ERROR_REPARSE_TAG_MISMATCH = 4394;

        [NativeTypeName("#define ERROR_REPARSE_POINT_ENCOUNTERED 4395L")]
        public const int ERROR_REPARSE_POINT_ENCOUNTERED = 4395;

        [NativeTypeName("#define ERROR_APP_DATA_NOT_FOUND 4400L")]
        public const int ERROR_APP_DATA_NOT_FOUND = 4400;

        [NativeTypeName("#define ERROR_APP_DATA_EXPIRED 4401L")]
        public const int ERROR_APP_DATA_EXPIRED = 4401;

        [NativeTypeName("#define ERROR_APP_DATA_CORRUPT 4402L")]
        public const int ERROR_APP_DATA_CORRUPT = 4402;

        [NativeTypeName("#define ERROR_APP_DATA_LIMIT_EXCEEDED 4403L")]
        public const int ERROR_APP_DATA_LIMIT_EXCEEDED = 4403;

        [NativeTypeName("#define ERROR_APP_DATA_REBOOT_REQUIRED 4404L")]
        public const int ERROR_APP_DATA_REBOOT_REQUIRED = 4404;

        [NativeTypeName("#define ERROR_SECUREBOOT_ROLLBACK_DETECTED 4420L")]
        public const int ERROR_SECUREBOOT_ROLLBACK_DETECTED = 4420;

        [NativeTypeName("#define ERROR_SECUREBOOT_POLICY_VIOLATION 4421L")]
        public const int ERROR_SECUREBOOT_POLICY_VIOLATION = 4421;

        [NativeTypeName("#define ERROR_SECUREBOOT_INVALID_POLICY 4422L")]
        public const int ERROR_SECUREBOOT_INVALID_POLICY = 4422;

        [NativeTypeName("#define ERROR_SECUREBOOT_POLICY_PUBLISHER_NOT_FOUND 4423L")]
        public const int ERROR_SECUREBOOT_POLICY_PUBLISHER_NOT_FOUND = 4423;

        [NativeTypeName("#define ERROR_SECUREBOOT_POLICY_NOT_SIGNED 4424L")]
        public const int ERROR_SECUREBOOT_POLICY_NOT_SIGNED = 4424;

        [NativeTypeName("#define ERROR_SECUREBOOT_NOT_ENABLED 4425L")]
        public const int ERROR_SECUREBOOT_NOT_ENABLED = 4425;

        [NativeTypeName("#define ERROR_SECUREBOOT_FILE_REPLACED 4426L")]
        public const int ERROR_SECUREBOOT_FILE_REPLACED = 4426;

        [NativeTypeName("#define ERROR_SECUREBOOT_POLICY_NOT_AUTHORIZED 4427L")]
        public const int ERROR_SECUREBOOT_POLICY_NOT_AUTHORIZED = 4427;

        [NativeTypeName("#define ERROR_SECUREBOOT_POLICY_UNKNOWN 4428L")]
        public const int ERROR_SECUREBOOT_POLICY_UNKNOWN = 4428;

        [NativeTypeName("#define ERROR_SECUREBOOT_POLICY_MISSING_ANTIROLLBACKVERSION 4429L")]
        public const int ERROR_SECUREBOOT_POLICY_MISSING_ANTIROLLBACKVERSION = 4429;

        [NativeTypeName("#define ERROR_SECUREBOOT_PLATFORM_ID_MISMATCH 4430L")]
        public const int ERROR_SECUREBOOT_PLATFORM_ID_MISMATCH = 4430;

        [NativeTypeName("#define ERROR_SECUREBOOT_POLICY_ROLLBACK_DETECTED 4431L")]
        public const int ERROR_SECUREBOOT_POLICY_ROLLBACK_DETECTED = 4431;

        [NativeTypeName("#define ERROR_SECUREBOOT_POLICY_UPGRADE_MISMATCH 4432L")]
        public const int ERROR_SECUREBOOT_POLICY_UPGRADE_MISMATCH = 4432;

        [NativeTypeName("#define ERROR_SECUREBOOT_REQUIRED_POLICY_FILE_MISSING 4433L")]
        public const int ERROR_SECUREBOOT_REQUIRED_POLICY_FILE_MISSING = 4433;

        [NativeTypeName("#define ERROR_SECUREBOOT_NOT_BASE_POLICY 4434L")]
        public const int ERROR_SECUREBOOT_NOT_BASE_POLICY = 4434;

        [NativeTypeName("#define ERROR_SECUREBOOT_NOT_SUPPLEMENTAL_POLICY 4435L")]
        public const int ERROR_SECUREBOOT_NOT_SUPPLEMENTAL_POLICY = 4435;

        [NativeTypeName("#define ERROR_OFFLOAD_READ_FLT_NOT_SUPPORTED 4440L")]
        public const int ERROR_OFFLOAD_READ_FLT_NOT_SUPPORTED = 4440;

        [NativeTypeName("#define ERROR_OFFLOAD_WRITE_FLT_NOT_SUPPORTED 4441L")]
        public const int ERROR_OFFLOAD_WRITE_FLT_NOT_SUPPORTED = 4441;

        [NativeTypeName("#define ERROR_OFFLOAD_READ_FILE_NOT_SUPPORTED 4442L")]
        public const int ERROR_OFFLOAD_READ_FILE_NOT_SUPPORTED = 4442;

        [NativeTypeName("#define ERROR_OFFLOAD_WRITE_FILE_NOT_SUPPORTED 4443L")]
        public const int ERROR_OFFLOAD_WRITE_FILE_NOT_SUPPORTED = 4443;

        [NativeTypeName("#define ERROR_ALREADY_HAS_STREAM_ID 4444L")]
        public const int ERROR_ALREADY_HAS_STREAM_ID = 4444;

        [NativeTypeName("#define ERROR_SMR_GARBAGE_COLLECTION_REQUIRED 4445L")]
        public const int ERROR_SMR_GARBAGE_COLLECTION_REQUIRED = 4445;

        [NativeTypeName("#define ERROR_WOF_WIM_HEADER_CORRUPT 4446L")]
        public const int ERROR_WOF_WIM_HEADER_CORRUPT = 4446;

        [NativeTypeName("#define ERROR_WOF_WIM_RESOURCE_TABLE_CORRUPT 4447L")]
        public const int ERROR_WOF_WIM_RESOURCE_TABLE_CORRUPT = 4447;

        [NativeTypeName("#define ERROR_WOF_FILE_RESOURCE_TABLE_CORRUPT 4448L")]
        public const int ERROR_WOF_FILE_RESOURCE_TABLE_CORRUPT = 4448;

        [NativeTypeName("#define ERROR_VOLUME_NOT_SIS_ENABLED 4500L")]
        public const int ERROR_VOLUME_NOT_SIS_ENABLED = 4500;

        [NativeTypeName("#define ERROR_SYSTEM_INTEGRITY_ROLLBACK_DETECTED 4550L")]
        public const int ERROR_SYSTEM_INTEGRITY_ROLLBACK_DETECTED = 4550;

        [NativeTypeName("#define ERROR_SYSTEM_INTEGRITY_POLICY_VIOLATION 4551L")]
        public const int ERROR_SYSTEM_INTEGRITY_POLICY_VIOLATION = 4551;

        [NativeTypeName("#define ERROR_SYSTEM_INTEGRITY_INVALID_POLICY 4552L")]
        public const int ERROR_SYSTEM_INTEGRITY_INVALID_POLICY = 4552;

        [NativeTypeName("#define ERROR_SYSTEM_INTEGRITY_POLICY_NOT_SIGNED 4553L")]
        public const int ERROR_SYSTEM_INTEGRITY_POLICY_NOT_SIGNED = 4553;

        [NativeTypeName("#define ERROR_SYSTEM_INTEGRITY_TOO_MANY_POLICIES 4554L")]
        public const int ERROR_SYSTEM_INTEGRITY_TOO_MANY_POLICIES = 4554;

        [NativeTypeName("#define ERROR_SYSTEM_INTEGRITY_SUPPLEMENTAL_POLICY_NOT_AUTHORIZED 4555L")]
        public const int ERROR_SYSTEM_INTEGRITY_SUPPLEMENTAL_POLICY_NOT_AUTHORIZED = 4555;

        [NativeTypeName("#define ERROR_VSM_NOT_INITIALIZED 4560L")]
        public const int ERROR_VSM_NOT_INITIALIZED = 4560;

        [NativeTypeName("#define ERROR_VSM_DMA_PROTECTION_NOT_IN_USE 4561L")]
        public const int ERROR_VSM_DMA_PROTECTION_NOT_IN_USE = 4561;

        [NativeTypeName("#define ERROR_PLATFORM_MANIFEST_NOT_AUTHORIZED 4570L")]
        public const int ERROR_PLATFORM_MANIFEST_NOT_AUTHORIZED = 4570;

        [NativeTypeName("#define ERROR_PLATFORM_MANIFEST_INVALID 4571L")]
        public const int ERROR_PLATFORM_MANIFEST_INVALID = 4571;

        [NativeTypeName("#define ERROR_PLATFORM_MANIFEST_FILE_NOT_AUTHORIZED 4572L")]
        public const int ERROR_PLATFORM_MANIFEST_FILE_NOT_AUTHORIZED = 4572;

        [NativeTypeName("#define ERROR_PLATFORM_MANIFEST_CATALOG_NOT_AUTHORIZED 4573L")]
        public const int ERROR_PLATFORM_MANIFEST_CATALOG_NOT_AUTHORIZED = 4573;

        [NativeTypeName("#define ERROR_PLATFORM_MANIFEST_BINARY_ID_NOT_FOUND 4574L")]
        public const int ERROR_PLATFORM_MANIFEST_BINARY_ID_NOT_FOUND = 4574;

        [NativeTypeName("#define ERROR_PLATFORM_MANIFEST_NOT_ACTIVE 4575L")]
        public const int ERROR_PLATFORM_MANIFEST_NOT_ACTIVE = 4575;

        [NativeTypeName("#define ERROR_PLATFORM_MANIFEST_NOT_SIGNED 4576L")]
        public const int ERROR_PLATFORM_MANIFEST_NOT_SIGNED = 4576;

        [NativeTypeName("#define ERROR_DEPENDENT_RESOURCE_EXISTS 5001L")]
        public const int ERROR_DEPENDENT_RESOURCE_EXISTS = 5001;

        [NativeTypeName("#define ERROR_DEPENDENCY_NOT_FOUND 5002L")]
        public const int ERROR_DEPENDENCY_NOT_FOUND = 5002;

        [NativeTypeName("#define ERROR_DEPENDENCY_ALREADY_EXISTS 5003L")]
        public const int ERROR_DEPENDENCY_ALREADY_EXISTS = 5003;

        [NativeTypeName("#define ERROR_RESOURCE_NOT_ONLINE 5004L")]
        public const int ERROR_RESOURCE_NOT_ONLINE = 5004;

        [NativeTypeName("#define ERROR_HOST_NODE_NOT_AVAILABLE 5005L")]
        public const int ERROR_HOST_NODE_NOT_AVAILABLE = 5005;

        [NativeTypeName("#define ERROR_RESOURCE_NOT_AVAILABLE 5006L")]
        public const int ERROR_RESOURCE_NOT_AVAILABLE = 5006;

        [NativeTypeName("#define ERROR_RESOURCE_NOT_FOUND 5007L")]
        public const int ERROR_RESOURCE_NOT_FOUND = 5007;

        [NativeTypeName("#define ERROR_SHUTDOWN_CLUSTER 5008L")]
        public const int ERROR_SHUTDOWN_CLUSTER = 5008;

        [NativeTypeName("#define ERROR_CANT_EVICT_ACTIVE_NODE 5009L")]
        public const int ERROR_CANT_EVICT_ACTIVE_NODE = 5009;

        [NativeTypeName("#define ERROR_OBJECT_ALREADY_EXISTS 5010L")]
        public const int ERROR_OBJECT_ALREADY_EXISTS = 5010;

        [NativeTypeName("#define ERROR_OBJECT_IN_LIST 5011L")]
        public const int ERROR_OBJECT_IN_LIST = 5011;

        [NativeTypeName("#define ERROR_GROUP_NOT_AVAILABLE 5012L")]
        public const int ERROR_GROUP_NOT_AVAILABLE = 5012;

        [NativeTypeName("#define ERROR_GROUP_NOT_FOUND 5013L")]
        public const int ERROR_GROUP_NOT_FOUND = 5013;

        [NativeTypeName("#define ERROR_GROUP_NOT_ONLINE 5014L")]
        public const int ERROR_GROUP_NOT_ONLINE = 5014;

        [NativeTypeName("#define ERROR_HOST_NODE_NOT_RESOURCE_OWNER 5015L")]
        public const int ERROR_HOST_NODE_NOT_RESOURCE_OWNER = 5015;

        [NativeTypeName("#define ERROR_HOST_NODE_NOT_GROUP_OWNER 5016L")]
        public const int ERROR_HOST_NODE_NOT_GROUP_OWNER = 5016;

        [NativeTypeName("#define ERROR_RESMON_CREATE_FAILED 5017L")]
        public const int ERROR_RESMON_CREATE_FAILED = 5017;

        [NativeTypeName("#define ERROR_RESMON_ONLINE_FAILED 5018L")]
        public const int ERROR_RESMON_ONLINE_FAILED = 5018;

        [NativeTypeName("#define ERROR_RESOURCE_ONLINE 5019L")]
        public const int ERROR_RESOURCE_ONLINE = 5019;

        [NativeTypeName("#define ERROR_QUORUM_RESOURCE 5020L")]
        public const int ERROR_QUORUM_RESOURCE = 5020;

        [NativeTypeName("#define ERROR_NOT_QUORUM_CAPABLE 5021L")]
        public const int ERROR_NOT_QUORUM_CAPABLE = 5021;

        [NativeTypeName("#define ERROR_CLUSTER_SHUTTING_DOWN 5022L")]
        public const int ERROR_CLUSTER_SHUTTING_DOWN = 5022;

        [NativeTypeName("#define ERROR_INVALID_STATE 5023L")]
        public const int ERROR_INVALID_STATE = 5023;

        [NativeTypeName("#define ERROR_RESOURCE_PROPERTIES_STORED 5024L")]
        public const int ERROR_RESOURCE_PROPERTIES_STORED = 5024;

        [NativeTypeName("#define ERROR_NOT_QUORUM_CLASS 5025L")]
        public const int ERROR_NOT_QUORUM_CLASS = 5025;

        [NativeTypeName("#define ERROR_CORE_RESOURCE 5026L")]
        public const int ERROR_CORE_RESOURCE = 5026;

        [NativeTypeName("#define ERROR_QUORUM_RESOURCE_ONLINE_FAILED 5027L")]
        public const int ERROR_QUORUM_RESOURCE_ONLINE_FAILED = 5027;

        [NativeTypeName("#define ERROR_QUORUMLOG_OPEN_FAILED 5028L")]
        public const int ERROR_QUORUMLOG_OPEN_FAILED = 5028;

        [NativeTypeName("#define ERROR_CLUSTERLOG_CORRUPT 5029L")]
        public const int ERROR_CLUSTERLOG_CORRUPT = 5029;

        [NativeTypeName("#define ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE 5030L")]
        public const int ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE = 5030;

        [NativeTypeName("#define ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE 5031L")]
        public const int ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE = 5031;

        [NativeTypeName("#define ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND 5032L")]
        public const int ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND = 5032;

        [NativeTypeName("#define ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE 5033L")]
        public const int ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE = 5033;

        [NativeTypeName("#define ERROR_QUORUM_OWNER_ALIVE 5034L")]
        public const int ERROR_QUORUM_OWNER_ALIVE = 5034;

        [NativeTypeName("#define ERROR_NETWORK_NOT_AVAILABLE 5035L")]
        public const int ERROR_NETWORK_NOT_AVAILABLE = 5035;

        [NativeTypeName("#define ERROR_NODE_NOT_AVAILABLE 5036L")]
        public const int ERROR_NODE_NOT_AVAILABLE = 5036;

        [NativeTypeName("#define ERROR_ALL_NODES_NOT_AVAILABLE 5037L")]
        public const int ERROR_ALL_NODES_NOT_AVAILABLE = 5037;

        [NativeTypeName("#define ERROR_RESOURCE_FAILED 5038L")]
        public const int ERROR_RESOURCE_FAILED = 5038;

        [NativeTypeName("#define ERROR_CLUSTER_INVALID_NODE 5039L")]
        public const int ERROR_CLUSTER_INVALID_NODE = 5039;

        [NativeTypeName("#define ERROR_CLUSTER_NODE_EXISTS 5040L")]
        public const int ERROR_CLUSTER_NODE_EXISTS = 5040;

        [NativeTypeName("#define ERROR_CLUSTER_JOIN_IN_PROGRESS 5041L")]
        public const int ERROR_CLUSTER_JOIN_IN_PROGRESS = 5041;

        [NativeTypeName("#define ERROR_CLUSTER_NODE_NOT_FOUND 5042L")]
        public const int ERROR_CLUSTER_NODE_NOT_FOUND = 5042;

        [NativeTypeName("#define ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND 5043L")]
        public const int ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND = 5043;

        [NativeTypeName("#define ERROR_CLUSTER_NETWORK_EXISTS 5044L")]
        public const int ERROR_CLUSTER_NETWORK_EXISTS = 5044;

        [NativeTypeName("#define ERROR_CLUSTER_NETWORK_NOT_FOUND 5045L")]
        public const int ERROR_CLUSTER_NETWORK_NOT_FOUND = 5045;

        [NativeTypeName("#define ERROR_CLUSTER_NETINTERFACE_EXISTS 5046L")]
        public const int ERROR_CLUSTER_NETINTERFACE_EXISTS = 5046;

        [NativeTypeName("#define ERROR_CLUSTER_NETINTERFACE_NOT_FOUND 5047L")]
        public const int ERROR_CLUSTER_NETINTERFACE_NOT_FOUND = 5047;

        [NativeTypeName("#define ERROR_CLUSTER_INVALID_REQUEST 5048L")]
        public const int ERROR_CLUSTER_INVALID_REQUEST = 5048;

        [NativeTypeName("#define ERROR_CLUSTER_INVALID_NETWORK_PROVIDER 5049L")]
        public const int ERROR_CLUSTER_INVALID_NETWORK_PROVIDER = 5049;

        [NativeTypeName("#define ERROR_CLUSTER_NODE_DOWN 5050L")]
        public const int ERROR_CLUSTER_NODE_DOWN = 5050;

        [NativeTypeName("#define ERROR_CLUSTER_NODE_UNREACHABLE 5051L")]
        public const int ERROR_CLUSTER_NODE_UNREACHABLE = 5051;

        [NativeTypeName("#define ERROR_CLUSTER_NODE_NOT_MEMBER 5052L")]
        public const int ERROR_CLUSTER_NODE_NOT_MEMBER = 5052;

        [NativeTypeName("#define ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS 5053L")]
        public const int ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS = 5053;

        [NativeTypeName("#define ERROR_CLUSTER_INVALID_NETWORK 5054L")]
        public const int ERROR_CLUSTER_INVALID_NETWORK = 5054;

        [NativeTypeName("#define ERROR_CLUSTER_NODE_UP 5056L")]
        public const int ERROR_CLUSTER_NODE_UP = 5056;

        [NativeTypeName("#define ERROR_CLUSTER_IPADDR_IN_USE 5057L")]
        public const int ERROR_CLUSTER_IPADDR_IN_USE = 5057;

        [NativeTypeName("#define ERROR_CLUSTER_NODE_NOT_PAUSED 5058L")]
        public const int ERROR_CLUSTER_NODE_NOT_PAUSED = 5058;

        [NativeTypeName("#define ERROR_CLUSTER_NO_SECURITY_CONTEXT 5059L")]
        public const int ERROR_CLUSTER_NO_SECURITY_CONTEXT = 5059;

        [NativeTypeName("#define ERROR_CLUSTER_NETWORK_NOT_INTERNAL 5060L")]
        public const int ERROR_CLUSTER_NETWORK_NOT_INTERNAL = 5060;

        [NativeTypeName("#define ERROR_CLUSTER_NODE_ALREADY_UP 5061L")]
        public const int ERROR_CLUSTER_NODE_ALREADY_UP = 5061;

        [NativeTypeName("#define ERROR_CLUSTER_NODE_ALREADY_DOWN 5062L")]
        public const int ERROR_CLUSTER_NODE_ALREADY_DOWN = 5062;

        [NativeTypeName("#define ERROR_CLUSTER_NETWORK_ALREADY_ONLINE 5063L")]
        public const int ERROR_CLUSTER_NETWORK_ALREADY_ONLINE = 5063;

        [NativeTypeName("#define ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE 5064L")]
        public const int ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE = 5064;

        [NativeTypeName("#define ERROR_CLUSTER_NODE_ALREADY_MEMBER 5065L")]
        public const int ERROR_CLUSTER_NODE_ALREADY_MEMBER = 5065;

        [NativeTypeName("#define ERROR_CLUSTER_LAST_INTERNAL_NETWORK 5066L")]
        public const int ERROR_CLUSTER_LAST_INTERNAL_NETWORK = 5066;

        [NativeTypeName("#define ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS 5067L")]
        public const int ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS = 5067;

        [NativeTypeName("#define ERROR_INVALID_OPERATION_ON_QUORUM 5068L")]
        public const int ERROR_INVALID_OPERATION_ON_QUORUM = 5068;

        [NativeTypeName("#define ERROR_DEPENDENCY_NOT_ALLOWED 5069L")]
        public const int ERROR_DEPENDENCY_NOT_ALLOWED = 5069;

        [NativeTypeName("#define ERROR_CLUSTER_NODE_PAUSED 5070L")]
        public const int ERROR_CLUSTER_NODE_PAUSED = 5070;

        [NativeTypeName("#define ERROR_NODE_CANT_HOST_RESOURCE 5071L")]
        public const int ERROR_NODE_CANT_HOST_RESOURCE = 5071;

        [NativeTypeName("#define ERROR_CLUSTER_NODE_NOT_READY 5072L")]
        public const int ERROR_CLUSTER_NODE_NOT_READY = 5072;

        [NativeTypeName("#define ERROR_CLUSTER_NODE_SHUTTING_DOWN 5073L")]
        public const int ERROR_CLUSTER_NODE_SHUTTING_DOWN = 5073;

        [NativeTypeName("#define ERROR_CLUSTER_JOIN_ABORTED 5074L")]
        public const int ERROR_CLUSTER_JOIN_ABORTED = 5074;

        [NativeTypeName("#define ERROR_CLUSTER_INCOMPATIBLE_VERSIONS 5075L")]
        public const int ERROR_CLUSTER_INCOMPATIBLE_VERSIONS = 5075;

        [NativeTypeName("#define ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED 5076L")]
        public const int ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED = 5076;

        [NativeTypeName("#define ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED 5077L")]
        public const int ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED = 5077;

        [NativeTypeName("#define ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND 5078L")]
        public const int ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND = 5078;

        [NativeTypeName("#define ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED 5079L")]
        public const int ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED = 5079;

        [NativeTypeName("#define ERROR_CLUSTER_RESNAME_NOT_FOUND 5080L")]
        public const int ERROR_CLUSTER_RESNAME_NOT_FOUND = 5080;

        [NativeTypeName("#define ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED 5081L")]
        public const int ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED = 5081;

        [NativeTypeName("#define ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST 5082L")]
        public const int ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST = 5082;

        [NativeTypeName("#define ERROR_CLUSTER_DATABASE_SEQMISMATCH 5083L")]
        public const int ERROR_CLUSTER_DATABASE_SEQMISMATCH = 5083;

        [NativeTypeName("#define ERROR_RESMON_INVALID_STATE 5084L")]
        public const int ERROR_RESMON_INVALID_STATE = 5084;

        [NativeTypeName("#define ERROR_CLUSTER_GUM_NOT_LOCKER 5085L")]
        public const int ERROR_CLUSTER_GUM_NOT_LOCKER = 5085;

        [NativeTypeName("#define ERROR_QUORUM_DISK_NOT_FOUND 5086L")]
        public const int ERROR_QUORUM_DISK_NOT_FOUND = 5086;

        [NativeTypeName("#define ERROR_DATABASE_BACKUP_CORRUPT 5087L")]
        public const int ERROR_DATABASE_BACKUP_CORRUPT = 5087;

        [NativeTypeName("#define ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT 5088L")]
        public const int ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT = 5088;

        [NativeTypeName("#define ERROR_RESOURCE_PROPERTY_UNCHANGEABLE 5089L")]
        public const int ERROR_RESOURCE_PROPERTY_UNCHANGEABLE = 5089;

        [NativeTypeName("#define ERROR_NO_ADMIN_ACCESS_POINT 5090L")]
        public const int ERROR_NO_ADMIN_ACCESS_POINT = 5090;

        [NativeTypeName("#define ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE 5890L")]
        public const int ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE = 5890;

        [NativeTypeName("#define ERROR_CLUSTER_QUORUMLOG_NOT_FOUND 5891L")]
        public const int ERROR_CLUSTER_QUORUMLOG_NOT_FOUND = 5891;

        [NativeTypeName("#define ERROR_CLUSTER_MEMBERSHIP_HALT 5892L")]
        public const int ERROR_CLUSTER_MEMBERSHIP_HALT = 5892;

        [NativeTypeName("#define ERROR_CLUSTER_INSTANCE_ID_MISMATCH 5893L")]
        public const int ERROR_CLUSTER_INSTANCE_ID_MISMATCH = 5893;

        [NativeTypeName("#define ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP 5894L")]
        public const int ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP = 5894;

        [NativeTypeName("#define ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH 5895L")]
        public const int ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH = 5895;

        [NativeTypeName("#define ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP 5896L")]
        public const int ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP = 5896;

        [NativeTypeName("#define ERROR_CLUSTER_PARAMETER_MISMATCH 5897L")]
        public const int ERROR_CLUSTER_PARAMETER_MISMATCH = 5897;

        [NativeTypeName("#define ERROR_NODE_CANNOT_BE_CLUSTERED 5898L")]
        public const int ERROR_NODE_CANNOT_BE_CLUSTERED = 5898;

        [NativeTypeName("#define ERROR_CLUSTER_WRONG_OS_VERSION 5899L")]
        public const int ERROR_CLUSTER_WRONG_OS_VERSION = 5899;

        [NativeTypeName("#define ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME 5900L")]
        public const int ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME = 5900;

        [NativeTypeName("#define ERROR_CLUSCFG_ALREADY_COMMITTED 5901L")]
        public const int ERROR_CLUSCFG_ALREADY_COMMITTED = 5901;

        [NativeTypeName("#define ERROR_CLUSCFG_ROLLBACK_FAILED 5902L")]
        public const int ERROR_CLUSCFG_ROLLBACK_FAILED = 5902;

        [NativeTypeName("#define ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT 5903L")]
        public const int ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT = 5903;

        [NativeTypeName("#define ERROR_CLUSTER_OLD_VERSION 5904L")]
        public const int ERROR_CLUSTER_OLD_VERSION = 5904;

        [NativeTypeName("#define ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME 5905L")]
        public const int ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME = 5905;

        [NativeTypeName("#define ERROR_CLUSTER_NO_NET_ADAPTERS 5906L")]
        public const int ERROR_CLUSTER_NO_NET_ADAPTERS = 5906;

        [NativeTypeName("#define ERROR_CLUSTER_POISONED 5907L")]
        public const int ERROR_CLUSTER_POISONED = 5907;

        [NativeTypeName("#define ERROR_CLUSTER_GROUP_MOVING 5908L")]
        public const int ERROR_CLUSTER_GROUP_MOVING = 5908;

        [NativeTypeName("#define ERROR_CLUSTER_RESOURCE_TYPE_BUSY 5909L")]
        public const int ERROR_CLUSTER_RESOURCE_TYPE_BUSY = 5909;

        [NativeTypeName("#define ERROR_RESOURCE_CALL_TIMED_OUT 5910L")]
        public const int ERROR_RESOURCE_CALL_TIMED_OUT = 5910;

        [NativeTypeName("#define ERROR_INVALID_CLUSTER_IPV6_ADDRESS 5911L")]
        public const int ERROR_INVALID_CLUSTER_IPV6_ADDRESS = 5911;

        [NativeTypeName("#define ERROR_CLUSTER_INTERNAL_INVALID_FUNCTION 5912L")]
        public const int ERROR_CLUSTER_INTERNAL_INVALID_FUNCTION = 5912;

        [NativeTypeName("#define ERROR_CLUSTER_PARAMETER_OUT_OF_BOUNDS 5913L")]
        public const int ERROR_CLUSTER_PARAMETER_OUT_OF_BOUNDS = 5913;

        [NativeTypeName("#define ERROR_CLUSTER_PARTIAL_SEND 5914L")]
        public const int ERROR_CLUSTER_PARTIAL_SEND = 5914;

        [NativeTypeName("#define ERROR_CLUSTER_REGISTRY_INVALID_FUNCTION 5915L")]
        public const int ERROR_CLUSTER_REGISTRY_INVALID_FUNCTION = 5915;

        [NativeTypeName("#define ERROR_CLUSTER_INVALID_STRING_TERMINATION 5916L")]
        public const int ERROR_CLUSTER_INVALID_STRING_TERMINATION = 5916;

        [NativeTypeName("#define ERROR_CLUSTER_INVALID_STRING_FORMAT 5917L")]
        public const int ERROR_CLUSTER_INVALID_STRING_FORMAT = 5917;

        [NativeTypeName("#define ERROR_CLUSTER_DATABASE_TRANSACTION_IN_PROGRESS 5918L")]
        public const int ERROR_CLUSTER_DATABASE_TRANSACTION_IN_PROGRESS = 5918;

        [NativeTypeName("#define ERROR_CLUSTER_DATABASE_TRANSACTION_NOT_IN_PROGRESS 5919L")]
        public const int ERROR_CLUSTER_DATABASE_TRANSACTION_NOT_IN_PROGRESS = 5919;

        [NativeTypeName("#define ERROR_CLUSTER_NULL_DATA 5920L")]
        public const int ERROR_CLUSTER_NULL_DATA = 5920;

        [NativeTypeName("#define ERROR_CLUSTER_PARTIAL_READ 5921L")]
        public const int ERROR_CLUSTER_PARTIAL_READ = 5921;

        [NativeTypeName("#define ERROR_CLUSTER_PARTIAL_WRITE 5922L")]
        public const int ERROR_CLUSTER_PARTIAL_WRITE = 5922;

        [NativeTypeName("#define ERROR_CLUSTER_CANT_DESERIALIZE_DATA 5923L")]
        public const int ERROR_CLUSTER_CANT_DESERIALIZE_DATA = 5923;

        [NativeTypeName("#define ERROR_DEPENDENT_RESOURCE_PROPERTY_CONFLICT 5924L")]
        public const int ERROR_DEPENDENT_RESOURCE_PROPERTY_CONFLICT = 5924;

        [NativeTypeName("#define ERROR_CLUSTER_NO_QUORUM 5925L")]
        public const int ERROR_CLUSTER_NO_QUORUM = 5925;

        [NativeTypeName("#define ERROR_CLUSTER_INVALID_IPV6_NETWORK 5926L")]
        public const int ERROR_CLUSTER_INVALID_IPV6_NETWORK = 5926;

        [NativeTypeName("#define ERROR_CLUSTER_INVALID_IPV6_TUNNEL_NETWORK 5927L")]
        public const int ERROR_CLUSTER_INVALID_IPV6_TUNNEL_NETWORK = 5927;

        [NativeTypeName("#define ERROR_QUORUM_NOT_ALLOWED_IN_THIS_GROUP 5928L")]
        public const int ERROR_QUORUM_NOT_ALLOWED_IN_THIS_GROUP = 5928;

        [NativeTypeName("#define ERROR_DEPENDENCY_TREE_TOO_COMPLEX 5929L")]
        public const int ERROR_DEPENDENCY_TREE_TOO_COMPLEX = 5929;

        [NativeTypeName("#define ERROR_EXCEPTION_IN_RESOURCE_CALL 5930L")]
        public const int ERROR_EXCEPTION_IN_RESOURCE_CALL = 5930;

        [NativeTypeName("#define ERROR_CLUSTER_RHS_FAILED_INITIALIZATION 5931L")]
        public const int ERROR_CLUSTER_RHS_FAILED_INITIALIZATION = 5931;

        [NativeTypeName("#define ERROR_CLUSTER_NOT_INSTALLED 5932L")]
        public const int ERROR_CLUSTER_NOT_INSTALLED = 5932;

        [NativeTypeName("#define ERROR_CLUSTER_RESOURCES_MUST_BE_ONLINE_ON_THE_SAME_NODE 5933L")]
        public const int ERROR_CLUSTER_RESOURCES_MUST_BE_ONLINE_ON_THE_SAME_NODE = 5933;

        [NativeTypeName("#define ERROR_CLUSTER_MAX_NODES_IN_CLUSTER 5934L")]
        public const int ERROR_CLUSTER_MAX_NODES_IN_CLUSTER = 5934;

        [NativeTypeName("#define ERROR_CLUSTER_TOO_MANY_NODES 5935L")]
        public const int ERROR_CLUSTER_TOO_MANY_NODES = 5935;

        [NativeTypeName("#define ERROR_CLUSTER_OBJECT_ALREADY_USED 5936L")]
        public const int ERROR_CLUSTER_OBJECT_ALREADY_USED = 5936;

        [NativeTypeName("#define ERROR_NONCORE_GROUPS_FOUND 5937L")]
        public const int ERROR_NONCORE_GROUPS_FOUND = 5937;

        [NativeTypeName("#define ERROR_FILE_SHARE_RESOURCE_CONFLICT 5938L")]
        public const int ERROR_FILE_SHARE_RESOURCE_CONFLICT = 5938;

        [NativeTypeName("#define ERROR_CLUSTER_EVICT_INVALID_REQUEST 5939L")]
        public const int ERROR_CLUSTER_EVICT_INVALID_REQUEST = 5939;

        [NativeTypeName("#define ERROR_CLUSTER_SINGLETON_RESOURCE 5940L")]
        public const int ERROR_CLUSTER_SINGLETON_RESOURCE = 5940;

        [NativeTypeName("#define ERROR_CLUSTER_GROUP_SINGLETON_RESOURCE 5941L")]
        public const int ERROR_CLUSTER_GROUP_SINGLETON_RESOURCE = 5941;

        [NativeTypeName("#define ERROR_CLUSTER_RESOURCE_PROVIDER_FAILED 5942L")]
        public const int ERROR_CLUSTER_RESOURCE_PROVIDER_FAILED = 5942;

        [NativeTypeName("#define ERROR_CLUSTER_RESOURCE_CONFIGURATION_ERROR 5943L")]
        public const int ERROR_CLUSTER_RESOURCE_CONFIGURATION_ERROR = 5943;

        [NativeTypeName("#define ERROR_CLUSTER_GROUP_BUSY 5944L")]
        public const int ERROR_CLUSTER_GROUP_BUSY = 5944;

        [NativeTypeName("#define ERROR_CLUSTER_NOT_SHARED_VOLUME 5945L")]
        public const int ERROR_CLUSTER_NOT_SHARED_VOLUME = 5945;

        [NativeTypeName("#define ERROR_CLUSTER_INVALID_SECURITY_DESCRIPTOR 5946L")]
        public const int ERROR_CLUSTER_INVALID_SECURITY_DESCRIPTOR = 5946;

        [NativeTypeName("#define ERROR_CLUSTER_SHARED_VOLUMES_IN_USE 5947L")]
        public const int ERROR_CLUSTER_SHARED_VOLUMES_IN_USE = 5947;

        [NativeTypeName("#define ERROR_CLUSTER_USE_SHARED_VOLUMES_API 5948L")]
        public const int ERROR_CLUSTER_USE_SHARED_VOLUMES_API = 5948;

        [NativeTypeName("#define ERROR_CLUSTER_BACKUP_IN_PROGRESS 5949L")]
        public const int ERROR_CLUSTER_BACKUP_IN_PROGRESS = 5949;

        [NativeTypeName("#define ERROR_NON_CSV_PATH 5950L")]
        public const int ERROR_NON_CSV_PATH = 5950;

        [NativeTypeName("#define ERROR_CSV_VOLUME_NOT_LOCAL 5951L")]
        public const int ERROR_CSV_VOLUME_NOT_LOCAL = 5951;

        [NativeTypeName("#define ERROR_CLUSTER_WATCHDOG_TERMINATING 5952L")]
        public const int ERROR_CLUSTER_WATCHDOG_TERMINATING = 5952;

        [NativeTypeName("#define ERROR_CLUSTER_RESOURCE_VETOED_MOVE_INCOMPATIBLE_NODES 5953L")]
        public const int ERROR_CLUSTER_RESOURCE_VETOED_MOVE_INCOMPATIBLE_NODES = 5953;

        [NativeTypeName("#define ERROR_CLUSTER_INVALID_NODE_WEIGHT 5954L")]
        public const int ERROR_CLUSTER_INVALID_NODE_WEIGHT = 5954;

        [NativeTypeName("#define ERROR_CLUSTER_RESOURCE_VETOED_CALL 5955L")]
        public const int ERROR_CLUSTER_RESOURCE_VETOED_CALL = 5955;

        [NativeTypeName("#define ERROR_RESMON_SYSTEM_RESOURCES_LACKING 5956L")]
        public const int ERROR_RESMON_SYSTEM_RESOURCES_LACKING = 5956;

        [NativeTypeName("#define ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_DESTINATION 5957L")]
        public const int ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_DESTINATION = 5957;

        [NativeTypeName("#define ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_SOURCE 5958L")]
        public const int ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_SOURCE = 5958;

        [NativeTypeName("#define ERROR_CLUSTER_GROUP_QUEUED 5959L")]
        public const int ERROR_CLUSTER_GROUP_QUEUED = 5959;

        [NativeTypeName("#define ERROR_CLUSTER_RESOURCE_LOCKED_STATUS 5960L")]
        public const int ERROR_CLUSTER_RESOURCE_LOCKED_STATUS = 5960;

        [NativeTypeName("#define ERROR_CLUSTER_SHARED_VOLUME_FAILOVER_NOT_ALLOWED 5961L")]
        public const int ERROR_CLUSTER_SHARED_VOLUME_FAILOVER_NOT_ALLOWED = 5961;

        [NativeTypeName("#define ERROR_CLUSTER_NODE_DRAIN_IN_PROGRESS 5962L")]
        public const int ERROR_CLUSTER_NODE_DRAIN_IN_PROGRESS = 5962;

        [NativeTypeName("#define ERROR_CLUSTER_DISK_NOT_CONNECTED 5963L")]
        public const int ERROR_CLUSTER_DISK_NOT_CONNECTED = 5963;

        [NativeTypeName("#define ERROR_DISK_NOT_CSV_CAPABLE 5964L")]
        public const int ERROR_DISK_NOT_CSV_CAPABLE = 5964;

        [NativeTypeName("#define ERROR_RESOURCE_NOT_IN_AVAILABLE_STORAGE 5965L")]
        public const int ERROR_RESOURCE_NOT_IN_AVAILABLE_STORAGE = 5965;

        [NativeTypeName("#define ERROR_CLUSTER_SHARED_VOLUME_REDIRECTED 5966L")]
        public const int ERROR_CLUSTER_SHARED_VOLUME_REDIRECTED = 5966;

        [NativeTypeName("#define ERROR_CLUSTER_SHARED_VOLUME_NOT_REDIRECTED 5967L")]
        public const int ERROR_CLUSTER_SHARED_VOLUME_NOT_REDIRECTED = 5967;

        [NativeTypeName("#define ERROR_CLUSTER_CANNOT_RETURN_PROPERTIES 5968L")]
        public const int ERROR_CLUSTER_CANNOT_RETURN_PROPERTIES = 5968;

        [NativeTypeName("#define ERROR_CLUSTER_RESOURCE_CONTAINS_UNSUPPORTED_DIFF_AREA_FOR_SHARED_VOLUMES 5969L")]
        public const int ERROR_CLUSTER_RESOURCE_CONTAINS_UNSUPPORTED_DIFF_AREA_FOR_SHARED_VOLUMES = 5969;

        [NativeTypeName("#define ERROR_CLUSTER_RESOURCE_IS_IN_MAINTENANCE_MODE 5970L")]
        public const int ERROR_CLUSTER_RESOURCE_IS_IN_MAINTENANCE_MODE = 5970;

        [NativeTypeName("#define ERROR_CLUSTER_AFFINITY_CONFLICT 5971L")]
        public const int ERROR_CLUSTER_AFFINITY_CONFLICT = 5971;

        [NativeTypeName("#define ERROR_CLUSTER_RESOURCE_IS_REPLICA_VIRTUAL_MACHINE 5972L")]
        public const int ERROR_CLUSTER_RESOURCE_IS_REPLICA_VIRTUAL_MACHINE = 5972;

        [NativeTypeName("#define ERROR_CLUSTER_UPGRADE_INCOMPATIBLE_VERSIONS 5973L")]
        public const int ERROR_CLUSTER_UPGRADE_INCOMPATIBLE_VERSIONS = 5973;

        [NativeTypeName("#define ERROR_CLUSTER_UPGRADE_FIX_QUORUM_NOT_SUPPORTED 5974L")]
        public const int ERROR_CLUSTER_UPGRADE_FIX_QUORUM_NOT_SUPPORTED = 5974;

        [NativeTypeName("#define ERROR_CLUSTER_UPGRADE_RESTART_REQUIRED 5975L")]
        public const int ERROR_CLUSTER_UPGRADE_RESTART_REQUIRED = 5975;

        [NativeTypeName("#define ERROR_CLUSTER_UPGRADE_IN_PROGRESS 5976L")]
        public const int ERROR_CLUSTER_UPGRADE_IN_PROGRESS = 5976;

        [NativeTypeName("#define ERROR_CLUSTER_UPGRADE_INCOMPLETE 5977L")]
        public const int ERROR_CLUSTER_UPGRADE_INCOMPLETE = 5977;

        [NativeTypeName("#define ERROR_CLUSTER_NODE_IN_GRACE_PERIOD 5978L")]
        public const int ERROR_CLUSTER_NODE_IN_GRACE_PERIOD = 5978;

        [NativeTypeName("#define ERROR_CLUSTER_CSV_IO_PAUSE_TIMEOUT 5979L")]
        public const int ERROR_CLUSTER_CSV_IO_PAUSE_TIMEOUT = 5979;

        [NativeTypeName("#define ERROR_NODE_NOT_ACTIVE_CLUSTER_MEMBER 5980L")]
        public const int ERROR_NODE_NOT_ACTIVE_CLUSTER_MEMBER = 5980;

        [NativeTypeName("#define ERROR_CLUSTER_RESOURCE_NOT_MONITORED 5981L")]
        public const int ERROR_CLUSTER_RESOURCE_NOT_MONITORED = 5981;

        [NativeTypeName("#define ERROR_CLUSTER_RESOURCE_DOES_NOT_SUPPORT_UNMONITORED 5982L")]
        public const int ERROR_CLUSTER_RESOURCE_DOES_NOT_SUPPORT_UNMONITORED = 5982;

        [NativeTypeName("#define ERROR_CLUSTER_RESOURCE_IS_REPLICATED 5983L")]
        public const int ERROR_CLUSTER_RESOURCE_IS_REPLICATED = 5983;

        [NativeTypeName("#define ERROR_CLUSTER_NODE_ISOLATED 5984L")]
        public const int ERROR_CLUSTER_NODE_ISOLATED = 5984;

        [NativeTypeName("#define ERROR_CLUSTER_NODE_QUARANTINED 5985L")]
        public const int ERROR_CLUSTER_NODE_QUARANTINED = 5985;

        [NativeTypeName("#define ERROR_CLUSTER_DATABASE_UPDATE_CONDITION_FAILED 5986L")]
        public const int ERROR_CLUSTER_DATABASE_UPDATE_CONDITION_FAILED = 5986;

        [NativeTypeName("#define ERROR_CLUSTER_SPACE_DEGRADED 5987L")]
        public const int ERROR_CLUSTER_SPACE_DEGRADED = 5987;

        [NativeTypeName("#define ERROR_CLUSTER_TOKEN_DELEGATION_NOT_SUPPORTED 5988L")]
        public const int ERROR_CLUSTER_TOKEN_DELEGATION_NOT_SUPPORTED = 5988;

        [NativeTypeName("#define ERROR_CLUSTER_CSV_INVALID_HANDLE 5989L")]
        public const int ERROR_CLUSTER_CSV_INVALID_HANDLE = 5989;

        [NativeTypeName("#define ERROR_CLUSTER_CSV_SUPPORTED_ONLY_ON_COORDINATOR 5990L")]
        public const int ERROR_CLUSTER_CSV_SUPPORTED_ONLY_ON_COORDINATOR = 5990;

        [NativeTypeName("#define ERROR_GROUPSET_NOT_AVAILABLE 5991L")]
        public const int ERROR_GROUPSET_NOT_AVAILABLE = 5991;

        [NativeTypeName("#define ERROR_GROUPSET_NOT_FOUND 5992L")]
        public const int ERROR_GROUPSET_NOT_FOUND = 5992;

        [NativeTypeName("#define ERROR_GROUPSET_CANT_PROVIDE 5993L")]
        public const int ERROR_GROUPSET_CANT_PROVIDE = 5993;

        [NativeTypeName("#define ERROR_CLUSTER_FAULT_DOMAIN_PARENT_NOT_FOUND 5994L")]
        public const int ERROR_CLUSTER_FAULT_DOMAIN_PARENT_NOT_FOUND = 5994;

        [NativeTypeName("#define ERROR_CLUSTER_FAULT_DOMAIN_INVALID_HIERARCHY 5995L")]
        public const int ERROR_CLUSTER_FAULT_DOMAIN_INVALID_HIERARCHY = 5995;

        [NativeTypeName("#define ERROR_CLUSTER_FAULT_DOMAIN_FAILED_S2D_VALIDATION 5996L")]
        public const int ERROR_CLUSTER_FAULT_DOMAIN_FAILED_S2D_VALIDATION = 5996;

        [NativeTypeName("#define ERROR_CLUSTER_FAULT_DOMAIN_S2D_CONNECTIVITY_LOSS 5997L")]
        public const int ERROR_CLUSTER_FAULT_DOMAIN_S2D_CONNECTIVITY_LOSS = 5997;

        [NativeTypeName("#define ERROR_CLUSTER_INVALID_INFRASTRUCTURE_FILESERVER_NAME 5998L")]
        public const int ERROR_CLUSTER_INVALID_INFRASTRUCTURE_FILESERVER_NAME = 5998;

        [NativeTypeName("#define ERROR_CLUSTERSET_MANAGEMENT_CLUSTER_UNREACHABLE 5999L")]
        public const int ERROR_CLUSTERSET_MANAGEMENT_CLUSTER_UNREACHABLE = 5999;

        [NativeTypeName("#define ERROR_ENCRYPTION_FAILED 6000L")]
        public const int ERROR_ENCRYPTION_FAILED = 6000;

        [NativeTypeName("#define ERROR_DECRYPTION_FAILED 6001L")]
        public const int ERROR_DECRYPTION_FAILED = 6001;

        [NativeTypeName("#define ERROR_FILE_ENCRYPTED 6002L")]
        public const int ERROR_FILE_ENCRYPTED = 6002;

        [NativeTypeName("#define ERROR_NO_RECOVERY_POLICY 6003L")]
        public const int ERROR_NO_RECOVERY_POLICY = 6003;

        [NativeTypeName("#define ERROR_NO_EFS 6004L")]
        public const int ERROR_NO_EFS = 6004;

        [NativeTypeName("#define ERROR_WRONG_EFS 6005L")]
        public const int ERROR_WRONG_EFS = 6005;

        [NativeTypeName("#define ERROR_NO_USER_KEYS 6006L")]
        public const int ERROR_NO_USER_KEYS = 6006;

        [NativeTypeName("#define ERROR_FILE_NOT_ENCRYPTED 6007L")]
        public const int ERROR_FILE_NOT_ENCRYPTED = 6007;

        [NativeTypeName("#define ERROR_NOT_EXPORT_FORMAT 6008L")]
        public const int ERROR_NOT_EXPORT_FORMAT = 6008;

        [NativeTypeName("#define ERROR_FILE_READ_ONLY 6009L")]
        public const int ERROR_FILE_READ_ONLY = 6009;

        [NativeTypeName("#define ERROR_DIR_EFS_DISALLOWED 6010L")]
        public const int ERROR_DIR_EFS_DISALLOWED = 6010;

        [NativeTypeName("#define ERROR_EFS_SERVER_NOT_TRUSTED 6011L")]
        public const int ERROR_EFS_SERVER_NOT_TRUSTED = 6011;

        [NativeTypeName("#define ERROR_BAD_RECOVERY_POLICY 6012L")]
        public const int ERROR_BAD_RECOVERY_POLICY = 6012;

        [NativeTypeName("#define ERROR_EFS_ALG_BLOB_TOO_BIG 6013L")]
        public const int ERROR_EFS_ALG_BLOB_TOO_BIG = 6013;

        [NativeTypeName("#define ERROR_VOLUME_NOT_SUPPORT_EFS 6014L")]
        public const int ERROR_VOLUME_NOT_SUPPORT_EFS = 6014;

        [NativeTypeName("#define ERROR_EFS_DISABLED 6015L")]
        public const int ERROR_EFS_DISABLED = 6015;

        [NativeTypeName("#define ERROR_EFS_VERSION_NOT_SUPPORT 6016L")]
        public const int ERROR_EFS_VERSION_NOT_SUPPORT = 6016;

        [NativeTypeName("#define ERROR_CS_ENCRYPTION_INVALID_SERVER_RESPONSE 6017L")]
        public const int ERROR_CS_ENCRYPTION_INVALID_SERVER_RESPONSE = 6017;

        [NativeTypeName("#define ERROR_CS_ENCRYPTION_UNSUPPORTED_SERVER 6018L")]
        public const int ERROR_CS_ENCRYPTION_UNSUPPORTED_SERVER = 6018;

        [NativeTypeName("#define ERROR_CS_ENCRYPTION_EXISTING_ENCRYPTED_FILE 6019L")]
        public const int ERROR_CS_ENCRYPTION_EXISTING_ENCRYPTED_FILE = 6019;

        [NativeTypeName("#define ERROR_CS_ENCRYPTION_NEW_ENCRYPTED_FILE 6020L")]
        public const int ERROR_CS_ENCRYPTION_NEW_ENCRYPTED_FILE = 6020;

        [NativeTypeName("#define ERROR_CS_ENCRYPTION_FILE_NOT_CSE 6021L")]
        public const int ERROR_CS_ENCRYPTION_FILE_NOT_CSE = 6021;

        [NativeTypeName("#define ERROR_ENCRYPTION_POLICY_DENIES_OPERATION 6022L")]
        public const int ERROR_ENCRYPTION_POLICY_DENIES_OPERATION = 6022;

        [NativeTypeName("#define ERROR_WIP_ENCRYPTION_FAILED 6023L")]
        public const int ERROR_WIP_ENCRYPTION_FAILED = 6023;

        [NativeTypeName("#define ERROR_NO_BROWSER_SERVERS_FOUND 6118L")]
        public const int ERROR_NO_BROWSER_SERVERS_FOUND = 6118;

        [NativeTypeName("#define SCHED_E_SERVICE_NOT_LOCALSYSTEM 6200L")]
        public const int SCHED_E_SERVICE_NOT_LOCALSYSTEM = 6200;

        [NativeTypeName("#define ERROR_CLUSTER_OBJECT_IS_CLUSTER_SET_VM 6250L")]
        public const int ERROR_CLUSTER_OBJECT_IS_CLUSTER_SET_VM = 6250;

        [NativeTypeName("#define ERROR_LOG_SECTOR_INVALID 6600L")]
        public const int ERROR_LOG_SECTOR_INVALID = 6600;

        [NativeTypeName("#define ERROR_LOG_SECTOR_PARITY_INVALID 6601L")]
        public const int ERROR_LOG_SECTOR_PARITY_INVALID = 6601;

        [NativeTypeName("#define ERROR_LOG_SECTOR_REMAPPED 6602L")]
        public const int ERROR_LOG_SECTOR_REMAPPED = 6602;

        [NativeTypeName("#define ERROR_LOG_BLOCK_INCOMPLETE 6603L")]
        public const int ERROR_LOG_BLOCK_INCOMPLETE = 6603;

        [NativeTypeName("#define ERROR_LOG_INVALID_RANGE 6604L")]
        public const int ERROR_LOG_INVALID_RANGE = 6604;

        [NativeTypeName("#define ERROR_LOG_BLOCKS_EXHAUSTED 6605L")]
        public const int ERROR_LOG_BLOCKS_EXHAUSTED = 6605;

        [NativeTypeName("#define ERROR_LOG_READ_CONTEXT_INVALID 6606L")]
        public const int ERROR_LOG_READ_CONTEXT_INVALID = 6606;

        [NativeTypeName("#define ERROR_LOG_RESTART_INVALID 6607L")]
        public const int ERROR_LOG_RESTART_INVALID = 6607;

        [NativeTypeName("#define ERROR_LOG_BLOCK_VERSION 6608L")]
        public const int ERROR_LOG_BLOCK_VERSION = 6608;

        [NativeTypeName("#define ERROR_LOG_BLOCK_INVALID 6609L")]
        public const int ERROR_LOG_BLOCK_INVALID = 6609;

        [NativeTypeName("#define ERROR_LOG_READ_MODE_INVALID 6610L")]
        public const int ERROR_LOG_READ_MODE_INVALID = 6610;

        [NativeTypeName("#define ERROR_LOG_NO_RESTART 6611L")]
        public const int ERROR_LOG_NO_RESTART = 6611;

        [NativeTypeName("#define ERROR_LOG_METADATA_CORRUPT 6612L")]
        public const int ERROR_LOG_METADATA_CORRUPT = 6612;

        [NativeTypeName("#define ERROR_LOG_METADATA_INVALID 6613L")]
        public const int ERROR_LOG_METADATA_INVALID = 6613;

        [NativeTypeName("#define ERROR_LOG_METADATA_INCONSISTENT 6614L")]
        public const int ERROR_LOG_METADATA_INCONSISTENT = 6614;

        [NativeTypeName("#define ERROR_LOG_RESERVATION_INVALID 6615L")]
        public const int ERROR_LOG_RESERVATION_INVALID = 6615;

        [NativeTypeName("#define ERROR_LOG_CANT_DELETE 6616L")]
        public const int ERROR_LOG_CANT_DELETE = 6616;

        [NativeTypeName("#define ERROR_LOG_CONTAINER_LIMIT_EXCEEDED 6617L")]
        public const int ERROR_LOG_CONTAINER_LIMIT_EXCEEDED = 6617;

        [NativeTypeName("#define ERROR_LOG_START_OF_LOG 6618L")]
        public const int ERROR_LOG_START_OF_LOG = 6618;

        [NativeTypeName("#define ERROR_LOG_POLICY_ALREADY_INSTALLED 6619L")]
        public const int ERROR_LOG_POLICY_ALREADY_INSTALLED = 6619;

        [NativeTypeName("#define ERROR_LOG_POLICY_NOT_INSTALLED 6620L")]
        public const int ERROR_LOG_POLICY_NOT_INSTALLED = 6620;

        [NativeTypeName("#define ERROR_LOG_POLICY_INVALID 6621L")]
        public const int ERROR_LOG_POLICY_INVALID = 6621;

        [NativeTypeName("#define ERROR_LOG_POLICY_CONFLICT 6622L")]
        public const int ERROR_LOG_POLICY_CONFLICT = 6622;

        [NativeTypeName("#define ERROR_LOG_PINNED_ARCHIVE_TAIL 6623L")]
        public const int ERROR_LOG_PINNED_ARCHIVE_TAIL = 6623;

        [NativeTypeName("#define ERROR_LOG_RECORD_NONEXISTENT 6624L")]
        public const int ERROR_LOG_RECORD_NONEXISTENT = 6624;

        [NativeTypeName("#define ERROR_LOG_RECORDS_RESERVED_INVALID 6625L")]
        public const int ERROR_LOG_RECORDS_RESERVED_INVALID = 6625;

        [NativeTypeName("#define ERROR_LOG_SPACE_RESERVED_INVALID 6626L")]
        public const int ERROR_LOG_SPACE_RESERVED_INVALID = 6626;

        [NativeTypeName("#define ERROR_LOG_TAIL_INVALID 6627L")]
        public const int ERROR_LOG_TAIL_INVALID = 6627;

        [NativeTypeName("#define ERROR_LOG_FULL 6628L")]
        public const int ERROR_LOG_FULL = 6628;

        [NativeTypeName("#define ERROR_COULD_NOT_RESIZE_LOG 6629L")]
        public const int ERROR_COULD_NOT_RESIZE_LOG = 6629;

        [NativeTypeName("#define ERROR_LOG_MULTIPLEXED 6630L")]
        public const int ERROR_LOG_MULTIPLEXED = 6630;

        [NativeTypeName("#define ERROR_LOG_DEDICATED 6631L")]
        public const int ERROR_LOG_DEDICATED = 6631;

        [NativeTypeName("#define ERROR_LOG_ARCHIVE_NOT_IN_PROGRESS 6632L")]
        public const int ERROR_LOG_ARCHIVE_NOT_IN_PROGRESS = 6632;

        [NativeTypeName("#define ERROR_LOG_ARCHIVE_IN_PROGRESS 6633L")]
        public const int ERROR_LOG_ARCHIVE_IN_PROGRESS = 6633;

        [NativeTypeName("#define ERROR_LOG_EPHEMERAL 6634L")]
        public const int ERROR_LOG_EPHEMERAL = 6634;

        [NativeTypeName("#define ERROR_LOG_NOT_ENOUGH_CONTAINERS 6635L")]
        public const int ERROR_LOG_NOT_ENOUGH_CONTAINERS = 6635;

        [NativeTypeName("#define ERROR_LOG_CLIENT_ALREADY_REGISTERED 6636L")]
        public const int ERROR_LOG_CLIENT_ALREADY_REGISTERED = 6636;

        [NativeTypeName("#define ERROR_LOG_CLIENT_NOT_REGISTERED 6637L")]
        public const int ERROR_LOG_CLIENT_NOT_REGISTERED = 6637;

        [NativeTypeName("#define ERROR_LOG_FULL_HANDLER_IN_PROGRESS 6638L")]
        public const int ERROR_LOG_FULL_HANDLER_IN_PROGRESS = 6638;

        [NativeTypeName("#define ERROR_LOG_CONTAINER_READ_FAILED 6639L")]
        public const int ERROR_LOG_CONTAINER_READ_FAILED = 6639;

        [NativeTypeName("#define ERROR_LOG_CONTAINER_WRITE_FAILED 6640L")]
        public const int ERROR_LOG_CONTAINER_WRITE_FAILED = 6640;

        [NativeTypeName("#define ERROR_LOG_CONTAINER_OPEN_FAILED 6641L")]
        public const int ERROR_LOG_CONTAINER_OPEN_FAILED = 6641;

        [NativeTypeName("#define ERROR_LOG_CONTAINER_STATE_INVALID 6642L")]
        public const int ERROR_LOG_CONTAINER_STATE_INVALID = 6642;

        [NativeTypeName("#define ERROR_LOG_STATE_INVALID 6643L")]
        public const int ERROR_LOG_STATE_INVALID = 6643;

        [NativeTypeName("#define ERROR_LOG_PINNED 6644L")]
        public const int ERROR_LOG_PINNED = 6644;

        [NativeTypeName("#define ERROR_LOG_METADATA_FLUSH_FAILED 6645L")]
        public const int ERROR_LOG_METADATA_FLUSH_FAILED = 6645;

        [NativeTypeName("#define ERROR_LOG_INCONSISTENT_SECURITY 6646L")]
        public const int ERROR_LOG_INCONSISTENT_SECURITY = 6646;

        [NativeTypeName("#define ERROR_LOG_APPENDED_FLUSH_FAILED 6647L")]
        public const int ERROR_LOG_APPENDED_FLUSH_FAILED = 6647;

        [NativeTypeName("#define ERROR_LOG_PINNED_RESERVATION 6648L")]
        public const int ERROR_LOG_PINNED_RESERVATION = 6648;

        [NativeTypeName("#define ERROR_INVALID_TRANSACTION 6700L")]
        public const int ERROR_INVALID_TRANSACTION = 6700;

        [NativeTypeName("#define ERROR_TRANSACTION_NOT_ACTIVE 6701L")]
        public const int ERROR_TRANSACTION_NOT_ACTIVE = 6701;

        [NativeTypeName("#define ERROR_TRANSACTION_REQUEST_NOT_VALID 6702L")]
        public const int ERROR_TRANSACTION_REQUEST_NOT_VALID = 6702;

        [NativeTypeName("#define ERROR_TRANSACTION_NOT_REQUESTED 6703L")]
        public const int ERROR_TRANSACTION_NOT_REQUESTED = 6703;

        [NativeTypeName("#define ERROR_TRANSACTION_ALREADY_ABORTED 6704L")]
        public const int ERROR_TRANSACTION_ALREADY_ABORTED = 6704;

        [NativeTypeName("#define ERROR_TRANSACTION_ALREADY_COMMITTED 6705L")]
        public const int ERROR_TRANSACTION_ALREADY_COMMITTED = 6705;

        [NativeTypeName("#define ERROR_TM_INITIALIZATION_FAILED 6706L")]
        public const int ERROR_TM_INITIALIZATION_FAILED = 6706;

        [NativeTypeName("#define ERROR_RESOURCEMANAGER_READ_ONLY 6707L")]
        public const int ERROR_RESOURCEMANAGER_READ_ONLY = 6707;

        [NativeTypeName("#define ERROR_TRANSACTION_NOT_JOINED 6708L")]
        public const int ERROR_TRANSACTION_NOT_JOINED = 6708;

        [NativeTypeName("#define ERROR_TRANSACTION_SUPERIOR_EXISTS 6709L")]
        public const int ERROR_TRANSACTION_SUPERIOR_EXISTS = 6709;

        [NativeTypeName("#define ERROR_CRM_PROTOCOL_ALREADY_EXISTS 6710L")]
        public const int ERROR_CRM_PROTOCOL_ALREADY_EXISTS = 6710;

        [NativeTypeName("#define ERROR_TRANSACTION_PROPAGATION_FAILED 6711L")]
        public const int ERROR_TRANSACTION_PROPAGATION_FAILED = 6711;

        [NativeTypeName("#define ERROR_CRM_PROTOCOL_NOT_FOUND 6712L")]
        public const int ERROR_CRM_PROTOCOL_NOT_FOUND = 6712;

        [NativeTypeName("#define ERROR_TRANSACTION_INVALID_MARSHALL_BUFFER 6713L")]
        public const int ERROR_TRANSACTION_INVALID_MARSHALL_BUFFER = 6713;

        [NativeTypeName("#define ERROR_CURRENT_TRANSACTION_NOT_VALID 6714L")]
        public const int ERROR_CURRENT_TRANSACTION_NOT_VALID = 6714;

        [NativeTypeName("#define ERROR_TRANSACTION_NOT_FOUND 6715L")]
        public const int ERROR_TRANSACTION_NOT_FOUND = 6715;

        [NativeTypeName("#define ERROR_RESOURCEMANAGER_NOT_FOUND 6716L")]
        public const int ERROR_RESOURCEMANAGER_NOT_FOUND = 6716;

        [NativeTypeName("#define ERROR_ENLISTMENT_NOT_FOUND 6717L")]
        public const int ERROR_ENLISTMENT_NOT_FOUND = 6717;

        [NativeTypeName("#define ERROR_TRANSACTIONMANAGER_NOT_FOUND 6718L")]
        public const int ERROR_TRANSACTIONMANAGER_NOT_FOUND = 6718;

        [NativeTypeName("#define ERROR_TRANSACTIONMANAGER_NOT_ONLINE 6719L")]
        public const int ERROR_TRANSACTIONMANAGER_NOT_ONLINE = 6719;

        [NativeTypeName("#define ERROR_TRANSACTIONMANAGER_RECOVERY_NAME_COLLISION 6720L")]
        public const int ERROR_TRANSACTIONMANAGER_RECOVERY_NAME_COLLISION = 6720;

        [NativeTypeName("#define ERROR_TRANSACTION_NOT_ROOT 6721L")]
        public const int ERROR_TRANSACTION_NOT_ROOT = 6721;

        [NativeTypeName("#define ERROR_TRANSACTION_OBJECT_EXPIRED 6722L")]
        public const int ERROR_TRANSACTION_OBJECT_EXPIRED = 6722;

        [NativeTypeName("#define ERROR_TRANSACTION_RESPONSE_NOT_ENLISTED 6723L")]
        public const int ERROR_TRANSACTION_RESPONSE_NOT_ENLISTED = 6723;

        [NativeTypeName("#define ERROR_TRANSACTION_RECORD_TOO_LONG 6724L")]
        public const int ERROR_TRANSACTION_RECORD_TOO_LONG = 6724;

        [NativeTypeName("#define ERROR_IMPLICIT_TRANSACTION_NOT_SUPPORTED 6725L")]
        public const int ERROR_IMPLICIT_TRANSACTION_NOT_SUPPORTED = 6725;

        [NativeTypeName("#define ERROR_TRANSACTION_INTEGRITY_VIOLATED 6726L")]
        public const int ERROR_TRANSACTION_INTEGRITY_VIOLATED = 6726;

        [NativeTypeName("#define ERROR_TRANSACTIONMANAGER_IDENTITY_MISMATCH 6727L")]
        public const int ERROR_TRANSACTIONMANAGER_IDENTITY_MISMATCH = 6727;

        [NativeTypeName("#define ERROR_RM_CANNOT_BE_FROZEN_FOR_SNAPSHOT 6728L")]
        public const int ERROR_RM_CANNOT_BE_FROZEN_FOR_SNAPSHOT = 6728;

        [NativeTypeName("#define ERROR_TRANSACTION_MUST_WRITETHROUGH 6729L")]
        public const int ERROR_TRANSACTION_MUST_WRITETHROUGH = 6729;

        [NativeTypeName("#define ERROR_TRANSACTION_NO_SUPERIOR 6730L")]
        public const int ERROR_TRANSACTION_NO_SUPERIOR = 6730;

        [NativeTypeName("#define ERROR_HEURISTIC_DAMAGE_POSSIBLE 6731L")]
        public const int ERROR_HEURISTIC_DAMAGE_POSSIBLE = 6731;

        [NativeTypeName("#define ERROR_TRANSACTIONAL_CONFLICT 6800L")]
        public const int ERROR_TRANSACTIONAL_CONFLICT = 6800;

        [NativeTypeName("#define ERROR_RM_NOT_ACTIVE 6801L")]
        public const int ERROR_RM_NOT_ACTIVE = 6801;

        [NativeTypeName("#define ERROR_RM_METADATA_CORRUPT 6802L")]
        public const int ERROR_RM_METADATA_CORRUPT = 6802;

        [NativeTypeName("#define ERROR_DIRECTORY_NOT_RM 6803L")]
        public const int ERROR_DIRECTORY_NOT_RM = 6803;

        [NativeTypeName("#define ERROR_TRANSACTIONS_UNSUPPORTED_REMOTE 6805L")]
        public const int ERROR_TRANSACTIONS_UNSUPPORTED_REMOTE = 6805;

        [NativeTypeName("#define ERROR_LOG_RESIZE_INVALID_SIZE 6806L")]
        public const int ERROR_LOG_RESIZE_INVALID_SIZE = 6806;

        [NativeTypeName("#define ERROR_OBJECT_NO_LONGER_EXISTS 6807L")]
        public const int ERROR_OBJECT_NO_LONGER_EXISTS = 6807;

        [NativeTypeName("#define ERROR_STREAM_MINIVERSION_NOT_FOUND 6808L")]
        public const int ERROR_STREAM_MINIVERSION_NOT_FOUND = 6808;

        [NativeTypeName("#define ERROR_STREAM_MINIVERSION_NOT_VALID 6809L")]
        public const int ERROR_STREAM_MINIVERSION_NOT_VALID = 6809;

        [NativeTypeName("#define ERROR_MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION 6810L")]
        public const int ERROR_MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION = 6810;

        [NativeTypeName("#define ERROR_CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT 6811L")]
        public const int ERROR_CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT = 6811;

        [NativeTypeName("#define ERROR_CANT_CREATE_MORE_STREAM_MINIVERSIONS 6812L")]
        public const int ERROR_CANT_CREATE_MORE_STREAM_MINIVERSIONS = 6812;

        [NativeTypeName("#define ERROR_REMOTE_FILE_VERSION_MISMATCH 6814L")]
        public const int ERROR_REMOTE_FILE_VERSION_MISMATCH = 6814;

        [NativeTypeName("#define ERROR_HANDLE_NO_LONGER_VALID 6815L")]
        public const int ERROR_HANDLE_NO_LONGER_VALID = 6815;

        [NativeTypeName("#define ERROR_NO_TXF_METADATA 6816L")]
        public const int ERROR_NO_TXF_METADATA = 6816;

        [NativeTypeName("#define ERROR_LOG_CORRUPTION_DETECTED 6817L")]
        public const int ERROR_LOG_CORRUPTION_DETECTED = 6817;

        [NativeTypeName("#define ERROR_CANT_RECOVER_WITH_HANDLE_OPEN 6818L")]
        public const int ERROR_CANT_RECOVER_WITH_HANDLE_OPEN = 6818;

        [NativeTypeName("#define ERROR_RM_DISCONNECTED 6819L")]
        public const int ERROR_RM_DISCONNECTED = 6819;

        [NativeTypeName("#define ERROR_ENLISTMENT_NOT_SUPERIOR 6820L")]
        public const int ERROR_ENLISTMENT_NOT_SUPERIOR = 6820;

        [NativeTypeName("#define ERROR_RECOVERY_NOT_NEEDED 6821L")]
        public const int ERROR_RECOVERY_NOT_NEEDED = 6821;

        [NativeTypeName("#define ERROR_RM_ALREADY_STARTED 6822L")]
        public const int ERROR_RM_ALREADY_STARTED = 6822;

        [NativeTypeName("#define ERROR_FILE_IDENTITY_NOT_PERSISTENT 6823L")]
        public const int ERROR_FILE_IDENTITY_NOT_PERSISTENT = 6823;

        [NativeTypeName("#define ERROR_CANT_BREAK_TRANSACTIONAL_DEPENDENCY 6824L")]
        public const int ERROR_CANT_BREAK_TRANSACTIONAL_DEPENDENCY = 6824;

        [NativeTypeName("#define ERROR_CANT_CROSS_RM_BOUNDARY 6825L")]
        public const int ERROR_CANT_CROSS_RM_BOUNDARY = 6825;

        [NativeTypeName("#define ERROR_TXF_DIR_NOT_EMPTY 6826L")]
        public const int ERROR_TXF_DIR_NOT_EMPTY = 6826;

        [NativeTypeName("#define ERROR_INDOUBT_TRANSACTIONS_EXIST 6827L")]
        public const int ERROR_INDOUBT_TRANSACTIONS_EXIST = 6827;

        [NativeTypeName("#define ERROR_TM_VOLATILE 6828L")]
        public const int ERROR_TM_VOLATILE = 6828;

        [NativeTypeName("#define ERROR_ROLLBACK_TIMER_EXPIRED 6829L")]
        public const int ERROR_ROLLBACK_TIMER_EXPIRED = 6829;

        [NativeTypeName("#define ERROR_TXF_ATTRIBUTE_CORRUPT 6830L")]
        public const int ERROR_TXF_ATTRIBUTE_CORRUPT = 6830;

        [NativeTypeName("#define ERROR_EFS_NOT_ALLOWED_IN_TRANSACTION 6831L")]
        public const int ERROR_EFS_NOT_ALLOWED_IN_TRANSACTION = 6831;

        [NativeTypeName("#define ERROR_TRANSACTIONAL_OPEN_NOT_ALLOWED 6832L")]
        public const int ERROR_TRANSACTIONAL_OPEN_NOT_ALLOWED = 6832;

        [NativeTypeName("#define ERROR_LOG_GROWTH_FAILED 6833L")]
        public const int ERROR_LOG_GROWTH_FAILED = 6833;

        [NativeTypeName("#define ERROR_TRANSACTED_MAPPING_UNSUPPORTED_REMOTE 6834L")]
        public const int ERROR_TRANSACTED_MAPPING_UNSUPPORTED_REMOTE = 6834;

        [NativeTypeName("#define ERROR_TXF_METADATA_ALREADY_PRESENT 6835L")]
        public const int ERROR_TXF_METADATA_ALREADY_PRESENT = 6835;

        [NativeTypeName("#define ERROR_TRANSACTION_SCOPE_CALLBACKS_NOT_SET 6836L")]
        public const int ERROR_TRANSACTION_SCOPE_CALLBACKS_NOT_SET = 6836;

        [NativeTypeName("#define ERROR_TRANSACTION_REQUIRED_PROMOTION 6837L")]
        public const int ERROR_TRANSACTION_REQUIRED_PROMOTION = 6837;

        [NativeTypeName("#define ERROR_CANNOT_EXECUTE_FILE_IN_TRANSACTION 6838L")]
        public const int ERROR_CANNOT_EXECUTE_FILE_IN_TRANSACTION = 6838;

        [NativeTypeName("#define ERROR_TRANSACTIONS_NOT_FROZEN 6839L")]
        public const int ERROR_TRANSACTIONS_NOT_FROZEN = 6839;

        [NativeTypeName("#define ERROR_TRANSACTION_FREEZE_IN_PROGRESS 6840L")]
        public const int ERROR_TRANSACTION_FREEZE_IN_PROGRESS = 6840;

        [NativeTypeName("#define ERROR_NOT_SNAPSHOT_VOLUME 6841L")]
        public const int ERROR_NOT_SNAPSHOT_VOLUME = 6841;

        [NativeTypeName("#define ERROR_NO_SAVEPOINT_WITH_OPEN_FILES 6842L")]
        public const int ERROR_NO_SAVEPOINT_WITH_OPEN_FILES = 6842;

        [NativeTypeName("#define ERROR_DATA_LOST_REPAIR 6843L")]
        public const int ERROR_DATA_LOST_REPAIR = 6843;

        [NativeTypeName("#define ERROR_SPARSE_NOT_ALLOWED_IN_TRANSACTION 6844L")]
        public const int ERROR_SPARSE_NOT_ALLOWED_IN_TRANSACTION = 6844;

        [NativeTypeName("#define ERROR_TM_IDENTITY_MISMATCH 6845L")]
        public const int ERROR_TM_IDENTITY_MISMATCH = 6845;

        [NativeTypeName("#define ERROR_FLOATED_SECTION 6846L")]
        public const int ERROR_FLOATED_SECTION = 6846;

        [NativeTypeName("#define ERROR_CANNOT_ACCEPT_TRANSACTED_WORK 6847L")]
        public const int ERROR_CANNOT_ACCEPT_TRANSACTED_WORK = 6847;

        [NativeTypeName("#define ERROR_CANNOT_ABORT_TRANSACTIONS 6848L")]
        public const int ERROR_CANNOT_ABORT_TRANSACTIONS = 6848;

        [NativeTypeName("#define ERROR_BAD_CLUSTERS 6849L")]
        public const int ERROR_BAD_CLUSTERS = 6849;

        [NativeTypeName("#define ERROR_COMPRESSION_NOT_ALLOWED_IN_TRANSACTION 6850L")]
        public const int ERROR_COMPRESSION_NOT_ALLOWED_IN_TRANSACTION = 6850;

        [NativeTypeName("#define ERROR_VOLUME_DIRTY 6851L")]
        public const int ERROR_VOLUME_DIRTY = 6851;

        [NativeTypeName("#define ERROR_NO_LINK_TRACKING_IN_TRANSACTION 6852L")]
        public const int ERROR_NO_LINK_TRACKING_IN_TRANSACTION = 6852;

        [NativeTypeName("#define ERROR_OPERATION_NOT_SUPPORTED_IN_TRANSACTION 6853L")]
        public const int ERROR_OPERATION_NOT_SUPPORTED_IN_TRANSACTION = 6853;

        [NativeTypeName("#define ERROR_EXPIRED_HANDLE 6854L")]
        public const int ERROR_EXPIRED_HANDLE = 6854;

        [NativeTypeName("#define ERROR_TRANSACTION_NOT_ENLISTED 6855L")]
        public const int ERROR_TRANSACTION_NOT_ENLISTED = 6855;

        [NativeTypeName("#define ERROR_CTX_WINSTATION_NAME_INVALID 7001L")]
        public const int ERROR_CTX_WINSTATION_NAME_INVALID = 7001;

        [NativeTypeName("#define ERROR_CTX_INVALID_PD 7002L")]
        public const int ERROR_CTX_INVALID_PD = 7002;

        [NativeTypeName("#define ERROR_CTX_PD_NOT_FOUND 7003L")]
        public const int ERROR_CTX_PD_NOT_FOUND = 7003;

        [NativeTypeName("#define ERROR_CTX_WD_NOT_FOUND 7004L")]
        public const int ERROR_CTX_WD_NOT_FOUND = 7004;

        [NativeTypeName("#define ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY 7005L")]
        public const int ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY = 7005;

        [NativeTypeName("#define ERROR_CTX_SERVICE_NAME_COLLISION 7006L")]
        public const int ERROR_CTX_SERVICE_NAME_COLLISION = 7006;

        [NativeTypeName("#define ERROR_CTX_CLOSE_PENDING 7007L")]
        public const int ERROR_CTX_CLOSE_PENDING = 7007;

        [NativeTypeName("#define ERROR_CTX_NO_OUTBUF 7008L")]
        public const int ERROR_CTX_NO_OUTBUF = 7008;

        [NativeTypeName("#define ERROR_CTX_MODEM_INF_NOT_FOUND 7009L")]
        public const int ERROR_CTX_MODEM_INF_NOT_FOUND = 7009;

        [NativeTypeName("#define ERROR_CTX_INVALID_MODEMNAME 7010L")]
        public const int ERROR_CTX_INVALID_MODEMNAME = 7010;

        [NativeTypeName("#define ERROR_CTX_MODEM_RESPONSE_ERROR 7011L")]
        public const int ERROR_CTX_MODEM_RESPONSE_ERROR = 7011;

        [NativeTypeName("#define ERROR_CTX_MODEM_RESPONSE_TIMEOUT 7012L")]
        public const int ERROR_CTX_MODEM_RESPONSE_TIMEOUT = 7012;

        [NativeTypeName("#define ERROR_CTX_MODEM_RESPONSE_NO_CARRIER 7013L")]
        public const int ERROR_CTX_MODEM_RESPONSE_NO_CARRIER = 7013;

        [NativeTypeName("#define ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE 7014L")]
        public const int ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE = 7014;

        [NativeTypeName("#define ERROR_CTX_MODEM_RESPONSE_BUSY 7015L")]
        public const int ERROR_CTX_MODEM_RESPONSE_BUSY = 7015;

        [NativeTypeName("#define ERROR_CTX_MODEM_RESPONSE_VOICE 7016L")]
        public const int ERROR_CTX_MODEM_RESPONSE_VOICE = 7016;

        [NativeTypeName("#define ERROR_CTX_TD_ERROR 7017L")]
        public const int ERROR_CTX_TD_ERROR = 7017;

        [NativeTypeName("#define ERROR_CTX_WINSTATION_NOT_FOUND 7022L")]
        public const int ERROR_CTX_WINSTATION_NOT_FOUND = 7022;

        [NativeTypeName("#define ERROR_CTX_WINSTATION_ALREADY_EXISTS 7023L")]
        public const int ERROR_CTX_WINSTATION_ALREADY_EXISTS = 7023;

        [NativeTypeName("#define ERROR_CTX_WINSTATION_BUSY 7024L")]
        public const int ERROR_CTX_WINSTATION_BUSY = 7024;

        [NativeTypeName("#define ERROR_CTX_BAD_VIDEO_MODE 7025L")]
        public const int ERROR_CTX_BAD_VIDEO_MODE = 7025;

        [NativeTypeName("#define ERROR_CTX_GRAPHICS_INVALID 7035L")]
        public const int ERROR_CTX_GRAPHICS_INVALID = 7035;

        [NativeTypeName("#define ERROR_CTX_LOGON_DISABLED 7037L")]
        public const int ERROR_CTX_LOGON_DISABLED = 7037;

        [NativeTypeName("#define ERROR_CTX_NOT_CONSOLE 7038L")]
        public const int ERROR_CTX_NOT_CONSOLE = 7038;

        [NativeTypeName("#define ERROR_CTX_CLIENT_QUERY_TIMEOUT 7040L")]
        public const int ERROR_CTX_CLIENT_QUERY_TIMEOUT = 7040;

        [NativeTypeName("#define ERROR_CTX_CONSOLE_DISCONNECT 7041L")]
        public const int ERROR_CTX_CONSOLE_DISCONNECT = 7041;

        [NativeTypeName("#define ERROR_CTX_CONSOLE_CONNECT 7042L")]
        public const int ERROR_CTX_CONSOLE_CONNECT = 7042;

        [NativeTypeName("#define ERROR_CTX_SHADOW_DENIED 7044L")]
        public const int ERROR_CTX_SHADOW_DENIED = 7044;

        [NativeTypeName("#define ERROR_CTX_WINSTATION_ACCESS_DENIED 7045L")]
        public const int ERROR_CTX_WINSTATION_ACCESS_DENIED = 7045;

        [NativeTypeName("#define ERROR_CTX_INVALID_WD 7049L")]
        public const int ERROR_CTX_INVALID_WD = 7049;

        [NativeTypeName("#define ERROR_CTX_SHADOW_INVALID 7050L")]
        public const int ERROR_CTX_SHADOW_INVALID = 7050;

        [NativeTypeName("#define ERROR_CTX_SHADOW_DISABLED 7051L")]
        public const int ERROR_CTX_SHADOW_DISABLED = 7051;

        [NativeTypeName("#define ERROR_CTX_CLIENT_LICENSE_IN_USE 7052L")]
        public const int ERROR_CTX_CLIENT_LICENSE_IN_USE = 7052;

        [NativeTypeName("#define ERROR_CTX_CLIENT_LICENSE_NOT_SET 7053L")]
        public const int ERROR_CTX_CLIENT_LICENSE_NOT_SET = 7053;

        [NativeTypeName("#define ERROR_CTX_LICENSE_NOT_AVAILABLE 7054L")]
        public const int ERROR_CTX_LICENSE_NOT_AVAILABLE = 7054;

        [NativeTypeName("#define ERROR_CTX_LICENSE_CLIENT_INVALID 7055L")]
        public const int ERROR_CTX_LICENSE_CLIENT_INVALID = 7055;

        [NativeTypeName("#define ERROR_CTX_LICENSE_EXPIRED 7056L")]
        public const int ERROR_CTX_LICENSE_EXPIRED = 7056;

        [NativeTypeName("#define ERROR_CTX_SHADOW_NOT_RUNNING 7057L")]
        public const int ERROR_CTX_SHADOW_NOT_RUNNING = 7057;

        [NativeTypeName("#define ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE 7058L")]
        public const int ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE = 7058;

        [NativeTypeName("#define ERROR_ACTIVATION_COUNT_EXCEEDED 7059L")]
        public const int ERROR_ACTIVATION_COUNT_EXCEEDED = 7059;

        [NativeTypeName("#define ERROR_CTX_WINSTATIONS_DISABLED 7060L")]
        public const int ERROR_CTX_WINSTATIONS_DISABLED = 7060;

        [NativeTypeName("#define ERROR_CTX_ENCRYPTION_LEVEL_REQUIRED 7061L")]
        public const int ERROR_CTX_ENCRYPTION_LEVEL_REQUIRED = 7061;

        [NativeTypeName("#define ERROR_CTX_SESSION_IN_USE 7062L")]
        public const int ERROR_CTX_SESSION_IN_USE = 7062;

        [NativeTypeName("#define ERROR_CTX_NO_FORCE_LOGOFF 7063L")]
        public const int ERROR_CTX_NO_FORCE_LOGOFF = 7063;

        [NativeTypeName("#define ERROR_CTX_ACCOUNT_RESTRICTION 7064L")]
        public const int ERROR_CTX_ACCOUNT_RESTRICTION = 7064;

        [NativeTypeName("#define ERROR_RDP_PROTOCOL_ERROR 7065L")]
        public const int ERROR_RDP_PROTOCOL_ERROR = 7065;

        [NativeTypeName("#define ERROR_CTX_CDM_CONNECT 7066L")]
        public const int ERROR_CTX_CDM_CONNECT = 7066;

        [NativeTypeName("#define ERROR_CTX_CDM_DISCONNECT 7067L")]
        public const int ERROR_CTX_CDM_DISCONNECT = 7067;

        [NativeTypeName("#define ERROR_CTX_SECURITY_LAYER_ERROR 7068L")]
        public const int ERROR_CTX_SECURITY_LAYER_ERROR = 7068;

        [NativeTypeName("#define ERROR_TS_INCOMPATIBLE_SESSIONS 7069L")]
        public const int ERROR_TS_INCOMPATIBLE_SESSIONS = 7069;

        [NativeTypeName("#define ERROR_TS_VIDEO_SUBSYSTEM_ERROR 7070L")]
        public const int ERROR_TS_VIDEO_SUBSYSTEM_ERROR = 7070;

        [NativeTypeName("#define FRS_ERR_INVALID_API_SEQUENCE 8001L")]
        public const int FRS_ERR_INVALID_API_SEQUENCE = 8001;

        [NativeTypeName("#define FRS_ERR_STARTING_SERVICE 8002L")]
        public const int FRS_ERR_STARTING_SERVICE = 8002;

        [NativeTypeName("#define FRS_ERR_STOPPING_SERVICE 8003L")]
        public const int FRS_ERR_STOPPING_SERVICE = 8003;

        [NativeTypeName("#define FRS_ERR_INTERNAL_API 8004L")]
        public const int FRS_ERR_INTERNAL_API = 8004;

        [NativeTypeName("#define FRS_ERR_INTERNAL 8005L")]
        public const int FRS_ERR_INTERNAL = 8005;

        [NativeTypeName("#define FRS_ERR_SERVICE_COMM 8006L")]
        public const int FRS_ERR_SERVICE_COMM = 8006;

        [NativeTypeName("#define FRS_ERR_INSUFFICIENT_PRIV 8007L")]
        public const int FRS_ERR_INSUFFICIENT_PRIV = 8007;

        [NativeTypeName("#define FRS_ERR_AUTHENTICATION 8008L")]
        public const int FRS_ERR_AUTHENTICATION = 8008;

        [NativeTypeName("#define FRS_ERR_PARENT_INSUFFICIENT_PRIV 8009L")]
        public const int FRS_ERR_PARENT_INSUFFICIENT_PRIV = 8009;

        [NativeTypeName("#define FRS_ERR_PARENT_AUTHENTICATION 8010L")]
        public const int FRS_ERR_PARENT_AUTHENTICATION = 8010;

        [NativeTypeName("#define FRS_ERR_CHILD_TO_PARENT_COMM 8011L")]
        public const int FRS_ERR_CHILD_TO_PARENT_COMM = 8011;

        [NativeTypeName("#define FRS_ERR_PARENT_TO_CHILD_COMM 8012L")]
        public const int FRS_ERR_PARENT_TO_CHILD_COMM = 8012;

        [NativeTypeName("#define FRS_ERR_SYSVOL_POPULATE 8013L")]
        public const int FRS_ERR_SYSVOL_POPULATE = 8013;

        [NativeTypeName("#define FRS_ERR_SYSVOL_POPULATE_TIMEOUT 8014L")]
        public const int FRS_ERR_SYSVOL_POPULATE_TIMEOUT = 8014;

        [NativeTypeName("#define FRS_ERR_SYSVOL_IS_BUSY 8015L")]
        public const int FRS_ERR_SYSVOL_IS_BUSY = 8015;

        [NativeTypeName("#define FRS_ERR_SYSVOL_DEMOTE 8016L")]
        public const int FRS_ERR_SYSVOL_DEMOTE = 8016;

        [NativeTypeName("#define FRS_ERR_INVALID_SERVICE_PARAMETER 8017L")]
        public const int FRS_ERR_INVALID_SERVICE_PARAMETER = 8017;

        [NativeTypeName("#define DS_S_SUCCESS NO_ERROR")]
        public const int DS_S_SUCCESS = 0;

        [NativeTypeName("#define ERROR_DS_NOT_INSTALLED 8200L")]
        public const int ERROR_DS_NOT_INSTALLED = 8200;

        [NativeTypeName("#define ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY 8201L")]
        public const int ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY = 8201;

        [NativeTypeName("#define ERROR_DS_NO_ATTRIBUTE_OR_VALUE 8202L")]
        public const int ERROR_DS_NO_ATTRIBUTE_OR_VALUE = 8202;

        [NativeTypeName("#define ERROR_DS_INVALID_ATTRIBUTE_SYNTAX 8203L")]
        public const int ERROR_DS_INVALID_ATTRIBUTE_SYNTAX = 8203;

        [NativeTypeName("#define ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED 8204L")]
        public const int ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED = 8204;

        [NativeTypeName("#define ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS 8205L")]
        public const int ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS = 8205;

        [NativeTypeName("#define ERROR_DS_BUSY 8206L")]
        public const int ERROR_DS_BUSY = 8206;

        [NativeTypeName("#define ERROR_DS_UNAVAILABLE 8207L")]
        public const int ERROR_DS_UNAVAILABLE = 8207;

        [NativeTypeName("#define ERROR_DS_NO_RIDS_ALLOCATED 8208L")]
        public const int ERROR_DS_NO_RIDS_ALLOCATED = 8208;

        [NativeTypeName("#define ERROR_DS_NO_MORE_RIDS 8209L")]
        public const int ERROR_DS_NO_MORE_RIDS = 8209;

        [NativeTypeName("#define ERROR_DS_INCORRECT_ROLE_OWNER 8210L")]
        public const int ERROR_DS_INCORRECT_ROLE_OWNER = 8210;

        [NativeTypeName("#define ERROR_DS_RIDMGR_INIT_ERROR 8211L")]
        public const int ERROR_DS_RIDMGR_INIT_ERROR = 8211;

        [NativeTypeName("#define ERROR_DS_OBJ_CLASS_VIOLATION 8212L")]
        public const int ERROR_DS_OBJ_CLASS_VIOLATION = 8212;

        [NativeTypeName("#define ERROR_DS_CANT_ON_NON_LEAF 8213L")]
        public const int ERROR_DS_CANT_ON_NON_LEAF = 8213;

        [NativeTypeName("#define ERROR_DS_CANT_ON_RDN 8214L")]
        public const int ERROR_DS_CANT_ON_RDN = 8214;

        [NativeTypeName("#define ERROR_DS_CANT_MOD_OBJ_CLASS 8215L")]
        public const int ERROR_DS_CANT_MOD_OBJ_CLASS = 8215;

        [NativeTypeName("#define ERROR_DS_CROSS_DOM_MOVE_ERROR 8216L")]
        public const int ERROR_DS_CROSS_DOM_MOVE_ERROR = 8216;

        [NativeTypeName("#define ERROR_DS_GC_NOT_AVAILABLE 8217L")]
        public const int ERROR_DS_GC_NOT_AVAILABLE = 8217;

        [NativeTypeName("#define ERROR_SHARED_POLICY 8218L")]
        public const int ERROR_SHARED_POLICY = 8218;

        [NativeTypeName("#define ERROR_POLICY_OBJECT_NOT_FOUND 8219L")]
        public const int ERROR_POLICY_OBJECT_NOT_FOUND = 8219;

        [NativeTypeName("#define ERROR_POLICY_ONLY_IN_DS 8220L")]
        public const int ERROR_POLICY_ONLY_IN_DS = 8220;

        [NativeTypeName("#define ERROR_PROMOTION_ACTIVE 8221L")]
        public const int ERROR_PROMOTION_ACTIVE = 8221;

        [NativeTypeName("#define ERROR_NO_PROMOTION_ACTIVE 8222L")]
        public const int ERROR_NO_PROMOTION_ACTIVE = 8222;

        [NativeTypeName("#define ERROR_DS_OPERATIONS_ERROR 8224L")]
        public const int ERROR_DS_OPERATIONS_ERROR = 8224;

        [NativeTypeName("#define ERROR_DS_PROTOCOL_ERROR 8225L")]
        public const int ERROR_DS_PROTOCOL_ERROR = 8225;

        [NativeTypeName("#define ERROR_DS_TIMELIMIT_EXCEEDED 8226L")]
        public const int ERROR_DS_TIMELIMIT_EXCEEDED = 8226;

        [NativeTypeName("#define ERROR_DS_SIZELIMIT_EXCEEDED 8227L")]
        public const int ERROR_DS_SIZELIMIT_EXCEEDED = 8227;

        [NativeTypeName("#define ERROR_DS_ADMIN_LIMIT_EXCEEDED 8228L")]
        public const int ERROR_DS_ADMIN_LIMIT_EXCEEDED = 8228;

        [NativeTypeName("#define ERROR_DS_COMPARE_FALSE 8229L")]
        public const int ERROR_DS_COMPARE_FALSE = 8229;

        [NativeTypeName("#define ERROR_DS_COMPARE_TRUE 8230L")]
        public const int ERROR_DS_COMPARE_TRUE = 8230;

        [NativeTypeName("#define ERROR_DS_AUTH_METHOD_NOT_SUPPORTED 8231L")]
        public const int ERROR_DS_AUTH_METHOD_NOT_SUPPORTED = 8231;

        [NativeTypeName("#define ERROR_DS_STRONG_AUTH_REQUIRED 8232L")]
        public const int ERROR_DS_STRONG_AUTH_REQUIRED = 8232;

        [NativeTypeName("#define ERROR_DS_INAPPROPRIATE_AUTH 8233L")]
        public const int ERROR_DS_INAPPROPRIATE_AUTH = 8233;

        [NativeTypeName("#define ERROR_DS_AUTH_UNKNOWN 8234L")]
        public const int ERROR_DS_AUTH_UNKNOWN = 8234;

        [NativeTypeName("#define ERROR_DS_REFERRAL 8235L")]
        public const int ERROR_DS_REFERRAL = 8235;

        [NativeTypeName("#define ERROR_DS_UNAVAILABLE_CRIT_EXTENSION 8236L")]
        public const int ERROR_DS_UNAVAILABLE_CRIT_EXTENSION = 8236;

        [NativeTypeName("#define ERROR_DS_CONFIDENTIALITY_REQUIRED 8237L")]
        public const int ERROR_DS_CONFIDENTIALITY_REQUIRED = 8237;

        [NativeTypeName("#define ERROR_DS_INAPPROPRIATE_MATCHING 8238L")]
        public const int ERROR_DS_INAPPROPRIATE_MATCHING = 8238;

        [NativeTypeName("#define ERROR_DS_CONSTRAINT_VIOLATION 8239L")]
        public const int ERROR_DS_CONSTRAINT_VIOLATION = 8239;

        [NativeTypeName("#define ERROR_DS_NO_SUCH_OBJECT 8240L")]
        public const int ERROR_DS_NO_SUCH_OBJECT = 8240;

        [NativeTypeName("#define ERROR_DS_ALIAS_PROBLEM 8241L")]
        public const int ERROR_DS_ALIAS_PROBLEM = 8241;

        [NativeTypeName("#define ERROR_DS_INVALID_DN_SYNTAX 8242L")]
        public const int ERROR_DS_INVALID_DN_SYNTAX = 8242;

        [NativeTypeName("#define ERROR_DS_IS_LEAF 8243L")]
        public const int ERROR_DS_IS_LEAF = 8243;

        [NativeTypeName("#define ERROR_DS_ALIAS_DEREF_PROBLEM 8244L")]
        public const int ERROR_DS_ALIAS_DEREF_PROBLEM = 8244;

        [NativeTypeName("#define ERROR_DS_UNWILLING_TO_PERFORM 8245L")]
        public const int ERROR_DS_UNWILLING_TO_PERFORM = 8245;

        [NativeTypeName("#define ERROR_DS_LOOP_DETECT 8246L")]
        public const int ERROR_DS_LOOP_DETECT = 8246;

        [NativeTypeName("#define ERROR_DS_NAMING_VIOLATION 8247L")]
        public const int ERROR_DS_NAMING_VIOLATION = 8247;

        [NativeTypeName("#define ERROR_DS_OBJECT_RESULTS_TOO_LARGE 8248L")]
        public const int ERROR_DS_OBJECT_RESULTS_TOO_LARGE = 8248;

        [NativeTypeName("#define ERROR_DS_AFFECTS_MULTIPLE_DSAS 8249L")]
        public const int ERROR_DS_AFFECTS_MULTIPLE_DSAS = 8249;

        [NativeTypeName("#define ERROR_DS_SERVER_DOWN 8250L")]
        public const int ERROR_DS_SERVER_DOWN = 8250;

        [NativeTypeName("#define ERROR_DS_LOCAL_ERROR 8251L")]
        public const int ERROR_DS_LOCAL_ERROR = 8251;

        [NativeTypeName("#define ERROR_DS_ENCODING_ERROR 8252L")]
        public const int ERROR_DS_ENCODING_ERROR = 8252;

        [NativeTypeName("#define ERROR_DS_DECODING_ERROR 8253L")]
        public const int ERROR_DS_DECODING_ERROR = 8253;

        [NativeTypeName("#define ERROR_DS_FILTER_UNKNOWN 8254L")]
        public const int ERROR_DS_FILTER_UNKNOWN = 8254;

        [NativeTypeName("#define ERROR_DS_PARAM_ERROR 8255L")]
        public const int ERROR_DS_PARAM_ERROR = 8255;

        [NativeTypeName("#define ERROR_DS_NOT_SUPPORTED 8256L")]
        public const int ERROR_DS_NOT_SUPPORTED = 8256;

        [NativeTypeName("#define ERROR_DS_NO_RESULTS_RETURNED 8257L")]
        public const int ERROR_DS_NO_RESULTS_RETURNED = 8257;

        [NativeTypeName("#define ERROR_DS_CONTROL_NOT_FOUND 8258L")]
        public const int ERROR_DS_CONTROL_NOT_FOUND = 8258;

        [NativeTypeName("#define ERROR_DS_CLIENT_LOOP 8259L")]
        public const int ERROR_DS_CLIENT_LOOP = 8259;

        [NativeTypeName("#define ERROR_DS_REFERRAL_LIMIT_EXCEEDED 8260L")]
        public const int ERROR_DS_REFERRAL_LIMIT_EXCEEDED = 8260;

        [NativeTypeName("#define ERROR_DS_SORT_CONTROL_MISSING 8261L")]
        public const int ERROR_DS_SORT_CONTROL_MISSING = 8261;

        [NativeTypeName("#define ERROR_DS_OFFSET_RANGE_ERROR 8262L")]
        public const int ERROR_DS_OFFSET_RANGE_ERROR = 8262;

        [NativeTypeName("#define ERROR_DS_RIDMGR_DISABLED 8263L")]
        public const int ERROR_DS_RIDMGR_DISABLED = 8263;

        [NativeTypeName("#define ERROR_DS_ROOT_MUST_BE_NC 8301L")]
        public const int ERROR_DS_ROOT_MUST_BE_NC = 8301;

        [NativeTypeName("#define ERROR_DS_ADD_REPLICA_INHIBITED 8302L")]
        public const int ERROR_DS_ADD_REPLICA_INHIBITED = 8302;

        [NativeTypeName("#define ERROR_DS_ATT_NOT_DEF_IN_SCHEMA 8303L")]
        public const int ERROR_DS_ATT_NOT_DEF_IN_SCHEMA = 8303;

        [NativeTypeName("#define ERROR_DS_MAX_OBJ_SIZE_EXCEEDED 8304L")]
        public const int ERROR_DS_MAX_OBJ_SIZE_EXCEEDED = 8304;

        [NativeTypeName("#define ERROR_DS_OBJ_STRING_NAME_EXISTS 8305L")]
        public const int ERROR_DS_OBJ_STRING_NAME_EXISTS = 8305;

        [NativeTypeName("#define ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA 8306L")]
        public const int ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA = 8306;

        [NativeTypeName("#define ERROR_DS_RDN_DOESNT_MATCH_SCHEMA 8307L")]
        public const int ERROR_DS_RDN_DOESNT_MATCH_SCHEMA = 8307;

        [NativeTypeName("#define ERROR_DS_NO_REQUESTED_ATTS_FOUND 8308L")]
        public const int ERROR_DS_NO_REQUESTED_ATTS_FOUND = 8308;

        [NativeTypeName("#define ERROR_DS_USER_BUFFER_TO_SMALL 8309L")]
        public const int ERROR_DS_USER_BUFFER_TO_SMALL = 8309;

        [NativeTypeName("#define ERROR_DS_ATT_IS_NOT_ON_OBJ 8310L")]
        public const int ERROR_DS_ATT_IS_NOT_ON_OBJ = 8310;

        [NativeTypeName("#define ERROR_DS_ILLEGAL_MOD_OPERATION 8311L")]
        public const int ERROR_DS_ILLEGAL_MOD_OPERATION = 8311;

        [NativeTypeName("#define ERROR_DS_OBJ_TOO_LARGE 8312L")]
        public const int ERROR_DS_OBJ_TOO_LARGE = 8312;

        [NativeTypeName("#define ERROR_DS_BAD_INSTANCE_TYPE 8313L")]
        public const int ERROR_DS_BAD_INSTANCE_TYPE = 8313;

        [NativeTypeName("#define ERROR_DS_MASTERDSA_REQUIRED 8314L")]
        public const int ERROR_DS_MASTERDSA_REQUIRED = 8314;

        [NativeTypeName("#define ERROR_DS_OBJECT_CLASS_REQUIRED 8315L")]
        public const int ERROR_DS_OBJECT_CLASS_REQUIRED = 8315;

        [NativeTypeName("#define ERROR_DS_MISSING_REQUIRED_ATT 8316L")]
        public const int ERROR_DS_MISSING_REQUIRED_ATT = 8316;

        [NativeTypeName("#define ERROR_DS_ATT_NOT_DEF_FOR_CLASS 8317L")]
        public const int ERROR_DS_ATT_NOT_DEF_FOR_CLASS = 8317;

        [NativeTypeName("#define ERROR_DS_ATT_ALREADY_EXISTS 8318L")]
        public const int ERROR_DS_ATT_ALREADY_EXISTS = 8318;

        [NativeTypeName("#define ERROR_DS_CANT_ADD_ATT_VALUES 8320L")]
        public const int ERROR_DS_CANT_ADD_ATT_VALUES = 8320;

        [NativeTypeName("#define ERROR_DS_SINGLE_VALUE_CONSTRAINT 8321L")]
        public const int ERROR_DS_SINGLE_VALUE_CONSTRAINT = 8321;

        [NativeTypeName("#define ERROR_DS_RANGE_CONSTRAINT 8322L")]
        public const int ERROR_DS_RANGE_CONSTRAINT = 8322;

        [NativeTypeName("#define ERROR_DS_ATT_VAL_ALREADY_EXISTS 8323L")]
        public const int ERROR_DS_ATT_VAL_ALREADY_EXISTS = 8323;

        [NativeTypeName("#define ERROR_DS_CANT_REM_MISSING_ATT 8324L")]
        public const int ERROR_DS_CANT_REM_MISSING_ATT = 8324;

        [NativeTypeName("#define ERROR_DS_CANT_REM_MISSING_ATT_VAL 8325L")]
        public const int ERROR_DS_CANT_REM_MISSING_ATT_VAL = 8325;

        [NativeTypeName("#define ERROR_DS_ROOT_CANT_BE_SUBREF 8326L")]
        public const int ERROR_DS_ROOT_CANT_BE_SUBREF = 8326;

        [NativeTypeName("#define ERROR_DS_NO_CHAINING 8327L")]
        public const int ERROR_DS_NO_CHAINING = 8327;

        [NativeTypeName("#define ERROR_DS_NO_CHAINED_EVAL 8328L")]
        public const int ERROR_DS_NO_CHAINED_EVAL = 8328;

        [NativeTypeName("#define ERROR_DS_NO_PARENT_OBJECT 8329L")]
        public const int ERROR_DS_NO_PARENT_OBJECT = 8329;

        [NativeTypeName("#define ERROR_DS_PARENT_IS_AN_ALIAS 8330L")]
        public const int ERROR_DS_PARENT_IS_AN_ALIAS = 8330;

        [NativeTypeName("#define ERROR_DS_CANT_MIX_MASTER_AND_REPS 8331L")]
        public const int ERROR_DS_CANT_MIX_MASTER_AND_REPS = 8331;

        [NativeTypeName("#define ERROR_DS_CHILDREN_EXIST 8332L")]
        public const int ERROR_DS_CHILDREN_EXIST = 8332;

        [NativeTypeName("#define ERROR_DS_OBJ_NOT_FOUND 8333L")]
        public const int ERROR_DS_OBJ_NOT_FOUND = 8333;

        [NativeTypeName("#define ERROR_DS_ALIASED_OBJ_MISSING 8334L")]
        public const int ERROR_DS_ALIASED_OBJ_MISSING = 8334;

        [NativeTypeName("#define ERROR_DS_BAD_NAME_SYNTAX 8335L")]
        public const int ERROR_DS_BAD_NAME_SYNTAX = 8335;

        [NativeTypeName("#define ERROR_DS_ALIAS_POINTS_TO_ALIAS 8336L")]
        public const int ERROR_DS_ALIAS_POINTS_TO_ALIAS = 8336;

        [NativeTypeName("#define ERROR_DS_CANT_DEREF_ALIAS 8337L")]
        public const int ERROR_DS_CANT_DEREF_ALIAS = 8337;

        [NativeTypeName("#define ERROR_DS_OUT_OF_SCOPE 8338L")]
        public const int ERROR_DS_OUT_OF_SCOPE = 8338;

        [NativeTypeName("#define ERROR_DS_OBJECT_BEING_REMOVED 8339L")]
        public const int ERROR_DS_OBJECT_BEING_REMOVED = 8339;

        [NativeTypeName("#define ERROR_DS_CANT_DELETE_DSA_OBJ 8340L")]
        public const int ERROR_DS_CANT_DELETE_DSA_OBJ = 8340;

        [NativeTypeName("#define ERROR_DS_GENERIC_ERROR 8341L")]
        public const int ERROR_DS_GENERIC_ERROR = 8341;

        [NativeTypeName("#define ERROR_DS_DSA_MUST_BE_INT_MASTER 8342L")]
        public const int ERROR_DS_DSA_MUST_BE_INT_MASTER = 8342;

        [NativeTypeName("#define ERROR_DS_CLASS_NOT_DSA 8343L")]
        public const int ERROR_DS_CLASS_NOT_DSA = 8343;

        [NativeTypeName("#define ERROR_DS_INSUFF_ACCESS_RIGHTS 8344L")]
        public const int ERROR_DS_INSUFF_ACCESS_RIGHTS = 8344;

        [NativeTypeName("#define ERROR_DS_ILLEGAL_SUPERIOR 8345L")]
        public const int ERROR_DS_ILLEGAL_SUPERIOR = 8345;

        [NativeTypeName("#define ERROR_DS_ATTRIBUTE_OWNED_BY_SAM 8346L")]
        public const int ERROR_DS_ATTRIBUTE_OWNED_BY_SAM = 8346;

        [NativeTypeName("#define ERROR_DS_NAME_TOO_MANY_PARTS 8347L")]
        public const int ERROR_DS_NAME_TOO_MANY_PARTS = 8347;

        [NativeTypeName("#define ERROR_DS_NAME_TOO_LONG 8348L")]
        public const int ERROR_DS_NAME_TOO_LONG = 8348;

        [NativeTypeName("#define ERROR_DS_NAME_VALUE_TOO_LONG 8349L")]
        public const int ERROR_DS_NAME_VALUE_TOO_LONG = 8349;

        [NativeTypeName("#define ERROR_DS_NAME_UNPARSEABLE 8350L")]
        public const int ERROR_DS_NAME_UNPARSEABLE = 8350;

        [NativeTypeName("#define ERROR_DS_NAME_TYPE_UNKNOWN 8351L")]
        public const int ERROR_DS_NAME_TYPE_UNKNOWN = 8351;

        [NativeTypeName("#define ERROR_DS_NOT_AN_OBJECT 8352L")]
        public const int ERROR_DS_NOT_AN_OBJECT = 8352;

        [NativeTypeName("#define ERROR_DS_SEC_DESC_TOO_SHORT 8353L")]
        public const int ERROR_DS_SEC_DESC_TOO_SHORT = 8353;

        [NativeTypeName("#define ERROR_DS_SEC_DESC_INVALID 8354L")]
        public const int ERROR_DS_SEC_DESC_INVALID = 8354;

        [NativeTypeName("#define ERROR_DS_NO_DELETED_NAME 8355L")]
        public const int ERROR_DS_NO_DELETED_NAME = 8355;

        [NativeTypeName("#define ERROR_DS_SUBREF_MUST_HAVE_PARENT 8356L")]
        public const int ERROR_DS_SUBREF_MUST_HAVE_PARENT = 8356;

        [NativeTypeName("#define ERROR_DS_NCNAME_MUST_BE_NC 8357L")]
        public const int ERROR_DS_NCNAME_MUST_BE_NC = 8357;

        [NativeTypeName("#define ERROR_DS_CANT_ADD_SYSTEM_ONLY 8358L")]
        public const int ERROR_DS_CANT_ADD_SYSTEM_ONLY = 8358;

        [NativeTypeName("#define ERROR_DS_CLASS_MUST_BE_CONCRETE 8359L")]
        public const int ERROR_DS_CLASS_MUST_BE_CONCRETE = 8359;

        [NativeTypeName("#define ERROR_DS_INVALID_DMD 8360L")]
        public const int ERROR_DS_INVALID_DMD = 8360;

        [NativeTypeName("#define ERROR_DS_OBJ_GUID_EXISTS 8361L")]
        public const int ERROR_DS_OBJ_GUID_EXISTS = 8361;

        [NativeTypeName("#define ERROR_DS_NOT_ON_BACKLINK 8362L")]
        public const int ERROR_DS_NOT_ON_BACKLINK = 8362;

        [NativeTypeName("#define ERROR_DS_NO_CROSSREF_FOR_NC 8363L")]
        public const int ERROR_DS_NO_CROSSREF_FOR_NC = 8363;

        [NativeTypeName("#define ERROR_DS_SHUTTING_DOWN 8364L")]
        public const int ERROR_DS_SHUTTING_DOWN = 8364;

        [NativeTypeName("#define ERROR_DS_UNKNOWN_OPERATION 8365L")]
        public const int ERROR_DS_UNKNOWN_OPERATION = 8365;

        [NativeTypeName("#define ERROR_DS_INVALID_ROLE_OWNER 8366L")]
        public const int ERROR_DS_INVALID_ROLE_OWNER = 8366;

        [NativeTypeName("#define ERROR_DS_COULDNT_CONTACT_FSMO 8367L")]
        public const int ERROR_DS_COULDNT_CONTACT_FSMO = 8367;

        [NativeTypeName("#define ERROR_DS_CROSS_NC_DN_RENAME 8368L")]
        public const int ERROR_DS_CROSS_NC_DN_RENAME = 8368;

        [NativeTypeName("#define ERROR_DS_CANT_MOD_SYSTEM_ONLY 8369L")]
        public const int ERROR_DS_CANT_MOD_SYSTEM_ONLY = 8369;

        [NativeTypeName("#define ERROR_DS_REPLICATOR_ONLY 8370L")]
        public const int ERROR_DS_REPLICATOR_ONLY = 8370;

        [NativeTypeName("#define ERROR_DS_OBJ_CLASS_NOT_DEFINED 8371L")]
        public const int ERROR_DS_OBJ_CLASS_NOT_DEFINED = 8371;

        [NativeTypeName("#define ERROR_DS_OBJ_CLASS_NOT_SUBCLASS 8372L")]
        public const int ERROR_DS_OBJ_CLASS_NOT_SUBCLASS = 8372;

        [NativeTypeName("#define ERROR_DS_NAME_REFERENCE_INVALID 8373L")]
        public const int ERROR_DS_NAME_REFERENCE_INVALID = 8373;

        [NativeTypeName("#define ERROR_DS_CROSS_REF_EXISTS 8374L")]
        public const int ERROR_DS_CROSS_REF_EXISTS = 8374;

        [NativeTypeName("#define ERROR_DS_CANT_DEL_MASTER_CROSSREF 8375L")]
        public const int ERROR_DS_CANT_DEL_MASTER_CROSSREF = 8375;

        [NativeTypeName("#define ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD 8376L")]
        public const int ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD = 8376;

        [NativeTypeName("#define ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX 8377L")]
        public const int ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX = 8377;

        [NativeTypeName("#define ERROR_DS_DUP_RDN 8378L")]
        public const int ERROR_DS_DUP_RDN = 8378;

        [NativeTypeName("#define ERROR_DS_DUP_OID 8379L")]
        public const int ERROR_DS_DUP_OID = 8379;

        [NativeTypeName("#define ERROR_DS_DUP_MAPI_ID 8380L")]
        public const int ERROR_DS_DUP_MAPI_ID = 8380;

        [NativeTypeName("#define ERROR_DS_DUP_SCHEMA_ID_GUID 8381L")]
        public const int ERROR_DS_DUP_SCHEMA_ID_GUID = 8381;

        [NativeTypeName("#define ERROR_DS_DUP_LDAP_DISPLAY_NAME 8382L")]
        public const int ERROR_DS_DUP_LDAP_DISPLAY_NAME = 8382;

        [NativeTypeName("#define ERROR_DS_SEMANTIC_ATT_TEST 8383L")]
        public const int ERROR_DS_SEMANTIC_ATT_TEST = 8383;

        [NativeTypeName("#define ERROR_DS_SYNTAX_MISMATCH 8384L")]
        public const int ERROR_DS_SYNTAX_MISMATCH = 8384;

        [NativeTypeName("#define ERROR_DS_EXISTS_IN_MUST_HAVE 8385L")]
        public const int ERROR_DS_EXISTS_IN_MUST_HAVE = 8385;

        [NativeTypeName("#define ERROR_DS_EXISTS_IN_MAY_HAVE 8386L")]
        public const int ERROR_DS_EXISTS_IN_MAY_HAVE = 8386;

        [NativeTypeName("#define ERROR_DS_NONEXISTENT_MAY_HAVE 8387L")]
        public const int ERROR_DS_NONEXISTENT_MAY_HAVE = 8387;

        [NativeTypeName("#define ERROR_DS_NONEXISTENT_MUST_HAVE 8388L")]
        public const int ERROR_DS_NONEXISTENT_MUST_HAVE = 8388;

        [NativeTypeName("#define ERROR_DS_AUX_CLS_TEST_FAIL 8389L")]
        public const int ERROR_DS_AUX_CLS_TEST_FAIL = 8389;

        [NativeTypeName("#define ERROR_DS_NONEXISTENT_POSS_SUP 8390L")]
        public const int ERROR_DS_NONEXISTENT_POSS_SUP = 8390;

        [NativeTypeName("#define ERROR_DS_SUB_CLS_TEST_FAIL 8391L")]
        public const int ERROR_DS_SUB_CLS_TEST_FAIL = 8391;

        [NativeTypeName("#define ERROR_DS_BAD_RDN_ATT_ID_SYNTAX 8392L")]
        public const int ERROR_DS_BAD_RDN_ATT_ID_SYNTAX = 8392;

        [NativeTypeName("#define ERROR_DS_EXISTS_IN_AUX_CLS 8393L")]
        public const int ERROR_DS_EXISTS_IN_AUX_CLS = 8393;

        [NativeTypeName("#define ERROR_DS_EXISTS_IN_SUB_CLS 8394L")]
        public const int ERROR_DS_EXISTS_IN_SUB_CLS = 8394;

        [NativeTypeName("#define ERROR_DS_EXISTS_IN_POSS_SUP 8395L")]
        public const int ERROR_DS_EXISTS_IN_POSS_SUP = 8395;

        [NativeTypeName("#define ERROR_DS_RECALCSCHEMA_FAILED 8396L")]
        public const int ERROR_DS_RECALCSCHEMA_FAILED = 8396;

        [NativeTypeName("#define ERROR_DS_TREE_DELETE_NOT_FINISHED 8397L")]
        public const int ERROR_DS_TREE_DELETE_NOT_FINISHED = 8397;

        [NativeTypeName("#define ERROR_DS_CANT_DELETE 8398L")]
        public const int ERROR_DS_CANT_DELETE = 8398;

        [NativeTypeName("#define ERROR_DS_ATT_SCHEMA_REQ_ID 8399L")]
        public const int ERROR_DS_ATT_SCHEMA_REQ_ID = 8399;

        [NativeTypeName("#define ERROR_DS_BAD_ATT_SCHEMA_SYNTAX 8400L")]
        public const int ERROR_DS_BAD_ATT_SCHEMA_SYNTAX = 8400;

        [NativeTypeName("#define ERROR_DS_CANT_CACHE_ATT 8401L")]
        public const int ERROR_DS_CANT_CACHE_ATT = 8401;

        [NativeTypeName("#define ERROR_DS_CANT_CACHE_CLASS 8402L")]
        public const int ERROR_DS_CANT_CACHE_CLASS = 8402;

        [NativeTypeName("#define ERROR_DS_CANT_REMOVE_ATT_CACHE 8403L")]
        public const int ERROR_DS_CANT_REMOVE_ATT_CACHE = 8403;

        [NativeTypeName("#define ERROR_DS_CANT_REMOVE_CLASS_CACHE 8404L")]
        public const int ERROR_DS_CANT_REMOVE_CLASS_CACHE = 8404;

        [NativeTypeName("#define ERROR_DS_CANT_RETRIEVE_DN 8405L")]
        public const int ERROR_DS_CANT_RETRIEVE_DN = 8405;

        [NativeTypeName("#define ERROR_DS_MISSING_SUPREF 8406L")]
        public const int ERROR_DS_MISSING_SUPREF = 8406;

        [NativeTypeName("#define ERROR_DS_CANT_RETRIEVE_INSTANCE 8407L")]
        public const int ERROR_DS_CANT_RETRIEVE_INSTANCE = 8407;

        [NativeTypeName("#define ERROR_DS_CODE_INCONSISTENCY 8408L")]
        public const int ERROR_DS_CODE_INCONSISTENCY = 8408;

        [NativeTypeName("#define ERROR_DS_DATABASE_ERROR 8409L")]
        public const int ERROR_DS_DATABASE_ERROR = 8409;

        [NativeTypeName("#define ERROR_DS_GOVERNSID_MISSING 8410L")]
        public const int ERROR_DS_GOVERNSID_MISSING = 8410;

        [NativeTypeName("#define ERROR_DS_MISSING_EXPECTED_ATT 8411L")]
        public const int ERROR_DS_MISSING_EXPECTED_ATT = 8411;

        [NativeTypeName("#define ERROR_DS_NCNAME_MISSING_CR_REF 8412L")]
        public const int ERROR_DS_NCNAME_MISSING_CR_REF = 8412;

        [NativeTypeName("#define ERROR_DS_SECURITY_CHECKING_ERROR 8413L")]
        public const int ERROR_DS_SECURITY_CHECKING_ERROR = 8413;

        [NativeTypeName("#define ERROR_DS_SCHEMA_NOT_LOADED 8414L")]
        public const int ERROR_DS_SCHEMA_NOT_LOADED = 8414;

        [NativeTypeName("#define ERROR_DS_SCHEMA_ALLOC_FAILED 8415L")]
        public const int ERROR_DS_SCHEMA_ALLOC_FAILED = 8415;

        [NativeTypeName("#define ERROR_DS_ATT_SCHEMA_REQ_SYNTAX 8416L")]
        public const int ERROR_DS_ATT_SCHEMA_REQ_SYNTAX = 8416;

        [NativeTypeName("#define ERROR_DS_GCVERIFY_ERROR 8417L")]
        public const int ERROR_DS_GCVERIFY_ERROR = 8417;

        [NativeTypeName("#define ERROR_DS_DRA_SCHEMA_MISMATCH 8418L")]
        public const int ERROR_DS_DRA_SCHEMA_MISMATCH = 8418;

        [NativeTypeName("#define ERROR_DS_CANT_FIND_DSA_OBJ 8419L")]
        public const int ERROR_DS_CANT_FIND_DSA_OBJ = 8419;

        [NativeTypeName("#define ERROR_DS_CANT_FIND_EXPECTED_NC 8420L")]
        public const int ERROR_DS_CANT_FIND_EXPECTED_NC = 8420;

        [NativeTypeName("#define ERROR_DS_CANT_FIND_NC_IN_CACHE 8421L")]
        public const int ERROR_DS_CANT_FIND_NC_IN_CACHE = 8421;

        [NativeTypeName("#define ERROR_DS_CANT_RETRIEVE_CHILD 8422L")]
        public const int ERROR_DS_CANT_RETRIEVE_CHILD = 8422;

        [NativeTypeName("#define ERROR_DS_SECURITY_ILLEGAL_MODIFY 8423L")]
        public const int ERROR_DS_SECURITY_ILLEGAL_MODIFY = 8423;

        [NativeTypeName("#define ERROR_DS_CANT_REPLACE_HIDDEN_REC 8424L")]
        public const int ERROR_DS_CANT_REPLACE_HIDDEN_REC = 8424;

        [NativeTypeName("#define ERROR_DS_BAD_HIERARCHY_FILE 8425L")]
        public const int ERROR_DS_BAD_HIERARCHY_FILE = 8425;

        [NativeTypeName("#define ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED 8426L")]
        public const int ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED = 8426;

        [NativeTypeName("#define ERROR_DS_CONFIG_PARAM_MISSING 8427L")]
        public const int ERROR_DS_CONFIG_PARAM_MISSING = 8427;

        [NativeTypeName("#define ERROR_DS_COUNTING_AB_INDICES_FAILED 8428L")]
        public const int ERROR_DS_COUNTING_AB_INDICES_FAILED = 8428;

        [NativeTypeName("#define ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED 8429L")]
        public const int ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED = 8429;

        [NativeTypeName("#define ERROR_DS_INTERNAL_FAILURE 8430L")]
        public const int ERROR_DS_INTERNAL_FAILURE = 8430;

        [NativeTypeName("#define ERROR_DS_UNKNOWN_ERROR 8431L")]
        public const int ERROR_DS_UNKNOWN_ERROR = 8431;

        [NativeTypeName("#define ERROR_DS_ROOT_REQUIRES_CLASS_TOP 8432L")]
        public const int ERROR_DS_ROOT_REQUIRES_CLASS_TOP = 8432;

        [NativeTypeName("#define ERROR_DS_REFUSING_FSMO_ROLES 8433L")]
        public const int ERROR_DS_REFUSING_FSMO_ROLES = 8433;

        [NativeTypeName("#define ERROR_DS_MISSING_FSMO_SETTINGS 8434L")]
        public const int ERROR_DS_MISSING_FSMO_SETTINGS = 8434;

        [NativeTypeName("#define ERROR_DS_UNABLE_TO_SURRENDER_ROLES 8435L")]
        public const int ERROR_DS_UNABLE_TO_SURRENDER_ROLES = 8435;

        [NativeTypeName("#define ERROR_DS_DRA_GENERIC 8436L")]
        public const int ERROR_DS_DRA_GENERIC = 8436;

        [NativeTypeName("#define ERROR_DS_DRA_INVALID_PARAMETER 8437L")]
        public const int ERROR_DS_DRA_INVALID_PARAMETER = 8437;

        [NativeTypeName("#define ERROR_DS_DRA_BUSY 8438L")]
        public const int ERROR_DS_DRA_BUSY = 8438;

        [NativeTypeName("#define ERROR_DS_DRA_BAD_DN 8439L")]
        public const int ERROR_DS_DRA_BAD_DN = 8439;

        [NativeTypeName("#define ERROR_DS_DRA_BAD_NC 8440L")]
        public const int ERROR_DS_DRA_BAD_NC = 8440;

        [NativeTypeName("#define ERROR_DS_DRA_DN_EXISTS 8441L")]
        public const int ERROR_DS_DRA_DN_EXISTS = 8441;

        [NativeTypeName("#define ERROR_DS_DRA_INTERNAL_ERROR 8442L")]
        public const int ERROR_DS_DRA_INTERNAL_ERROR = 8442;

        [NativeTypeName("#define ERROR_DS_DRA_INCONSISTENT_DIT 8443L")]
        public const int ERROR_DS_DRA_INCONSISTENT_DIT = 8443;

        [NativeTypeName("#define ERROR_DS_DRA_CONNECTION_FAILED 8444L")]
        public const int ERROR_DS_DRA_CONNECTION_FAILED = 8444;

        [NativeTypeName("#define ERROR_DS_DRA_BAD_INSTANCE_TYPE 8445L")]
        public const int ERROR_DS_DRA_BAD_INSTANCE_TYPE = 8445;

        [NativeTypeName("#define ERROR_DS_DRA_OUT_OF_MEM 8446L")]
        public const int ERROR_DS_DRA_OUT_OF_MEM = 8446;

        [NativeTypeName("#define ERROR_DS_DRA_MAIL_PROBLEM 8447L")]
        public const int ERROR_DS_DRA_MAIL_PROBLEM = 8447;

        [NativeTypeName("#define ERROR_DS_DRA_REF_ALREADY_EXISTS 8448L")]
        public const int ERROR_DS_DRA_REF_ALREADY_EXISTS = 8448;

        [NativeTypeName("#define ERROR_DS_DRA_REF_NOT_FOUND 8449L")]
        public const int ERROR_DS_DRA_REF_NOT_FOUND = 8449;

        [NativeTypeName("#define ERROR_DS_DRA_OBJ_IS_REP_SOURCE 8450L")]
        public const int ERROR_DS_DRA_OBJ_IS_REP_SOURCE = 8450;

        [NativeTypeName("#define ERROR_DS_DRA_DB_ERROR 8451L")]
        public const int ERROR_DS_DRA_DB_ERROR = 8451;

        [NativeTypeName("#define ERROR_DS_DRA_NO_REPLICA 8452L")]
        public const int ERROR_DS_DRA_NO_REPLICA = 8452;

        [NativeTypeName("#define ERROR_DS_DRA_ACCESS_DENIED 8453L")]
        public const int ERROR_DS_DRA_ACCESS_DENIED = 8453;

        [NativeTypeName("#define ERROR_DS_DRA_NOT_SUPPORTED 8454L")]
        public const int ERROR_DS_DRA_NOT_SUPPORTED = 8454;

        [NativeTypeName("#define ERROR_DS_DRA_RPC_CANCELLED 8455L")]
        public const int ERROR_DS_DRA_RPC_CANCELLED = 8455;

        [NativeTypeName("#define ERROR_DS_DRA_SOURCE_DISABLED 8456L")]
        public const int ERROR_DS_DRA_SOURCE_DISABLED = 8456;

        [NativeTypeName("#define ERROR_DS_DRA_SINK_DISABLED 8457L")]
        public const int ERROR_DS_DRA_SINK_DISABLED = 8457;

        [NativeTypeName("#define ERROR_DS_DRA_NAME_COLLISION 8458L")]
        public const int ERROR_DS_DRA_NAME_COLLISION = 8458;

        [NativeTypeName("#define ERROR_DS_DRA_SOURCE_REINSTALLED 8459L")]
        public const int ERROR_DS_DRA_SOURCE_REINSTALLED = 8459;

        [NativeTypeName("#define ERROR_DS_DRA_MISSING_PARENT 8460L")]
        public const int ERROR_DS_DRA_MISSING_PARENT = 8460;

        [NativeTypeName("#define ERROR_DS_DRA_PREEMPTED 8461L")]
        public const int ERROR_DS_DRA_PREEMPTED = 8461;

        [NativeTypeName("#define ERROR_DS_DRA_ABANDON_SYNC 8462L")]
        public const int ERROR_DS_DRA_ABANDON_SYNC = 8462;

        [NativeTypeName("#define ERROR_DS_DRA_SHUTDOWN 8463L")]
        public const int ERROR_DS_DRA_SHUTDOWN = 8463;

        [NativeTypeName("#define ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET 8464L")]
        public const int ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET = 8464;

        [NativeTypeName("#define ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA 8465L")]
        public const int ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA = 8465;

        [NativeTypeName("#define ERROR_DS_DRA_EXTN_CONNECTION_FAILED 8466L")]
        public const int ERROR_DS_DRA_EXTN_CONNECTION_FAILED = 8466;

        [NativeTypeName("#define ERROR_DS_INSTALL_SCHEMA_MISMATCH 8467L")]
        public const int ERROR_DS_INSTALL_SCHEMA_MISMATCH = 8467;

        [NativeTypeName("#define ERROR_DS_DUP_LINK_ID 8468L")]
        public const int ERROR_DS_DUP_LINK_ID = 8468;

        [NativeTypeName("#define ERROR_DS_NAME_ERROR_RESOLVING 8469L")]
        public const int ERROR_DS_NAME_ERROR_RESOLVING = 8469;

        [NativeTypeName("#define ERROR_DS_NAME_ERROR_NOT_FOUND 8470L")]
        public const int ERROR_DS_NAME_ERROR_NOT_FOUND = 8470;

        [NativeTypeName("#define ERROR_DS_NAME_ERROR_NOT_UNIQUE 8471L")]
        public const int ERROR_DS_NAME_ERROR_NOT_UNIQUE = 8471;

        [NativeTypeName("#define ERROR_DS_NAME_ERROR_NO_MAPPING 8472L")]
        public const int ERROR_DS_NAME_ERROR_NO_MAPPING = 8472;

        [NativeTypeName("#define ERROR_DS_NAME_ERROR_DOMAIN_ONLY 8473L")]
        public const int ERROR_DS_NAME_ERROR_DOMAIN_ONLY = 8473;

        [NativeTypeName("#define ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING 8474L")]
        public const int ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING = 8474;

        [NativeTypeName("#define ERROR_DS_CONSTRUCTED_ATT_MOD 8475L")]
        public const int ERROR_DS_CONSTRUCTED_ATT_MOD = 8475;

        [NativeTypeName("#define ERROR_DS_WRONG_OM_OBJ_CLASS 8476L")]
        public const int ERROR_DS_WRONG_OM_OBJ_CLASS = 8476;

        [NativeTypeName("#define ERROR_DS_DRA_REPL_PENDING 8477L")]
        public const int ERROR_DS_DRA_REPL_PENDING = 8477;

        [NativeTypeName("#define ERROR_DS_DS_REQUIRED 8478L")]
        public const int ERROR_DS_DS_REQUIRED = 8478;

        [NativeTypeName("#define ERROR_DS_INVALID_LDAP_DISPLAY_NAME 8479L")]
        public const int ERROR_DS_INVALID_LDAP_DISPLAY_NAME = 8479;

        [NativeTypeName("#define ERROR_DS_NON_BASE_SEARCH 8480L")]
        public const int ERROR_DS_NON_BASE_SEARCH = 8480;

        [NativeTypeName("#define ERROR_DS_CANT_RETRIEVE_ATTS 8481L")]
        public const int ERROR_DS_CANT_RETRIEVE_ATTS = 8481;

        [NativeTypeName("#define ERROR_DS_BACKLINK_WITHOUT_LINK 8482L")]
        public const int ERROR_DS_BACKLINK_WITHOUT_LINK = 8482;

        [NativeTypeName("#define ERROR_DS_EPOCH_MISMATCH 8483L")]
        public const int ERROR_DS_EPOCH_MISMATCH = 8483;

        [NativeTypeName("#define ERROR_DS_SRC_NAME_MISMATCH 8484L")]
        public const int ERROR_DS_SRC_NAME_MISMATCH = 8484;

        [NativeTypeName("#define ERROR_DS_SRC_AND_DST_NC_IDENTICAL 8485L")]
        public const int ERROR_DS_SRC_AND_DST_NC_IDENTICAL = 8485;

        [NativeTypeName("#define ERROR_DS_DST_NC_MISMATCH 8486L")]
        public const int ERROR_DS_DST_NC_MISMATCH = 8486;

        [NativeTypeName("#define ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC 8487L")]
        public const int ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC = 8487;

        [NativeTypeName("#define ERROR_DS_SRC_GUID_MISMATCH 8488L")]
        public const int ERROR_DS_SRC_GUID_MISMATCH = 8488;

        [NativeTypeName("#define ERROR_DS_CANT_MOVE_DELETED_OBJECT 8489L")]
        public const int ERROR_DS_CANT_MOVE_DELETED_OBJECT = 8489;

        [NativeTypeName("#define ERROR_DS_PDC_OPERATION_IN_PROGRESS 8490L")]
        public const int ERROR_DS_PDC_OPERATION_IN_PROGRESS = 8490;

        [NativeTypeName("#define ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD 8491L")]
        public const int ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD = 8491;

        [NativeTypeName("#define ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION 8492L")]
        public const int ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION = 8492;

        [NativeTypeName("#define ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS 8493L")]
        public const int ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS = 8493;

        [NativeTypeName("#define ERROR_DS_NC_MUST_HAVE_NC_PARENT 8494L")]
        public const int ERROR_DS_NC_MUST_HAVE_NC_PARENT = 8494;

        [NativeTypeName("#define ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE 8495L")]
        public const int ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE = 8495;

        [NativeTypeName("#define ERROR_DS_DST_DOMAIN_NOT_NATIVE 8496L")]
        public const int ERROR_DS_DST_DOMAIN_NOT_NATIVE = 8496;

        [NativeTypeName("#define ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER 8497L")]
        public const int ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER = 8497;

        [NativeTypeName("#define ERROR_DS_CANT_MOVE_ACCOUNT_GROUP 8498L")]
        public const int ERROR_DS_CANT_MOVE_ACCOUNT_GROUP = 8498;

        [NativeTypeName("#define ERROR_DS_CANT_MOVE_RESOURCE_GROUP 8499L")]
        public const int ERROR_DS_CANT_MOVE_RESOURCE_GROUP = 8499;

        [NativeTypeName("#define ERROR_DS_INVALID_SEARCH_FLAG 8500L")]
        public const int ERROR_DS_INVALID_SEARCH_FLAG = 8500;

        [NativeTypeName("#define ERROR_DS_NO_TREE_DELETE_ABOVE_NC 8501L")]
        public const int ERROR_DS_NO_TREE_DELETE_ABOVE_NC = 8501;

        [NativeTypeName("#define ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE 8502L")]
        public const int ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE = 8502;

        [NativeTypeName("#define ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE 8503L")]
        public const int ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE = 8503;

        [NativeTypeName("#define ERROR_DS_SAM_INIT_FAILURE 8504L")]
        public const int ERROR_DS_SAM_INIT_FAILURE = 8504;

        [NativeTypeName("#define ERROR_DS_SENSITIVE_GROUP_VIOLATION 8505L")]
        public const int ERROR_DS_SENSITIVE_GROUP_VIOLATION = 8505;

        [NativeTypeName("#define ERROR_DS_CANT_MOD_PRIMARYGROUPID 8506L")]
        public const int ERROR_DS_CANT_MOD_PRIMARYGROUPID = 8506;

        [NativeTypeName("#define ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD 8507L")]
        public const int ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD = 8507;

        [NativeTypeName("#define ERROR_DS_NONSAFE_SCHEMA_CHANGE 8508L")]
        public const int ERROR_DS_NONSAFE_SCHEMA_CHANGE = 8508;

        [NativeTypeName("#define ERROR_DS_SCHEMA_UPDATE_DISALLOWED 8509L")]
        public const int ERROR_DS_SCHEMA_UPDATE_DISALLOWED = 8509;

        [NativeTypeName("#define ERROR_DS_CANT_CREATE_UNDER_SCHEMA 8510L")]
        public const int ERROR_DS_CANT_CREATE_UNDER_SCHEMA = 8510;

        [NativeTypeName("#define ERROR_DS_INSTALL_NO_SRC_SCH_VERSION 8511L")]
        public const int ERROR_DS_INSTALL_NO_SRC_SCH_VERSION = 8511;

        [NativeTypeName("#define ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE 8512L")]
        public const int ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE = 8512;

        [NativeTypeName("#define ERROR_DS_INVALID_GROUP_TYPE 8513L")]
        public const int ERROR_DS_INVALID_GROUP_TYPE = 8513;

        [NativeTypeName("#define ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN 8514L")]
        public const int ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN = 8514;

        [NativeTypeName("#define ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN 8515L")]
        public const int ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN = 8515;

        [NativeTypeName("#define ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER 8516L")]
        public const int ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER = 8516;

        [NativeTypeName("#define ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER 8517L")]
        public const int ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER = 8517;

        [NativeTypeName("#define ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER 8518L")]
        public const int ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER = 8518;

        [NativeTypeName("#define ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER 8519L")]
        public const int ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER = 8519;

        [NativeTypeName("#define ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER 8520L")]
        public const int ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER = 8520;

        [NativeTypeName("#define ERROR_DS_HAVE_PRIMARY_MEMBERS 8521L")]
        public const int ERROR_DS_HAVE_PRIMARY_MEMBERS = 8521;

        [NativeTypeName("#define ERROR_DS_STRING_SD_CONVERSION_FAILED 8522L")]
        public const int ERROR_DS_STRING_SD_CONVERSION_FAILED = 8522;

        [NativeTypeName("#define ERROR_DS_NAMING_MASTER_GC 8523L")]
        public const int ERROR_DS_NAMING_MASTER_GC = 8523;

        [NativeTypeName("#define ERROR_DS_DNS_LOOKUP_FAILURE 8524L")]
        public const int ERROR_DS_DNS_LOOKUP_FAILURE = 8524;

        [NativeTypeName("#define ERROR_DS_COULDNT_UPDATE_SPNS 8525L")]
        public const int ERROR_DS_COULDNT_UPDATE_SPNS = 8525;

        [NativeTypeName("#define ERROR_DS_CANT_RETRIEVE_SD 8526L")]
        public const int ERROR_DS_CANT_RETRIEVE_SD = 8526;

        [NativeTypeName("#define ERROR_DS_KEY_NOT_UNIQUE 8527L")]
        public const int ERROR_DS_KEY_NOT_UNIQUE = 8527;

        [NativeTypeName("#define ERROR_DS_WRONG_LINKED_ATT_SYNTAX 8528L")]
        public const int ERROR_DS_WRONG_LINKED_ATT_SYNTAX = 8528;

        [NativeTypeName("#define ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD 8529L")]
        public const int ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD = 8529;

        [NativeTypeName("#define ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY 8530L")]
        public const int ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY = 8530;

        [NativeTypeName("#define ERROR_DS_CANT_START 8531L")]
        public const int ERROR_DS_CANT_START = 8531;

        [NativeTypeName("#define ERROR_DS_INIT_FAILURE 8532L")]
        public const int ERROR_DS_INIT_FAILURE = 8532;

        [NativeTypeName("#define ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION 8533L")]
        public const int ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION = 8533;

        [NativeTypeName("#define ERROR_DS_SOURCE_DOMAIN_IN_FOREST 8534L")]
        public const int ERROR_DS_SOURCE_DOMAIN_IN_FOREST = 8534;

        [NativeTypeName("#define ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST 8535L")]
        public const int ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST = 8535;

        [NativeTypeName("#define ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED 8536L")]
        public const int ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED = 8536;

        [NativeTypeName("#define ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN 8537L")]
        public const int ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN = 8537;

        [NativeTypeName("#define ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER 8538L")]
        public const int ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER = 8538;

        [NativeTypeName("#define ERROR_DS_SRC_SID_EXISTS_IN_FOREST 8539L")]
        public const int ERROR_DS_SRC_SID_EXISTS_IN_FOREST = 8539;

        [NativeTypeName("#define ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH 8540L")]
        public const int ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH = 8540;

        [NativeTypeName("#define ERROR_SAM_INIT_FAILURE 8541L")]
        public const int ERROR_SAM_INIT_FAILURE = 8541;

        [NativeTypeName("#define ERROR_DS_DRA_SCHEMA_INFO_SHIP 8542L")]
        public const int ERROR_DS_DRA_SCHEMA_INFO_SHIP = 8542;

        [NativeTypeName("#define ERROR_DS_DRA_SCHEMA_CONFLICT 8543L")]
        public const int ERROR_DS_DRA_SCHEMA_CONFLICT = 8543;

        [NativeTypeName("#define ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT 8544L")]
        public const int ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT = 8544;

        [NativeTypeName("#define ERROR_DS_DRA_OBJ_NC_MISMATCH 8545L")]
        public const int ERROR_DS_DRA_OBJ_NC_MISMATCH = 8545;

        [NativeTypeName("#define ERROR_DS_NC_STILL_HAS_DSAS 8546L")]
        public const int ERROR_DS_NC_STILL_HAS_DSAS = 8546;

        [NativeTypeName("#define ERROR_DS_GC_REQUIRED 8547L")]
        public const int ERROR_DS_GC_REQUIRED = 8547;

        [NativeTypeName("#define ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY 8548L")]
        public const int ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY = 8548;

        [NativeTypeName("#define ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS 8549L")]
        public const int ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS = 8549;

        [NativeTypeName("#define ERROR_DS_CANT_ADD_TO_GC 8550L")]
        public const int ERROR_DS_CANT_ADD_TO_GC = 8550;

        [NativeTypeName("#define ERROR_DS_NO_CHECKPOINT_WITH_PDC 8551L")]
        public const int ERROR_DS_NO_CHECKPOINT_WITH_PDC = 8551;

        [NativeTypeName("#define ERROR_DS_SOURCE_AUDITING_NOT_ENABLED 8552L")]
        public const int ERROR_DS_SOURCE_AUDITING_NOT_ENABLED = 8552;

        [NativeTypeName("#define ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC 8553L")]
        public const int ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC = 8553;

        [NativeTypeName("#define ERROR_DS_INVALID_NAME_FOR_SPN 8554L")]
        public const int ERROR_DS_INVALID_NAME_FOR_SPN = 8554;

        [NativeTypeName("#define ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS 8555L")]
        public const int ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS = 8555;

        [NativeTypeName("#define ERROR_DS_UNICODEPWD_NOT_IN_QUOTES 8556L")]
        public const int ERROR_DS_UNICODEPWD_NOT_IN_QUOTES = 8556;

        [NativeTypeName("#define ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED 8557L")]
        public const int ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED = 8557;

        [NativeTypeName("#define ERROR_DS_MUST_BE_RUN_ON_DST_DC 8558L")]
        public const int ERROR_DS_MUST_BE_RUN_ON_DST_DC = 8558;

        [NativeTypeName("#define ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER 8559L")]
        public const int ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER = 8559;

        [NativeTypeName("#define ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ 8560L")]
        public const int ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ = 8560;

        [NativeTypeName("#define ERROR_DS_INIT_FAILURE_CONSOLE 8561L")]
        public const int ERROR_DS_INIT_FAILURE_CONSOLE = 8561;

        [NativeTypeName("#define ERROR_DS_SAM_INIT_FAILURE_CONSOLE 8562L")]
        public const int ERROR_DS_SAM_INIT_FAILURE_CONSOLE = 8562;

        [NativeTypeName("#define ERROR_DS_FOREST_VERSION_TOO_HIGH 8563L")]
        public const int ERROR_DS_FOREST_VERSION_TOO_HIGH = 8563;

        [NativeTypeName("#define ERROR_DS_DOMAIN_VERSION_TOO_HIGH 8564L")]
        public const int ERROR_DS_DOMAIN_VERSION_TOO_HIGH = 8564;

        [NativeTypeName("#define ERROR_DS_FOREST_VERSION_TOO_LOW 8565L")]
        public const int ERROR_DS_FOREST_VERSION_TOO_LOW = 8565;

        [NativeTypeName("#define ERROR_DS_DOMAIN_VERSION_TOO_LOW 8566L")]
        public const int ERROR_DS_DOMAIN_VERSION_TOO_LOW = 8566;

        [NativeTypeName("#define ERROR_DS_INCOMPATIBLE_VERSION 8567L")]
        public const int ERROR_DS_INCOMPATIBLE_VERSION = 8567;

        [NativeTypeName("#define ERROR_DS_LOW_DSA_VERSION 8568L")]
        public const int ERROR_DS_LOW_DSA_VERSION = 8568;

        [NativeTypeName("#define ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN 8569L")]
        public const int ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN = 8569;

        [NativeTypeName("#define ERROR_DS_NOT_SUPPORTED_SORT_ORDER 8570L")]
        public const int ERROR_DS_NOT_SUPPORTED_SORT_ORDER = 8570;

        [NativeTypeName("#define ERROR_DS_NAME_NOT_UNIQUE 8571L")]
        public const int ERROR_DS_NAME_NOT_UNIQUE = 8571;

        [NativeTypeName("#define ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4 8572L")]
        public const int ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4 = 8572;

        [NativeTypeName("#define ERROR_DS_OUT_OF_VERSION_STORE 8573L")]
        public const int ERROR_DS_OUT_OF_VERSION_STORE = 8573;

        [NativeTypeName("#define ERROR_DS_INCOMPATIBLE_CONTROLS_USED 8574L")]
        public const int ERROR_DS_INCOMPATIBLE_CONTROLS_USED = 8574;

        [NativeTypeName("#define ERROR_DS_NO_REF_DOMAIN 8575L")]
        public const int ERROR_DS_NO_REF_DOMAIN = 8575;

        [NativeTypeName("#define ERROR_DS_RESERVED_LINK_ID 8576L")]
        public const int ERROR_DS_RESERVED_LINK_ID = 8576;

        [NativeTypeName("#define ERROR_DS_LINK_ID_NOT_AVAILABLE 8577L")]
        public const int ERROR_DS_LINK_ID_NOT_AVAILABLE = 8577;

        [NativeTypeName("#define ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER 8578L")]
        public const int ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER = 8578;

        [NativeTypeName("#define ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE 8579L")]
        public const int ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE = 8579;

        [NativeTypeName("#define ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC 8580L")]
        public const int ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC = 8580;

        [NativeTypeName("#define ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG 8581L")]
        public const int ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG = 8581;

        [NativeTypeName("#define ERROR_DS_MODIFYDN_WRONG_GRANDPARENT 8582L")]
        public const int ERROR_DS_MODIFYDN_WRONG_GRANDPARENT = 8582;

        [NativeTypeName("#define ERROR_DS_NAME_ERROR_TRUST_REFERRAL 8583L")]
        public const int ERROR_DS_NAME_ERROR_TRUST_REFERRAL = 8583;

        [NativeTypeName("#define ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER 8584L")]
        public const int ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER = 8584;

        [NativeTypeName("#define ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD 8585L")]
        public const int ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD = 8585;

        [NativeTypeName("#define ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2 8586L")]
        public const int ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2 = 8586;

        [NativeTypeName("#define ERROR_DS_THREAD_LIMIT_EXCEEDED 8587L")]
        public const int ERROR_DS_THREAD_LIMIT_EXCEEDED = 8587;

        [NativeTypeName("#define ERROR_DS_NOT_CLOSEST 8588L")]
        public const int ERROR_DS_NOT_CLOSEST = 8588;

        [NativeTypeName("#define ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF 8589L")]
        public const int ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF = 8589;

        [NativeTypeName("#define ERROR_DS_SINGLE_USER_MODE_FAILED 8590L")]
        public const int ERROR_DS_SINGLE_USER_MODE_FAILED = 8590;

        [NativeTypeName("#define ERROR_DS_NTDSCRIPT_SYNTAX_ERROR 8591L")]
        public const int ERROR_DS_NTDSCRIPT_SYNTAX_ERROR = 8591;

        [NativeTypeName("#define ERROR_DS_NTDSCRIPT_PROCESS_ERROR 8592L")]
        public const int ERROR_DS_NTDSCRIPT_PROCESS_ERROR = 8592;

        [NativeTypeName("#define ERROR_DS_DIFFERENT_REPL_EPOCHS 8593L")]
        public const int ERROR_DS_DIFFERENT_REPL_EPOCHS = 8593;

        [NativeTypeName("#define ERROR_DS_DRS_EXTENSIONS_CHANGED 8594L")]
        public const int ERROR_DS_DRS_EXTENSIONS_CHANGED = 8594;

        [NativeTypeName("#define ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR 8595L")]
        public const int ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR = 8595;

        [NativeTypeName("#define ERROR_DS_NO_MSDS_INTID 8596L")]
        public const int ERROR_DS_NO_MSDS_INTID = 8596;

        [NativeTypeName("#define ERROR_DS_DUP_MSDS_INTID 8597L")]
        public const int ERROR_DS_DUP_MSDS_INTID = 8597;

        [NativeTypeName("#define ERROR_DS_EXISTS_IN_RDNATTID 8598L")]
        public const int ERROR_DS_EXISTS_IN_RDNATTID = 8598;

        [NativeTypeName("#define ERROR_DS_AUTHORIZATION_FAILED 8599L")]
        public const int ERROR_DS_AUTHORIZATION_FAILED = 8599;

        [NativeTypeName("#define ERROR_DS_INVALID_SCRIPT 8600L")]
        public const int ERROR_DS_INVALID_SCRIPT = 8600;

        [NativeTypeName("#define ERROR_DS_REMOTE_CROSSREF_OP_FAILED 8601L")]
        public const int ERROR_DS_REMOTE_CROSSREF_OP_FAILED = 8601;

        [NativeTypeName("#define ERROR_DS_CROSS_REF_BUSY 8602L")]
        public const int ERROR_DS_CROSS_REF_BUSY = 8602;

        [NativeTypeName("#define ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN 8603L")]
        public const int ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN = 8603;

        [NativeTypeName("#define ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC 8604L")]
        public const int ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC = 8604;

        [NativeTypeName("#define ERROR_DS_DUPLICATE_ID_FOUND 8605L")]
        public const int ERROR_DS_DUPLICATE_ID_FOUND = 8605;

        [NativeTypeName("#define ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT 8606L")]
        public const int ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT = 8606;

        [NativeTypeName("#define ERROR_DS_GROUP_CONVERSION_ERROR 8607L")]
        public const int ERROR_DS_GROUP_CONVERSION_ERROR = 8607;

        [NativeTypeName("#define ERROR_DS_CANT_MOVE_APP_BASIC_GROUP 8608L")]
        public const int ERROR_DS_CANT_MOVE_APP_BASIC_GROUP = 8608;

        [NativeTypeName("#define ERROR_DS_CANT_MOVE_APP_QUERY_GROUP 8609L")]
        public const int ERROR_DS_CANT_MOVE_APP_QUERY_GROUP = 8609;

        [NativeTypeName("#define ERROR_DS_ROLE_NOT_VERIFIED 8610L")]
        public const int ERROR_DS_ROLE_NOT_VERIFIED = 8610;

        [NativeTypeName("#define ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL 8611L")]
        public const int ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL = 8611;

        [NativeTypeName("#define ERROR_DS_DOMAIN_RENAME_IN_PROGRESS 8612L")]
        public const int ERROR_DS_DOMAIN_RENAME_IN_PROGRESS = 8612;

        [NativeTypeName("#define ERROR_DS_EXISTING_AD_CHILD_NC 8613L")]
        public const int ERROR_DS_EXISTING_AD_CHILD_NC = 8613;

        [NativeTypeName("#define ERROR_DS_REPL_LIFETIME_EXCEEDED 8614L")]
        public const int ERROR_DS_REPL_LIFETIME_EXCEEDED = 8614;

        [NativeTypeName("#define ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER 8615L")]
        public const int ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER = 8615;

        [NativeTypeName("#define ERROR_DS_LDAP_SEND_QUEUE_FULL 8616L")]
        public const int ERROR_DS_LDAP_SEND_QUEUE_FULL = 8616;

        [NativeTypeName("#define ERROR_DS_DRA_OUT_SCHEDULE_WINDOW 8617L")]
        public const int ERROR_DS_DRA_OUT_SCHEDULE_WINDOW = 8617;

        [NativeTypeName("#define ERROR_DS_POLICY_NOT_KNOWN 8618L")]
        public const int ERROR_DS_POLICY_NOT_KNOWN = 8618;

        [NativeTypeName("#define ERROR_NO_SITE_SETTINGS_OBJECT 8619L")]
        public const int ERROR_NO_SITE_SETTINGS_OBJECT = 8619;

        [NativeTypeName("#define ERROR_NO_SECRETS 8620L")]
        public const int ERROR_NO_SECRETS = 8620;

        [NativeTypeName("#define ERROR_NO_WRITABLE_DC_FOUND 8621L")]
        public const int ERROR_NO_WRITABLE_DC_FOUND = 8621;

        [NativeTypeName("#define ERROR_DS_NO_SERVER_OBJECT 8622L")]
        public const int ERROR_DS_NO_SERVER_OBJECT = 8622;

        [NativeTypeName("#define ERROR_DS_NO_NTDSA_OBJECT 8623L")]
        public const int ERROR_DS_NO_NTDSA_OBJECT = 8623;

        [NativeTypeName("#define ERROR_DS_NON_ASQ_SEARCH 8624L")]
        public const int ERROR_DS_NON_ASQ_SEARCH = 8624;

        [NativeTypeName("#define ERROR_DS_AUDIT_FAILURE 8625L")]
        public const int ERROR_DS_AUDIT_FAILURE = 8625;

        [NativeTypeName("#define ERROR_DS_INVALID_SEARCH_FLAG_SUBTREE 8626L")]
        public const int ERROR_DS_INVALID_SEARCH_FLAG_SUBTREE = 8626;

        [NativeTypeName("#define ERROR_DS_INVALID_SEARCH_FLAG_TUPLE 8627L")]
        public const int ERROR_DS_INVALID_SEARCH_FLAG_TUPLE = 8627;

        [NativeTypeName("#define ERROR_DS_HIERARCHY_TABLE_TOO_DEEP 8628L")]
        public const int ERROR_DS_HIERARCHY_TABLE_TOO_DEEP = 8628;

        [NativeTypeName("#define ERROR_DS_DRA_CORRUPT_UTD_VECTOR 8629L")]
        public const int ERROR_DS_DRA_CORRUPT_UTD_VECTOR = 8629;

        [NativeTypeName("#define ERROR_DS_DRA_SECRETS_DENIED 8630L")]
        public const int ERROR_DS_DRA_SECRETS_DENIED = 8630;

        [NativeTypeName("#define ERROR_DS_RESERVED_MAPI_ID 8631L")]
        public const int ERROR_DS_RESERVED_MAPI_ID = 8631;

        [NativeTypeName("#define ERROR_DS_MAPI_ID_NOT_AVAILABLE 8632L")]
        public const int ERROR_DS_MAPI_ID_NOT_AVAILABLE = 8632;

        [NativeTypeName("#define ERROR_DS_DRA_MISSING_KRBTGT_SECRET 8633L")]
        public const int ERROR_DS_DRA_MISSING_KRBTGT_SECRET = 8633;

        [NativeTypeName("#define ERROR_DS_DOMAIN_NAME_EXISTS_IN_FOREST 8634L")]
        public const int ERROR_DS_DOMAIN_NAME_EXISTS_IN_FOREST = 8634;

        [NativeTypeName("#define ERROR_DS_FLAT_NAME_EXISTS_IN_FOREST 8635L")]
        public const int ERROR_DS_FLAT_NAME_EXISTS_IN_FOREST = 8635;

        [NativeTypeName("#define ERROR_INVALID_USER_PRINCIPAL_NAME 8636L")]
        public const int ERROR_INVALID_USER_PRINCIPAL_NAME = 8636;

        [NativeTypeName("#define ERROR_DS_OID_MAPPED_GROUP_CANT_HAVE_MEMBERS 8637L")]
        public const int ERROR_DS_OID_MAPPED_GROUP_CANT_HAVE_MEMBERS = 8637;

        [NativeTypeName("#define ERROR_DS_OID_NOT_FOUND 8638L")]
        public const int ERROR_DS_OID_NOT_FOUND = 8638;

        [NativeTypeName("#define ERROR_DS_DRA_RECYCLED_TARGET 8639L")]
        public const int ERROR_DS_DRA_RECYCLED_TARGET = 8639;

        [NativeTypeName("#define ERROR_DS_DISALLOWED_NC_REDIRECT 8640L")]
        public const int ERROR_DS_DISALLOWED_NC_REDIRECT = 8640;

        [NativeTypeName("#define ERROR_DS_HIGH_ADLDS_FFL 8641L")]
        public const int ERROR_DS_HIGH_ADLDS_FFL = 8641;

        [NativeTypeName("#define ERROR_DS_HIGH_DSA_VERSION 8642L")]
        public const int ERROR_DS_HIGH_DSA_VERSION = 8642;

        [NativeTypeName("#define ERROR_DS_LOW_ADLDS_FFL 8643L")]
        public const int ERROR_DS_LOW_ADLDS_FFL = 8643;

        [NativeTypeName("#define ERROR_DOMAIN_SID_SAME_AS_LOCAL_WORKSTATION 8644L")]
        public const int ERROR_DOMAIN_SID_SAME_AS_LOCAL_WORKSTATION = 8644;

        [NativeTypeName("#define ERROR_DS_UNDELETE_SAM_VALIDATION_FAILED 8645L")]
        public const int ERROR_DS_UNDELETE_SAM_VALIDATION_FAILED = 8645;

        [NativeTypeName("#define ERROR_INCORRECT_ACCOUNT_TYPE 8646L")]
        public const int ERROR_INCORRECT_ACCOUNT_TYPE = 8646;

        [NativeTypeName("#define ERROR_DS_SPN_VALUE_NOT_UNIQUE_IN_FOREST 8647L")]
        public const int ERROR_DS_SPN_VALUE_NOT_UNIQUE_IN_FOREST = 8647;

        [NativeTypeName("#define ERROR_DS_UPN_VALUE_NOT_UNIQUE_IN_FOREST 8648L")]
        public const int ERROR_DS_UPN_VALUE_NOT_UNIQUE_IN_FOREST = 8648;

        [NativeTypeName("#define ERROR_DS_MISSING_FOREST_TRUST 8649L")]
        public const int ERROR_DS_MISSING_FOREST_TRUST = 8649;

        [NativeTypeName("#define ERROR_DS_VALUE_KEY_NOT_UNIQUE 8650L")]
        public const int ERROR_DS_VALUE_KEY_NOT_UNIQUE = 8650;

        [NativeTypeName("#define DNS_ERROR_RESPONSE_CODES_BASE 9000")]
        public const int DNS_ERROR_RESPONSE_CODES_BASE = 9000;

        [NativeTypeName("#define DNS_ERROR_RCODE_NO_ERROR NO_ERROR")]
        public const int DNS_ERROR_RCODE_NO_ERROR = 0;

        [NativeTypeName("#define DNS_ERROR_MASK 0x00002328")]
        public const int DNS_ERROR_MASK = 0x00002328;

        [NativeTypeName("#define DNS_ERROR_RCODE_FORMAT_ERROR 9001L")]
        public const int DNS_ERROR_RCODE_FORMAT_ERROR = 9001;

        [NativeTypeName("#define DNS_ERROR_RCODE_SERVER_FAILURE 9002L")]
        public const int DNS_ERROR_RCODE_SERVER_FAILURE = 9002;

        [NativeTypeName("#define DNS_ERROR_RCODE_NAME_ERROR 9003L")]
        public const int DNS_ERROR_RCODE_NAME_ERROR = 9003;

        [NativeTypeName("#define DNS_ERROR_RCODE_NOT_IMPLEMENTED 9004L")]
        public const int DNS_ERROR_RCODE_NOT_IMPLEMENTED = 9004;

        [NativeTypeName("#define DNS_ERROR_RCODE_REFUSED 9005L")]
        public const int DNS_ERROR_RCODE_REFUSED = 9005;

        [NativeTypeName("#define DNS_ERROR_RCODE_YXDOMAIN 9006L")]
        public const int DNS_ERROR_RCODE_YXDOMAIN = 9006;

        [NativeTypeName("#define DNS_ERROR_RCODE_YXRRSET 9007L")]
        public const int DNS_ERROR_RCODE_YXRRSET = 9007;

        [NativeTypeName("#define DNS_ERROR_RCODE_NXRRSET 9008L")]
        public const int DNS_ERROR_RCODE_NXRRSET = 9008;

        [NativeTypeName("#define DNS_ERROR_RCODE_NOTAUTH 9009L")]
        public const int DNS_ERROR_RCODE_NOTAUTH = 9009;

        [NativeTypeName("#define DNS_ERROR_RCODE_NOTZONE 9010L")]
        public const int DNS_ERROR_RCODE_NOTZONE = 9010;

        [NativeTypeName("#define DNS_ERROR_RCODE_BADSIG 9016L")]
        public const int DNS_ERROR_RCODE_BADSIG = 9016;

        [NativeTypeName("#define DNS_ERROR_RCODE_BADKEY 9017L")]
        public const int DNS_ERROR_RCODE_BADKEY = 9017;

        [NativeTypeName("#define DNS_ERROR_RCODE_BADTIME 9018L")]
        public const int DNS_ERROR_RCODE_BADTIME = 9018;

        [NativeTypeName("#define DNS_ERROR_RCODE_LAST DNS_ERROR_RCODE_BADTIME")]
        public const int DNS_ERROR_RCODE_LAST = 9018;

        [NativeTypeName("#define DNS_ERROR_DNSSEC_BASE 9100")]
        public const int DNS_ERROR_DNSSEC_BASE = 9100;

        [NativeTypeName("#define DNS_ERROR_KEYMASTER_REQUIRED 9101L")]
        public const int DNS_ERROR_KEYMASTER_REQUIRED = 9101;

        [NativeTypeName("#define DNS_ERROR_NOT_ALLOWED_ON_SIGNED_ZONE 9102L")]
        public const int DNS_ERROR_NOT_ALLOWED_ON_SIGNED_ZONE = 9102;

        [NativeTypeName("#define DNS_ERROR_NSEC3_INCOMPATIBLE_WITH_RSA_SHA1 9103L")]
        public const int DNS_ERROR_NSEC3_INCOMPATIBLE_WITH_RSA_SHA1 = 9103;

        [NativeTypeName("#define DNS_ERROR_NOT_ENOUGH_SIGNING_KEY_DESCRIPTORS 9104L")]
        public const int DNS_ERROR_NOT_ENOUGH_SIGNING_KEY_DESCRIPTORS = 9104;

        [NativeTypeName("#define DNS_ERROR_UNSUPPORTED_ALGORITHM 9105L")]
        public const int DNS_ERROR_UNSUPPORTED_ALGORITHM = 9105;

        [NativeTypeName("#define DNS_ERROR_INVALID_KEY_SIZE 9106L")]
        public const int DNS_ERROR_INVALID_KEY_SIZE = 9106;

        [NativeTypeName("#define DNS_ERROR_SIGNING_KEY_NOT_ACCESSIBLE 9107L")]
        public const int DNS_ERROR_SIGNING_KEY_NOT_ACCESSIBLE = 9107;

        [NativeTypeName("#define DNS_ERROR_KSP_DOES_NOT_SUPPORT_PROTECTION 9108L")]
        public const int DNS_ERROR_KSP_DOES_NOT_SUPPORT_PROTECTION = 9108;

        [NativeTypeName("#define DNS_ERROR_UNEXPECTED_DATA_PROTECTION_ERROR 9109L")]
        public const int DNS_ERROR_UNEXPECTED_DATA_PROTECTION_ERROR = 9109;

        [NativeTypeName("#define DNS_ERROR_UNEXPECTED_CNG_ERROR 9110L")]
        public const int DNS_ERROR_UNEXPECTED_CNG_ERROR = 9110;

        [NativeTypeName("#define DNS_ERROR_UNKNOWN_SIGNING_PARAMETER_VERSION 9111L")]
        public const int DNS_ERROR_UNKNOWN_SIGNING_PARAMETER_VERSION = 9111;

        [NativeTypeName("#define DNS_ERROR_KSP_NOT_ACCESSIBLE 9112L")]
        public const int DNS_ERROR_KSP_NOT_ACCESSIBLE = 9112;

        [NativeTypeName("#define DNS_ERROR_TOO_MANY_SKDS 9113L")]
        public const int DNS_ERROR_TOO_MANY_SKDS = 9113;

        [NativeTypeName("#define DNS_ERROR_INVALID_ROLLOVER_PERIOD 9114L")]
        public const int DNS_ERROR_INVALID_ROLLOVER_PERIOD = 9114;

        [NativeTypeName("#define DNS_ERROR_INVALID_INITIAL_ROLLOVER_OFFSET 9115L")]
        public const int DNS_ERROR_INVALID_INITIAL_ROLLOVER_OFFSET = 9115;

        [NativeTypeName("#define DNS_ERROR_ROLLOVER_IN_PROGRESS 9116L")]
        public const int DNS_ERROR_ROLLOVER_IN_PROGRESS = 9116;

        [NativeTypeName("#define DNS_ERROR_STANDBY_KEY_NOT_PRESENT 9117L")]
        public const int DNS_ERROR_STANDBY_KEY_NOT_PRESENT = 9117;

        [NativeTypeName("#define DNS_ERROR_NOT_ALLOWED_ON_ZSK 9118L")]
        public const int DNS_ERROR_NOT_ALLOWED_ON_ZSK = 9118;

        [NativeTypeName("#define DNS_ERROR_NOT_ALLOWED_ON_ACTIVE_SKD 9119L")]
        public const int DNS_ERROR_NOT_ALLOWED_ON_ACTIVE_SKD = 9119;

        [NativeTypeName("#define DNS_ERROR_ROLLOVER_ALREADY_QUEUED 9120L")]
        public const int DNS_ERROR_ROLLOVER_ALREADY_QUEUED = 9120;

        [NativeTypeName("#define DNS_ERROR_NOT_ALLOWED_ON_UNSIGNED_ZONE 9121L")]
        public const int DNS_ERROR_NOT_ALLOWED_ON_UNSIGNED_ZONE = 9121;

        [NativeTypeName("#define DNS_ERROR_BAD_KEYMASTER 9122L")]
        public const int DNS_ERROR_BAD_KEYMASTER = 9122;

        [NativeTypeName("#define DNS_ERROR_INVALID_SIGNATURE_VALIDITY_PERIOD 9123L")]
        public const int DNS_ERROR_INVALID_SIGNATURE_VALIDITY_PERIOD = 9123;

        [NativeTypeName("#define DNS_ERROR_INVALID_NSEC3_ITERATION_COUNT 9124L")]
        public const int DNS_ERROR_INVALID_NSEC3_ITERATION_COUNT = 9124;

        [NativeTypeName("#define DNS_ERROR_DNSSEC_IS_DISABLED 9125L")]
        public const int DNS_ERROR_DNSSEC_IS_DISABLED = 9125;

        [NativeTypeName("#define DNS_ERROR_INVALID_XML 9126L")]
        public const int DNS_ERROR_INVALID_XML = 9126;

        [NativeTypeName("#define DNS_ERROR_NO_VALID_TRUST_ANCHORS 9127L")]
        public const int DNS_ERROR_NO_VALID_TRUST_ANCHORS = 9127;

        [NativeTypeName("#define DNS_ERROR_ROLLOVER_NOT_POKEABLE 9128L")]
        public const int DNS_ERROR_ROLLOVER_NOT_POKEABLE = 9128;

        [NativeTypeName("#define DNS_ERROR_NSEC3_NAME_COLLISION 9129L")]
        public const int DNS_ERROR_NSEC3_NAME_COLLISION = 9129;

        [NativeTypeName("#define DNS_ERROR_NSEC_INCOMPATIBLE_WITH_NSEC3_RSA_SHA1 9130L")]
        public const int DNS_ERROR_NSEC_INCOMPATIBLE_WITH_NSEC3_RSA_SHA1 = 9130;

        [NativeTypeName("#define DNS_ERROR_PACKET_FMT_BASE 9500")]
        public const int DNS_ERROR_PACKET_FMT_BASE = 9500;

        [NativeTypeName("#define DNS_INFO_NO_RECORDS 9501L")]
        public const int DNS_INFO_NO_RECORDS = 9501;

        [NativeTypeName("#define DNS_ERROR_BAD_PACKET 9502L")]
        public const int DNS_ERROR_BAD_PACKET = 9502;

        [NativeTypeName("#define DNS_ERROR_NO_PACKET 9503L")]
        public const int DNS_ERROR_NO_PACKET = 9503;

        [NativeTypeName("#define DNS_ERROR_RCODE 9504L")]
        public const int DNS_ERROR_RCODE = 9504;

        [NativeTypeName("#define DNS_ERROR_UNSECURE_PACKET 9505L")]
        public const int DNS_ERROR_UNSECURE_PACKET = 9505;

        [NativeTypeName("#define DNS_STATUS_PACKET_UNSECURE DNS_ERROR_UNSECURE_PACKET")]
        public const int DNS_STATUS_PACKET_UNSECURE = 9505;

        [NativeTypeName("#define DNS_REQUEST_PENDING 9506L")]
        public const int DNS_REQUEST_PENDING = 9506;

        [NativeTypeName("#define DNS_ERROR_NO_MEMORY ERROR_OUTOFMEMORY")]
        public const int DNS_ERROR_NO_MEMORY = 14;

        [NativeTypeName("#define DNS_ERROR_INVALID_NAME ERROR_INVALID_NAME")]
        public const int DNS_ERROR_INVALID_NAME = 123;

        [NativeTypeName("#define DNS_ERROR_INVALID_DATA ERROR_INVALID_DATA")]
        public const int DNS_ERROR_INVALID_DATA = 13;

        [NativeTypeName("#define DNS_ERROR_GENERAL_API_BASE 9550")]
        public const int DNS_ERROR_GENERAL_API_BASE = 9550;

        [NativeTypeName("#define DNS_ERROR_INVALID_TYPE 9551L")]
        public const int DNS_ERROR_INVALID_TYPE = 9551;

        [NativeTypeName("#define DNS_ERROR_INVALID_IP_ADDRESS 9552L")]
        public const int DNS_ERROR_INVALID_IP_ADDRESS = 9552;

        [NativeTypeName("#define DNS_ERROR_INVALID_PROPERTY 9553L")]
        public const int DNS_ERROR_INVALID_PROPERTY = 9553;

        [NativeTypeName("#define DNS_ERROR_TRY_AGAIN_LATER 9554L")]
        public const int DNS_ERROR_TRY_AGAIN_LATER = 9554;

        [NativeTypeName("#define DNS_ERROR_NOT_UNIQUE 9555L")]
        public const int DNS_ERROR_NOT_UNIQUE = 9555;

        [NativeTypeName("#define DNS_ERROR_NON_RFC_NAME 9556L")]
        public const int DNS_ERROR_NON_RFC_NAME = 9556;

        [NativeTypeName("#define DNS_STATUS_FQDN 9557L")]
        public const int DNS_STATUS_FQDN = 9557;

        [NativeTypeName("#define DNS_STATUS_DOTTED_NAME 9558L")]
        public const int DNS_STATUS_DOTTED_NAME = 9558;

        [NativeTypeName("#define DNS_STATUS_SINGLE_PART_NAME 9559L")]
        public const int DNS_STATUS_SINGLE_PART_NAME = 9559;

        [NativeTypeName("#define DNS_ERROR_INVALID_NAME_CHAR 9560L")]
        public const int DNS_ERROR_INVALID_NAME_CHAR = 9560;

        [NativeTypeName("#define DNS_ERROR_NUMERIC_NAME 9561L")]
        public const int DNS_ERROR_NUMERIC_NAME = 9561;

        [NativeTypeName("#define DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER 9562L")]
        public const int DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER = 9562;

        [NativeTypeName("#define DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION 9563L")]
        public const int DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION = 9563;

        [NativeTypeName("#define DNS_ERROR_CANNOT_FIND_ROOT_HINTS 9564L")]
        public const int DNS_ERROR_CANNOT_FIND_ROOT_HINTS = 9564;

        [NativeTypeName("#define DNS_ERROR_INCONSISTENT_ROOT_HINTS 9565L")]
        public const int DNS_ERROR_INCONSISTENT_ROOT_HINTS = 9565;

        [NativeTypeName("#define DNS_ERROR_DWORD_VALUE_TOO_SMALL 9566L")]
        public const int DNS_ERROR_DWORD_VALUE_TOO_SMALL = 9566;

        [NativeTypeName("#define DNS_ERROR_DWORD_VALUE_TOO_LARGE 9567L")]
        public const int DNS_ERROR_DWORD_VALUE_TOO_LARGE = 9567;

        [NativeTypeName("#define DNS_ERROR_BACKGROUND_LOADING 9568L")]
        public const int DNS_ERROR_BACKGROUND_LOADING = 9568;

        [NativeTypeName("#define DNS_ERROR_NOT_ALLOWED_ON_RODC 9569L")]
        public const int DNS_ERROR_NOT_ALLOWED_ON_RODC = 9569;

        [NativeTypeName("#define DNS_ERROR_NOT_ALLOWED_UNDER_DNAME 9570L")]
        public const int DNS_ERROR_NOT_ALLOWED_UNDER_DNAME = 9570;

        [NativeTypeName("#define DNS_ERROR_DELEGATION_REQUIRED 9571L")]
        public const int DNS_ERROR_DELEGATION_REQUIRED = 9571;

        [NativeTypeName("#define DNS_ERROR_INVALID_POLICY_TABLE 9572L")]
        public const int DNS_ERROR_INVALID_POLICY_TABLE = 9572;

        [NativeTypeName("#define DNS_ERROR_ADDRESS_REQUIRED 9573L")]
        public const int DNS_ERROR_ADDRESS_REQUIRED = 9573;

        [NativeTypeName("#define DNS_ERROR_ZONE_BASE 9600")]
        public const int DNS_ERROR_ZONE_BASE = 9600;

        [NativeTypeName("#define DNS_ERROR_ZONE_DOES_NOT_EXIST 9601L")]
        public const int DNS_ERROR_ZONE_DOES_NOT_EXIST = 9601;

        [NativeTypeName("#define DNS_ERROR_NO_ZONE_INFO 9602L")]
        public const int DNS_ERROR_NO_ZONE_INFO = 9602;

        [NativeTypeName("#define DNS_ERROR_INVALID_ZONE_OPERATION 9603L")]
        public const int DNS_ERROR_INVALID_ZONE_OPERATION = 9603;

        [NativeTypeName("#define DNS_ERROR_ZONE_CONFIGURATION_ERROR 9604L")]
        public const int DNS_ERROR_ZONE_CONFIGURATION_ERROR = 9604;

        [NativeTypeName("#define DNS_ERROR_ZONE_HAS_NO_SOA_RECORD 9605L")]
        public const int DNS_ERROR_ZONE_HAS_NO_SOA_RECORD = 9605;

        [NativeTypeName("#define DNS_ERROR_ZONE_HAS_NO_NS_RECORDS 9606L")]
        public const int DNS_ERROR_ZONE_HAS_NO_NS_RECORDS = 9606;

        [NativeTypeName("#define DNS_ERROR_ZONE_LOCKED 9607L")]
        public const int DNS_ERROR_ZONE_LOCKED = 9607;

        [NativeTypeName("#define DNS_ERROR_ZONE_CREATION_FAILED 9608L")]
        public const int DNS_ERROR_ZONE_CREATION_FAILED = 9608;

        [NativeTypeName("#define DNS_ERROR_ZONE_ALREADY_EXISTS 9609L")]
        public const int DNS_ERROR_ZONE_ALREADY_EXISTS = 9609;

        [NativeTypeName("#define DNS_ERROR_AUTOZONE_ALREADY_EXISTS 9610L")]
        public const int DNS_ERROR_AUTOZONE_ALREADY_EXISTS = 9610;

        [NativeTypeName("#define DNS_ERROR_INVALID_ZONE_TYPE 9611L")]
        public const int DNS_ERROR_INVALID_ZONE_TYPE = 9611;

        [NativeTypeName("#define DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP 9612L")]
        public const int DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP = 9612;

        [NativeTypeName("#define DNS_ERROR_ZONE_NOT_SECONDARY 9613L")]
        public const int DNS_ERROR_ZONE_NOT_SECONDARY = 9613;

        [NativeTypeName("#define DNS_ERROR_NEED_SECONDARY_ADDRESSES 9614L")]
        public const int DNS_ERROR_NEED_SECONDARY_ADDRESSES = 9614;

        [NativeTypeName("#define DNS_ERROR_WINS_INIT_FAILED 9615L")]
        public const int DNS_ERROR_WINS_INIT_FAILED = 9615;

        [NativeTypeName("#define DNS_ERROR_NEED_WINS_SERVERS 9616L")]
        public const int DNS_ERROR_NEED_WINS_SERVERS = 9616;

        [NativeTypeName("#define DNS_ERROR_NBSTAT_INIT_FAILED 9617L")]
        public const int DNS_ERROR_NBSTAT_INIT_FAILED = 9617;

        [NativeTypeName("#define DNS_ERROR_SOA_DELETE_INVALID 9618L")]
        public const int DNS_ERROR_SOA_DELETE_INVALID = 9618;

        [NativeTypeName("#define DNS_ERROR_FORWARDER_ALREADY_EXISTS 9619L")]
        public const int DNS_ERROR_FORWARDER_ALREADY_EXISTS = 9619;

        [NativeTypeName("#define DNS_ERROR_ZONE_REQUIRES_MASTER_IP 9620L")]
        public const int DNS_ERROR_ZONE_REQUIRES_MASTER_IP = 9620;

        [NativeTypeName("#define DNS_ERROR_ZONE_IS_SHUTDOWN 9621L")]
        public const int DNS_ERROR_ZONE_IS_SHUTDOWN = 9621;

        [NativeTypeName("#define DNS_ERROR_ZONE_LOCKED_FOR_SIGNING 9622L")]
        public const int DNS_ERROR_ZONE_LOCKED_FOR_SIGNING = 9622;

        [NativeTypeName("#define DNS_ERROR_DATAFILE_BASE 9650")]
        public const int DNS_ERROR_DATAFILE_BASE = 9650;

        [NativeTypeName("#define DNS_ERROR_PRIMARY_REQUIRES_DATAFILE 9651L")]
        public const int DNS_ERROR_PRIMARY_REQUIRES_DATAFILE = 9651;

        [NativeTypeName("#define DNS_ERROR_INVALID_DATAFILE_NAME 9652L")]
        public const int DNS_ERROR_INVALID_DATAFILE_NAME = 9652;

        [NativeTypeName("#define DNS_ERROR_DATAFILE_OPEN_FAILURE 9653L")]
        public const int DNS_ERROR_DATAFILE_OPEN_FAILURE = 9653;

        [NativeTypeName("#define DNS_ERROR_FILE_WRITEBACK_FAILED 9654L")]
        public const int DNS_ERROR_FILE_WRITEBACK_FAILED = 9654;

        [NativeTypeName("#define DNS_ERROR_DATAFILE_PARSING 9655L")]
        public const int DNS_ERROR_DATAFILE_PARSING = 9655;

        [NativeTypeName("#define DNS_ERROR_DATABASE_BASE 9700")]
        public const int DNS_ERROR_DATABASE_BASE = 9700;

        [NativeTypeName("#define DNS_ERROR_RECORD_DOES_NOT_EXIST 9701L")]
        public const int DNS_ERROR_RECORD_DOES_NOT_EXIST = 9701;

        [NativeTypeName("#define DNS_ERROR_RECORD_FORMAT 9702L")]
        public const int DNS_ERROR_RECORD_FORMAT = 9702;

        [NativeTypeName("#define DNS_ERROR_NODE_CREATION_FAILED 9703L")]
        public const int DNS_ERROR_NODE_CREATION_FAILED = 9703;

        [NativeTypeName("#define DNS_ERROR_UNKNOWN_RECORD_TYPE 9704L")]
        public const int DNS_ERROR_UNKNOWN_RECORD_TYPE = 9704;

        [NativeTypeName("#define DNS_ERROR_RECORD_TIMED_OUT 9705L")]
        public const int DNS_ERROR_RECORD_TIMED_OUT = 9705;

        [NativeTypeName("#define DNS_ERROR_NAME_NOT_IN_ZONE 9706L")]
        public const int DNS_ERROR_NAME_NOT_IN_ZONE = 9706;

        [NativeTypeName("#define DNS_ERROR_CNAME_LOOP 9707L")]
        public const int DNS_ERROR_CNAME_LOOP = 9707;

        [NativeTypeName("#define DNS_ERROR_NODE_IS_CNAME 9708L")]
        public const int DNS_ERROR_NODE_IS_CNAME = 9708;

        [NativeTypeName("#define DNS_ERROR_CNAME_COLLISION 9709L")]
        public const int DNS_ERROR_CNAME_COLLISION = 9709;

        [NativeTypeName("#define DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT 9710L")]
        public const int DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT = 9710;

        [NativeTypeName("#define DNS_ERROR_RECORD_ALREADY_EXISTS 9711L")]
        public const int DNS_ERROR_RECORD_ALREADY_EXISTS = 9711;

        [NativeTypeName("#define DNS_ERROR_SECONDARY_DATA 9712L")]
        public const int DNS_ERROR_SECONDARY_DATA = 9712;

        [NativeTypeName("#define DNS_ERROR_NO_CREATE_CACHE_DATA 9713L")]
        public const int DNS_ERROR_NO_CREATE_CACHE_DATA = 9713;

        [NativeTypeName("#define DNS_ERROR_NAME_DOES_NOT_EXIST 9714L")]
        public const int DNS_ERROR_NAME_DOES_NOT_EXIST = 9714;

        [NativeTypeName("#define DNS_WARNING_PTR_CREATE_FAILED 9715L")]
        public const int DNS_WARNING_PTR_CREATE_FAILED = 9715;

        [NativeTypeName("#define DNS_WARNING_DOMAIN_UNDELETED 9716L")]
        public const int DNS_WARNING_DOMAIN_UNDELETED = 9716;

        [NativeTypeName("#define DNS_ERROR_DS_UNAVAILABLE 9717L")]
        public const int DNS_ERROR_DS_UNAVAILABLE = 9717;

        [NativeTypeName("#define DNS_ERROR_DS_ZONE_ALREADY_EXISTS 9718L")]
        public const int DNS_ERROR_DS_ZONE_ALREADY_EXISTS = 9718;

        [NativeTypeName("#define DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE 9719L")]
        public const int DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE = 9719;

        [NativeTypeName("#define DNS_ERROR_NODE_IS_DNAME 9720L")]
        public const int DNS_ERROR_NODE_IS_DNAME = 9720;

        [NativeTypeName("#define DNS_ERROR_DNAME_COLLISION 9721L")]
        public const int DNS_ERROR_DNAME_COLLISION = 9721;

        [NativeTypeName("#define DNS_ERROR_ALIAS_LOOP 9722L")]
        public const int DNS_ERROR_ALIAS_LOOP = 9722;

        [NativeTypeName("#define DNS_ERROR_OPERATION_BASE 9750")]
        public const int DNS_ERROR_OPERATION_BASE = 9750;

        [NativeTypeName("#define DNS_INFO_AXFR_COMPLETE 9751L")]
        public const int DNS_INFO_AXFR_COMPLETE = 9751;

        [NativeTypeName("#define DNS_ERROR_AXFR 9752L")]
        public const int DNS_ERROR_AXFR = 9752;

        [NativeTypeName("#define DNS_INFO_ADDED_LOCAL_WINS 9753L")]
        public const int DNS_INFO_ADDED_LOCAL_WINS = 9753;

        [NativeTypeName("#define DNS_ERROR_SECURE_BASE 9800")]
        public const int DNS_ERROR_SECURE_BASE = 9800;

        [NativeTypeName("#define DNS_STATUS_CONTINUE_NEEDED 9801L")]
        public const int DNS_STATUS_CONTINUE_NEEDED = 9801;

        [NativeTypeName("#define DNS_ERROR_SETUP_BASE 9850")]
        public const int DNS_ERROR_SETUP_BASE = 9850;

        [NativeTypeName("#define DNS_ERROR_NO_TCPIP 9851L")]
        public const int DNS_ERROR_NO_TCPIP = 9851;

        [NativeTypeName("#define DNS_ERROR_NO_DNS_SERVERS 9852L")]
        public const int DNS_ERROR_NO_DNS_SERVERS = 9852;

        [NativeTypeName("#define DNS_ERROR_DP_BASE 9900")]
        public const int DNS_ERROR_DP_BASE = 9900;

        [NativeTypeName("#define DNS_ERROR_DP_DOES_NOT_EXIST 9901L")]
        public const int DNS_ERROR_DP_DOES_NOT_EXIST = 9901;

        [NativeTypeName("#define DNS_ERROR_DP_ALREADY_EXISTS 9902L")]
        public const int DNS_ERROR_DP_ALREADY_EXISTS = 9902;

        [NativeTypeName("#define DNS_ERROR_DP_NOT_ENLISTED 9903L")]
        public const int DNS_ERROR_DP_NOT_ENLISTED = 9903;

        [NativeTypeName("#define DNS_ERROR_DP_ALREADY_ENLISTED 9904L")]
        public const int DNS_ERROR_DP_ALREADY_ENLISTED = 9904;

        [NativeTypeName("#define DNS_ERROR_DP_NOT_AVAILABLE 9905L")]
        public const int DNS_ERROR_DP_NOT_AVAILABLE = 9905;

        [NativeTypeName("#define DNS_ERROR_DP_FSMO_ERROR 9906L")]
        public const int DNS_ERROR_DP_FSMO_ERROR = 9906;

        [NativeTypeName("#define DNS_ERROR_RRL_NOT_ENABLED 9911L")]
        public const int DNS_ERROR_RRL_NOT_ENABLED = 9911;

        [NativeTypeName("#define DNS_ERROR_RRL_INVALID_WINDOW_SIZE 9912L")]
        public const int DNS_ERROR_RRL_INVALID_WINDOW_SIZE = 9912;

        [NativeTypeName("#define DNS_ERROR_RRL_INVALID_IPV4_PREFIX 9913L")]
        public const int DNS_ERROR_RRL_INVALID_IPV4_PREFIX = 9913;

        [NativeTypeName("#define DNS_ERROR_RRL_INVALID_IPV6_PREFIX 9914L")]
        public const int DNS_ERROR_RRL_INVALID_IPV6_PREFIX = 9914;

        [NativeTypeName("#define DNS_ERROR_RRL_INVALID_TC_RATE 9915L")]
        public const int DNS_ERROR_RRL_INVALID_TC_RATE = 9915;

        [NativeTypeName("#define DNS_ERROR_RRL_INVALID_LEAK_RATE 9916L")]
        public const int DNS_ERROR_RRL_INVALID_LEAK_RATE = 9916;

        [NativeTypeName("#define DNS_ERROR_RRL_LEAK_RATE_LESSTHAN_TC_RATE 9917L")]
        public const int DNS_ERROR_RRL_LEAK_RATE_LESSTHAN_TC_RATE = 9917;

        [NativeTypeName("#define DNS_ERROR_VIRTUALIZATION_INSTANCE_ALREADY_EXISTS 9921L")]
        public const int DNS_ERROR_VIRTUALIZATION_INSTANCE_ALREADY_EXISTS = 9921;

        [NativeTypeName("#define DNS_ERROR_VIRTUALIZATION_INSTANCE_DOES_NOT_EXIST 9922L")]
        public const int DNS_ERROR_VIRTUALIZATION_INSTANCE_DOES_NOT_EXIST = 9922;

        [NativeTypeName("#define DNS_ERROR_VIRTUALIZATION_TREE_LOCKED 9923L")]
        public const int DNS_ERROR_VIRTUALIZATION_TREE_LOCKED = 9923;

        [NativeTypeName("#define DNS_ERROR_INVAILD_VIRTUALIZATION_INSTANCE_NAME 9924L")]
        public const int DNS_ERROR_INVAILD_VIRTUALIZATION_INSTANCE_NAME = 9924;

        [NativeTypeName("#define DNS_ERROR_DEFAULT_VIRTUALIZATION_INSTANCE 9925L")]
        public const int DNS_ERROR_DEFAULT_VIRTUALIZATION_INSTANCE = 9925;

        [NativeTypeName("#define DNS_ERROR_ZONESCOPE_ALREADY_EXISTS 9951L")]
        public const int DNS_ERROR_ZONESCOPE_ALREADY_EXISTS = 9951;

        [NativeTypeName("#define DNS_ERROR_ZONESCOPE_DOES_NOT_EXIST 9952L")]
        public const int DNS_ERROR_ZONESCOPE_DOES_NOT_EXIST = 9952;

        [NativeTypeName("#define DNS_ERROR_DEFAULT_ZONESCOPE 9953L")]
        public const int DNS_ERROR_DEFAULT_ZONESCOPE = 9953;

        [NativeTypeName("#define DNS_ERROR_INVALID_ZONESCOPE_NAME 9954L")]
        public const int DNS_ERROR_INVALID_ZONESCOPE_NAME = 9954;

        [NativeTypeName("#define DNS_ERROR_NOT_ALLOWED_WITH_ZONESCOPES 9955L")]
        public const int DNS_ERROR_NOT_ALLOWED_WITH_ZONESCOPES = 9955;

        [NativeTypeName("#define DNS_ERROR_LOAD_ZONESCOPE_FAILED 9956L")]
        public const int DNS_ERROR_LOAD_ZONESCOPE_FAILED = 9956;

        [NativeTypeName("#define DNS_ERROR_ZONESCOPE_FILE_WRITEBACK_FAILED 9957L")]
        public const int DNS_ERROR_ZONESCOPE_FILE_WRITEBACK_FAILED = 9957;

        [NativeTypeName("#define DNS_ERROR_INVALID_SCOPE_NAME 9958L")]
        public const int DNS_ERROR_INVALID_SCOPE_NAME = 9958;

        [NativeTypeName("#define DNS_ERROR_SCOPE_DOES_NOT_EXIST 9959L")]
        public const int DNS_ERROR_SCOPE_DOES_NOT_EXIST = 9959;

        [NativeTypeName("#define DNS_ERROR_DEFAULT_SCOPE 9960L")]
        public const int DNS_ERROR_DEFAULT_SCOPE = 9960;

        [NativeTypeName("#define DNS_ERROR_INVALID_SCOPE_OPERATION 9961L")]
        public const int DNS_ERROR_INVALID_SCOPE_OPERATION = 9961;

        [NativeTypeName("#define DNS_ERROR_SCOPE_LOCKED 9962L")]
        public const int DNS_ERROR_SCOPE_LOCKED = 9962;

        [NativeTypeName("#define DNS_ERROR_SCOPE_ALREADY_EXISTS 9963L")]
        public const int DNS_ERROR_SCOPE_ALREADY_EXISTS = 9963;

        [NativeTypeName("#define DNS_ERROR_POLICY_ALREADY_EXISTS 9971L")]
        public const int DNS_ERROR_POLICY_ALREADY_EXISTS = 9971;

        [NativeTypeName("#define DNS_ERROR_POLICY_DOES_NOT_EXIST 9972L")]
        public const int DNS_ERROR_POLICY_DOES_NOT_EXIST = 9972;

        [NativeTypeName("#define DNS_ERROR_POLICY_INVALID_CRITERIA 9973L")]
        public const int DNS_ERROR_POLICY_INVALID_CRITERIA = 9973;

        [NativeTypeName("#define DNS_ERROR_POLICY_INVALID_SETTINGS 9974L")]
        public const int DNS_ERROR_POLICY_INVALID_SETTINGS = 9974;

        [NativeTypeName("#define DNS_ERROR_CLIENT_SUBNET_IS_ACCESSED 9975L")]
        public const int DNS_ERROR_CLIENT_SUBNET_IS_ACCESSED = 9975;

        [NativeTypeName("#define DNS_ERROR_CLIENT_SUBNET_DOES_NOT_EXIST 9976L")]
        public const int DNS_ERROR_CLIENT_SUBNET_DOES_NOT_EXIST = 9976;

        [NativeTypeName("#define DNS_ERROR_CLIENT_SUBNET_ALREADY_EXISTS 9977L")]
        public const int DNS_ERROR_CLIENT_SUBNET_ALREADY_EXISTS = 9977;

        [NativeTypeName("#define DNS_ERROR_SUBNET_DOES_NOT_EXIST 9978L")]
        public const int DNS_ERROR_SUBNET_DOES_NOT_EXIST = 9978;

        [NativeTypeName("#define DNS_ERROR_SUBNET_ALREADY_EXISTS 9979L")]
        public const int DNS_ERROR_SUBNET_ALREADY_EXISTS = 9979;

        [NativeTypeName("#define DNS_ERROR_POLICY_LOCKED 9980L")]
        public const int DNS_ERROR_POLICY_LOCKED = 9980;

        [NativeTypeName("#define DNS_ERROR_POLICY_INVALID_WEIGHT 9981L")]
        public const int DNS_ERROR_POLICY_INVALID_WEIGHT = 9981;

        [NativeTypeName("#define DNS_ERROR_POLICY_INVALID_NAME 9982L")]
        public const int DNS_ERROR_POLICY_INVALID_NAME = 9982;

        [NativeTypeName("#define DNS_ERROR_POLICY_MISSING_CRITERIA 9983L")]
        public const int DNS_ERROR_POLICY_MISSING_CRITERIA = 9983;

        [NativeTypeName("#define DNS_ERROR_INVALID_CLIENT_SUBNET_NAME 9984L")]
        public const int DNS_ERROR_INVALID_CLIENT_SUBNET_NAME = 9984;

        [NativeTypeName("#define DNS_ERROR_POLICY_PROCESSING_ORDER_INVALID 9985L")]
        public const int DNS_ERROR_POLICY_PROCESSING_ORDER_INVALID = 9985;

        [NativeTypeName("#define DNS_ERROR_POLICY_SCOPE_MISSING 9986L")]
        public const int DNS_ERROR_POLICY_SCOPE_MISSING = 9986;

        [NativeTypeName("#define DNS_ERROR_POLICY_SCOPE_NOT_ALLOWED 9987L")]
        public const int DNS_ERROR_POLICY_SCOPE_NOT_ALLOWED = 9987;

        [NativeTypeName("#define DNS_ERROR_SERVERSCOPE_IS_REFERENCED 9988L")]
        public const int DNS_ERROR_SERVERSCOPE_IS_REFERENCED = 9988;

        [NativeTypeName("#define DNS_ERROR_ZONESCOPE_IS_REFERENCED 9989L")]
        public const int DNS_ERROR_ZONESCOPE_IS_REFERENCED = 9989;

        [NativeTypeName("#define DNS_ERROR_POLICY_INVALID_CRITERIA_CLIENT_SUBNET 9990L")]
        public const int DNS_ERROR_POLICY_INVALID_CRITERIA_CLIENT_SUBNET = 9990;

        [NativeTypeName("#define DNS_ERROR_POLICY_INVALID_CRITERIA_TRANSPORT_PROTOCOL 9991L")]
        public const int DNS_ERROR_POLICY_INVALID_CRITERIA_TRANSPORT_PROTOCOL = 9991;

        [NativeTypeName("#define DNS_ERROR_POLICY_INVALID_CRITERIA_NETWORK_PROTOCOL 9992L")]
        public const int DNS_ERROR_POLICY_INVALID_CRITERIA_NETWORK_PROTOCOL = 9992;

        [NativeTypeName("#define DNS_ERROR_POLICY_INVALID_CRITERIA_INTERFACE 9993L")]
        public const int DNS_ERROR_POLICY_INVALID_CRITERIA_INTERFACE = 9993;

        [NativeTypeName("#define DNS_ERROR_POLICY_INVALID_CRITERIA_FQDN 9994L")]
        public const int DNS_ERROR_POLICY_INVALID_CRITERIA_FQDN = 9994;

        [NativeTypeName("#define DNS_ERROR_POLICY_INVALID_CRITERIA_QUERY_TYPE 9995L")]
        public const int DNS_ERROR_POLICY_INVALID_CRITERIA_QUERY_TYPE = 9995;

        [NativeTypeName("#define DNS_ERROR_POLICY_INVALID_CRITERIA_TIME_OF_DAY 9996L")]
        public const int DNS_ERROR_POLICY_INVALID_CRITERIA_TIME_OF_DAY = 9996;

        [NativeTypeName("#define WSABASEERR 10000")]
        public const int WSABASEERR = 10000;

        [NativeTypeName("#define WSAEINTR 10004L")]
        public const int WSAEINTR = 10004;

        [NativeTypeName("#define WSAEBADF 10009L")]
        public const int WSAEBADF = 10009;

        [NativeTypeName("#define WSAEACCES 10013L")]
        public const int WSAEACCES = 10013;

        [NativeTypeName("#define WSAEFAULT 10014L")]
        public const int WSAEFAULT = 10014;

        [NativeTypeName("#define WSAEINVAL 10022L")]
        public const int WSAEINVAL = 10022;

        [NativeTypeName("#define WSAEMFILE 10024L")]
        public const int WSAEMFILE = 10024;

        [NativeTypeName("#define WSAEWOULDBLOCK 10035L")]
        public const int WSAEWOULDBLOCK = 10035;

        [NativeTypeName("#define WSAEINPROGRESS 10036L")]
        public const int WSAEINPROGRESS = 10036;

        [NativeTypeName("#define WSAEALREADY 10037L")]
        public const int WSAEALREADY = 10037;

        [NativeTypeName("#define WSAENOTSOCK 10038L")]
        public const int WSAENOTSOCK = 10038;

        [NativeTypeName("#define WSAEDESTADDRREQ 10039L")]
        public const int WSAEDESTADDRREQ = 10039;

        [NativeTypeName("#define WSAEMSGSIZE 10040L")]
        public const int WSAEMSGSIZE = 10040;

        [NativeTypeName("#define WSAEPROTOTYPE 10041L")]
        public const int WSAEPROTOTYPE = 10041;

        [NativeTypeName("#define WSAENOPROTOOPT 10042L")]
        public const int WSAENOPROTOOPT = 10042;

        [NativeTypeName("#define WSAEPROTONOSUPPORT 10043L")]
        public const int WSAEPROTONOSUPPORT = 10043;

        [NativeTypeName("#define WSAESOCKTNOSUPPORT 10044L")]
        public const int WSAESOCKTNOSUPPORT = 10044;

        [NativeTypeName("#define WSAEOPNOTSUPP 10045L")]
        public const int WSAEOPNOTSUPP = 10045;

        [NativeTypeName("#define WSAEPFNOSUPPORT 10046L")]
        public const int WSAEPFNOSUPPORT = 10046;

        [NativeTypeName("#define WSAEAFNOSUPPORT 10047L")]
        public const int WSAEAFNOSUPPORT = 10047;

        [NativeTypeName("#define WSAEADDRINUSE 10048L")]
        public const int WSAEADDRINUSE = 10048;

        [NativeTypeName("#define WSAEADDRNOTAVAIL 10049L")]
        public const int WSAEADDRNOTAVAIL = 10049;

        [NativeTypeName("#define WSAENETDOWN 10050L")]
        public const int WSAENETDOWN = 10050;

        [NativeTypeName("#define WSAENETUNREACH 10051L")]
        public const int WSAENETUNREACH = 10051;

        [NativeTypeName("#define WSAENETRESET 10052L")]
        public const int WSAENETRESET = 10052;

        [NativeTypeName("#define WSAECONNABORTED 10053L")]
        public const int WSAECONNABORTED = 10053;

        [NativeTypeName("#define WSAECONNRESET 10054L")]
        public const int WSAECONNRESET = 10054;

        [NativeTypeName("#define WSAENOBUFS 10055L")]
        public const int WSAENOBUFS = 10055;

        [NativeTypeName("#define WSAEISCONN 10056L")]
        public const int WSAEISCONN = 10056;

        [NativeTypeName("#define WSAENOTCONN 10057L")]
        public const int WSAENOTCONN = 10057;

        [NativeTypeName("#define WSAESHUTDOWN 10058L")]
        public const int WSAESHUTDOWN = 10058;

        [NativeTypeName("#define WSAETOOMANYREFS 10059L")]
        public const int WSAETOOMANYREFS = 10059;

        [NativeTypeName("#define WSAETIMEDOUT 10060L")]
        public const int WSAETIMEDOUT = 10060;

        [NativeTypeName("#define WSAECONNREFUSED 10061L")]
        public const int WSAECONNREFUSED = 10061;

        [NativeTypeName("#define WSAELOOP 10062L")]
        public const int WSAELOOP = 10062;

        [NativeTypeName("#define WSAENAMETOOLONG 10063L")]
        public const int WSAENAMETOOLONG = 10063;

        [NativeTypeName("#define WSAEHOSTDOWN 10064L")]
        public const int WSAEHOSTDOWN = 10064;

        [NativeTypeName("#define WSAEHOSTUNREACH 10065L")]
        public const int WSAEHOSTUNREACH = 10065;

        [NativeTypeName("#define WSAENOTEMPTY 10066L")]
        public const int WSAENOTEMPTY = 10066;

        [NativeTypeName("#define WSAEPROCLIM 10067L")]
        public const int WSAEPROCLIM = 10067;

        [NativeTypeName("#define WSAEUSERS 10068L")]
        public const int WSAEUSERS = 10068;

        [NativeTypeName("#define WSAEDQUOT 10069L")]
        public const int WSAEDQUOT = 10069;

        [NativeTypeName("#define WSAESTALE 10070L")]
        public const int WSAESTALE = 10070;

        [NativeTypeName("#define WSAEREMOTE 10071L")]
        public const int WSAEREMOTE = 10071;

        [NativeTypeName("#define WSASYSNOTREADY 10091L")]
        public const int WSASYSNOTREADY = 10091;

        [NativeTypeName("#define WSAVERNOTSUPPORTED 10092L")]
        public const int WSAVERNOTSUPPORTED = 10092;

        [NativeTypeName("#define WSANOTINITIALISED 10093L")]
        public const int WSANOTINITIALISED = 10093;

        [NativeTypeName("#define WSAEDISCON 10101L")]
        public const int WSAEDISCON = 10101;

        [NativeTypeName("#define WSAENOMORE 10102L")]
        public const int WSAENOMORE = 10102;

        [NativeTypeName("#define WSAECANCELLED 10103L")]
        public const int WSAECANCELLED = 10103;

        [NativeTypeName("#define WSAEINVALIDPROCTABLE 10104L")]
        public const int WSAEINVALIDPROCTABLE = 10104;

        [NativeTypeName("#define WSAEINVALIDPROVIDER 10105L")]
        public const int WSAEINVALIDPROVIDER = 10105;

        [NativeTypeName("#define WSAEPROVIDERFAILEDINIT 10106L")]
        public const int WSAEPROVIDERFAILEDINIT = 10106;

        [NativeTypeName("#define WSASYSCALLFAILURE 10107L")]
        public const int WSASYSCALLFAILURE = 10107;

        [NativeTypeName("#define WSASERVICE_NOT_FOUND 10108L")]
        public const int WSASERVICE_NOT_FOUND = 10108;

        [NativeTypeName("#define WSATYPE_NOT_FOUND 10109L")]
        public const int WSATYPE_NOT_FOUND = 10109;

        [NativeTypeName("#define WSA_E_NO_MORE 10110L")]
        public const int WSA_E_NO_MORE = 10110;

        [NativeTypeName("#define WSA_E_CANCELLED 10111L")]
        public const int WSA_E_CANCELLED = 10111;

        [NativeTypeName("#define WSAEREFUSED 10112L")]
        public const int WSAEREFUSED = 10112;

        [NativeTypeName("#define WSAHOST_NOT_FOUND 11001L")]
        public const int WSAHOST_NOT_FOUND = 11001;

        [NativeTypeName("#define WSATRY_AGAIN 11002L")]
        public const int WSATRY_AGAIN = 11002;

        [NativeTypeName("#define WSANO_RECOVERY 11003L")]
        public const int WSANO_RECOVERY = 11003;

        [NativeTypeName("#define WSANO_DATA 11004L")]
        public const int WSANO_DATA = 11004;

        [NativeTypeName("#define WSA_QOS_RECEIVERS 11005L")]
        public const int WSA_QOS_RECEIVERS = 11005;

        [NativeTypeName("#define WSA_QOS_SENDERS 11006L")]
        public const int WSA_QOS_SENDERS = 11006;

        [NativeTypeName("#define WSA_QOS_NO_SENDERS 11007L")]
        public const int WSA_QOS_NO_SENDERS = 11007;

        [NativeTypeName("#define WSA_QOS_NO_RECEIVERS 11008L")]
        public const int WSA_QOS_NO_RECEIVERS = 11008;

        [NativeTypeName("#define WSA_QOS_REQUEST_CONFIRMED 11009L")]
        public const int WSA_QOS_REQUEST_CONFIRMED = 11009;

        [NativeTypeName("#define WSA_QOS_ADMISSION_FAILURE 11010L")]
        public const int WSA_QOS_ADMISSION_FAILURE = 11010;

        [NativeTypeName("#define WSA_QOS_POLICY_FAILURE 11011L")]
        public const int WSA_QOS_POLICY_FAILURE = 11011;

        [NativeTypeName("#define WSA_QOS_BAD_STYLE 11012L")]
        public const int WSA_QOS_BAD_STYLE = 11012;

        [NativeTypeName("#define WSA_QOS_BAD_OBJECT 11013L")]
        public const int WSA_QOS_BAD_OBJECT = 11013;

        [NativeTypeName("#define WSA_QOS_TRAFFIC_CTRL_ERROR 11014L")]
        public const int WSA_QOS_TRAFFIC_CTRL_ERROR = 11014;

        [NativeTypeName("#define WSA_QOS_GENERIC_ERROR 11015L")]
        public const int WSA_QOS_GENERIC_ERROR = 11015;

        [NativeTypeName("#define WSA_QOS_ESERVICETYPE 11016L")]
        public const int WSA_QOS_ESERVICETYPE = 11016;

        [NativeTypeName("#define WSA_QOS_EFLOWSPEC 11017L")]
        public const int WSA_QOS_EFLOWSPEC = 11017;

        [NativeTypeName("#define WSA_QOS_EPROVSPECBUF 11018L")]
        public const int WSA_QOS_EPROVSPECBUF = 11018;

        [NativeTypeName("#define WSA_QOS_EFILTERSTYLE 11019L")]
        public const int WSA_QOS_EFILTERSTYLE = 11019;

        [NativeTypeName("#define WSA_QOS_EFILTERTYPE 11020L")]
        public const int WSA_QOS_EFILTERTYPE = 11020;

        [NativeTypeName("#define WSA_QOS_EFILTERCOUNT 11021L")]
        public const int WSA_QOS_EFILTERCOUNT = 11021;

        [NativeTypeName("#define WSA_QOS_EOBJLENGTH 11022L")]
        public const int WSA_QOS_EOBJLENGTH = 11022;

        [NativeTypeName("#define WSA_QOS_EFLOWCOUNT 11023L")]
        public const int WSA_QOS_EFLOWCOUNT = 11023;

        [NativeTypeName("#define WSA_QOS_EUNKOWNPSOBJ 11024L")]
        public const int WSA_QOS_EUNKOWNPSOBJ = 11024;

        [NativeTypeName("#define WSA_QOS_EPOLICYOBJ 11025L")]
        public const int WSA_QOS_EPOLICYOBJ = 11025;

        [NativeTypeName("#define WSA_QOS_EFLOWDESC 11026L")]
        public const int WSA_QOS_EFLOWDESC = 11026;

        [NativeTypeName("#define WSA_QOS_EPSFLOWSPEC 11027L")]
        public const int WSA_QOS_EPSFLOWSPEC = 11027;

        [NativeTypeName("#define WSA_QOS_EPSFILTERSPEC 11028L")]
        public const int WSA_QOS_EPSFILTERSPEC = 11028;

        [NativeTypeName("#define WSA_QOS_ESDMODEOBJ 11029L")]
        public const int WSA_QOS_ESDMODEOBJ = 11029;

        [NativeTypeName("#define WSA_QOS_ESHAPERATEOBJ 11030L")]
        public const int WSA_QOS_ESHAPERATEOBJ = 11030;

        [NativeTypeName("#define WSA_QOS_RESERVED_PETYPE 11031L")]
        public const int WSA_QOS_RESERVED_PETYPE = 11031;

        [NativeTypeName("#define WSA_SECURE_HOST_NOT_FOUND 11032L")]
        public const int WSA_SECURE_HOST_NOT_FOUND = 11032;

        [NativeTypeName("#define WSA_IPSEC_NAME_POLICY_ERROR 11033L")]
        public const int WSA_IPSEC_NAME_POLICY_ERROR = 11033;

        [NativeTypeName("#define ERROR_IPSEC_QM_POLICY_EXISTS 13000L")]
        public const int ERROR_IPSEC_QM_POLICY_EXISTS = 13000;

        [NativeTypeName("#define ERROR_IPSEC_QM_POLICY_NOT_FOUND 13001L")]
        public const int ERROR_IPSEC_QM_POLICY_NOT_FOUND = 13001;

        [NativeTypeName("#define ERROR_IPSEC_QM_POLICY_IN_USE 13002L")]
        public const int ERROR_IPSEC_QM_POLICY_IN_USE = 13002;

        [NativeTypeName("#define ERROR_IPSEC_MM_POLICY_EXISTS 13003L")]
        public const int ERROR_IPSEC_MM_POLICY_EXISTS = 13003;

        [NativeTypeName("#define ERROR_IPSEC_MM_POLICY_NOT_FOUND 13004L")]
        public const int ERROR_IPSEC_MM_POLICY_NOT_FOUND = 13004;

        [NativeTypeName("#define ERROR_IPSEC_MM_POLICY_IN_USE 13005L")]
        public const int ERROR_IPSEC_MM_POLICY_IN_USE = 13005;

        [NativeTypeName("#define ERROR_IPSEC_MM_FILTER_EXISTS 13006L")]
        public const int ERROR_IPSEC_MM_FILTER_EXISTS = 13006;

        [NativeTypeName("#define ERROR_IPSEC_MM_FILTER_NOT_FOUND 13007L")]
        public const int ERROR_IPSEC_MM_FILTER_NOT_FOUND = 13007;

        [NativeTypeName("#define ERROR_IPSEC_TRANSPORT_FILTER_EXISTS 13008L")]
        public const int ERROR_IPSEC_TRANSPORT_FILTER_EXISTS = 13008;

        [NativeTypeName("#define ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND 13009L")]
        public const int ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND = 13009;

        [NativeTypeName("#define ERROR_IPSEC_MM_AUTH_EXISTS 13010L")]
        public const int ERROR_IPSEC_MM_AUTH_EXISTS = 13010;

        [NativeTypeName("#define ERROR_IPSEC_MM_AUTH_NOT_FOUND 13011L")]
        public const int ERROR_IPSEC_MM_AUTH_NOT_FOUND = 13011;

        [NativeTypeName("#define ERROR_IPSEC_MM_AUTH_IN_USE 13012L")]
        public const int ERROR_IPSEC_MM_AUTH_IN_USE = 13012;

        [NativeTypeName("#define ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND 13013L")]
        public const int ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND = 13013;

        [NativeTypeName("#define ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND 13014L")]
        public const int ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND = 13014;

        [NativeTypeName("#define ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND 13015L")]
        public const int ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND = 13015;

        [NativeTypeName("#define ERROR_IPSEC_TUNNEL_FILTER_EXISTS 13016L")]
        public const int ERROR_IPSEC_TUNNEL_FILTER_EXISTS = 13016;

        [NativeTypeName("#define ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND 13017L")]
        public const int ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND = 13017;

        [NativeTypeName("#define ERROR_IPSEC_MM_FILTER_PENDING_DELETION 13018L")]
        public const int ERROR_IPSEC_MM_FILTER_PENDING_DELETION = 13018;

        [NativeTypeName("#define ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION 13019L")]
        public const int ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION = 13019;

        [NativeTypeName("#define ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION 13020L")]
        public const int ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION = 13020;

        [NativeTypeName("#define ERROR_IPSEC_MM_POLICY_PENDING_DELETION 13021L")]
        public const int ERROR_IPSEC_MM_POLICY_PENDING_DELETION = 13021;

        [NativeTypeName("#define ERROR_IPSEC_MM_AUTH_PENDING_DELETION 13022L")]
        public const int ERROR_IPSEC_MM_AUTH_PENDING_DELETION = 13022;

        [NativeTypeName("#define ERROR_IPSEC_QM_POLICY_PENDING_DELETION 13023L")]
        public const int ERROR_IPSEC_QM_POLICY_PENDING_DELETION = 13023;

        [NativeTypeName("#define WARNING_IPSEC_MM_POLICY_PRUNED 13024L")]
        public const int WARNING_IPSEC_MM_POLICY_PRUNED = 13024;

        [NativeTypeName("#define WARNING_IPSEC_QM_POLICY_PRUNED 13025L")]
        public const int WARNING_IPSEC_QM_POLICY_PRUNED = 13025;

        [NativeTypeName("#define ERROR_IPSEC_IKE_NEG_STATUS_BEGIN 13800L")]
        public const int ERROR_IPSEC_IKE_NEG_STATUS_BEGIN = 13800;

        [NativeTypeName("#define ERROR_IPSEC_IKE_AUTH_FAIL 13801L")]
        public const int ERROR_IPSEC_IKE_AUTH_FAIL = 13801;

        [NativeTypeName("#define ERROR_IPSEC_IKE_ATTRIB_FAIL 13802L")]
        public const int ERROR_IPSEC_IKE_ATTRIB_FAIL = 13802;

        [NativeTypeName("#define ERROR_IPSEC_IKE_NEGOTIATION_PENDING 13803L")]
        public const int ERROR_IPSEC_IKE_NEGOTIATION_PENDING = 13803;

        [NativeTypeName("#define ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR 13804L")]
        public const int ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR = 13804;

        [NativeTypeName("#define ERROR_IPSEC_IKE_TIMED_OUT 13805L")]
        public const int ERROR_IPSEC_IKE_TIMED_OUT = 13805;

        [NativeTypeName("#define ERROR_IPSEC_IKE_NO_CERT 13806L")]
        public const int ERROR_IPSEC_IKE_NO_CERT = 13806;

        [NativeTypeName("#define ERROR_IPSEC_IKE_SA_DELETED 13807L")]
        public const int ERROR_IPSEC_IKE_SA_DELETED = 13807;

        [NativeTypeName("#define ERROR_IPSEC_IKE_SA_REAPED 13808L")]
        public const int ERROR_IPSEC_IKE_SA_REAPED = 13808;

        [NativeTypeName("#define ERROR_IPSEC_IKE_MM_ACQUIRE_DROP 13809L")]
        public const int ERROR_IPSEC_IKE_MM_ACQUIRE_DROP = 13809;

        [NativeTypeName("#define ERROR_IPSEC_IKE_QM_ACQUIRE_DROP 13810L")]
        public const int ERROR_IPSEC_IKE_QM_ACQUIRE_DROP = 13810;

        [NativeTypeName("#define ERROR_IPSEC_IKE_QUEUE_DROP_MM 13811L")]
        public const int ERROR_IPSEC_IKE_QUEUE_DROP_MM = 13811;

        [NativeTypeName("#define ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM 13812L")]
        public const int ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM = 13812;

        [NativeTypeName("#define ERROR_IPSEC_IKE_DROP_NO_RESPONSE 13813L")]
        public const int ERROR_IPSEC_IKE_DROP_NO_RESPONSE = 13813;

        [NativeTypeName("#define ERROR_IPSEC_IKE_MM_DELAY_DROP 13814L")]
        public const int ERROR_IPSEC_IKE_MM_DELAY_DROP = 13814;

        [NativeTypeName("#define ERROR_IPSEC_IKE_QM_DELAY_DROP 13815L")]
        public const int ERROR_IPSEC_IKE_QM_DELAY_DROP = 13815;

        [NativeTypeName("#define ERROR_IPSEC_IKE_ERROR 13816L")]
        public const int ERROR_IPSEC_IKE_ERROR = 13816;

        [NativeTypeName("#define ERROR_IPSEC_IKE_CRL_FAILED 13817L")]
        public const int ERROR_IPSEC_IKE_CRL_FAILED = 13817;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INVALID_KEY_USAGE 13818L")]
        public const int ERROR_IPSEC_IKE_INVALID_KEY_USAGE = 13818;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INVALID_CERT_TYPE 13819L")]
        public const int ERROR_IPSEC_IKE_INVALID_CERT_TYPE = 13819;

        [NativeTypeName("#define ERROR_IPSEC_IKE_NO_PRIVATE_KEY 13820L")]
        public const int ERROR_IPSEC_IKE_NO_PRIVATE_KEY = 13820;

        [NativeTypeName("#define ERROR_IPSEC_IKE_SIMULTANEOUS_REKEY 13821L")]
        public const int ERROR_IPSEC_IKE_SIMULTANEOUS_REKEY = 13821;

        [NativeTypeName("#define ERROR_IPSEC_IKE_DH_FAIL 13822L")]
        public const int ERROR_IPSEC_IKE_DH_FAIL = 13822;

        [NativeTypeName("#define ERROR_IPSEC_IKE_CRITICAL_PAYLOAD_NOT_RECOGNIZED 13823L")]
        public const int ERROR_IPSEC_IKE_CRITICAL_PAYLOAD_NOT_RECOGNIZED = 13823;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INVALID_HEADER 13824L")]
        public const int ERROR_IPSEC_IKE_INVALID_HEADER = 13824;

        [NativeTypeName("#define ERROR_IPSEC_IKE_NO_POLICY 13825L")]
        public const int ERROR_IPSEC_IKE_NO_POLICY = 13825;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INVALID_SIGNATURE 13826L")]
        public const int ERROR_IPSEC_IKE_INVALID_SIGNATURE = 13826;

        [NativeTypeName("#define ERROR_IPSEC_IKE_KERBEROS_ERROR 13827L")]
        public const int ERROR_IPSEC_IKE_KERBEROS_ERROR = 13827;

        [NativeTypeName("#define ERROR_IPSEC_IKE_NO_PUBLIC_KEY 13828L")]
        public const int ERROR_IPSEC_IKE_NO_PUBLIC_KEY = 13828;

        [NativeTypeName("#define ERROR_IPSEC_IKE_PROCESS_ERR 13829L")]
        public const int ERROR_IPSEC_IKE_PROCESS_ERR = 13829;

        [NativeTypeName("#define ERROR_IPSEC_IKE_PROCESS_ERR_SA 13830L")]
        public const int ERROR_IPSEC_IKE_PROCESS_ERR_SA = 13830;

        [NativeTypeName("#define ERROR_IPSEC_IKE_PROCESS_ERR_PROP 13831L")]
        public const int ERROR_IPSEC_IKE_PROCESS_ERR_PROP = 13831;

        [NativeTypeName("#define ERROR_IPSEC_IKE_PROCESS_ERR_TRANS 13832L")]
        public const int ERROR_IPSEC_IKE_PROCESS_ERR_TRANS = 13832;

        [NativeTypeName("#define ERROR_IPSEC_IKE_PROCESS_ERR_KE 13833L")]
        public const int ERROR_IPSEC_IKE_PROCESS_ERR_KE = 13833;

        [NativeTypeName("#define ERROR_IPSEC_IKE_PROCESS_ERR_ID 13834L")]
        public const int ERROR_IPSEC_IKE_PROCESS_ERR_ID = 13834;

        [NativeTypeName("#define ERROR_IPSEC_IKE_PROCESS_ERR_CERT 13835L")]
        public const int ERROR_IPSEC_IKE_PROCESS_ERR_CERT = 13835;

        [NativeTypeName("#define ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ 13836L")]
        public const int ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ = 13836;

        [NativeTypeName("#define ERROR_IPSEC_IKE_PROCESS_ERR_HASH 13837L")]
        public const int ERROR_IPSEC_IKE_PROCESS_ERR_HASH = 13837;

        [NativeTypeName("#define ERROR_IPSEC_IKE_PROCESS_ERR_SIG 13838L")]
        public const int ERROR_IPSEC_IKE_PROCESS_ERR_SIG = 13838;

        [NativeTypeName("#define ERROR_IPSEC_IKE_PROCESS_ERR_NONCE 13839L")]
        public const int ERROR_IPSEC_IKE_PROCESS_ERR_NONCE = 13839;

        [NativeTypeName("#define ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY 13840L")]
        public const int ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY = 13840;

        [NativeTypeName("#define ERROR_IPSEC_IKE_PROCESS_ERR_DELETE 13841L")]
        public const int ERROR_IPSEC_IKE_PROCESS_ERR_DELETE = 13841;

        [NativeTypeName("#define ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR 13842L")]
        public const int ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR = 13842;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INVALID_PAYLOAD 13843L")]
        public const int ERROR_IPSEC_IKE_INVALID_PAYLOAD = 13843;

        [NativeTypeName("#define ERROR_IPSEC_IKE_LOAD_SOFT_SA 13844L")]
        public const int ERROR_IPSEC_IKE_LOAD_SOFT_SA = 13844;

        [NativeTypeName("#define ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN 13845L")]
        public const int ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN = 13845;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INVALID_COOKIE 13846L")]
        public const int ERROR_IPSEC_IKE_INVALID_COOKIE = 13846;

        [NativeTypeName("#define ERROR_IPSEC_IKE_NO_PEER_CERT 13847L")]
        public const int ERROR_IPSEC_IKE_NO_PEER_CERT = 13847;

        [NativeTypeName("#define ERROR_IPSEC_IKE_PEER_CRL_FAILED 13848L")]
        public const int ERROR_IPSEC_IKE_PEER_CRL_FAILED = 13848;

        [NativeTypeName("#define ERROR_IPSEC_IKE_POLICY_CHANGE 13849L")]
        public const int ERROR_IPSEC_IKE_POLICY_CHANGE = 13849;

        [NativeTypeName("#define ERROR_IPSEC_IKE_NO_MM_POLICY 13850L")]
        public const int ERROR_IPSEC_IKE_NO_MM_POLICY = 13850;

        [NativeTypeName("#define ERROR_IPSEC_IKE_NOTCBPRIV 13851L")]
        public const int ERROR_IPSEC_IKE_NOTCBPRIV = 13851;

        [NativeTypeName("#define ERROR_IPSEC_IKE_SECLOADFAIL 13852L")]
        public const int ERROR_IPSEC_IKE_SECLOADFAIL = 13852;

        [NativeTypeName("#define ERROR_IPSEC_IKE_FAILSSPINIT 13853L")]
        public const int ERROR_IPSEC_IKE_FAILSSPINIT = 13853;

        [NativeTypeName("#define ERROR_IPSEC_IKE_FAILQUERYSSP 13854L")]
        public const int ERROR_IPSEC_IKE_FAILQUERYSSP = 13854;

        [NativeTypeName("#define ERROR_IPSEC_IKE_SRVACQFAIL 13855L")]
        public const int ERROR_IPSEC_IKE_SRVACQFAIL = 13855;

        [NativeTypeName("#define ERROR_IPSEC_IKE_SRVQUERYCRED 13856L")]
        public const int ERROR_IPSEC_IKE_SRVQUERYCRED = 13856;

        [NativeTypeName("#define ERROR_IPSEC_IKE_GETSPIFAIL 13857L")]
        public const int ERROR_IPSEC_IKE_GETSPIFAIL = 13857;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INVALID_FILTER 13858L")]
        public const int ERROR_IPSEC_IKE_INVALID_FILTER = 13858;

        [NativeTypeName("#define ERROR_IPSEC_IKE_OUT_OF_MEMORY 13859L")]
        public const int ERROR_IPSEC_IKE_OUT_OF_MEMORY = 13859;

        [NativeTypeName("#define ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED 13860L")]
        public const int ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED = 13860;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INVALID_POLICY 13861L")]
        public const int ERROR_IPSEC_IKE_INVALID_POLICY = 13861;

        [NativeTypeName("#define ERROR_IPSEC_IKE_UNKNOWN_DOI 13862L")]
        public const int ERROR_IPSEC_IKE_UNKNOWN_DOI = 13862;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INVALID_SITUATION 13863L")]
        public const int ERROR_IPSEC_IKE_INVALID_SITUATION = 13863;

        [NativeTypeName("#define ERROR_IPSEC_IKE_DH_FAILURE 13864L")]
        public const int ERROR_IPSEC_IKE_DH_FAILURE = 13864;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INVALID_GROUP 13865L")]
        public const int ERROR_IPSEC_IKE_INVALID_GROUP = 13865;

        [NativeTypeName("#define ERROR_IPSEC_IKE_ENCRYPT 13866L")]
        public const int ERROR_IPSEC_IKE_ENCRYPT = 13866;

        [NativeTypeName("#define ERROR_IPSEC_IKE_DECRYPT 13867L")]
        public const int ERROR_IPSEC_IKE_DECRYPT = 13867;

        [NativeTypeName("#define ERROR_IPSEC_IKE_POLICY_MATCH 13868L")]
        public const int ERROR_IPSEC_IKE_POLICY_MATCH = 13868;

        [NativeTypeName("#define ERROR_IPSEC_IKE_UNSUPPORTED_ID 13869L")]
        public const int ERROR_IPSEC_IKE_UNSUPPORTED_ID = 13869;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INVALID_HASH 13870L")]
        public const int ERROR_IPSEC_IKE_INVALID_HASH = 13870;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INVALID_HASH_ALG 13871L")]
        public const int ERROR_IPSEC_IKE_INVALID_HASH_ALG = 13871;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INVALID_HASH_SIZE 13872L")]
        public const int ERROR_IPSEC_IKE_INVALID_HASH_SIZE = 13872;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG 13873L")]
        public const int ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG = 13873;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INVALID_AUTH_ALG 13874L")]
        public const int ERROR_IPSEC_IKE_INVALID_AUTH_ALG = 13874;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INVALID_SIG 13875L")]
        public const int ERROR_IPSEC_IKE_INVALID_SIG = 13875;

        [NativeTypeName("#define ERROR_IPSEC_IKE_LOAD_FAILED 13876L")]
        public const int ERROR_IPSEC_IKE_LOAD_FAILED = 13876;

        [NativeTypeName("#define ERROR_IPSEC_IKE_RPC_DELETE 13877L")]
        public const int ERROR_IPSEC_IKE_RPC_DELETE = 13877;

        [NativeTypeName("#define ERROR_IPSEC_IKE_BENIGN_REINIT 13878L")]
        public const int ERROR_IPSEC_IKE_BENIGN_REINIT = 13878;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY 13879L")]
        public const int ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY = 13879;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INVALID_MAJOR_VERSION 13880L")]
        public const int ERROR_IPSEC_IKE_INVALID_MAJOR_VERSION = 13880;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN 13881L")]
        public const int ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN = 13881;

        [NativeTypeName("#define ERROR_IPSEC_IKE_MM_LIMIT 13882L")]
        public const int ERROR_IPSEC_IKE_MM_LIMIT = 13882;

        [NativeTypeName("#define ERROR_IPSEC_IKE_NEGOTIATION_DISABLED 13883L")]
        public const int ERROR_IPSEC_IKE_NEGOTIATION_DISABLED = 13883;

        [NativeTypeName("#define ERROR_IPSEC_IKE_QM_LIMIT 13884L")]
        public const int ERROR_IPSEC_IKE_QM_LIMIT = 13884;

        [NativeTypeName("#define ERROR_IPSEC_IKE_MM_EXPIRED 13885L")]
        public const int ERROR_IPSEC_IKE_MM_EXPIRED = 13885;

        [NativeTypeName("#define ERROR_IPSEC_IKE_PEER_MM_ASSUMED_INVALID 13886L")]
        public const int ERROR_IPSEC_IKE_PEER_MM_ASSUMED_INVALID = 13886;

        [NativeTypeName("#define ERROR_IPSEC_IKE_CERT_CHAIN_POLICY_MISMATCH 13887L")]
        public const int ERROR_IPSEC_IKE_CERT_CHAIN_POLICY_MISMATCH = 13887;

        [NativeTypeName("#define ERROR_IPSEC_IKE_UNEXPECTED_MESSAGE_ID 13888L")]
        public const int ERROR_IPSEC_IKE_UNEXPECTED_MESSAGE_ID = 13888;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INVALID_AUTH_PAYLOAD 13889L")]
        public const int ERROR_IPSEC_IKE_INVALID_AUTH_PAYLOAD = 13889;

        [NativeTypeName("#define ERROR_IPSEC_IKE_DOS_COOKIE_SENT 13890L")]
        public const int ERROR_IPSEC_IKE_DOS_COOKIE_SENT = 13890;

        [NativeTypeName("#define ERROR_IPSEC_IKE_SHUTTING_DOWN 13891L")]
        public const int ERROR_IPSEC_IKE_SHUTTING_DOWN = 13891;

        [NativeTypeName("#define ERROR_IPSEC_IKE_CGA_AUTH_FAILED 13892L")]
        public const int ERROR_IPSEC_IKE_CGA_AUTH_FAILED = 13892;

        [NativeTypeName("#define ERROR_IPSEC_IKE_PROCESS_ERR_NATOA 13893L")]
        public const int ERROR_IPSEC_IKE_PROCESS_ERR_NATOA = 13893;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INVALID_MM_FOR_QM 13894L")]
        public const int ERROR_IPSEC_IKE_INVALID_MM_FOR_QM = 13894;

        [NativeTypeName("#define ERROR_IPSEC_IKE_QM_EXPIRED 13895L")]
        public const int ERROR_IPSEC_IKE_QM_EXPIRED = 13895;

        [NativeTypeName("#define ERROR_IPSEC_IKE_TOO_MANY_FILTERS 13896L")]
        public const int ERROR_IPSEC_IKE_TOO_MANY_FILTERS = 13896;

        [NativeTypeName("#define ERROR_IPSEC_IKE_NEG_STATUS_END 13897L")]
        public const int ERROR_IPSEC_IKE_NEG_STATUS_END = 13897;

        [NativeTypeName("#define ERROR_IPSEC_IKE_KILL_DUMMY_NAP_TUNNEL 13898L")]
        public const int ERROR_IPSEC_IKE_KILL_DUMMY_NAP_TUNNEL = 13898;

        [NativeTypeName("#define ERROR_IPSEC_IKE_INNER_IP_ASSIGNMENT_FAILURE 13899L")]
        public const int ERROR_IPSEC_IKE_INNER_IP_ASSIGNMENT_FAILURE = 13899;

        [NativeTypeName("#define ERROR_IPSEC_IKE_REQUIRE_CP_PAYLOAD_MISSING 13900L")]
        public const int ERROR_IPSEC_IKE_REQUIRE_CP_PAYLOAD_MISSING = 13900;

        [NativeTypeName("#define ERROR_IPSEC_KEY_MODULE_IMPERSONATION_NEGOTIATION_PENDING 13901L")]
        public const int ERROR_IPSEC_KEY_MODULE_IMPERSONATION_NEGOTIATION_PENDING = 13901;

        [NativeTypeName("#define ERROR_IPSEC_IKE_COEXISTENCE_SUPPRESS 13902L")]
        public const int ERROR_IPSEC_IKE_COEXISTENCE_SUPPRESS = 13902;

        [NativeTypeName("#define ERROR_IPSEC_IKE_RATELIMIT_DROP 13903L")]
        public const int ERROR_IPSEC_IKE_RATELIMIT_DROP = 13903;

        [NativeTypeName("#define ERROR_IPSEC_IKE_PEER_DOESNT_SUPPORT_MOBIKE 13904L")]
        public const int ERROR_IPSEC_IKE_PEER_DOESNT_SUPPORT_MOBIKE = 13904;

        [NativeTypeName("#define ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE 13905L")]
        public const int ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE = 13905;

        [NativeTypeName("#define ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_FAILURE 13906L")]
        public const int ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_FAILURE = 13906;

        [NativeTypeName("#define ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE_WITH_OPTIONAL_RETRY 13907L")]
        public const int ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE_WITH_OPTIONAL_RETRY = 13907;

        [NativeTypeName("#define ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_AND_CERTMAP_FAILURE 13908L")]
        public const int ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_AND_CERTMAP_FAILURE = 13908;

        [NativeTypeName("#define ERROR_IPSEC_IKE_NEG_STATUS_EXTENDED_END 13909L")]
        public const int ERROR_IPSEC_IKE_NEG_STATUS_EXTENDED_END = 13909;

        [NativeTypeName("#define ERROR_IPSEC_BAD_SPI 13910L")]
        public const int ERROR_IPSEC_BAD_SPI = 13910;

        [NativeTypeName("#define ERROR_IPSEC_SA_LIFETIME_EXPIRED 13911L")]
        public const int ERROR_IPSEC_SA_LIFETIME_EXPIRED = 13911;

        [NativeTypeName("#define ERROR_IPSEC_WRONG_SA 13912L")]
        public const int ERROR_IPSEC_WRONG_SA = 13912;

        [NativeTypeName("#define ERROR_IPSEC_REPLAY_CHECK_FAILED 13913L")]
        public const int ERROR_IPSEC_REPLAY_CHECK_FAILED = 13913;

        [NativeTypeName("#define ERROR_IPSEC_INVALID_PACKET 13914L")]
        public const int ERROR_IPSEC_INVALID_PACKET = 13914;

        [NativeTypeName("#define ERROR_IPSEC_INTEGRITY_CHECK_FAILED 13915L")]
        public const int ERROR_IPSEC_INTEGRITY_CHECK_FAILED = 13915;

        [NativeTypeName("#define ERROR_IPSEC_CLEAR_TEXT_DROP 13916L")]
        public const int ERROR_IPSEC_CLEAR_TEXT_DROP = 13916;

        [NativeTypeName("#define ERROR_IPSEC_AUTH_FIREWALL_DROP 13917L")]
        public const int ERROR_IPSEC_AUTH_FIREWALL_DROP = 13917;

        [NativeTypeName("#define ERROR_IPSEC_THROTTLE_DROP 13918L")]
        public const int ERROR_IPSEC_THROTTLE_DROP = 13918;

        [NativeTypeName("#define ERROR_IPSEC_DOSP_BLOCK 13925L")]
        public const int ERROR_IPSEC_DOSP_BLOCK = 13925;

        [NativeTypeName("#define ERROR_IPSEC_DOSP_RECEIVED_MULTICAST 13926L")]
        public const int ERROR_IPSEC_DOSP_RECEIVED_MULTICAST = 13926;

        [NativeTypeName("#define ERROR_IPSEC_DOSP_INVALID_PACKET 13927L")]
        public const int ERROR_IPSEC_DOSP_INVALID_PACKET = 13927;

        [NativeTypeName("#define ERROR_IPSEC_DOSP_STATE_LOOKUP_FAILED 13928L")]
        public const int ERROR_IPSEC_DOSP_STATE_LOOKUP_FAILED = 13928;

        [NativeTypeName("#define ERROR_IPSEC_DOSP_MAX_ENTRIES 13929L")]
        public const int ERROR_IPSEC_DOSP_MAX_ENTRIES = 13929;

        [NativeTypeName("#define ERROR_IPSEC_DOSP_KEYMOD_NOT_ALLOWED 13930L")]
        public const int ERROR_IPSEC_DOSP_KEYMOD_NOT_ALLOWED = 13930;

        [NativeTypeName("#define ERROR_IPSEC_DOSP_NOT_INSTALLED 13931L")]
        public const int ERROR_IPSEC_DOSP_NOT_INSTALLED = 13931;

        [NativeTypeName("#define ERROR_IPSEC_DOSP_MAX_PER_IP_RATELIMIT_QUEUES 13932L")]
        public const int ERROR_IPSEC_DOSP_MAX_PER_IP_RATELIMIT_QUEUES = 13932;

        [NativeTypeName("#define ERROR_SXS_SECTION_NOT_FOUND 14000L")]
        public const int ERROR_SXS_SECTION_NOT_FOUND = 14000;

        [NativeTypeName("#define ERROR_SXS_CANT_GEN_ACTCTX 14001L")]
        public const int ERROR_SXS_CANT_GEN_ACTCTX = 14001;

        [NativeTypeName("#define ERROR_SXS_INVALID_ACTCTXDATA_FORMAT 14002L")]
        public const int ERROR_SXS_INVALID_ACTCTXDATA_FORMAT = 14002;

        [NativeTypeName("#define ERROR_SXS_ASSEMBLY_NOT_FOUND 14003L")]
        public const int ERROR_SXS_ASSEMBLY_NOT_FOUND = 14003;

        [NativeTypeName("#define ERROR_SXS_MANIFEST_FORMAT_ERROR 14004L")]
        public const int ERROR_SXS_MANIFEST_FORMAT_ERROR = 14004;

        [NativeTypeName("#define ERROR_SXS_MANIFEST_PARSE_ERROR 14005L")]
        public const int ERROR_SXS_MANIFEST_PARSE_ERROR = 14005;

        [NativeTypeName("#define ERROR_SXS_ACTIVATION_CONTEXT_DISABLED 14006L")]
        public const int ERROR_SXS_ACTIVATION_CONTEXT_DISABLED = 14006;

        [NativeTypeName("#define ERROR_SXS_KEY_NOT_FOUND 14007L")]
        public const int ERROR_SXS_KEY_NOT_FOUND = 14007;

        [NativeTypeName("#define ERROR_SXS_VERSION_CONFLICT 14008L")]
        public const int ERROR_SXS_VERSION_CONFLICT = 14008;

        [NativeTypeName("#define ERROR_SXS_WRONG_SECTION_TYPE 14009L")]
        public const int ERROR_SXS_WRONG_SECTION_TYPE = 14009;

        [NativeTypeName("#define ERROR_SXS_THREAD_QUERIES_DISABLED 14010L")]
        public const int ERROR_SXS_THREAD_QUERIES_DISABLED = 14010;

        [NativeTypeName("#define ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET 14011L")]
        public const int ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET = 14011;

        [NativeTypeName("#define ERROR_SXS_UNKNOWN_ENCODING_GROUP 14012L")]
        public const int ERROR_SXS_UNKNOWN_ENCODING_GROUP = 14012;

        [NativeTypeName("#define ERROR_SXS_UNKNOWN_ENCODING 14013L")]
        public const int ERROR_SXS_UNKNOWN_ENCODING = 14013;

        [NativeTypeName("#define ERROR_SXS_INVALID_XML_NAMESPACE_URI 14014L")]
        public const int ERROR_SXS_INVALID_XML_NAMESPACE_URI = 14014;

        [NativeTypeName("#define ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED 14015L")]
        public const int ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED = 14015;

        [NativeTypeName("#define ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED 14016L")]
        public const int ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED = 14016;

        [NativeTypeName("#define ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE 14017L")]
        public const int ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE = 14017;

        [NativeTypeName("#define ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE 14018L")]
        public const int ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE = 14018;

        [NativeTypeName("#define ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE 14019L")]
        public const int ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE = 14019;

        [NativeTypeName("#define ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT 14020L")]
        public const int ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT = 14020;

        [NativeTypeName("#define ERROR_SXS_DUPLICATE_DLL_NAME 14021L")]
        public const int ERROR_SXS_DUPLICATE_DLL_NAME = 14021;

        [NativeTypeName("#define ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME 14022L")]
        public const int ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME = 14022;

        [NativeTypeName("#define ERROR_SXS_DUPLICATE_CLSID 14023L")]
        public const int ERROR_SXS_DUPLICATE_CLSID = 14023;

        [NativeTypeName("#define ERROR_SXS_DUPLICATE_IID 14024L")]
        public const int ERROR_SXS_DUPLICATE_IID = 14024;

        [NativeTypeName("#define ERROR_SXS_DUPLICATE_TLBID 14025L")]
        public const int ERROR_SXS_DUPLICATE_TLBID = 14025;

        [NativeTypeName("#define ERROR_SXS_DUPLICATE_PROGID 14026L")]
        public const int ERROR_SXS_DUPLICATE_PROGID = 14026;

        [NativeTypeName("#define ERROR_SXS_DUPLICATE_ASSEMBLY_NAME 14027L")]
        public const int ERROR_SXS_DUPLICATE_ASSEMBLY_NAME = 14027;

        [NativeTypeName("#define ERROR_SXS_FILE_HASH_MISMATCH 14028L")]
        public const int ERROR_SXS_FILE_HASH_MISMATCH = 14028;

        [NativeTypeName("#define ERROR_SXS_POLICY_PARSE_ERROR 14029L")]
        public const int ERROR_SXS_POLICY_PARSE_ERROR = 14029;

        [NativeTypeName("#define ERROR_SXS_XML_E_MISSINGQUOTE 14030L")]
        public const int ERROR_SXS_XML_E_MISSINGQUOTE = 14030;

        [NativeTypeName("#define ERROR_SXS_XML_E_COMMENTSYNTAX 14031L")]
        public const int ERROR_SXS_XML_E_COMMENTSYNTAX = 14031;

        [NativeTypeName("#define ERROR_SXS_XML_E_BADSTARTNAMECHAR 14032L")]
        public const int ERROR_SXS_XML_E_BADSTARTNAMECHAR = 14032;

        [NativeTypeName("#define ERROR_SXS_XML_E_BADNAMECHAR 14033L")]
        public const int ERROR_SXS_XML_E_BADNAMECHAR = 14033;

        [NativeTypeName("#define ERROR_SXS_XML_E_BADCHARINSTRING 14034L")]
        public const int ERROR_SXS_XML_E_BADCHARINSTRING = 14034;

        [NativeTypeName("#define ERROR_SXS_XML_E_XMLDECLSYNTAX 14035L")]
        public const int ERROR_SXS_XML_E_XMLDECLSYNTAX = 14035;

        [NativeTypeName("#define ERROR_SXS_XML_E_BADCHARDATA 14036L")]
        public const int ERROR_SXS_XML_E_BADCHARDATA = 14036;

        [NativeTypeName("#define ERROR_SXS_XML_E_MISSINGWHITESPACE 14037L")]
        public const int ERROR_SXS_XML_E_MISSINGWHITESPACE = 14037;

        [NativeTypeName("#define ERROR_SXS_XML_E_EXPECTINGTAGEND 14038L")]
        public const int ERROR_SXS_XML_E_EXPECTINGTAGEND = 14038;

        [NativeTypeName("#define ERROR_SXS_XML_E_MISSINGSEMICOLON 14039L")]
        public const int ERROR_SXS_XML_E_MISSINGSEMICOLON = 14039;

        [NativeTypeName("#define ERROR_SXS_XML_E_UNBALANCEDPAREN 14040L")]
        public const int ERROR_SXS_XML_E_UNBALANCEDPAREN = 14040;

        [NativeTypeName("#define ERROR_SXS_XML_E_INTERNALERROR 14041L")]
        public const int ERROR_SXS_XML_E_INTERNALERROR = 14041;

        [NativeTypeName("#define ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE 14042L")]
        public const int ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE = 14042;

        [NativeTypeName("#define ERROR_SXS_XML_E_INCOMPLETE_ENCODING 14043L")]
        public const int ERROR_SXS_XML_E_INCOMPLETE_ENCODING = 14043;

        [NativeTypeName("#define ERROR_SXS_XML_E_MISSING_PAREN 14044L")]
        public const int ERROR_SXS_XML_E_MISSING_PAREN = 14044;

        [NativeTypeName("#define ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE 14045L")]
        public const int ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE = 14045;

        [NativeTypeName("#define ERROR_SXS_XML_E_MULTIPLE_COLONS 14046L")]
        public const int ERROR_SXS_XML_E_MULTIPLE_COLONS = 14046;

        [NativeTypeName("#define ERROR_SXS_XML_E_INVALID_DECIMAL 14047L")]
        public const int ERROR_SXS_XML_E_INVALID_DECIMAL = 14047;

        [NativeTypeName("#define ERROR_SXS_XML_E_INVALID_HEXIDECIMAL 14048L")]
        public const int ERROR_SXS_XML_E_INVALID_HEXIDECIMAL = 14048;

        [NativeTypeName("#define ERROR_SXS_XML_E_INVALID_UNICODE 14049L")]
        public const int ERROR_SXS_XML_E_INVALID_UNICODE = 14049;

        [NativeTypeName("#define ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK 14050L")]
        public const int ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK = 14050;

        [NativeTypeName("#define ERROR_SXS_XML_E_UNEXPECTEDENDTAG 14051L")]
        public const int ERROR_SXS_XML_E_UNEXPECTEDENDTAG = 14051;

        [NativeTypeName("#define ERROR_SXS_XML_E_UNCLOSEDTAG 14052L")]
        public const int ERROR_SXS_XML_E_UNCLOSEDTAG = 14052;

        [NativeTypeName("#define ERROR_SXS_XML_E_DUPLICATEATTRIBUTE 14053L")]
        public const int ERROR_SXS_XML_E_DUPLICATEATTRIBUTE = 14053;

        [NativeTypeName("#define ERROR_SXS_XML_E_MULTIPLEROOTS 14054L")]
        public const int ERROR_SXS_XML_E_MULTIPLEROOTS = 14054;

        [NativeTypeName("#define ERROR_SXS_XML_E_INVALIDATROOTLEVEL 14055L")]
        public const int ERROR_SXS_XML_E_INVALIDATROOTLEVEL = 14055;

        [NativeTypeName("#define ERROR_SXS_XML_E_BADXMLDECL 14056L")]
        public const int ERROR_SXS_XML_E_BADXMLDECL = 14056;

        [NativeTypeName("#define ERROR_SXS_XML_E_MISSINGROOT 14057L")]
        public const int ERROR_SXS_XML_E_MISSINGROOT = 14057;

        [NativeTypeName("#define ERROR_SXS_XML_E_UNEXPECTEDEOF 14058L")]
        public const int ERROR_SXS_XML_E_UNEXPECTEDEOF = 14058;

        [NativeTypeName("#define ERROR_SXS_XML_E_BADPEREFINSUBSET 14059L")]
        public const int ERROR_SXS_XML_E_BADPEREFINSUBSET = 14059;

        [NativeTypeName("#define ERROR_SXS_XML_E_UNCLOSEDSTARTTAG 14060L")]
        public const int ERROR_SXS_XML_E_UNCLOSEDSTARTTAG = 14060;

        [NativeTypeName("#define ERROR_SXS_XML_E_UNCLOSEDENDTAG 14061L")]
        public const int ERROR_SXS_XML_E_UNCLOSEDENDTAG = 14061;

        [NativeTypeName("#define ERROR_SXS_XML_E_UNCLOSEDSTRING 14062L")]
        public const int ERROR_SXS_XML_E_UNCLOSEDSTRING = 14062;

        [NativeTypeName("#define ERROR_SXS_XML_E_UNCLOSEDCOMMENT 14063L")]
        public const int ERROR_SXS_XML_E_UNCLOSEDCOMMENT = 14063;

        [NativeTypeName("#define ERROR_SXS_XML_E_UNCLOSEDDECL 14064L")]
        public const int ERROR_SXS_XML_E_UNCLOSEDDECL = 14064;

        [NativeTypeName("#define ERROR_SXS_XML_E_UNCLOSEDCDATA 14065L")]
        public const int ERROR_SXS_XML_E_UNCLOSEDCDATA = 14065;

        [NativeTypeName("#define ERROR_SXS_XML_E_RESERVEDNAMESPACE 14066L")]
        public const int ERROR_SXS_XML_E_RESERVEDNAMESPACE = 14066;

        [NativeTypeName("#define ERROR_SXS_XML_E_INVALIDENCODING 14067L")]
        public const int ERROR_SXS_XML_E_INVALIDENCODING = 14067;

        [NativeTypeName("#define ERROR_SXS_XML_E_INVALIDSWITCH 14068L")]
        public const int ERROR_SXS_XML_E_INVALIDSWITCH = 14068;

        [NativeTypeName("#define ERROR_SXS_XML_E_BADXMLCASE 14069L")]
        public const int ERROR_SXS_XML_E_BADXMLCASE = 14069;

        [NativeTypeName("#define ERROR_SXS_XML_E_INVALID_STANDALONE 14070L")]
        public const int ERROR_SXS_XML_E_INVALID_STANDALONE = 14070;

        [NativeTypeName("#define ERROR_SXS_XML_E_UNEXPECTED_STANDALONE 14071L")]
        public const int ERROR_SXS_XML_E_UNEXPECTED_STANDALONE = 14071;

        [NativeTypeName("#define ERROR_SXS_XML_E_INVALID_VERSION 14072L")]
        public const int ERROR_SXS_XML_E_INVALID_VERSION = 14072;

        [NativeTypeName("#define ERROR_SXS_XML_E_MISSINGEQUALS 14073L")]
        public const int ERROR_SXS_XML_E_MISSINGEQUALS = 14073;

        [NativeTypeName("#define ERROR_SXS_PROTECTION_RECOVERY_FAILED 14074L")]
        public const int ERROR_SXS_PROTECTION_RECOVERY_FAILED = 14074;

        [NativeTypeName("#define ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT 14075L")]
        public const int ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT = 14075;

        [NativeTypeName("#define ERROR_SXS_PROTECTION_CATALOG_NOT_VALID 14076L")]
        public const int ERROR_SXS_PROTECTION_CATALOG_NOT_VALID = 14076;

        [NativeTypeName("#define ERROR_SXS_UNTRANSLATABLE_HRESULT 14077L")]
        public const int ERROR_SXS_UNTRANSLATABLE_HRESULT = 14077;

        [NativeTypeName("#define ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING 14078L")]
        public const int ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING = 14078;

        [NativeTypeName("#define ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE 14079L")]
        public const int ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE = 14079;

        [NativeTypeName("#define ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME 14080L")]
        public const int ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME = 14080;

        [NativeTypeName("#define ERROR_SXS_ASSEMBLY_MISSING 14081L")]
        public const int ERROR_SXS_ASSEMBLY_MISSING = 14081;

        [NativeTypeName("#define ERROR_SXS_CORRUPT_ACTIVATION_STACK 14082L")]
        public const int ERROR_SXS_CORRUPT_ACTIVATION_STACK = 14082;

        [NativeTypeName("#define ERROR_SXS_CORRUPTION 14083L")]
        public const int ERROR_SXS_CORRUPTION = 14083;

        [NativeTypeName("#define ERROR_SXS_EARLY_DEACTIVATION 14084L")]
        public const int ERROR_SXS_EARLY_DEACTIVATION = 14084;

        [NativeTypeName("#define ERROR_SXS_INVALID_DEACTIVATION 14085L")]
        public const int ERROR_SXS_INVALID_DEACTIVATION = 14085;

        [NativeTypeName("#define ERROR_SXS_MULTIPLE_DEACTIVATION 14086L")]
        public const int ERROR_SXS_MULTIPLE_DEACTIVATION = 14086;

        [NativeTypeName("#define ERROR_SXS_PROCESS_TERMINATION_REQUESTED 14087L")]
        public const int ERROR_SXS_PROCESS_TERMINATION_REQUESTED = 14087;

        [NativeTypeName("#define ERROR_SXS_RELEASE_ACTIVATION_CONTEXT 14088L")]
        public const int ERROR_SXS_RELEASE_ACTIVATION_CONTEXT = 14088;

        [NativeTypeName("#define ERROR_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY 14089L")]
        public const int ERROR_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY = 14089;

        [NativeTypeName("#define ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE 14090L")]
        public const int ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE = 14090;

        [NativeTypeName("#define ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME 14091L")]
        public const int ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME = 14091;

        [NativeTypeName("#define ERROR_SXS_IDENTITY_DUPLICATE_ATTRIBUTE 14092L")]
        public const int ERROR_SXS_IDENTITY_DUPLICATE_ATTRIBUTE = 14092;

        [NativeTypeName("#define ERROR_SXS_IDENTITY_PARSE_ERROR 14093L")]
        public const int ERROR_SXS_IDENTITY_PARSE_ERROR = 14093;

        [NativeTypeName("#define ERROR_MALFORMED_SUBSTITUTION_STRING 14094L")]
        public const int ERROR_MALFORMED_SUBSTITUTION_STRING = 14094;

        [NativeTypeName("#define ERROR_SXS_INCORRECT_PUBLIC_KEY_TOKEN 14095L")]
        public const int ERROR_SXS_INCORRECT_PUBLIC_KEY_TOKEN = 14095;

        [NativeTypeName("#define ERROR_UNMAPPED_SUBSTITUTION_STRING 14096L")]
        public const int ERROR_UNMAPPED_SUBSTITUTION_STRING = 14096;

        [NativeTypeName("#define ERROR_SXS_ASSEMBLY_NOT_LOCKED 14097L")]
        public const int ERROR_SXS_ASSEMBLY_NOT_LOCKED = 14097;

        [NativeTypeName("#define ERROR_SXS_COMPONENT_STORE_CORRUPT 14098L")]
        public const int ERROR_SXS_COMPONENT_STORE_CORRUPT = 14098;

        [NativeTypeName("#define ERROR_ADVANCED_INSTALLER_FAILED 14099L")]
        public const int ERROR_ADVANCED_INSTALLER_FAILED = 14099;

        [NativeTypeName("#define ERROR_XML_ENCODING_MISMATCH 14100L")]
        public const int ERROR_XML_ENCODING_MISMATCH = 14100;

        [NativeTypeName("#define ERROR_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT 14101L")]
        public const int ERROR_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT = 14101;

        [NativeTypeName("#define ERROR_SXS_IDENTITIES_DIFFERENT 14102L")]
        public const int ERROR_SXS_IDENTITIES_DIFFERENT = 14102;

        [NativeTypeName("#define ERROR_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT 14103L")]
        public const int ERROR_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT = 14103;

        [NativeTypeName("#define ERROR_SXS_FILE_NOT_PART_OF_ASSEMBLY 14104L")]
        public const int ERROR_SXS_FILE_NOT_PART_OF_ASSEMBLY = 14104;

        [NativeTypeName("#define ERROR_SXS_MANIFEST_TOO_BIG 14105L")]
        public const int ERROR_SXS_MANIFEST_TOO_BIG = 14105;

        [NativeTypeName("#define ERROR_SXS_SETTING_NOT_REGISTERED 14106L")]
        public const int ERROR_SXS_SETTING_NOT_REGISTERED = 14106;

        [NativeTypeName("#define ERROR_SXS_TRANSACTION_CLOSURE_INCOMPLETE 14107L")]
        public const int ERROR_SXS_TRANSACTION_CLOSURE_INCOMPLETE = 14107;

        [NativeTypeName("#define ERROR_SMI_PRIMITIVE_INSTALLER_FAILED 14108L")]
        public const int ERROR_SMI_PRIMITIVE_INSTALLER_FAILED = 14108;

        [NativeTypeName("#define ERROR_GENERIC_COMMAND_FAILED 14109L")]
        public const int ERROR_GENERIC_COMMAND_FAILED = 14109;

        [NativeTypeName("#define ERROR_SXS_FILE_HASH_MISSING 14110L")]
        public const int ERROR_SXS_FILE_HASH_MISSING = 14110;

        [NativeTypeName("#define ERROR_SXS_DUPLICATE_ACTIVATABLE_CLASS 14111L")]
        public const int ERROR_SXS_DUPLICATE_ACTIVATABLE_CLASS = 14111;

        [NativeTypeName("#define ERROR_EVT_INVALID_CHANNEL_PATH 15000L")]
        public const int ERROR_EVT_INVALID_CHANNEL_PATH = 15000;

        [NativeTypeName("#define ERROR_EVT_INVALID_QUERY 15001L")]
        public const int ERROR_EVT_INVALID_QUERY = 15001;

        [NativeTypeName("#define ERROR_EVT_PUBLISHER_METADATA_NOT_FOUND 15002L")]
        public const int ERROR_EVT_PUBLISHER_METADATA_NOT_FOUND = 15002;

        [NativeTypeName("#define ERROR_EVT_EVENT_TEMPLATE_NOT_FOUND 15003L")]
        public const int ERROR_EVT_EVENT_TEMPLATE_NOT_FOUND = 15003;

        [NativeTypeName("#define ERROR_EVT_INVALID_PUBLISHER_NAME 15004L")]
        public const int ERROR_EVT_INVALID_PUBLISHER_NAME = 15004;

        [NativeTypeName("#define ERROR_EVT_INVALID_EVENT_DATA 15005L")]
        public const int ERROR_EVT_INVALID_EVENT_DATA = 15005;

        [NativeTypeName("#define ERROR_EVT_CHANNEL_NOT_FOUND 15007L")]
        public const int ERROR_EVT_CHANNEL_NOT_FOUND = 15007;

        [NativeTypeName("#define ERROR_EVT_MALFORMED_XML_TEXT 15008L")]
        public const int ERROR_EVT_MALFORMED_XML_TEXT = 15008;

        [NativeTypeName("#define ERROR_EVT_SUBSCRIPTION_TO_DIRECT_CHANNEL 15009L")]
        public const int ERROR_EVT_SUBSCRIPTION_TO_DIRECT_CHANNEL = 15009;

        [NativeTypeName("#define ERROR_EVT_CONFIGURATION_ERROR 15010L")]
        public const int ERROR_EVT_CONFIGURATION_ERROR = 15010;

        [NativeTypeName("#define ERROR_EVT_QUERY_RESULT_STALE 15011L")]
        public const int ERROR_EVT_QUERY_RESULT_STALE = 15011;

        [NativeTypeName("#define ERROR_EVT_QUERY_RESULT_INVALID_POSITION 15012L")]
        public const int ERROR_EVT_QUERY_RESULT_INVALID_POSITION = 15012;

        [NativeTypeName("#define ERROR_EVT_NON_VALIDATING_MSXML 15013L")]
        public const int ERROR_EVT_NON_VALIDATING_MSXML = 15013;

        [NativeTypeName("#define ERROR_EVT_FILTER_ALREADYSCOPED 15014L")]
        public const int ERROR_EVT_FILTER_ALREADYSCOPED = 15014;

        [NativeTypeName("#define ERROR_EVT_FILTER_NOTELTSET 15015L")]
        public const int ERROR_EVT_FILTER_NOTELTSET = 15015;

        [NativeTypeName("#define ERROR_EVT_FILTER_INVARG 15016L")]
        public const int ERROR_EVT_FILTER_INVARG = 15016;

        [NativeTypeName("#define ERROR_EVT_FILTER_INVTEST 15017L")]
        public const int ERROR_EVT_FILTER_INVTEST = 15017;

        [NativeTypeName("#define ERROR_EVT_FILTER_INVTYPE 15018L")]
        public const int ERROR_EVT_FILTER_INVTYPE = 15018;

        [NativeTypeName("#define ERROR_EVT_FILTER_PARSEERR 15019L")]
        public const int ERROR_EVT_FILTER_PARSEERR = 15019;

        [NativeTypeName("#define ERROR_EVT_FILTER_UNSUPPORTEDOP 15020L")]
        public const int ERROR_EVT_FILTER_UNSUPPORTEDOP = 15020;

        [NativeTypeName("#define ERROR_EVT_FILTER_UNEXPECTEDTOKEN 15021L")]
        public const int ERROR_EVT_FILTER_UNEXPECTEDTOKEN = 15021;

        [NativeTypeName("#define ERROR_EVT_INVALID_OPERATION_OVER_ENABLED_DIRECT_CHANNEL 15022L")]
        public const int ERROR_EVT_INVALID_OPERATION_OVER_ENABLED_DIRECT_CHANNEL = 15022;

        [NativeTypeName("#define ERROR_EVT_INVALID_CHANNEL_PROPERTY_VALUE 15023L")]
        public const int ERROR_EVT_INVALID_CHANNEL_PROPERTY_VALUE = 15023;

        [NativeTypeName("#define ERROR_EVT_INVALID_PUBLISHER_PROPERTY_VALUE 15024L")]
        public const int ERROR_EVT_INVALID_PUBLISHER_PROPERTY_VALUE = 15024;

        [NativeTypeName("#define ERROR_EVT_CHANNEL_CANNOT_ACTIVATE 15025L")]
        public const int ERROR_EVT_CHANNEL_CANNOT_ACTIVATE = 15025;

        [NativeTypeName("#define ERROR_EVT_FILTER_TOO_COMPLEX 15026L")]
        public const int ERROR_EVT_FILTER_TOO_COMPLEX = 15026;

        [NativeTypeName("#define ERROR_EVT_MESSAGE_NOT_FOUND 15027L")]
        public const int ERROR_EVT_MESSAGE_NOT_FOUND = 15027;

        [NativeTypeName("#define ERROR_EVT_MESSAGE_ID_NOT_FOUND 15028L")]
        public const int ERROR_EVT_MESSAGE_ID_NOT_FOUND = 15028;

        [NativeTypeName("#define ERROR_EVT_UNRESOLVED_VALUE_INSERT 15029L")]
        public const int ERROR_EVT_UNRESOLVED_VALUE_INSERT = 15029;

        [NativeTypeName("#define ERROR_EVT_UNRESOLVED_PARAMETER_INSERT 15030L")]
        public const int ERROR_EVT_UNRESOLVED_PARAMETER_INSERT = 15030;

        [NativeTypeName("#define ERROR_EVT_MAX_INSERTS_REACHED 15031L")]
        public const int ERROR_EVT_MAX_INSERTS_REACHED = 15031;

        [NativeTypeName("#define ERROR_EVT_EVENT_DEFINITION_NOT_FOUND 15032L")]
        public const int ERROR_EVT_EVENT_DEFINITION_NOT_FOUND = 15032;

        [NativeTypeName("#define ERROR_EVT_MESSAGE_LOCALE_NOT_FOUND 15033L")]
        public const int ERROR_EVT_MESSAGE_LOCALE_NOT_FOUND = 15033;

        [NativeTypeName("#define ERROR_EVT_VERSION_TOO_OLD 15034L")]
        public const int ERROR_EVT_VERSION_TOO_OLD = 15034;

        [NativeTypeName("#define ERROR_EVT_VERSION_TOO_NEW 15035L")]
        public const int ERROR_EVT_VERSION_TOO_NEW = 15035;

        [NativeTypeName("#define ERROR_EVT_CANNOT_OPEN_CHANNEL_OF_QUERY 15036L")]
        public const int ERROR_EVT_CANNOT_OPEN_CHANNEL_OF_QUERY = 15036;

        [NativeTypeName("#define ERROR_EVT_PUBLISHER_DISABLED 15037L")]
        public const int ERROR_EVT_PUBLISHER_DISABLED = 15037;

        [NativeTypeName("#define ERROR_EVT_FILTER_OUT_OF_RANGE 15038L")]
        public const int ERROR_EVT_FILTER_OUT_OF_RANGE = 15038;

        [NativeTypeName("#define ERROR_EC_SUBSCRIPTION_CANNOT_ACTIVATE 15080L")]
        public const int ERROR_EC_SUBSCRIPTION_CANNOT_ACTIVATE = 15080;

        [NativeTypeName("#define ERROR_EC_LOG_DISABLED 15081L")]
        public const int ERROR_EC_LOG_DISABLED = 15081;

        [NativeTypeName("#define ERROR_EC_CIRCULAR_FORWARDING 15082L")]
        public const int ERROR_EC_CIRCULAR_FORWARDING = 15082;

        [NativeTypeName("#define ERROR_EC_CREDSTORE_FULL 15083L")]
        public const int ERROR_EC_CREDSTORE_FULL = 15083;

        [NativeTypeName("#define ERROR_EC_CRED_NOT_FOUND 15084L")]
        public const int ERROR_EC_CRED_NOT_FOUND = 15084;

        [NativeTypeName("#define ERROR_EC_NO_ACTIVE_CHANNEL 15085L")]
        public const int ERROR_EC_NO_ACTIVE_CHANNEL = 15085;

        [NativeTypeName("#define ERROR_MUI_FILE_NOT_FOUND 15100L")]
        public const int ERROR_MUI_FILE_NOT_FOUND = 15100;

        [NativeTypeName("#define ERROR_MUI_INVALID_FILE 15101L")]
        public const int ERROR_MUI_INVALID_FILE = 15101;

        [NativeTypeName("#define ERROR_MUI_INVALID_RC_CONFIG 15102L")]
        public const int ERROR_MUI_INVALID_RC_CONFIG = 15102;

        [NativeTypeName("#define ERROR_MUI_INVALID_LOCALE_NAME 15103L")]
        public const int ERROR_MUI_INVALID_LOCALE_NAME = 15103;

        [NativeTypeName("#define ERROR_MUI_INVALID_ULTIMATEFALLBACK_NAME 15104L")]
        public const int ERROR_MUI_INVALID_ULTIMATEFALLBACK_NAME = 15104;

        [NativeTypeName("#define ERROR_MUI_FILE_NOT_LOADED 15105L")]
        public const int ERROR_MUI_FILE_NOT_LOADED = 15105;

        [NativeTypeName("#define ERROR_RESOURCE_ENUM_USER_STOP 15106L")]
        public const int ERROR_RESOURCE_ENUM_USER_STOP = 15106;

        [NativeTypeName("#define ERROR_MUI_INTLSETTINGS_UILANG_NOT_INSTALLED 15107L")]
        public const int ERROR_MUI_INTLSETTINGS_UILANG_NOT_INSTALLED = 15107;

        [NativeTypeName("#define ERROR_MUI_INTLSETTINGS_INVALID_LOCALE_NAME 15108L")]
        public const int ERROR_MUI_INTLSETTINGS_INVALID_LOCALE_NAME = 15108;

        [NativeTypeName("#define ERROR_MRM_RUNTIME_NO_DEFAULT_OR_NEUTRAL_RESOURCE 15110L")]
        public const int ERROR_MRM_RUNTIME_NO_DEFAULT_OR_NEUTRAL_RESOURCE = 15110;

        [NativeTypeName("#define ERROR_MRM_INVALID_PRICONFIG 15111L")]
        public const int ERROR_MRM_INVALID_PRICONFIG = 15111;

        [NativeTypeName("#define ERROR_MRM_INVALID_FILE_TYPE 15112L")]
        public const int ERROR_MRM_INVALID_FILE_TYPE = 15112;

        [NativeTypeName("#define ERROR_MRM_UNKNOWN_QUALIFIER 15113L")]
        public const int ERROR_MRM_UNKNOWN_QUALIFIER = 15113;

        [NativeTypeName("#define ERROR_MRM_INVALID_QUALIFIER_VALUE 15114L")]
        public const int ERROR_MRM_INVALID_QUALIFIER_VALUE = 15114;

        [NativeTypeName("#define ERROR_MRM_NO_CANDIDATE 15115L")]
        public const int ERROR_MRM_NO_CANDIDATE = 15115;

        [NativeTypeName("#define ERROR_MRM_NO_MATCH_OR_DEFAULT_CANDIDATE 15116L")]
        public const int ERROR_MRM_NO_MATCH_OR_DEFAULT_CANDIDATE = 15116;

        [NativeTypeName("#define ERROR_MRM_RESOURCE_TYPE_MISMATCH 15117L")]
        public const int ERROR_MRM_RESOURCE_TYPE_MISMATCH = 15117;

        [NativeTypeName("#define ERROR_MRM_DUPLICATE_MAP_NAME 15118L")]
        public const int ERROR_MRM_DUPLICATE_MAP_NAME = 15118;

        [NativeTypeName("#define ERROR_MRM_DUPLICATE_ENTRY 15119L")]
        public const int ERROR_MRM_DUPLICATE_ENTRY = 15119;

        [NativeTypeName("#define ERROR_MRM_INVALID_RESOURCE_IDENTIFIER 15120L")]
        public const int ERROR_MRM_INVALID_RESOURCE_IDENTIFIER = 15120;

        [NativeTypeName("#define ERROR_MRM_FILEPATH_TOO_LONG 15121L")]
        public const int ERROR_MRM_FILEPATH_TOO_LONG = 15121;

        [NativeTypeName("#define ERROR_MRM_UNSUPPORTED_DIRECTORY_TYPE 15122L")]
        public const int ERROR_MRM_UNSUPPORTED_DIRECTORY_TYPE = 15122;

        [NativeTypeName("#define ERROR_MRM_INVALID_PRI_FILE 15126L")]
        public const int ERROR_MRM_INVALID_PRI_FILE = 15126;

        [NativeTypeName("#define ERROR_MRM_NAMED_RESOURCE_NOT_FOUND 15127L")]
        public const int ERROR_MRM_NAMED_RESOURCE_NOT_FOUND = 15127;

        [NativeTypeName("#define ERROR_MRM_MAP_NOT_FOUND 15135L")]
        public const int ERROR_MRM_MAP_NOT_FOUND = 15135;

        [NativeTypeName("#define ERROR_MRM_UNSUPPORTED_PROFILE_TYPE 15136L")]
        public const int ERROR_MRM_UNSUPPORTED_PROFILE_TYPE = 15136;

        [NativeTypeName("#define ERROR_MRM_INVALID_QUALIFIER_OPERATOR 15137L")]
        public const int ERROR_MRM_INVALID_QUALIFIER_OPERATOR = 15137;

        [NativeTypeName("#define ERROR_MRM_INDETERMINATE_QUALIFIER_VALUE 15138L")]
        public const int ERROR_MRM_INDETERMINATE_QUALIFIER_VALUE = 15138;

        [NativeTypeName("#define ERROR_MRM_AUTOMERGE_ENABLED 15139L")]
        public const int ERROR_MRM_AUTOMERGE_ENABLED = 15139;

        [NativeTypeName("#define ERROR_MRM_TOO_MANY_RESOURCES 15140L")]
        public const int ERROR_MRM_TOO_MANY_RESOURCES = 15140;

        [NativeTypeName("#define ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_MERGE 15141L")]
        public const int ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_MERGE = 15141;

        [NativeTypeName("#define ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_LOAD_UNLOAD_PRI_FILE 15142L")]
        public const int ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_LOAD_UNLOAD_PRI_FILE = 15142;

        [NativeTypeName("#define ERROR_MRM_NO_CURRENT_VIEW_ON_THREAD 15143L")]
        public const int ERROR_MRM_NO_CURRENT_VIEW_ON_THREAD = 15143;

        [NativeTypeName("#define ERROR_DIFFERENT_PROFILE_RESOURCE_MANAGER_EXIST 15144L")]
        public const int ERROR_DIFFERENT_PROFILE_RESOURCE_MANAGER_EXIST = 15144;

        [NativeTypeName("#define ERROR_OPERATION_NOT_ALLOWED_FROM_SYSTEM_COMPONENT 15145L")]
        public const int ERROR_OPERATION_NOT_ALLOWED_FROM_SYSTEM_COMPONENT = 15145;

        [NativeTypeName("#define ERROR_MRM_DIRECT_REF_TO_NON_DEFAULT_RESOURCE 15146L")]
        public const int ERROR_MRM_DIRECT_REF_TO_NON_DEFAULT_RESOURCE = 15146;

        [NativeTypeName("#define ERROR_MRM_GENERATION_COUNT_MISMATCH 15147L")]
        public const int ERROR_MRM_GENERATION_COUNT_MISMATCH = 15147;

        [NativeTypeName("#define ERROR_PRI_MERGE_VERSION_MISMATCH 15148L")]
        public const int ERROR_PRI_MERGE_VERSION_MISMATCH = 15148;

        [NativeTypeName("#define ERROR_PRI_MERGE_MISSING_SCHEMA 15149L")]
        public const int ERROR_PRI_MERGE_MISSING_SCHEMA = 15149;

        [NativeTypeName("#define ERROR_PRI_MERGE_LOAD_FILE_FAILED 15150L")]
        public const int ERROR_PRI_MERGE_LOAD_FILE_FAILED = 15150;

        [NativeTypeName("#define ERROR_PRI_MERGE_ADD_FILE_FAILED 15151L")]
        public const int ERROR_PRI_MERGE_ADD_FILE_FAILED = 15151;

        [NativeTypeName("#define ERROR_PRI_MERGE_WRITE_FILE_FAILED 15152L")]
        public const int ERROR_PRI_MERGE_WRITE_FILE_FAILED = 15152;

        [NativeTypeName("#define ERROR_PRI_MERGE_MULTIPLE_PACKAGE_FAMILIES_NOT_ALLOWED 15153L")]
        public const int ERROR_PRI_MERGE_MULTIPLE_PACKAGE_FAMILIES_NOT_ALLOWED = 15153;

        [NativeTypeName("#define ERROR_PRI_MERGE_MULTIPLE_MAIN_PACKAGES_NOT_ALLOWED 15154L")]
        public const int ERROR_PRI_MERGE_MULTIPLE_MAIN_PACKAGES_NOT_ALLOWED = 15154;

        [NativeTypeName("#define ERROR_PRI_MERGE_BUNDLE_PACKAGES_NOT_ALLOWED 15155L")]
        public const int ERROR_PRI_MERGE_BUNDLE_PACKAGES_NOT_ALLOWED = 15155;

        [NativeTypeName("#define ERROR_PRI_MERGE_MAIN_PACKAGE_REQUIRED 15156L")]
        public const int ERROR_PRI_MERGE_MAIN_PACKAGE_REQUIRED = 15156;

        [NativeTypeName("#define ERROR_PRI_MERGE_RESOURCE_PACKAGE_REQUIRED 15157L")]
        public const int ERROR_PRI_MERGE_RESOURCE_PACKAGE_REQUIRED = 15157;

        [NativeTypeName("#define ERROR_PRI_MERGE_INVALID_FILE_NAME 15158L")]
        public const int ERROR_PRI_MERGE_INVALID_FILE_NAME = 15158;

        [NativeTypeName("#define ERROR_MRM_PACKAGE_NOT_FOUND 15159L")]
        public const int ERROR_MRM_PACKAGE_NOT_FOUND = 15159;

        [NativeTypeName("#define ERROR_MRM_MISSING_DEFAULT_LANGUAGE 15160L")]
        public const int ERROR_MRM_MISSING_DEFAULT_LANGUAGE = 15160;

        [NativeTypeName("#define ERROR_MCA_INVALID_CAPABILITIES_STRING 15200L")]
        public const int ERROR_MCA_INVALID_CAPABILITIES_STRING = 15200;

        [NativeTypeName("#define ERROR_MCA_INVALID_VCP_VERSION 15201L")]
        public const int ERROR_MCA_INVALID_VCP_VERSION = 15201;

        [NativeTypeName("#define ERROR_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION 15202L")]
        public const int ERROR_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION = 15202;

        [NativeTypeName("#define ERROR_MCA_MCCS_VERSION_MISMATCH 15203L")]
        public const int ERROR_MCA_MCCS_VERSION_MISMATCH = 15203;

        [NativeTypeName("#define ERROR_MCA_UNSUPPORTED_MCCS_VERSION 15204L")]
        public const int ERROR_MCA_UNSUPPORTED_MCCS_VERSION = 15204;

        [NativeTypeName("#define ERROR_MCA_INTERNAL_ERROR 15205L")]
        public const int ERROR_MCA_INTERNAL_ERROR = 15205;

        [NativeTypeName("#define ERROR_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED 15206L")]
        public const int ERROR_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED = 15206;

        [NativeTypeName("#define ERROR_MCA_UNSUPPORTED_COLOR_TEMPERATURE 15207L")]
        public const int ERROR_MCA_UNSUPPORTED_COLOR_TEMPERATURE = 15207;

        [NativeTypeName("#define ERROR_AMBIGUOUS_SYSTEM_DEVICE 15250L")]
        public const int ERROR_AMBIGUOUS_SYSTEM_DEVICE = 15250;

        [NativeTypeName("#define ERROR_SYSTEM_DEVICE_NOT_FOUND 15299L")]
        public const int ERROR_SYSTEM_DEVICE_NOT_FOUND = 15299;

        [NativeTypeName("#define ERROR_HASH_NOT_SUPPORTED 15300L")]
        public const int ERROR_HASH_NOT_SUPPORTED = 15300;

        [NativeTypeName("#define ERROR_HASH_NOT_PRESENT 15301L")]
        public const int ERROR_HASH_NOT_PRESENT = 15301;

        [NativeTypeName("#define ERROR_SECONDARY_IC_PROVIDER_NOT_REGISTERED 15321L")]
        public const int ERROR_SECONDARY_IC_PROVIDER_NOT_REGISTERED = 15321;

        [NativeTypeName("#define ERROR_GPIO_CLIENT_INFORMATION_INVALID 15322L")]
        public const int ERROR_GPIO_CLIENT_INFORMATION_INVALID = 15322;

        [NativeTypeName("#define ERROR_GPIO_VERSION_NOT_SUPPORTED 15323L")]
        public const int ERROR_GPIO_VERSION_NOT_SUPPORTED = 15323;

        [NativeTypeName("#define ERROR_GPIO_INVALID_REGISTRATION_PACKET 15324L")]
        public const int ERROR_GPIO_INVALID_REGISTRATION_PACKET = 15324;

        [NativeTypeName("#define ERROR_GPIO_OPERATION_DENIED 15325L")]
        public const int ERROR_GPIO_OPERATION_DENIED = 15325;

        [NativeTypeName("#define ERROR_GPIO_INCOMPATIBLE_CONNECT_MODE 15326L")]
        public const int ERROR_GPIO_INCOMPATIBLE_CONNECT_MODE = 15326;

        [NativeTypeName("#define ERROR_GPIO_INTERRUPT_ALREADY_UNMASKED 15327L")]
        public const int ERROR_GPIO_INTERRUPT_ALREADY_UNMASKED = 15327;

        [NativeTypeName("#define ERROR_CANNOT_SWITCH_RUNLEVEL 15400L")]
        public const int ERROR_CANNOT_SWITCH_RUNLEVEL = 15400;

        [NativeTypeName("#define ERROR_INVALID_RUNLEVEL_SETTING 15401L")]
        public const int ERROR_INVALID_RUNLEVEL_SETTING = 15401;

        [NativeTypeName("#define ERROR_RUNLEVEL_SWITCH_TIMEOUT 15402L")]
        public const int ERROR_RUNLEVEL_SWITCH_TIMEOUT = 15402;

        [NativeTypeName("#define ERROR_RUNLEVEL_SWITCH_AGENT_TIMEOUT 15403L")]
        public const int ERROR_RUNLEVEL_SWITCH_AGENT_TIMEOUT = 15403;

        [NativeTypeName("#define ERROR_RUNLEVEL_SWITCH_IN_PROGRESS 15404L")]
        public const int ERROR_RUNLEVEL_SWITCH_IN_PROGRESS = 15404;

        [NativeTypeName("#define ERROR_SERVICES_FAILED_AUTOSTART 15405L")]
        public const int ERROR_SERVICES_FAILED_AUTOSTART = 15405;

        [NativeTypeName("#define ERROR_COM_TASK_STOP_PENDING 15501L")]
        public const int ERROR_COM_TASK_STOP_PENDING = 15501;

        [NativeTypeName("#define ERROR_INSTALL_OPEN_PACKAGE_FAILED 15600L")]
        public const int ERROR_INSTALL_OPEN_PACKAGE_FAILED = 15600;

        [NativeTypeName("#define ERROR_INSTALL_PACKAGE_NOT_FOUND 15601L")]
        public const int ERROR_INSTALL_PACKAGE_NOT_FOUND = 15601;

        [NativeTypeName("#define ERROR_INSTALL_INVALID_PACKAGE 15602L")]
        public const int ERROR_INSTALL_INVALID_PACKAGE = 15602;

        [NativeTypeName("#define ERROR_INSTALL_RESOLVE_DEPENDENCY_FAILED 15603L")]
        public const int ERROR_INSTALL_RESOLVE_DEPENDENCY_FAILED = 15603;

        [NativeTypeName("#define ERROR_INSTALL_OUT_OF_DISK_SPACE 15604L")]
        public const int ERROR_INSTALL_OUT_OF_DISK_SPACE = 15604;

        [NativeTypeName("#define ERROR_INSTALL_NETWORK_FAILURE 15605L")]
        public const int ERROR_INSTALL_NETWORK_FAILURE = 15605;

        [NativeTypeName("#define ERROR_INSTALL_REGISTRATION_FAILURE 15606L")]
        public const int ERROR_INSTALL_REGISTRATION_FAILURE = 15606;

        [NativeTypeName("#define ERROR_INSTALL_DEREGISTRATION_FAILURE 15607L")]
        public const int ERROR_INSTALL_DEREGISTRATION_FAILURE = 15607;

        [NativeTypeName("#define ERROR_INSTALL_CANCEL 15608L")]
        public const int ERROR_INSTALL_CANCEL = 15608;

        [NativeTypeName("#define ERROR_INSTALL_FAILED 15609L")]
        public const int ERROR_INSTALL_FAILED = 15609;

        [NativeTypeName("#define ERROR_REMOVE_FAILED 15610L")]
        public const int ERROR_REMOVE_FAILED = 15610;

        [NativeTypeName("#define ERROR_PACKAGE_ALREADY_EXISTS 15611L")]
        public const int ERROR_PACKAGE_ALREADY_EXISTS = 15611;

        [NativeTypeName("#define ERROR_NEEDS_REMEDIATION 15612L")]
        public const int ERROR_NEEDS_REMEDIATION = 15612;

        [NativeTypeName("#define ERROR_INSTALL_PREREQUISITE_FAILED 15613L")]
        public const int ERROR_INSTALL_PREREQUISITE_FAILED = 15613;

        [NativeTypeName("#define ERROR_PACKAGE_REPOSITORY_CORRUPTED 15614L")]
        public const int ERROR_PACKAGE_REPOSITORY_CORRUPTED = 15614;

        [NativeTypeName("#define ERROR_INSTALL_POLICY_FAILURE 15615L")]
        public const int ERROR_INSTALL_POLICY_FAILURE = 15615;

        [NativeTypeName("#define ERROR_PACKAGE_UPDATING 15616L")]
        public const int ERROR_PACKAGE_UPDATING = 15616;

        [NativeTypeName("#define ERROR_DEPLOYMENT_BLOCKED_BY_POLICY 15617L")]
        public const int ERROR_DEPLOYMENT_BLOCKED_BY_POLICY = 15617;

        [NativeTypeName("#define ERROR_PACKAGES_IN_USE 15618L")]
        public const int ERROR_PACKAGES_IN_USE = 15618;

        [NativeTypeName("#define ERROR_RECOVERY_FILE_CORRUPT 15619L")]
        public const int ERROR_RECOVERY_FILE_CORRUPT = 15619;

        [NativeTypeName("#define ERROR_INVALID_STAGED_SIGNATURE 15620L")]
        public const int ERROR_INVALID_STAGED_SIGNATURE = 15620;

        [NativeTypeName("#define ERROR_DELETING_EXISTING_APPLICATIONDATA_STORE_FAILED 15621L")]
        public const int ERROR_DELETING_EXISTING_APPLICATIONDATA_STORE_FAILED = 15621;

        [NativeTypeName("#define ERROR_INSTALL_PACKAGE_DOWNGRADE 15622L")]
        public const int ERROR_INSTALL_PACKAGE_DOWNGRADE = 15622;

        [NativeTypeName("#define ERROR_SYSTEM_NEEDS_REMEDIATION 15623L")]
        public const int ERROR_SYSTEM_NEEDS_REMEDIATION = 15623;

        [NativeTypeName("#define ERROR_APPX_INTEGRITY_FAILURE_CLR_NGEN 15624L")]
        public const int ERROR_APPX_INTEGRITY_FAILURE_CLR_NGEN = 15624;

        [NativeTypeName("#define ERROR_RESILIENCY_FILE_CORRUPT 15625L")]
        public const int ERROR_RESILIENCY_FILE_CORRUPT = 15625;

        [NativeTypeName("#define ERROR_INSTALL_FIREWALL_SERVICE_NOT_RUNNING 15626L")]
        public const int ERROR_INSTALL_FIREWALL_SERVICE_NOT_RUNNING = 15626;

        [NativeTypeName("#define ERROR_PACKAGE_MOVE_FAILED 15627L")]
        public const int ERROR_PACKAGE_MOVE_FAILED = 15627;

        [NativeTypeName("#define ERROR_INSTALL_VOLUME_NOT_EMPTY 15628L")]
        public const int ERROR_INSTALL_VOLUME_NOT_EMPTY = 15628;

        [NativeTypeName("#define ERROR_INSTALL_VOLUME_OFFLINE 15629L")]
        public const int ERROR_INSTALL_VOLUME_OFFLINE = 15629;

        [NativeTypeName("#define ERROR_INSTALL_VOLUME_CORRUPT 15630L")]
        public const int ERROR_INSTALL_VOLUME_CORRUPT = 15630;

        [NativeTypeName("#define ERROR_NEEDS_REGISTRATION 15631L")]
        public const int ERROR_NEEDS_REGISTRATION = 15631;

        [NativeTypeName("#define ERROR_INSTALL_WRONG_PROCESSOR_ARCHITECTURE 15632L")]
        public const int ERROR_INSTALL_WRONG_PROCESSOR_ARCHITECTURE = 15632;

        [NativeTypeName("#define ERROR_DEV_SIDELOAD_LIMIT_EXCEEDED 15633L")]
        public const int ERROR_DEV_SIDELOAD_LIMIT_EXCEEDED = 15633;

        [NativeTypeName("#define ERROR_INSTALL_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE 15634L")]
        public const int ERROR_INSTALL_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE = 15634;

        [NativeTypeName("#define ERROR_PACKAGE_NOT_SUPPORTED_ON_FILESYSTEM 15635L")]
        public const int ERROR_PACKAGE_NOT_SUPPORTED_ON_FILESYSTEM = 15635;

        [NativeTypeName("#define ERROR_PACKAGE_MOVE_BLOCKED_BY_STREAMING 15636L")]
        public const int ERROR_PACKAGE_MOVE_BLOCKED_BY_STREAMING = 15636;

        [NativeTypeName("#define ERROR_INSTALL_OPTIONAL_PACKAGE_APPLICATIONID_NOT_UNIQUE 15637L")]
        public const int ERROR_INSTALL_OPTIONAL_PACKAGE_APPLICATIONID_NOT_UNIQUE = 15637;

        [NativeTypeName("#define ERROR_PACKAGE_STAGING_ONHOLD 15638L")]
        public const int ERROR_PACKAGE_STAGING_ONHOLD = 15638;

        [NativeTypeName("#define ERROR_INSTALL_INVALID_RELATED_SET_UPDATE 15639L")]
        public const int ERROR_INSTALL_INVALID_RELATED_SET_UPDATE = 15639;

        [NativeTypeName("#define ERROR_INSTALL_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE_FULLTRUST_CAPABILITY 15640L")]
        public const int ERROR_INSTALL_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE_FULLTRUST_CAPABILITY = 15640;

        [NativeTypeName("#define ERROR_DEPLOYMENT_BLOCKED_BY_USER_LOG_OFF 15641L")]
        public const int ERROR_DEPLOYMENT_BLOCKED_BY_USER_LOG_OFF = 15641;

        [NativeTypeName("#define ERROR_PROVISION_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE_PROVISIONED 15642L")]
        public const int ERROR_PROVISION_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE_PROVISIONED = 15642;

        [NativeTypeName("#define ERROR_PACKAGES_REPUTATION_CHECK_FAILED 15643L")]
        public const int ERROR_PACKAGES_REPUTATION_CHECK_FAILED = 15643;

        [NativeTypeName("#define ERROR_PACKAGES_REPUTATION_CHECK_TIMEDOUT 15644L")]
        public const int ERROR_PACKAGES_REPUTATION_CHECK_TIMEDOUT = 15644;

        [NativeTypeName("#define ERROR_DEPLOYMENT_OPTION_NOT_SUPPORTED 15645L")]
        public const int ERROR_DEPLOYMENT_OPTION_NOT_SUPPORTED = 15645;

        [NativeTypeName("#define ERROR_APPINSTALLER_ACTIVATION_BLOCKED 15646L")]
        public const int ERROR_APPINSTALLER_ACTIVATION_BLOCKED = 15646;

        [NativeTypeName("#define ERROR_REGISTRATION_FROM_REMOTE_DRIVE_NOT_SUPPORTED 15647L")]
        public const int ERROR_REGISTRATION_FROM_REMOTE_DRIVE_NOT_SUPPORTED = 15647;

        [NativeTypeName("#define ERROR_APPX_RAW_DATA_WRITE_FAILED 15648L")]
        public const int ERROR_APPX_RAW_DATA_WRITE_FAILED = 15648;

        [NativeTypeName("#define ERROR_DEPLOYMENT_BLOCKED_BY_VOLUME_POLICY_PACKAGE 15649L")]
        public const int ERROR_DEPLOYMENT_BLOCKED_BY_VOLUME_POLICY_PACKAGE = 15649;

        [NativeTypeName("#define ERROR_DEPLOYMENT_BLOCKED_BY_VOLUME_POLICY_MACHINE 15650L")]
        public const int ERROR_DEPLOYMENT_BLOCKED_BY_VOLUME_POLICY_MACHINE = 15650;

        [NativeTypeName("#define ERROR_DEPLOYMENT_BLOCKED_BY_PROFILE_POLICY 15651L")]
        public const int ERROR_DEPLOYMENT_BLOCKED_BY_PROFILE_POLICY = 15651;

        [NativeTypeName("#define ERROR_DEPLOYMENT_FAILED_CONFLICTING_MUTABLE_PACKAGE_DIRECTORY 15652L")]
        public const int ERROR_DEPLOYMENT_FAILED_CONFLICTING_MUTABLE_PACKAGE_DIRECTORY = 15652;

        [NativeTypeName("#define ERROR_SINGLETON_RESOURCE_INSTALLED_IN_ACTIVE_USER 15653L")]
        public const int ERROR_SINGLETON_RESOURCE_INSTALLED_IN_ACTIVE_USER = 15653;

        [NativeTypeName("#define ERROR_DIFFERENT_VERSION_OF_PACKAGED_SERVICE_INSTALLED 15654L")]
        public const int ERROR_DIFFERENT_VERSION_OF_PACKAGED_SERVICE_INSTALLED = 15654;

        [NativeTypeName("#define ERROR_SERVICE_EXISTS_AS_NON_PACKAGED_SERVICE 15655L")]
        public const int ERROR_SERVICE_EXISTS_AS_NON_PACKAGED_SERVICE = 15655;

        [NativeTypeName("#define ERROR_PACKAGED_SERVICE_REQUIRES_ADMIN_PRIVILEGES 15656L")]
        public const int ERROR_PACKAGED_SERVICE_REQUIRES_ADMIN_PRIVILEGES = 15656;

        [NativeTypeName("#define ERROR_REDIRECTION_TO_DEFAULT_ACCOUNT_NOT_ALLOWED 15657L")]
        public const int ERROR_REDIRECTION_TO_DEFAULT_ACCOUNT_NOT_ALLOWED = 15657;

        [NativeTypeName("#define ERROR_PACKAGE_LACKS_CAPABILITY_TO_DEPLOY_ON_HOST 15658L")]
        public const int ERROR_PACKAGE_LACKS_CAPABILITY_TO_DEPLOY_ON_HOST = 15658;

        [NativeTypeName("#define ERROR_UNSIGNED_PACKAGE_INVALID_CONTENT 15659L")]
        public const int ERROR_UNSIGNED_PACKAGE_INVALID_CONTENT = 15659;

        [NativeTypeName("#define ERROR_UNSIGNED_PACKAGE_INVALID_PUBLISHER_NAMESPACE 15660L")]
        public const int ERROR_UNSIGNED_PACKAGE_INVALID_PUBLISHER_NAMESPACE = 15660;

        [NativeTypeName("#define ERROR_SIGNED_PACKAGE_INVALID_PUBLISHER_NAMESPACE 15661L")]
        public const int ERROR_SIGNED_PACKAGE_INVALID_PUBLISHER_NAMESPACE = 15661;

        [NativeTypeName("#define ERROR_PACKAGE_EXTERNAL_LOCATION_NOT_ALLOWED 15662L")]
        public const int ERROR_PACKAGE_EXTERNAL_LOCATION_NOT_ALLOWED = 15662;

        [NativeTypeName("#define ERROR_INSTALL_FULLTRUST_HOSTRUNTIME_REQUIRES_MAIN_PACKAGE_FULLTRUST_CAPABILITY 15663L")]
        public const int ERROR_INSTALL_FULLTRUST_HOSTRUNTIME_REQUIRES_MAIN_PACKAGE_FULLTRUST_CAPABILITY = 15663;

        [NativeTypeName("#define APPMODEL_ERROR_NO_PACKAGE 15700L")]
        public const int APPMODEL_ERROR_NO_PACKAGE = 15700;

        [NativeTypeName("#define APPMODEL_ERROR_PACKAGE_RUNTIME_CORRUPT 15701L")]
        public const int APPMODEL_ERROR_PACKAGE_RUNTIME_CORRUPT = 15701;

        [NativeTypeName("#define APPMODEL_ERROR_PACKAGE_IDENTITY_CORRUPT 15702L")]
        public const int APPMODEL_ERROR_PACKAGE_IDENTITY_CORRUPT = 15702;

        [NativeTypeName("#define APPMODEL_ERROR_NO_APPLICATION 15703L")]
        public const int APPMODEL_ERROR_NO_APPLICATION = 15703;

        [NativeTypeName("#define APPMODEL_ERROR_DYNAMIC_PROPERTY_READ_FAILED 15704L")]
        public const int APPMODEL_ERROR_DYNAMIC_PROPERTY_READ_FAILED = 15704;

        [NativeTypeName("#define APPMODEL_ERROR_DYNAMIC_PROPERTY_INVALID 15705L")]
        public const int APPMODEL_ERROR_DYNAMIC_PROPERTY_INVALID = 15705;

        [NativeTypeName("#define APPMODEL_ERROR_PACKAGE_NOT_AVAILABLE 15706L")]
        public const int APPMODEL_ERROR_PACKAGE_NOT_AVAILABLE = 15706;

        [NativeTypeName("#define APPMODEL_ERROR_NO_MUTABLE_DIRECTORY 15707L")]
        public const int APPMODEL_ERROR_NO_MUTABLE_DIRECTORY = 15707;

        [NativeTypeName("#define ERROR_STATE_LOAD_STORE_FAILED 15800L")]
        public const int ERROR_STATE_LOAD_STORE_FAILED = 15800;

        [NativeTypeName("#define ERROR_STATE_GET_VERSION_FAILED 15801L")]
        public const int ERROR_STATE_GET_VERSION_FAILED = 15801;

        [NativeTypeName("#define ERROR_STATE_SET_VERSION_FAILED 15802L")]
        public const int ERROR_STATE_SET_VERSION_FAILED = 15802;

        [NativeTypeName("#define ERROR_STATE_STRUCTURED_RESET_FAILED 15803L")]
        public const int ERROR_STATE_STRUCTURED_RESET_FAILED = 15803;

        [NativeTypeName("#define ERROR_STATE_OPEN_CONTAINER_FAILED 15804L")]
        public const int ERROR_STATE_OPEN_CONTAINER_FAILED = 15804;

        [NativeTypeName("#define ERROR_STATE_CREATE_CONTAINER_FAILED 15805L")]
        public const int ERROR_STATE_CREATE_CONTAINER_FAILED = 15805;

        [NativeTypeName("#define ERROR_STATE_DELETE_CONTAINER_FAILED 15806L")]
        public const int ERROR_STATE_DELETE_CONTAINER_FAILED = 15806;

        [NativeTypeName("#define ERROR_STATE_READ_SETTING_FAILED 15807L")]
        public const int ERROR_STATE_READ_SETTING_FAILED = 15807;

        [NativeTypeName("#define ERROR_STATE_WRITE_SETTING_FAILED 15808L")]
        public const int ERROR_STATE_WRITE_SETTING_FAILED = 15808;

        [NativeTypeName("#define ERROR_STATE_DELETE_SETTING_FAILED 15809L")]
        public const int ERROR_STATE_DELETE_SETTING_FAILED = 15809;

        [NativeTypeName("#define ERROR_STATE_QUERY_SETTING_FAILED 15810L")]
        public const int ERROR_STATE_QUERY_SETTING_FAILED = 15810;

        [NativeTypeName("#define ERROR_STATE_READ_COMPOSITE_SETTING_FAILED 15811L")]
        public const int ERROR_STATE_READ_COMPOSITE_SETTING_FAILED = 15811;

        [NativeTypeName("#define ERROR_STATE_WRITE_COMPOSITE_SETTING_FAILED 15812L")]
        public const int ERROR_STATE_WRITE_COMPOSITE_SETTING_FAILED = 15812;

        [NativeTypeName("#define ERROR_STATE_ENUMERATE_CONTAINER_FAILED 15813L")]
        public const int ERROR_STATE_ENUMERATE_CONTAINER_FAILED = 15813;

        [NativeTypeName("#define ERROR_STATE_ENUMERATE_SETTINGS_FAILED 15814L")]
        public const int ERROR_STATE_ENUMERATE_SETTINGS_FAILED = 15814;

        [NativeTypeName("#define ERROR_STATE_COMPOSITE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED 15815L")]
        public const int ERROR_STATE_COMPOSITE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED = 15815;

        [NativeTypeName("#define ERROR_STATE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED 15816L")]
        public const int ERROR_STATE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED = 15816;

        [NativeTypeName("#define ERROR_STATE_SETTING_NAME_SIZE_LIMIT_EXCEEDED 15817L")]
        public const int ERROR_STATE_SETTING_NAME_SIZE_LIMIT_EXCEEDED = 15817;

        [NativeTypeName("#define ERROR_STATE_CONTAINER_NAME_SIZE_LIMIT_EXCEEDED 15818L")]
        public const int ERROR_STATE_CONTAINER_NAME_SIZE_LIMIT_EXCEEDED = 15818;

        [NativeTypeName("#define ERROR_API_UNAVAILABLE 15841L")]
        public const int ERROR_API_UNAVAILABLE = 15841;

        [NativeTypeName("#define STORE_ERROR_UNLICENSED 15861L")]
        public const int STORE_ERROR_UNLICENSED = 15861;

        [NativeTypeName("#define STORE_ERROR_UNLICENSED_USER 15862L")]
        public const int STORE_ERROR_UNLICENSED_USER = 15862;

        [NativeTypeName("#define STORE_ERROR_PENDING_COM_TRANSACTION 15863L")]
        public const int STORE_ERROR_PENDING_COM_TRANSACTION = 15863;

        [NativeTypeName("#define STORE_ERROR_LICENSE_REVOKED 15864L")]
        public const int STORE_ERROR_LICENSE_REVOKED = 15864;
#endif

        [NativeTypeName("#define SEVERITY_SUCCESS 0")]
        public const int SEVERITY_SUCCESS = 0;

        [NativeTypeName("#define SEVERITY_ERROR 1")]
        public const int SEVERITY_ERROR = 1;

        [NativeTypeName("#define FACILITY_NT_BIT 0x10000000")]
        public const int FACILITY_NT_BIT = 0x10000000;

        [NativeTypeName("#define NOERROR 0")]
        public const int NOERROR = 0;

        [NativeTypeName("#define E_UNEXPECTED _HRESULT_TYPEDEF_(0x8000FFFFL)")]
        public const int E_UNEXPECTED = unchecked((int)(0x8000FFFF));

        [NativeTypeName("#define E_NOTIMPL _HRESULT_TYPEDEF_(0x80004001L)")]
        public const int E_NOTIMPL = unchecked((int)(0x80004001));

        [NativeTypeName("#define E_OUTOFMEMORY _HRESULT_TYPEDEF_(0x8007000EL)")]
        public const int E_OUTOFMEMORY = unchecked((int)(0x8007000E));

        [NativeTypeName("#define E_INVALIDARG _HRESULT_TYPEDEF_(0x80070057L)")]
        public const int E_INVALIDARG = unchecked((int)(0x80070057));

        [NativeTypeName("#define E_NOINTERFACE _HRESULT_TYPEDEF_(0x80004002L)")]
        public const int E_NOINTERFACE = unchecked((int)(0x80004002));

        [NativeTypeName("#define E_POINTER _HRESULT_TYPEDEF_(0x80004003L)")]
        public const int E_POINTER = unchecked((int)(0x80004003));

        [NativeTypeName("#define E_HANDLE _HRESULT_TYPEDEF_(0x80070006L)")]
        public const int E_HANDLE = unchecked((int)(0x80070006));

        [NativeTypeName("#define E_ABORT _HRESULT_TYPEDEF_(0x80004004L)")]
        public const int E_ABORT = unchecked((int)(0x80004004));

        [NativeTypeName("#define E_FAIL _HRESULT_TYPEDEF_(0x80004005L)")]
        public const int E_FAIL = unchecked((int)(0x80004005));

#if false
        [NativeTypeName("#define E_ACCESSDENIED _HRESULT_TYPEDEF_(0x80070005L)")]
        public const int E_ACCESSDENIED = unchecked((int)(0x80070005));

        [NativeTypeName("#define E_PENDING _HRESULT_TYPEDEF_(0x8000000AL)")]
        public const int E_PENDING = unchecked((int)(0x8000000A));

        [NativeTypeName("#define E_BOUNDS _HRESULT_TYPEDEF_(0x8000000BL)")]
        public const int E_BOUNDS = unchecked((int)(0x8000000B));

        [NativeTypeName("#define E_CHANGED_STATE _HRESULT_TYPEDEF_(0x8000000CL)")]
        public const int E_CHANGED_STATE = unchecked((int)(0x8000000C));

        [NativeTypeName("#define E_ILLEGAL_STATE_CHANGE _HRESULT_TYPEDEF_(0x8000000DL)")]
        public const int E_ILLEGAL_STATE_CHANGE = unchecked((int)(0x8000000D));

        [NativeTypeName("#define E_ILLEGAL_METHOD_CALL _HRESULT_TYPEDEF_(0x8000000EL)")]
        public const int E_ILLEGAL_METHOD_CALL = unchecked((int)(0x8000000E));

        [NativeTypeName("#define RO_E_METADATA_NAME_NOT_FOUND _HRESULT_TYPEDEF_(0x8000000FL)")]
        public const int RO_E_METADATA_NAME_NOT_FOUND = unchecked((int)(0x8000000F));

        [NativeTypeName("#define RO_E_METADATA_NAME_IS_NAMESPACE _HRESULT_TYPEDEF_(0x80000010L)")]
        public const int RO_E_METADATA_NAME_IS_NAMESPACE = unchecked((int)(0x80000010));

        [NativeTypeName("#define RO_E_METADATA_INVALID_TYPE_FORMAT _HRESULT_TYPEDEF_(0x80000011L)")]
        public const int RO_E_METADATA_INVALID_TYPE_FORMAT = unchecked((int)(0x80000011));

        [NativeTypeName("#define RO_E_INVALID_METADATA_FILE _HRESULT_TYPEDEF_(0x80000012L)")]
        public const int RO_E_INVALID_METADATA_FILE = unchecked((int)(0x80000012));

        [NativeTypeName("#define RO_E_CLOSED _HRESULT_TYPEDEF_(0x80000013L)")]
        public const int RO_E_CLOSED = unchecked((int)(0x80000013));

        [NativeTypeName("#define RO_E_EXCLUSIVE_WRITE _HRESULT_TYPEDEF_(0x80000014L)")]
        public const int RO_E_EXCLUSIVE_WRITE = unchecked((int)(0x80000014));

        [NativeTypeName("#define RO_E_CHANGE_NOTIFICATION_IN_PROGRESS _HRESULT_TYPEDEF_(0x80000015L)")]
        public const int RO_E_CHANGE_NOTIFICATION_IN_PROGRESS = unchecked((int)(0x80000015));

        [NativeTypeName("#define RO_E_ERROR_STRING_NOT_FOUND _HRESULT_TYPEDEF_(0x80000016L)")]
        public const int RO_E_ERROR_STRING_NOT_FOUND = unchecked((int)(0x80000016));

        [NativeTypeName("#define E_STRING_NOT_NULL_TERMINATED _HRESULT_TYPEDEF_(0x80000017L)")]
        public const int E_STRING_NOT_NULL_TERMINATED = unchecked((int)(0x80000017));

        [NativeTypeName("#define E_ILLEGAL_DELEGATE_ASSIGNMENT _HRESULT_TYPEDEF_(0x80000018L)")]
        public const int E_ILLEGAL_DELEGATE_ASSIGNMENT = unchecked((int)(0x80000018));

        [NativeTypeName("#define E_ASYNC_OPERATION_NOT_STARTED _HRESULT_TYPEDEF_(0x80000019L)")]
        public const int E_ASYNC_OPERATION_NOT_STARTED = unchecked((int)(0x80000019));

        [NativeTypeName("#define E_APPLICATION_EXITING _HRESULT_TYPEDEF_(0x8000001AL)")]
        public const int E_APPLICATION_EXITING = unchecked((int)(0x8000001A));

        [NativeTypeName("#define E_APPLICATION_VIEW_EXITING _HRESULT_TYPEDEF_(0x8000001BL)")]
        public const int E_APPLICATION_VIEW_EXITING = unchecked((int)(0x8000001B));

        [NativeTypeName("#define RO_E_MUST_BE_AGILE _HRESULT_TYPEDEF_(0x8000001CL)")]
        public const int RO_E_MUST_BE_AGILE = unchecked((int)(0x8000001C));

        [NativeTypeName("#define RO_E_UNSUPPORTED_FROM_MTA _HRESULT_TYPEDEF_(0x8000001DL)")]
        public const int RO_E_UNSUPPORTED_FROM_MTA = unchecked((int)(0x8000001D));

        [NativeTypeName("#define RO_E_COMMITTED _HRESULT_TYPEDEF_(0x8000001EL)")]
        public const int RO_E_COMMITTED = unchecked((int)(0x8000001E));

        [NativeTypeName("#define RO_E_BLOCKED_CROSS_ASTA_CALL _HRESULT_TYPEDEF_(0x8000001FL)")]
        public const int RO_E_BLOCKED_CROSS_ASTA_CALL = unchecked((int)(0x8000001F));

        [NativeTypeName("#define RO_E_CANNOT_ACTIVATE_FULL_TRUST_SERVER _HRESULT_TYPEDEF_(0x80000020L)")]
        public const int RO_E_CANNOT_ACTIVATE_FULL_TRUST_SERVER = unchecked((int)(0x80000020));

        [NativeTypeName("#define RO_E_CANNOT_ACTIVATE_UNIVERSAL_APPLICATION_SERVER _HRESULT_TYPEDEF_(0x80000021L)")]
        public const int RO_E_CANNOT_ACTIVATE_UNIVERSAL_APPLICATION_SERVER = unchecked((int)(0x80000021));

        [NativeTypeName("#define CO_E_INIT_TLS _HRESULT_TYPEDEF_(0x80004006L)")]
        public const int CO_E_INIT_TLS = unchecked((int)(0x80004006));

        [NativeTypeName("#define CO_E_INIT_SHARED_ALLOCATOR _HRESULT_TYPEDEF_(0x80004007L)")]
        public const int CO_E_INIT_SHARED_ALLOCATOR = unchecked((int)(0x80004007));

        [NativeTypeName("#define CO_E_INIT_MEMORY_ALLOCATOR _HRESULT_TYPEDEF_(0x80004008L)")]
        public const int CO_E_INIT_MEMORY_ALLOCATOR = unchecked((int)(0x80004008));

        [NativeTypeName("#define CO_E_INIT_CLASS_CACHE _HRESULT_TYPEDEF_(0x80004009L)")]
        public const int CO_E_INIT_CLASS_CACHE = unchecked((int)(0x80004009));

        [NativeTypeName("#define CO_E_INIT_RPC_CHANNEL _HRESULT_TYPEDEF_(0x8000400AL)")]
        public const int CO_E_INIT_RPC_CHANNEL = unchecked((int)(0x8000400A));

        [NativeTypeName("#define CO_E_INIT_TLS_SET_CHANNEL_CONTROL _HRESULT_TYPEDEF_(0x8000400BL)")]
        public const int CO_E_INIT_TLS_SET_CHANNEL_CONTROL = unchecked((int)(0x8000400B));

        [NativeTypeName("#define CO_E_INIT_TLS_CHANNEL_CONTROL _HRESULT_TYPEDEF_(0x8000400CL)")]
        public const int CO_E_INIT_TLS_CHANNEL_CONTROL = unchecked((int)(0x8000400C));

        [NativeTypeName("#define CO_E_INIT_UNACCEPTED_USER_ALLOCATOR _HRESULT_TYPEDEF_(0x8000400DL)")]
        public const int CO_E_INIT_UNACCEPTED_USER_ALLOCATOR = unchecked((int)(0x8000400D));

        [NativeTypeName("#define CO_E_INIT_SCM_MUTEX_EXISTS _HRESULT_TYPEDEF_(0x8000400EL)")]
        public const int CO_E_INIT_SCM_MUTEX_EXISTS = unchecked((int)(0x8000400E));

        [NativeTypeName("#define CO_E_INIT_SCM_FILE_MAPPING_EXISTS _HRESULT_TYPEDEF_(0x8000400FL)")]
        public const int CO_E_INIT_SCM_FILE_MAPPING_EXISTS = unchecked((int)(0x8000400F));

        [NativeTypeName("#define CO_E_INIT_SCM_MAP_VIEW_OF_FILE _HRESULT_TYPEDEF_(0x80004010L)")]
        public const int CO_E_INIT_SCM_MAP_VIEW_OF_FILE = unchecked((int)(0x80004010));

        [NativeTypeName("#define CO_E_INIT_SCM_EXEC_FAILURE _HRESULT_TYPEDEF_(0x80004011L)")]
        public const int CO_E_INIT_SCM_EXEC_FAILURE = unchecked((int)(0x80004011));

        [NativeTypeName("#define CO_E_INIT_ONLY_SINGLE_THREADED _HRESULT_TYPEDEF_(0x80004012L)")]
        public const int CO_E_INIT_ONLY_SINGLE_THREADED = unchecked((int)(0x80004012));

        [NativeTypeName("#define CO_E_CANT_REMOTE _HRESULT_TYPEDEF_(0x80004013L)")]
        public const int CO_E_CANT_REMOTE = unchecked((int)(0x80004013));

        [NativeTypeName("#define CO_E_BAD_SERVER_NAME _HRESULT_TYPEDEF_(0x80004014L)")]
        public const int CO_E_BAD_SERVER_NAME = unchecked((int)(0x80004014));

        [NativeTypeName("#define CO_E_WRONG_SERVER_IDENTITY _HRESULT_TYPEDEF_(0x80004015L)")]
        public const int CO_E_WRONG_SERVER_IDENTITY = unchecked((int)(0x80004015));

        [NativeTypeName("#define CO_E_OLE1DDE_DISABLED _HRESULT_TYPEDEF_(0x80004016L)")]
        public const int CO_E_OLE1DDE_DISABLED = unchecked((int)(0x80004016));

        [NativeTypeName("#define CO_E_RUNAS_SYNTAX _HRESULT_TYPEDEF_(0x80004017L)")]
        public const int CO_E_RUNAS_SYNTAX = unchecked((int)(0x80004017));

        [NativeTypeName("#define CO_E_CREATEPROCESS_FAILURE _HRESULT_TYPEDEF_(0x80004018L)")]
        public const int CO_E_CREATEPROCESS_FAILURE = unchecked((int)(0x80004018));

        [NativeTypeName("#define CO_E_RUNAS_CREATEPROCESS_FAILURE _HRESULT_TYPEDEF_(0x80004019L)")]
        public const int CO_E_RUNAS_CREATEPROCESS_FAILURE = unchecked((int)(0x80004019));

        [NativeTypeName("#define CO_E_RUNAS_LOGON_FAILURE _HRESULT_TYPEDEF_(0x8000401AL)")]
        public const int CO_E_RUNAS_LOGON_FAILURE = unchecked((int)(0x8000401A));

        [NativeTypeName("#define CO_E_LAUNCH_PERMSSION_DENIED _HRESULT_TYPEDEF_(0x8000401BL)")]
        public const int CO_E_LAUNCH_PERMSSION_DENIED = unchecked((int)(0x8000401B));

        [NativeTypeName("#define CO_E_START_SERVICE_FAILURE _HRESULT_TYPEDEF_(0x8000401CL)")]
        public const int CO_E_START_SERVICE_FAILURE = unchecked((int)(0x8000401C));

        [NativeTypeName("#define CO_E_REMOTE_COMMUNICATION_FAILURE _HRESULT_TYPEDEF_(0x8000401DL)")]
        public const int CO_E_REMOTE_COMMUNICATION_FAILURE = unchecked((int)(0x8000401D));

        [NativeTypeName("#define CO_E_SERVER_START_TIMEOUT _HRESULT_TYPEDEF_(0x8000401EL)")]
        public const int CO_E_SERVER_START_TIMEOUT = unchecked((int)(0x8000401E));

        [NativeTypeName("#define CO_E_CLSREG_INCONSISTENT _HRESULT_TYPEDEF_(0x8000401FL)")]
        public const int CO_E_CLSREG_INCONSISTENT = unchecked((int)(0x8000401F));

        [NativeTypeName("#define CO_E_IIDREG_INCONSISTENT _HRESULT_TYPEDEF_(0x80004020L)")]
        public const int CO_E_IIDREG_INCONSISTENT = unchecked((int)(0x80004020));

        [NativeTypeName("#define CO_E_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80004021L)")]
        public const int CO_E_NOT_SUPPORTED = unchecked((int)(0x80004021));

        [NativeTypeName("#define CO_E_RELOAD_DLL _HRESULT_TYPEDEF_(0x80004022L)")]
        public const int CO_E_RELOAD_DLL = unchecked((int)(0x80004022));

        [NativeTypeName("#define CO_E_MSI_ERROR _HRESULT_TYPEDEF_(0x80004023L)")]
        public const int CO_E_MSI_ERROR = unchecked((int)(0x80004023));

        [NativeTypeName("#define CO_E_ATTEMPT_TO_CREATE_OUTSIDE_CLIENT_CONTEXT _HRESULT_TYPEDEF_(0x80004024L)")]
        public const int CO_E_ATTEMPT_TO_CREATE_OUTSIDE_CLIENT_CONTEXT = unchecked((int)(0x80004024));

        [NativeTypeName("#define CO_E_SERVER_PAUSED _HRESULT_TYPEDEF_(0x80004025L)")]
        public const int CO_E_SERVER_PAUSED = unchecked((int)(0x80004025));

        [NativeTypeName("#define CO_E_SERVER_NOT_PAUSED _HRESULT_TYPEDEF_(0x80004026L)")]
        public const int CO_E_SERVER_NOT_PAUSED = unchecked((int)(0x80004026));

        [NativeTypeName("#define CO_E_CLASS_DISABLED _HRESULT_TYPEDEF_(0x80004027L)")]
        public const int CO_E_CLASS_DISABLED = unchecked((int)(0x80004027));

        [NativeTypeName("#define CO_E_CLRNOTAVAILABLE _HRESULT_TYPEDEF_(0x80004028L)")]
        public const int CO_E_CLRNOTAVAILABLE = unchecked((int)(0x80004028));

        [NativeTypeName("#define CO_E_ASYNC_WORK_REJECTED _HRESULT_TYPEDEF_(0x80004029L)")]
        public const int CO_E_ASYNC_WORK_REJECTED = unchecked((int)(0x80004029));

        [NativeTypeName("#define CO_E_SERVER_INIT_TIMEOUT _HRESULT_TYPEDEF_(0x8000402AL)")]
        public const int CO_E_SERVER_INIT_TIMEOUT = unchecked((int)(0x8000402A));

        [NativeTypeName("#define CO_E_NO_SECCTX_IN_ACTIVATE _HRESULT_TYPEDEF_(0x8000402BL)")]
        public const int CO_E_NO_SECCTX_IN_ACTIVATE = unchecked((int)(0x8000402B));

        [NativeTypeName("#define CO_E_TRACKER_CONFIG _HRESULT_TYPEDEF_(0x80004030L)")]
        public const int CO_E_TRACKER_CONFIG = unchecked((int)(0x80004030));

        [NativeTypeName("#define CO_E_THREADPOOL_CONFIG _HRESULT_TYPEDEF_(0x80004031L)")]
        public const int CO_E_THREADPOOL_CONFIG = unchecked((int)(0x80004031));

        [NativeTypeName("#define CO_E_SXS_CONFIG _HRESULT_TYPEDEF_(0x80004032L)")]
        public const int CO_E_SXS_CONFIG = unchecked((int)(0x80004032));

        [NativeTypeName("#define CO_E_MALFORMED_SPN _HRESULT_TYPEDEF_(0x80004033L)")]
        public const int CO_E_MALFORMED_SPN = unchecked((int)(0x80004033));

        [NativeTypeName("#define CO_E_UNREVOKED_REGISTRATION_ON_APARTMENT_SHUTDOWN _HRESULT_TYPEDEF_(0x80004034L)")]
        public const int CO_E_UNREVOKED_REGISTRATION_ON_APARTMENT_SHUTDOWN = unchecked((int)(0x80004034));

        [NativeTypeName("#define CO_E_PREMATURE_STUB_RUNDOWN _HRESULT_TYPEDEF_(0x80004035L)")]
        public const int CO_E_PREMATURE_STUB_RUNDOWN = unchecked((int)(0x80004035));
#endif

        [NativeTypeName("#define S_OK ((HRESULT)0L)")]
        public const int S_OK = ((int)(0));

        [NativeTypeName("#define S_FALSE ((HRESULT)1L)")]
        public const int S_FALSE = ((int)(1));

#if false
        [NativeTypeName("#define OLE_E_FIRST ((HRESULT)0x80040000L)")]
        public const int OLE_E_FIRST = unchecked((int)(0x80040000));

        [NativeTypeName("#define OLE_E_LAST ((HRESULT)0x800400FFL)")]
        public const int OLE_E_LAST = unchecked((int)(0x800400FF));

        [NativeTypeName("#define OLE_S_FIRST ((HRESULT)0x00040000L)")]
        public const int OLE_S_FIRST = ((int)(0x00040000));

        [NativeTypeName("#define OLE_S_LAST ((HRESULT)0x000400FFL)")]
        public const int OLE_S_LAST = ((int)(0x000400FF));

        [NativeTypeName("#define OLE_E_OLEVERB _HRESULT_TYPEDEF_(0x80040000L)")]
        public const int OLE_E_OLEVERB = unchecked((int)(0x80040000));

        [NativeTypeName("#define OLE_E_ADVF _HRESULT_TYPEDEF_(0x80040001L)")]
        public const int OLE_E_ADVF = unchecked((int)(0x80040001));

        [NativeTypeName("#define OLE_E_ENUM_NOMORE _HRESULT_TYPEDEF_(0x80040002L)")]
        public const int OLE_E_ENUM_NOMORE = unchecked((int)(0x80040002));

        [NativeTypeName("#define OLE_E_ADVISENOTSUPPORTED _HRESULT_TYPEDEF_(0x80040003L)")]
        public const int OLE_E_ADVISENOTSUPPORTED = unchecked((int)(0x80040003));

        [NativeTypeName("#define OLE_E_NOCONNECTION _HRESULT_TYPEDEF_(0x80040004L)")]
        public const int OLE_E_NOCONNECTION = unchecked((int)(0x80040004));

        [NativeTypeName("#define OLE_E_NOTRUNNING _HRESULT_TYPEDEF_(0x80040005L)")]
        public const int OLE_E_NOTRUNNING = unchecked((int)(0x80040005));

        [NativeTypeName("#define OLE_E_NOCACHE _HRESULT_TYPEDEF_(0x80040006L)")]
        public const int OLE_E_NOCACHE = unchecked((int)(0x80040006));

        [NativeTypeName("#define OLE_E_BLANK _HRESULT_TYPEDEF_(0x80040007L)")]
        public const int OLE_E_BLANK = unchecked((int)(0x80040007));

        [NativeTypeName("#define OLE_E_CLASSDIFF _HRESULT_TYPEDEF_(0x80040008L)")]
        public const int OLE_E_CLASSDIFF = unchecked((int)(0x80040008));

        [NativeTypeName("#define OLE_E_CANT_GETMONIKER _HRESULT_TYPEDEF_(0x80040009L)")]
        public const int OLE_E_CANT_GETMONIKER = unchecked((int)(0x80040009));

        [NativeTypeName("#define OLE_E_CANT_BINDTOSOURCE _HRESULT_TYPEDEF_(0x8004000AL)")]
        public const int OLE_E_CANT_BINDTOSOURCE = unchecked((int)(0x8004000A));

        [NativeTypeName("#define OLE_E_STATIC _HRESULT_TYPEDEF_(0x8004000BL)")]
        public const int OLE_E_STATIC = unchecked((int)(0x8004000B));

        [NativeTypeName("#define OLE_E_PROMPTSAVECANCELLED _HRESULT_TYPEDEF_(0x8004000CL)")]
        public const int OLE_E_PROMPTSAVECANCELLED = unchecked((int)(0x8004000C));

        [NativeTypeName("#define OLE_E_INVALIDRECT _HRESULT_TYPEDEF_(0x8004000DL)")]
        public const int OLE_E_INVALIDRECT = unchecked((int)(0x8004000D));

        [NativeTypeName("#define OLE_E_WRONGCOMPOBJ _HRESULT_TYPEDEF_(0x8004000EL)")]
        public const int OLE_E_WRONGCOMPOBJ = unchecked((int)(0x8004000E));

        [NativeTypeName("#define OLE_E_INVALIDHWND _HRESULT_TYPEDEF_(0x8004000FL)")]
        public const int OLE_E_INVALIDHWND = unchecked((int)(0x8004000F));

        [NativeTypeName("#define OLE_E_NOT_INPLACEACTIVE _HRESULT_TYPEDEF_(0x80040010L)")]
        public const int OLE_E_NOT_INPLACEACTIVE = unchecked((int)(0x80040010));

        [NativeTypeName("#define OLE_E_CANTCONVERT _HRESULT_TYPEDEF_(0x80040011L)")]
        public const int OLE_E_CANTCONVERT = unchecked((int)(0x80040011));

        [NativeTypeName("#define OLE_E_NOSTORAGE _HRESULT_TYPEDEF_(0x80040012L)")]
        public const int OLE_E_NOSTORAGE = unchecked((int)(0x80040012));

        [NativeTypeName("#define DV_E_FORMATETC _HRESULT_TYPEDEF_(0x80040064L)")]
        public const int DV_E_FORMATETC = unchecked((int)(0x80040064));

        [NativeTypeName("#define DV_E_DVTARGETDEVICE _HRESULT_TYPEDEF_(0x80040065L)")]
        public const int DV_E_DVTARGETDEVICE = unchecked((int)(0x80040065));

        [NativeTypeName("#define DV_E_STGMEDIUM _HRESULT_TYPEDEF_(0x80040066L)")]
        public const int DV_E_STGMEDIUM = unchecked((int)(0x80040066));

        [NativeTypeName("#define DV_E_STATDATA _HRESULT_TYPEDEF_(0x80040067L)")]
        public const int DV_E_STATDATA = unchecked((int)(0x80040067));

        [NativeTypeName("#define DV_E_LINDEX _HRESULT_TYPEDEF_(0x80040068L)")]
        public const int DV_E_LINDEX = unchecked((int)(0x80040068));

        [NativeTypeName("#define DV_E_TYMED _HRESULT_TYPEDEF_(0x80040069L)")]
        public const int DV_E_TYMED = unchecked((int)(0x80040069));

        [NativeTypeName("#define DV_E_CLIPFORMAT _HRESULT_TYPEDEF_(0x8004006AL)")]
        public const int DV_E_CLIPFORMAT = unchecked((int)(0x8004006A));

        [NativeTypeName("#define DV_E_DVASPECT _HRESULT_TYPEDEF_(0x8004006BL)")]
        public const int DV_E_DVASPECT = unchecked((int)(0x8004006B));

        [NativeTypeName("#define DV_E_DVTARGETDEVICE_SIZE _HRESULT_TYPEDEF_(0x8004006CL)")]
        public const int DV_E_DVTARGETDEVICE_SIZE = unchecked((int)(0x8004006C));

        [NativeTypeName("#define DV_E_NOIVIEWOBJECT _HRESULT_TYPEDEF_(0x8004006DL)")]
        public const int DV_E_NOIVIEWOBJECT = unchecked((int)(0x8004006D));

        [NativeTypeName("#define DRAGDROP_E_FIRST 0x80040100L")]
        public const uint DRAGDROP_E_FIRST = 0x80040100;

        [NativeTypeName("#define DRAGDROP_E_LAST 0x8004010FL")]
        public const uint DRAGDROP_E_LAST = 0x8004010F;

        [NativeTypeName("#define DRAGDROP_S_FIRST 0x00040100L")]
        public const int DRAGDROP_S_FIRST = 0x00040100;

        [NativeTypeName("#define DRAGDROP_S_LAST 0x0004010FL")]
        public const int DRAGDROP_S_LAST = 0x0004010F;

        [NativeTypeName("#define DRAGDROP_E_NOTREGISTERED _HRESULT_TYPEDEF_(0x80040100L)")]
        public const int DRAGDROP_E_NOTREGISTERED = unchecked((int)(0x80040100));

        [NativeTypeName("#define DRAGDROP_E_ALREADYREGISTERED _HRESULT_TYPEDEF_(0x80040101L)")]
        public const int DRAGDROP_E_ALREADYREGISTERED = unchecked((int)(0x80040101));

        [NativeTypeName("#define DRAGDROP_E_INVALIDHWND _HRESULT_TYPEDEF_(0x80040102L)")]
        public const int DRAGDROP_E_INVALIDHWND = unchecked((int)(0x80040102));

        [NativeTypeName("#define DRAGDROP_E_CONCURRENT_DRAG_ATTEMPTED _HRESULT_TYPEDEF_(0x80040103L)")]
        public const int DRAGDROP_E_CONCURRENT_DRAG_ATTEMPTED = unchecked((int)(0x80040103));

        [NativeTypeName("#define CLASSFACTORY_E_FIRST 0x80040110L")]
        public const uint CLASSFACTORY_E_FIRST = 0x80040110;

        [NativeTypeName("#define CLASSFACTORY_E_LAST 0x8004011FL")]
        public const uint CLASSFACTORY_E_LAST = 0x8004011F;

        [NativeTypeName("#define CLASSFACTORY_S_FIRST 0x00040110L")]
        public const int CLASSFACTORY_S_FIRST = 0x00040110;

        [NativeTypeName("#define CLASSFACTORY_S_LAST 0x0004011FL")]
        public const int CLASSFACTORY_S_LAST = 0x0004011F;

        [NativeTypeName("#define CLASS_E_NOAGGREGATION _HRESULT_TYPEDEF_(0x80040110L)")]
        public const int CLASS_E_NOAGGREGATION = unchecked((int)(0x80040110));

        [NativeTypeName("#define CLASS_E_CLASSNOTAVAILABLE _HRESULT_TYPEDEF_(0x80040111L)")]
        public const int CLASS_E_CLASSNOTAVAILABLE = unchecked((int)(0x80040111));

        [NativeTypeName("#define CLASS_E_NOTLICENSED _HRESULT_TYPEDEF_(0x80040112L)")]
        public const int CLASS_E_NOTLICENSED = unchecked((int)(0x80040112));

        [NativeTypeName("#define MARSHAL_E_FIRST 0x80040120L")]
        public const uint MARSHAL_E_FIRST = 0x80040120;

        [NativeTypeName("#define MARSHAL_E_LAST 0x8004012FL")]
        public const uint MARSHAL_E_LAST = 0x8004012F;

        [NativeTypeName("#define MARSHAL_S_FIRST 0x00040120L")]
        public const int MARSHAL_S_FIRST = 0x00040120;

        [NativeTypeName("#define MARSHAL_S_LAST 0x0004012FL")]
        public const int MARSHAL_S_LAST = 0x0004012F;

        [NativeTypeName("#define DATA_E_FIRST 0x80040130L")]
        public const uint DATA_E_FIRST = 0x80040130;

        [NativeTypeName("#define DATA_E_LAST 0x8004013FL")]
        public const uint DATA_E_LAST = 0x8004013F;

        [NativeTypeName("#define DATA_S_FIRST 0x00040130L")]
        public const int DATA_S_FIRST = 0x00040130;

        [NativeTypeName("#define DATA_S_LAST 0x0004013FL")]
        public const int DATA_S_LAST = 0x0004013F;

        [NativeTypeName("#define VIEW_E_FIRST 0x80040140L")]
        public const uint VIEW_E_FIRST = 0x80040140;

        [NativeTypeName("#define VIEW_E_LAST 0x8004014FL")]
        public const uint VIEW_E_LAST = 0x8004014F;

        [NativeTypeName("#define VIEW_S_FIRST 0x00040140L")]
        public const int VIEW_S_FIRST = 0x00040140;

        [NativeTypeName("#define VIEW_S_LAST 0x0004014FL")]
        public const int VIEW_S_LAST = 0x0004014F;

        [NativeTypeName("#define VIEW_E_DRAW _HRESULT_TYPEDEF_(0x80040140L)")]
        public const int VIEW_E_DRAW = unchecked((int)(0x80040140));

        [NativeTypeName("#define REGDB_E_FIRST 0x80040150L")]
        public const uint REGDB_E_FIRST = 0x80040150;

        [NativeTypeName("#define REGDB_E_LAST 0x8004015FL")]
        public const uint REGDB_E_LAST = 0x8004015F;

        [NativeTypeName("#define REGDB_S_FIRST 0x00040150L")]
        public const int REGDB_S_FIRST = 0x00040150;

        [NativeTypeName("#define REGDB_S_LAST 0x0004015FL")]
        public const int REGDB_S_LAST = 0x0004015F;

        [NativeTypeName("#define REGDB_E_READREGDB _HRESULT_TYPEDEF_(0x80040150L)")]
        public const int REGDB_E_READREGDB = unchecked((int)(0x80040150));

        [NativeTypeName("#define REGDB_E_WRITEREGDB _HRESULT_TYPEDEF_(0x80040151L)")]
        public const int REGDB_E_WRITEREGDB = unchecked((int)(0x80040151));

        [NativeTypeName("#define REGDB_E_KEYMISSING _HRESULT_TYPEDEF_(0x80040152L)")]
        public const int REGDB_E_KEYMISSING = unchecked((int)(0x80040152));

        [NativeTypeName("#define REGDB_E_INVALIDVALUE _HRESULT_TYPEDEF_(0x80040153L)")]
        public const int REGDB_E_INVALIDVALUE = unchecked((int)(0x80040153));

        [NativeTypeName("#define REGDB_E_CLASSNOTREG _HRESULT_TYPEDEF_(0x80040154L)")]
        public const int REGDB_E_CLASSNOTREG = unchecked((int)(0x80040154));

        [NativeTypeName("#define REGDB_E_IIDNOTREG _HRESULT_TYPEDEF_(0x80040155L)")]
        public const int REGDB_E_IIDNOTREG = unchecked((int)(0x80040155));

        [NativeTypeName("#define REGDB_E_BADTHREADINGMODEL _HRESULT_TYPEDEF_(0x80040156L)")]
        public const int REGDB_E_BADTHREADINGMODEL = unchecked((int)(0x80040156));

        [NativeTypeName("#define REGDB_E_PACKAGEPOLICYVIOLATION _HRESULT_TYPEDEF_(0x80040157L)")]
        public const int REGDB_E_PACKAGEPOLICYVIOLATION = unchecked((int)(0x80040157));

        [NativeTypeName("#define CAT_E_FIRST 0x80040160L")]
        public const uint CAT_E_FIRST = 0x80040160;

        [NativeTypeName("#define CAT_E_LAST 0x80040161L")]
        public const uint CAT_E_LAST = 0x80040161;

        [NativeTypeName("#define CAT_E_CATIDNOEXIST _HRESULT_TYPEDEF_(0x80040160L)")]
        public const int CAT_E_CATIDNOEXIST = unchecked((int)(0x80040160));

        [NativeTypeName("#define CAT_E_NODESCRIPTION _HRESULT_TYPEDEF_(0x80040161L)")]
        public const int CAT_E_NODESCRIPTION = unchecked((int)(0x80040161));

        [NativeTypeName("#define CS_E_FIRST 0x80040164L")]
        public const uint CS_E_FIRST = 0x80040164;

        [NativeTypeName("#define CS_E_LAST 0x8004016FL")]
        public const uint CS_E_LAST = 0x8004016F;

        [NativeTypeName("#define CS_E_PACKAGE_NOTFOUND _HRESULT_TYPEDEF_(0x80040164L)")]
        public const int CS_E_PACKAGE_NOTFOUND = unchecked((int)(0x80040164));

        [NativeTypeName("#define CS_E_NOT_DELETABLE _HRESULT_TYPEDEF_(0x80040165L)")]
        public const int CS_E_NOT_DELETABLE = unchecked((int)(0x80040165));

        [NativeTypeName("#define CS_E_CLASS_NOTFOUND _HRESULT_TYPEDEF_(0x80040166L)")]
        public const int CS_E_CLASS_NOTFOUND = unchecked((int)(0x80040166));

        [NativeTypeName("#define CS_E_INVALID_VERSION _HRESULT_TYPEDEF_(0x80040167L)")]
        public const int CS_E_INVALID_VERSION = unchecked((int)(0x80040167));

        [NativeTypeName("#define CS_E_NO_CLASSSTORE _HRESULT_TYPEDEF_(0x80040168L)")]
        public const int CS_E_NO_CLASSSTORE = unchecked((int)(0x80040168));

        [NativeTypeName("#define CS_E_OBJECT_NOTFOUND _HRESULT_TYPEDEF_(0x80040169L)")]
        public const int CS_E_OBJECT_NOTFOUND = unchecked((int)(0x80040169));

        [NativeTypeName("#define CS_E_OBJECT_ALREADY_EXISTS _HRESULT_TYPEDEF_(0x8004016AL)")]
        public const int CS_E_OBJECT_ALREADY_EXISTS = unchecked((int)(0x8004016A));

        [NativeTypeName("#define CS_E_INVALID_PATH _HRESULT_TYPEDEF_(0x8004016BL)")]
        public const int CS_E_INVALID_PATH = unchecked((int)(0x8004016B));

        [NativeTypeName("#define CS_E_NETWORK_ERROR _HRESULT_TYPEDEF_(0x8004016CL)")]
        public const int CS_E_NETWORK_ERROR = unchecked((int)(0x8004016C));

        [NativeTypeName("#define CS_E_ADMIN_LIMIT_EXCEEDED _HRESULT_TYPEDEF_(0x8004016DL)")]
        public const int CS_E_ADMIN_LIMIT_EXCEEDED = unchecked((int)(0x8004016D));

        [NativeTypeName("#define CS_E_SCHEMA_MISMATCH _HRESULT_TYPEDEF_(0x8004016EL)")]
        public const int CS_E_SCHEMA_MISMATCH = unchecked((int)(0x8004016E));

        [NativeTypeName("#define CS_E_INTERNAL_ERROR _HRESULT_TYPEDEF_(0x8004016FL)")]
        public const int CS_E_INTERNAL_ERROR = unchecked((int)(0x8004016F));

        [NativeTypeName("#define CACHE_E_FIRST 0x80040170L")]
        public const uint CACHE_E_FIRST = 0x80040170;

        [NativeTypeName("#define CACHE_E_LAST 0x8004017FL")]
        public const uint CACHE_E_LAST = 0x8004017F;

        [NativeTypeName("#define CACHE_S_FIRST 0x00040170L")]
        public const int CACHE_S_FIRST = 0x00040170;

        [NativeTypeName("#define CACHE_S_LAST 0x0004017FL")]
        public const int CACHE_S_LAST = 0x0004017F;

        [NativeTypeName("#define CACHE_E_NOCACHE_UPDATED _HRESULT_TYPEDEF_(0x80040170L)")]
        public const int CACHE_E_NOCACHE_UPDATED = unchecked((int)(0x80040170));

        [NativeTypeName("#define OLEOBJ_E_FIRST 0x80040180L")]
        public const uint OLEOBJ_E_FIRST = 0x80040180;

        [NativeTypeName("#define OLEOBJ_E_LAST 0x8004018FL")]
        public const uint OLEOBJ_E_LAST = 0x8004018F;

        [NativeTypeName("#define OLEOBJ_S_FIRST 0x00040180L")]
        public const int OLEOBJ_S_FIRST = 0x00040180;

        [NativeTypeName("#define OLEOBJ_S_LAST 0x0004018FL")]
        public const int OLEOBJ_S_LAST = 0x0004018F;

        [NativeTypeName("#define OLEOBJ_E_NOVERBS _HRESULT_TYPEDEF_(0x80040180L)")]
        public const int OLEOBJ_E_NOVERBS = unchecked((int)(0x80040180));

        [NativeTypeName("#define OLEOBJ_E_INVALIDVERB _HRESULT_TYPEDEF_(0x80040181L)")]
        public const int OLEOBJ_E_INVALIDVERB = unchecked((int)(0x80040181));

        [NativeTypeName("#define CLIENTSITE_E_FIRST 0x80040190L")]
        public const uint CLIENTSITE_E_FIRST = 0x80040190;

        [NativeTypeName("#define CLIENTSITE_E_LAST 0x8004019FL")]
        public const uint CLIENTSITE_E_LAST = 0x8004019F;

        [NativeTypeName("#define CLIENTSITE_S_FIRST 0x00040190L")]
        public const int CLIENTSITE_S_FIRST = 0x00040190;

        [NativeTypeName("#define CLIENTSITE_S_LAST 0x0004019FL")]
        public const int CLIENTSITE_S_LAST = 0x0004019F;

        [NativeTypeName("#define INPLACE_E_NOTUNDOABLE _HRESULT_TYPEDEF_(0x800401A0L)")]
        public const int INPLACE_E_NOTUNDOABLE = unchecked((int)(0x800401A0));

        [NativeTypeName("#define INPLACE_E_NOTOOLSPACE _HRESULT_TYPEDEF_(0x800401A1L)")]
        public const int INPLACE_E_NOTOOLSPACE = unchecked((int)(0x800401A1));

        [NativeTypeName("#define INPLACE_E_FIRST 0x800401A0L")]
        public const uint INPLACE_E_FIRST = 0x800401A0;

        [NativeTypeName("#define INPLACE_E_LAST 0x800401AFL")]
        public const uint INPLACE_E_LAST = 0x800401AF;

        [NativeTypeName("#define INPLACE_S_FIRST 0x000401A0L")]
        public const int INPLACE_S_FIRST = 0x000401A0;

        [NativeTypeName("#define INPLACE_S_LAST 0x000401AFL")]
        public const int INPLACE_S_LAST = 0x000401AF;

        [NativeTypeName("#define ENUM_E_FIRST 0x800401B0L")]
        public const uint ENUM_E_FIRST = 0x800401B0;

        [NativeTypeName("#define ENUM_E_LAST 0x800401BFL")]
        public const uint ENUM_E_LAST = 0x800401BF;

        [NativeTypeName("#define ENUM_S_FIRST 0x000401B0L")]
        public const int ENUM_S_FIRST = 0x000401B0;

        [NativeTypeName("#define ENUM_S_LAST 0x000401BFL")]
        public const int ENUM_S_LAST = 0x000401BF;

        [NativeTypeName("#define CONVERT10_E_FIRST 0x800401C0L")]
        public const uint CONVERT10_E_FIRST = 0x800401C0;

        [NativeTypeName("#define CONVERT10_E_LAST 0x800401CFL")]
        public const uint CONVERT10_E_LAST = 0x800401CF;

        [NativeTypeName("#define CONVERT10_S_FIRST 0x000401C0L")]
        public const int CONVERT10_S_FIRST = 0x000401C0;

        [NativeTypeName("#define CONVERT10_S_LAST 0x000401CFL")]
        public const int CONVERT10_S_LAST = 0x000401CF;

        [NativeTypeName("#define CONVERT10_E_OLESTREAM_GET _HRESULT_TYPEDEF_(0x800401C0L)")]
        public const int CONVERT10_E_OLESTREAM_GET = unchecked((int)(0x800401C0));

        [NativeTypeName("#define CONVERT10_E_OLESTREAM_PUT _HRESULT_TYPEDEF_(0x800401C1L)")]
        public const int CONVERT10_E_OLESTREAM_PUT = unchecked((int)(0x800401C1));

        [NativeTypeName("#define CONVERT10_E_OLESTREAM_FMT _HRESULT_TYPEDEF_(0x800401C2L)")]
        public const int CONVERT10_E_OLESTREAM_FMT = unchecked((int)(0x800401C2));

        [NativeTypeName("#define CONVERT10_E_OLESTREAM_BITMAP_TO_DIB _HRESULT_TYPEDEF_(0x800401C3L)")]
        public const int CONVERT10_E_OLESTREAM_BITMAP_TO_DIB = unchecked((int)(0x800401C3));

        [NativeTypeName("#define CONVERT10_E_STG_FMT _HRESULT_TYPEDEF_(0x800401C4L)")]
        public const int CONVERT10_E_STG_FMT = unchecked((int)(0x800401C4));

        [NativeTypeName("#define CONVERT10_E_STG_NO_STD_STREAM _HRESULT_TYPEDEF_(0x800401C5L)")]
        public const int CONVERT10_E_STG_NO_STD_STREAM = unchecked((int)(0x800401C5));

        [NativeTypeName("#define CONVERT10_E_STG_DIB_TO_BITMAP _HRESULT_TYPEDEF_(0x800401C6L)")]
        public const int CONVERT10_E_STG_DIB_TO_BITMAP = unchecked((int)(0x800401C6));

        [NativeTypeName("#define CLIPBRD_E_FIRST 0x800401D0L")]
        public const uint CLIPBRD_E_FIRST = 0x800401D0;

        [NativeTypeName("#define CLIPBRD_E_LAST 0x800401DFL")]
        public const uint CLIPBRD_E_LAST = 0x800401DF;

        [NativeTypeName("#define CLIPBRD_S_FIRST 0x000401D0L")]
        public const int CLIPBRD_S_FIRST = 0x000401D0;

        [NativeTypeName("#define CLIPBRD_S_LAST 0x000401DFL")]
        public const int CLIPBRD_S_LAST = 0x000401DF;

        [NativeTypeName("#define CLIPBRD_E_CANT_OPEN _HRESULT_TYPEDEF_(0x800401D0L)")]
        public const int CLIPBRD_E_CANT_OPEN = unchecked((int)(0x800401D0));

        [NativeTypeName("#define CLIPBRD_E_CANT_EMPTY _HRESULT_TYPEDEF_(0x800401D1L)")]
        public const int CLIPBRD_E_CANT_EMPTY = unchecked((int)(0x800401D1));

        [NativeTypeName("#define CLIPBRD_E_CANT_SET _HRESULT_TYPEDEF_(0x800401D2L)")]
        public const int CLIPBRD_E_CANT_SET = unchecked((int)(0x800401D2));

        [NativeTypeName("#define CLIPBRD_E_BAD_DATA _HRESULT_TYPEDEF_(0x800401D3L)")]
        public const int CLIPBRD_E_BAD_DATA = unchecked((int)(0x800401D3));

        [NativeTypeName("#define CLIPBRD_E_CANT_CLOSE _HRESULT_TYPEDEF_(0x800401D4L)")]
        public const int CLIPBRD_E_CANT_CLOSE = unchecked((int)(0x800401D4));

        [NativeTypeName("#define MK_E_FIRST 0x800401E0L")]
        public const uint MK_E_FIRST = 0x800401E0;

        [NativeTypeName("#define MK_E_LAST 0x800401EFL")]
        public const uint MK_E_LAST = 0x800401EF;

        [NativeTypeName("#define MK_S_FIRST 0x000401E0L")]
        public const int MK_S_FIRST = 0x000401E0;

        [NativeTypeName("#define MK_S_LAST 0x000401EFL")]
        public const int MK_S_LAST = 0x000401EF;

        [NativeTypeName("#define MK_E_CONNECTMANUALLY _HRESULT_TYPEDEF_(0x800401E0L)")]
        public const int MK_E_CONNECTMANUALLY = unchecked((int)(0x800401E0));

        [NativeTypeName("#define MK_E_EXCEEDEDDEADLINE _HRESULT_TYPEDEF_(0x800401E1L)")]
        public const int MK_E_EXCEEDEDDEADLINE = unchecked((int)(0x800401E1));

        [NativeTypeName("#define MK_E_NEEDGENERIC _HRESULT_TYPEDEF_(0x800401E2L)")]
        public const int MK_E_NEEDGENERIC = unchecked((int)(0x800401E2));

        [NativeTypeName("#define MK_E_UNAVAILABLE _HRESULT_TYPEDEF_(0x800401E3L)")]
        public const int MK_E_UNAVAILABLE = unchecked((int)(0x800401E3));

        [NativeTypeName("#define MK_E_SYNTAX _HRESULT_TYPEDEF_(0x800401E4L)")]
        public const int MK_E_SYNTAX = unchecked((int)(0x800401E4));

        [NativeTypeName("#define MK_E_NOOBJECT _HRESULT_TYPEDEF_(0x800401E5L)")]
        public const int MK_E_NOOBJECT = unchecked((int)(0x800401E5));

        [NativeTypeName("#define MK_E_INVALIDEXTENSION _HRESULT_TYPEDEF_(0x800401E6L)")]
        public const int MK_E_INVALIDEXTENSION = unchecked((int)(0x800401E6));

        [NativeTypeName("#define MK_E_INTERMEDIATEINTERFACENOTSUPPORTED _HRESULT_TYPEDEF_(0x800401E7L)")]
        public const int MK_E_INTERMEDIATEINTERFACENOTSUPPORTED = unchecked((int)(0x800401E7));

        [NativeTypeName("#define MK_E_NOTBINDABLE _HRESULT_TYPEDEF_(0x800401E8L)")]
        public const int MK_E_NOTBINDABLE = unchecked((int)(0x800401E8));

        [NativeTypeName("#define MK_E_NOTBOUND _HRESULT_TYPEDEF_(0x800401E9L)")]
        public const int MK_E_NOTBOUND = unchecked((int)(0x800401E9));

        [NativeTypeName("#define MK_E_CANTOPENFILE _HRESULT_TYPEDEF_(0x800401EAL)")]
        public const int MK_E_CANTOPENFILE = unchecked((int)(0x800401EA));

        [NativeTypeName("#define MK_E_MUSTBOTHERUSER _HRESULT_TYPEDEF_(0x800401EBL)")]
        public const int MK_E_MUSTBOTHERUSER = unchecked((int)(0x800401EB));

        [NativeTypeName("#define MK_E_NOINVERSE _HRESULT_TYPEDEF_(0x800401ECL)")]
        public const int MK_E_NOINVERSE = unchecked((int)(0x800401EC));

        [NativeTypeName("#define MK_E_NOSTORAGE _HRESULT_TYPEDEF_(0x800401EDL)")]
        public const int MK_E_NOSTORAGE = unchecked((int)(0x800401ED));

        [NativeTypeName("#define MK_E_NOPREFIX _HRESULT_TYPEDEF_(0x800401EEL)")]
        public const int MK_E_NOPREFIX = unchecked((int)(0x800401EE));

        [NativeTypeName("#define MK_E_ENUMERATION_FAILED _HRESULT_TYPEDEF_(0x800401EFL)")]
        public const int MK_E_ENUMERATION_FAILED = unchecked((int)(0x800401EF));

        [NativeTypeName("#define CO_E_FIRST 0x800401F0L")]
        public const uint CO_E_FIRST = 0x800401F0;

        [NativeTypeName("#define CO_E_LAST 0x800401FFL")]
        public const uint CO_E_LAST = 0x800401FF;

        [NativeTypeName("#define CO_S_FIRST 0x000401F0L")]
        public const int CO_S_FIRST = 0x000401F0;

        [NativeTypeName("#define CO_S_LAST 0x000401FFL")]
        public const int CO_S_LAST = 0x000401FF;

        [NativeTypeName("#define CO_E_NOTINITIALIZED _HRESULT_TYPEDEF_(0x800401F0L)")]
        public const int CO_E_NOTINITIALIZED = unchecked((int)(0x800401F0));

        [NativeTypeName("#define CO_E_ALREADYINITIALIZED _HRESULT_TYPEDEF_(0x800401F1L)")]
        public const int CO_E_ALREADYINITIALIZED = unchecked((int)(0x800401F1));

        [NativeTypeName("#define CO_E_CANTDETERMINECLASS _HRESULT_TYPEDEF_(0x800401F2L)")]
        public const int CO_E_CANTDETERMINECLASS = unchecked((int)(0x800401F2));

        [NativeTypeName("#define CO_E_CLASSSTRING _HRESULT_TYPEDEF_(0x800401F3L)")]
        public const int CO_E_CLASSSTRING = unchecked((int)(0x800401F3));

        [NativeTypeName("#define CO_E_IIDSTRING _HRESULT_TYPEDEF_(0x800401F4L)")]
        public const int CO_E_IIDSTRING = unchecked((int)(0x800401F4));

        [NativeTypeName("#define CO_E_APPNOTFOUND _HRESULT_TYPEDEF_(0x800401F5L)")]
        public const int CO_E_APPNOTFOUND = unchecked((int)(0x800401F5));

        [NativeTypeName("#define CO_E_APPSINGLEUSE _HRESULT_TYPEDEF_(0x800401F6L)")]
        public const int CO_E_APPSINGLEUSE = unchecked((int)(0x800401F6));

        [NativeTypeName("#define CO_E_ERRORINAPP _HRESULT_TYPEDEF_(0x800401F7L)")]
        public const int CO_E_ERRORINAPP = unchecked((int)(0x800401F7));

        [NativeTypeName("#define CO_E_DLLNOTFOUND _HRESULT_TYPEDEF_(0x800401F8L)")]
        public const int CO_E_DLLNOTFOUND = unchecked((int)(0x800401F8));

        [NativeTypeName("#define CO_E_ERRORINDLL _HRESULT_TYPEDEF_(0x800401F9L)")]
        public const int CO_E_ERRORINDLL = unchecked((int)(0x800401F9));

        [NativeTypeName("#define CO_E_WRONGOSFORAPP _HRESULT_TYPEDEF_(0x800401FAL)")]
        public const int CO_E_WRONGOSFORAPP = unchecked((int)(0x800401FA));

        [NativeTypeName("#define CO_E_OBJNOTREG _HRESULT_TYPEDEF_(0x800401FBL)")]
        public const int CO_E_OBJNOTREG = unchecked((int)(0x800401FB));

        [NativeTypeName("#define CO_E_OBJISREG _HRESULT_TYPEDEF_(0x800401FCL)")]
        public const int CO_E_OBJISREG = unchecked((int)(0x800401FC));

        [NativeTypeName("#define CO_E_OBJNOTCONNECTED _HRESULT_TYPEDEF_(0x800401FDL)")]
        public const int CO_E_OBJNOTCONNECTED = unchecked((int)(0x800401FD));

        [NativeTypeName("#define CO_E_APPDIDNTREG _HRESULT_TYPEDEF_(0x800401FEL)")]
        public const int CO_E_APPDIDNTREG = unchecked((int)(0x800401FE));

        [NativeTypeName("#define CO_E_RELEASED _HRESULT_TYPEDEF_(0x800401FFL)")]
        public const int CO_E_RELEASED = unchecked((int)(0x800401FF));

        [NativeTypeName("#define EVENT_E_FIRST 0x80040200L")]
        public const uint EVENT_E_FIRST = 0x80040200;

        [NativeTypeName("#define EVENT_E_LAST 0x8004021FL")]
        public const uint EVENT_E_LAST = 0x8004021F;

        [NativeTypeName("#define EVENT_S_FIRST 0x00040200L")]
        public const int EVENT_S_FIRST = 0x00040200;

        [NativeTypeName("#define EVENT_S_LAST 0x0004021FL")]
        public const int EVENT_S_LAST = 0x0004021F;

        [NativeTypeName("#define EVENT_S_SOME_SUBSCRIBERS_FAILED _HRESULT_TYPEDEF_(0x00040200L)")]
        public const int EVENT_S_SOME_SUBSCRIBERS_FAILED = ((int)(0x00040200));

        [NativeTypeName("#define EVENT_E_ALL_SUBSCRIBERS_FAILED _HRESULT_TYPEDEF_(0x80040201L)")]
        public const int EVENT_E_ALL_SUBSCRIBERS_FAILED = unchecked((int)(0x80040201));

        [NativeTypeName("#define EVENT_S_NOSUBSCRIBERS _HRESULT_TYPEDEF_(0x00040202L)")]
        public const int EVENT_S_NOSUBSCRIBERS = ((int)(0x00040202));

        [NativeTypeName("#define EVENT_E_QUERYSYNTAX _HRESULT_TYPEDEF_(0x80040203L)")]
        public const int EVENT_E_QUERYSYNTAX = unchecked((int)(0x80040203));

        [NativeTypeName("#define EVENT_E_QUERYFIELD _HRESULT_TYPEDEF_(0x80040204L)")]
        public const int EVENT_E_QUERYFIELD = unchecked((int)(0x80040204));

        [NativeTypeName("#define EVENT_E_INTERNALEXCEPTION _HRESULT_TYPEDEF_(0x80040205L)")]
        public const int EVENT_E_INTERNALEXCEPTION = unchecked((int)(0x80040205));

        [NativeTypeName("#define EVENT_E_INTERNALERROR _HRESULT_TYPEDEF_(0x80040206L)")]
        public const int EVENT_E_INTERNALERROR = unchecked((int)(0x80040206));

        [NativeTypeName("#define EVENT_E_INVALID_PER_USER_SID _HRESULT_TYPEDEF_(0x80040207L)")]
        public const int EVENT_E_INVALID_PER_USER_SID = unchecked((int)(0x80040207));

        [NativeTypeName("#define EVENT_E_USER_EXCEPTION _HRESULT_TYPEDEF_(0x80040208L)")]
        public const int EVENT_E_USER_EXCEPTION = unchecked((int)(0x80040208));

        [NativeTypeName("#define EVENT_E_TOO_MANY_METHODS _HRESULT_TYPEDEF_(0x80040209L)")]
        public const int EVENT_E_TOO_MANY_METHODS = unchecked((int)(0x80040209));

        [NativeTypeName("#define EVENT_E_MISSING_EVENTCLASS _HRESULT_TYPEDEF_(0x8004020AL)")]
        public const int EVENT_E_MISSING_EVENTCLASS = unchecked((int)(0x8004020A));

        [NativeTypeName("#define EVENT_E_NOT_ALL_REMOVED _HRESULT_TYPEDEF_(0x8004020BL)")]
        public const int EVENT_E_NOT_ALL_REMOVED = unchecked((int)(0x8004020B));

        [NativeTypeName("#define EVENT_E_COMPLUS_NOT_INSTALLED _HRESULT_TYPEDEF_(0x8004020CL)")]
        public const int EVENT_E_COMPLUS_NOT_INSTALLED = unchecked((int)(0x8004020C));

        [NativeTypeName("#define EVENT_E_CANT_MODIFY_OR_DELETE_UNCONFIGURED_OBJECT _HRESULT_TYPEDEF_(0x8004020DL)")]
        public const int EVENT_E_CANT_MODIFY_OR_DELETE_UNCONFIGURED_OBJECT = unchecked((int)(0x8004020D));

        [NativeTypeName("#define EVENT_E_CANT_MODIFY_OR_DELETE_CONFIGURED_OBJECT _HRESULT_TYPEDEF_(0x8004020EL)")]
        public const int EVENT_E_CANT_MODIFY_OR_DELETE_CONFIGURED_OBJECT = unchecked((int)(0x8004020E));

        [NativeTypeName("#define EVENT_E_INVALID_EVENT_CLASS_PARTITION _HRESULT_TYPEDEF_(0x8004020FL)")]
        public const int EVENT_E_INVALID_EVENT_CLASS_PARTITION = unchecked((int)(0x8004020F));

        [NativeTypeName("#define EVENT_E_PER_USER_SID_NOT_LOGGED_ON _HRESULT_TYPEDEF_(0x80040210L)")]
        public const int EVENT_E_PER_USER_SID_NOT_LOGGED_ON = unchecked((int)(0x80040210));

        [NativeTypeName("#define TPC_E_INVALID_PROPERTY _HRESULT_TYPEDEF_(0x80040241L)")]
        public const int TPC_E_INVALID_PROPERTY = unchecked((int)(0x80040241));

        [NativeTypeName("#define TPC_E_NO_DEFAULT_TABLET _HRESULT_TYPEDEF_(0x80040212L)")]
        public const int TPC_E_NO_DEFAULT_TABLET = unchecked((int)(0x80040212));

        [NativeTypeName("#define TPC_E_UNKNOWN_PROPERTY _HRESULT_TYPEDEF_(0x8004021BL)")]
        public const int TPC_E_UNKNOWN_PROPERTY = unchecked((int)(0x8004021B));

        [NativeTypeName("#define TPC_E_INVALID_INPUT_RECT _HRESULT_TYPEDEF_(0x80040219L)")]
        public const int TPC_E_INVALID_INPUT_RECT = unchecked((int)(0x80040219));

        [NativeTypeName("#define TPC_E_INVALID_STROKE _HRESULT_TYPEDEF_(0x80040222L)")]
        public const int TPC_E_INVALID_STROKE = unchecked((int)(0x80040222));

        [NativeTypeName("#define TPC_E_INITIALIZE_FAIL _HRESULT_TYPEDEF_(0x80040223L)")]
        public const int TPC_E_INITIALIZE_FAIL = unchecked((int)(0x80040223));

        [NativeTypeName("#define TPC_E_NOT_RELEVANT _HRESULT_TYPEDEF_(0x80040232L)")]
        public const int TPC_E_NOT_RELEVANT = unchecked((int)(0x80040232));

        [NativeTypeName("#define TPC_E_INVALID_PACKET_DESCRIPTION _HRESULT_TYPEDEF_(0x80040233L)")]
        public const int TPC_E_INVALID_PACKET_DESCRIPTION = unchecked((int)(0x80040233));

        [NativeTypeName("#define TPC_E_RECOGNIZER_NOT_REGISTERED _HRESULT_TYPEDEF_(0x80040235L)")]
        public const int TPC_E_RECOGNIZER_NOT_REGISTERED = unchecked((int)(0x80040235));

        [NativeTypeName("#define TPC_E_INVALID_RIGHTS _HRESULT_TYPEDEF_(0x80040236L)")]
        public const int TPC_E_INVALID_RIGHTS = unchecked((int)(0x80040236));

        [NativeTypeName("#define TPC_E_OUT_OF_ORDER_CALL _HRESULT_TYPEDEF_(0x80040237L)")]
        public const int TPC_E_OUT_OF_ORDER_CALL = unchecked((int)(0x80040237));

        [NativeTypeName("#define TPC_E_QUEUE_FULL _HRESULT_TYPEDEF_(0x80040238L)")]
        public const int TPC_E_QUEUE_FULL = unchecked((int)(0x80040238));

        [NativeTypeName("#define TPC_E_INVALID_CONFIGURATION _HRESULT_TYPEDEF_(0x80040239L)")]
        public const int TPC_E_INVALID_CONFIGURATION = unchecked((int)(0x80040239));

        [NativeTypeName("#define TPC_E_INVALID_DATA_FROM_RECOGNIZER _HRESULT_TYPEDEF_(0x8004023AL)")]
        public const int TPC_E_INVALID_DATA_FROM_RECOGNIZER = unchecked((int)(0x8004023A));

        [NativeTypeName("#define TPC_S_TRUNCATED _HRESULT_TYPEDEF_(0x00040252L)")]
        public const int TPC_S_TRUNCATED = ((int)(0x00040252));

        [NativeTypeName("#define TPC_S_INTERRUPTED _HRESULT_TYPEDEF_(0x00040253L)")]
        public const int TPC_S_INTERRUPTED = ((int)(0x00040253));

        [NativeTypeName("#define TPC_S_NO_DATA_TO_PROCESS _HRESULT_TYPEDEF_(0x00040254L)")]
        public const int TPC_S_NO_DATA_TO_PROCESS = ((int)(0x00040254));

        [NativeTypeName("#define XACT_E_FIRST 0x8004D000")]
        public const uint XACT_E_FIRST = 0x8004D000;

        [NativeTypeName("#define XACT_E_LAST 0x8004D02B")]
        public const uint XACT_E_LAST = 0x8004D02B;

        [NativeTypeName("#define XACT_S_FIRST 0x0004D000")]
        public const int XACT_S_FIRST = 0x0004D000;

        [NativeTypeName("#define XACT_S_LAST 0x0004D010")]
        public const int XACT_S_LAST = 0x0004D010;

        [NativeTypeName("#define XACT_E_ALREADYOTHERSINGLEPHASE _HRESULT_TYPEDEF_(0x8004D000L)")]
        public const int XACT_E_ALREADYOTHERSINGLEPHASE = unchecked((int)(0x8004D000));

        [NativeTypeName("#define XACT_E_CANTRETAIN _HRESULT_TYPEDEF_(0x8004D001L)")]
        public const int XACT_E_CANTRETAIN = unchecked((int)(0x8004D001));

        [NativeTypeName("#define XACT_E_COMMITFAILED _HRESULT_TYPEDEF_(0x8004D002L)")]
        public const int XACT_E_COMMITFAILED = unchecked((int)(0x8004D002));

        [NativeTypeName("#define XACT_E_COMMITPREVENTED _HRESULT_TYPEDEF_(0x8004D003L)")]
        public const int XACT_E_COMMITPREVENTED = unchecked((int)(0x8004D003));

        [NativeTypeName("#define XACT_E_HEURISTICABORT _HRESULT_TYPEDEF_(0x8004D004L)")]
        public const int XACT_E_HEURISTICABORT = unchecked((int)(0x8004D004));

        [NativeTypeName("#define XACT_E_HEURISTICCOMMIT _HRESULT_TYPEDEF_(0x8004D005L)")]
        public const int XACT_E_HEURISTICCOMMIT = unchecked((int)(0x8004D005));

        [NativeTypeName("#define XACT_E_HEURISTICDAMAGE _HRESULT_TYPEDEF_(0x8004D006L)")]
        public const int XACT_E_HEURISTICDAMAGE = unchecked((int)(0x8004D006));

        [NativeTypeName("#define XACT_E_HEURISTICDANGER _HRESULT_TYPEDEF_(0x8004D007L)")]
        public const int XACT_E_HEURISTICDANGER = unchecked((int)(0x8004D007));

        [NativeTypeName("#define XACT_E_ISOLATIONLEVEL _HRESULT_TYPEDEF_(0x8004D008L)")]
        public const int XACT_E_ISOLATIONLEVEL = unchecked((int)(0x8004D008));

        [NativeTypeName("#define XACT_E_NOASYNC _HRESULT_TYPEDEF_(0x8004D009L)")]
        public const int XACT_E_NOASYNC = unchecked((int)(0x8004D009));

        [NativeTypeName("#define XACT_E_NOENLIST _HRESULT_TYPEDEF_(0x8004D00AL)")]
        public const int XACT_E_NOENLIST = unchecked((int)(0x8004D00A));

        [NativeTypeName("#define XACT_E_NOISORETAIN _HRESULT_TYPEDEF_(0x8004D00BL)")]
        public const int XACT_E_NOISORETAIN = unchecked((int)(0x8004D00B));

        [NativeTypeName("#define XACT_E_NORESOURCE _HRESULT_TYPEDEF_(0x8004D00CL)")]
        public const int XACT_E_NORESOURCE = unchecked((int)(0x8004D00C));

        [NativeTypeName("#define XACT_E_NOTCURRENT _HRESULT_TYPEDEF_(0x8004D00DL)")]
        public const int XACT_E_NOTCURRENT = unchecked((int)(0x8004D00D));

        [NativeTypeName("#define XACT_E_NOTRANSACTION _HRESULT_TYPEDEF_(0x8004D00EL)")]
        public const int XACT_E_NOTRANSACTION = unchecked((int)(0x8004D00E));

        [NativeTypeName("#define XACT_E_NOTSUPPORTED _HRESULT_TYPEDEF_(0x8004D00FL)")]
        public const int XACT_E_NOTSUPPORTED = unchecked((int)(0x8004D00F));

        [NativeTypeName("#define XACT_E_UNKNOWNRMGRID _HRESULT_TYPEDEF_(0x8004D010L)")]
        public const int XACT_E_UNKNOWNRMGRID = unchecked((int)(0x8004D010));

        [NativeTypeName("#define XACT_E_WRONGSTATE _HRESULT_TYPEDEF_(0x8004D011L)")]
        public const int XACT_E_WRONGSTATE = unchecked((int)(0x8004D011));

        [NativeTypeName("#define XACT_E_WRONGUOW _HRESULT_TYPEDEF_(0x8004D012L)")]
        public const int XACT_E_WRONGUOW = unchecked((int)(0x8004D012));

        [NativeTypeName("#define XACT_E_XTIONEXISTS _HRESULT_TYPEDEF_(0x8004D013L)")]
        public const int XACT_E_XTIONEXISTS = unchecked((int)(0x8004D013));

        [NativeTypeName("#define XACT_E_NOIMPORTOBJECT _HRESULT_TYPEDEF_(0x8004D014L)")]
        public const int XACT_E_NOIMPORTOBJECT = unchecked((int)(0x8004D014));

        [NativeTypeName("#define XACT_E_INVALIDCOOKIE _HRESULT_TYPEDEF_(0x8004D015L)")]
        public const int XACT_E_INVALIDCOOKIE = unchecked((int)(0x8004D015));

        [NativeTypeName("#define XACT_E_INDOUBT _HRESULT_TYPEDEF_(0x8004D016L)")]
        public const int XACT_E_INDOUBT = unchecked((int)(0x8004D016));

        [NativeTypeName("#define XACT_E_NOTIMEOUT _HRESULT_TYPEDEF_(0x8004D017L)")]
        public const int XACT_E_NOTIMEOUT = unchecked((int)(0x8004D017));

        [NativeTypeName("#define XACT_E_ALREADYINPROGRESS _HRESULT_TYPEDEF_(0x8004D018L)")]
        public const int XACT_E_ALREADYINPROGRESS = unchecked((int)(0x8004D018));

        [NativeTypeName("#define XACT_E_ABORTED _HRESULT_TYPEDEF_(0x8004D019L)")]
        public const int XACT_E_ABORTED = unchecked((int)(0x8004D019));

        [NativeTypeName("#define XACT_E_LOGFULL _HRESULT_TYPEDEF_(0x8004D01AL)")]
        public const int XACT_E_LOGFULL = unchecked((int)(0x8004D01A));

        [NativeTypeName("#define XACT_E_TMNOTAVAILABLE _HRESULT_TYPEDEF_(0x8004D01BL)")]
        public const int XACT_E_TMNOTAVAILABLE = unchecked((int)(0x8004D01B));

        [NativeTypeName("#define XACT_E_CONNECTION_DOWN _HRESULT_TYPEDEF_(0x8004D01CL)")]
        public const int XACT_E_CONNECTION_DOWN = unchecked((int)(0x8004D01C));

        [NativeTypeName("#define XACT_E_CONNECTION_DENIED _HRESULT_TYPEDEF_(0x8004D01DL)")]
        public const int XACT_E_CONNECTION_DENIED = unchecked((int)(0x8004D01D));

        [NativeTypeName("#define XACT_E_REENLISTTIMEOUT _HRESULT_TYPEDEF_(0x8004D01EL)")]
        public const int XACT_E_REENLISTTIMEOUT = unchecked((int)(0x8004D01E));

        [NativeTypeName("#define XACT_E_TIP_CONNECT_FAILED _HRESULT_TYPEDEF_(0x8004D01FL)")]
        public const int XACT_E_TIP_CONNECT_FAILED = unchecked((int)(0x8004D01F));

        [NativeTypeName("#define XACT_E_TIP_PROTOCOL_ERROR _HRESULT_TYPEDEF_(0x8004D020L)")]
        public const int XACT_E_TIP_PROTOCOL_ERROR = unchecked((int)(0x8004D020));

        [NativeTypeName("#define XACT_E_TIP_PULL_FAILED _HRESULT_TYPEDEF_(0x8004D021L)")]
        public const int XACT_E_TIP_PULL_FAILED = unchecked((int)(0x8004D021));

        [NativeTypeName("#define XACT_E_DEST_TMNOTAVAILABLE _HRESULT_TYPEDEF_(0x8004D022L)")]
        public const int XACT_E_DEST_TMNOTAVAILABLE = unchecked((int)(0x8004D022));

        [NativeTypeName("#define XACT_E_TIP_DISABLED _HRESULT_TYPEDEF_(0x8004D023L)")]
        public const int XACT_E_TIP_DISABLED = unchecked((int)(0x8004D023));

        [NativeTypeName("#define XACT_E_NETWORK_TX_DISABLED _HRESULT_TYPEDEF_(0x8004D024L)")]
        public const int XACT_E_NETWORK_TX_DISABLED = unchecked((int)(0x8004D024));

        [NativeTypeName("#define XACT_E_PARTNER_NETWORK_TX_DISABLED _HRESULT_TYPEDEF_(0x8004D025L)")]
        public const int XACT_E_PARTNER_NETWORK_TX_DISABLED = unchecked((int)(0x8004D025));

        [NativeTypeName("#define XACT_E_XA_TX_DISABLED _HRESULT_TYPEDEF_(0x8004D026L)")]
        public const int XACT_E_XA_TX_DISABLED = unchecked((int)(0x8004D026));

        [NativeTypeName("#define XACT_E_UNABLE_TO_READ_DTC_CONFIG _HRESULT_TYPEDEF_(0x8004D027L)")]
        public const int XACT_E_UNABLE_TO_READ_DTC_CONFIG = unchecked((int)(0x8004D027));

        [NativeTypeName("#define XACT_E_UNABLE_TO_LOAD_DTC_PROXY _HRESULT_TYPEDEF_(0x8004D028L)")]
        public const int XACT_E_UNABLE_TO_LOAD_DTC_PROXY = unchecked((int)(0x8004D028));

        [NativeTypeName("#define XACT_E_ABORTING _HRESULT_TYPEDEF_(0x8004D029L)")]
        public const int XACT_E_ABORTING = unchecked((int)(0x8004D029));

        [NativeTypeName("#define XACT_E_PUSH_COMM_FAILURE _HRESULT_TYPEDEF_(0x8004D02AL)")]
        public const int XACT_E_PUSH_COMM_FAILURE = unchecked((int)(0x8004D02A));

        [NativeTypeName("#define XACT_E_PULL_COMM_FAILURE _HRESULT_TYPEDEF_(0x8004D02BL)")]
        public const int XACT_E_PULL_COMM_FAILURE = unchecked((int)(0x8004D02B));

        [NativeTypeName("#define XACT_E_LU_TX_DISABLED _HRESULT_TYPEDEF_(0x8004D02CL)")]
        public const int XACT_E_LU_TX_DISABLED = unchecked((int)(0x8004D02C));

        [NativeTypeName("#define XACT_E_CLERKNOTFOUND _HRESULT_TYPEDEF_(0x8004D080L)")]
        public const int XACT_E_CLERKNOTFOUND = unchecked((int)(0x8004D080));

        [NativeTypeName("#define XACT_E_CLERKEXISTS _HRESULT_TYPEDEF_(0x8004D081L)")]
        public const int XACT_E_CLERKEXISTS = unchecked((int)(0x8004D081));

        [NativeTypeName("#define XACT_E_RECOVERYINPROGRESS _HRESULT_TYPEDEF_(0x8004D082L)")]
        public const int XACT_E_RECOVERYINPROGRESS = unchecked((int)(0x8004D082));

        [NativeTypeName("#define XACT_E_TRANSACTIONCLOSED _HRESULT_TYPEDEF_(0x8004D083L)")]
        public const int XACT_E_TRANSACTIONCLOSED = unchecked((int)(0x8004D083));

        [NativeTypeName("#define XACT_E_INVALIDLSN _HRESULT_TYPEDEF_(0x8004D084L)")]
        public const int XACT_E_INVALIDLSN = unchecked((int)(0x8004D084));

        [NativeTypeName("#define XACT_E_REPLAYREQUEST _HRESULT_TYPEDEF_(0x8004D085L)")]
        public const int XACT_E_REPLAYREQUEST = unchecked((int)(0x8004D085));

        [NativeTypeName("#define XACT_S_ASYNC _HRESULT_TYPEDEF_(0x0004D000L)")]
        public const int XACT_S_ASYNC = ((int)(0x0004D000));

        [NativeTypeName("#define XACT_S_DEFECT _HRESULT_TYPEDEF_(0x0004D001L)")]
        public const int XACT_S_DEFECT = ((int)(0x0004D001));

        [NativeTypeName("#define XACT_S_READONLY _HRESULT_TYPEDEF_(0x0004D002L)")]
        public const int XACT_S_READONLY = ((int)(0x0004D002));

        [NativeTypeName("#define XACT_S_SOMENORETAIN _HRESULT_TYPEDEF_(0x0004D003L)")]
        public const int XACT_S_SOMENORETAIN = ((int)(0x0004D003));

        [NativeTypeName("#define XACT_S_OKINFORM _HRESULT_TYPEDEF_(0x0004D004L)")]
        public const int XACT_S_OKINFORM = ((int)(0x0004D004));

        [NativeTypeName("#define XACT_S_MADECHANGESCONTENT _HRESULT_TYPEDEF_(0x0004D005L)")]
        public const int XACT_S_MADECHANGESCONTENT = ((int)(0x0004D005));

        [NativeTypeName("#define XACT_S_MADECHANGESINFORM _HRESULT_TYPEDEF_(0x0004D006L)")]
        public const int XACT_S_MADECHANGESINFORM = ((int)(0x0004D006));

        [NativeTypeName("#define XACT_S_ALLNORETAIN _HRESULT_TYPEDEF_(0x0004D007L)")]
        public const int XACT_S_ALLNORETAIN = ((int)(0x0004D007));

        [NativeTypeName("#define XACT_S_ABORTING _HRESULT_TYPEDEF_(0x0004D008L)")]
        public const int XACT_S_ABORTING = ((int)(0x0004D008));

        [NativeTypeName("#define XACT_S_SINGLEPHASE _HRESULT_TYPEDEF_(0x0004D009L)")]
        public const int XACT_S_SINGLEPHASE = ((int)(0x0004D009));

        [NativeTypeName("#define XACT_S_LOCALLY_OK _HRESULT_TYPEDEF_(0x0004D00AL)")]
        public const int XACT_S_LOCALLY_OK = ((int)(0x0004D00A));

        [NativeTypeName("#define XACT_S_LASTRESOURCEMANAGER _HRESULT_TYPEDEF_(0x0004D010L)")]
        public const int XACT_S_LASTRESOURCEMANAGER = ((int)(0x0004D010));

        [NativeTypeName("#define CONTEXT_E_FIRST 0x8004E000L")]
        public const uint CONTEXT_E_FIRST = 0x8004E000;

        [NativeTypeName("#define CONTEXT_E_LAST 0x8004E02FL")]
        public const uint CONTEXT_E_LAST = 0x8004E02F;

        [NativeTypeName("#define CONTEXT_S_FIRST 0x0004E000L")]
        public const int CONTEXT_S_FIRST = 0x0004E000;

        [NativeTypeName("#define CONTEXT_S_LAST 0x0004E02FL")]
        public const int CONTEXT_S_LAST = 0x0004E02F;

        [NativeTypeName("#define CONTEXT_E_ABORTED _HRESULT_TYPEDEF_(0x8004E002L)")]
        public const int CONTEXT_E_ABORTED = unchecked((int)(0x8004E002));

        [NativeTypeName("#define CONTEXT_E_ABORTING _HRESULT_TYPEDEF_(0x8004E003L)")]
        public const int CONTEXT_E_ABORTING = unchecked((int)(0x8004E003));

        [NativeTypeName("#define CONTEXT_E_NOCONTEXT _HRESULT_TYPEDEF_(0x8004E004L)")]
        public const int CONTEXT_E_NOCONTEXT = unchecked((int)(0x8004E004));

        [NativeTypeName("#define CONTEXT_E_WOULD_DEADLOCK _HRESULT_TYPEDEF_(0x8004E005L)")]
        public const int CONTEXT_E_WOULD_DEADLOCK = unchecked((int)(0x8004E005));

        [NativeTypeName("#define CONTEXT_E_SYNCH_TIMEOUT _HRESULT_TYPEDEF_(0x8004E006L)")]
        public const int CONTEXT_E_SYNCH_TIMEOUT = unchecked((int)(0x8004E006));

        [NativeTypeName("#define CONTEXT_E_OLDREF _HRESULT_TYPEDEF_(0x8004E007L)")]
        public const int CONTEXT_E_OLDREF = unchecked((int)(0x8004E007));

        [NativeTypeName("#define CONTEXT_E_ROLENOTFOUND _HRESULT_TYPEDEF_(0x8004E00CL)")]
        public const int CONTEXT_E_ROLENOTFOUND = unchecked((int)(0x8004E00C));

        [NativeTypeName("#define CONTEXT_E_TMNOTAVAILABLE _HRESULT_TYPEDEF_(0x8004E00FL)")]
        public const int CONTEXT_E_TMNOTAVAILABLE = unchecked((int)(0x8004E00F));

        [NativeTypeName("#define CO_E_ACTIVATIONFAILED _HRESULT_TYPEDEF_(0x8004E021L)")]
        public const int CO_E_ACTIVATIONFAILED = unchecked((int)(0x8004E021));

        [NativeTypeName("#define CO_E_ACTIVATIONFAILED_EVENTLOGGED _HRESULT_TYPEDEF_(0x8004E022L)")]
        public const int CO_E_ACTIVATIONFAILED_EVENTLOGGED = unchecked((int)(0x8004E022));

        [NativeTypeName("#define CO_E_ACTIVATIONFAILED_CATALOGERROR _HRESULT_TYPEDEF_(0x8004E023L)")]
        public const int CO_E_ACTIVATIONFAILED_CATALOGERROR = unchecked((int)(0x8004E023));

        [NativeTypeName("#define CO_E_ACTIVATIONFAILED_TIMEOUT _HRESULT_TYPEDEF_(0x8004E024L)")]
        public const int CO_E_ACTIVATIONFAILED_TIMEOUT = unchecked((int)(0x8004E024));

        [NativeTypeName("#define CO_E_INITIALIZATIONFAILED _HRESULT_TYPEDEF_(0x8004E025L)")]
        public const int CO_E_INITIALIZATIONFAILED = unchecked((int)(0x8004E025));

        [NativeTypeName("#define CONTEXT_E_NOJIT _HRESULT_TYPEDEF_(0x8004E026L)")]
        public const int CONTEXT_E_NOJIT = unchecked((int)(0x8004E026));

        [NativeTypeName("#define CONTEXT_E_NOTRANSACTION _HRESULT_TYPEDEF_(0x8004E027L)")]
        public const int CONTEXT_E_NOTRANSACTION = unchecked((int)(0x8004E027));

        [NativeTypeName("#define CO_E_THREADINGMODEL_CHANGED _HRESULT_TYPEDEF_(0x8004E028L)")]
        public const int CO_E_THREADINGMODEL_CHANGED = unchecked((int)(0x8004E028));

        [NativeTypeName("#define CO_E_NOIISINTRINSICS _HRESULT_TYPEDEF_(0x8004E029L)")]
        public const int CO_E_NOIISINTRINSICS = unchecked((int)(0x8004E029));

        [NativeTypeName("#define CO_E_NOCOOKIES _HRESULT_TYPEDEF_(0x8004E02AL)")]
        public const int CO_E_NOCOOKIES = unchecked((int)(0x8004E02A));

        [NativeTypeName("#define CO_E_DBERROR _HRESULT_TYPEDEF_(0x8004E02BL)")]
        public const int CO_E_DBERROR = unchecked((int)(0x8004E02B));

        [NativeTypeName("#define CO_E_NOTPOOLED _HRESULT_TYPEDEF_(0x8004E02CL)")]
        public const int CO_E_NOTPOOLED = unchecked((int)(0x8004E02C));

        [NativeTypeName("#define CO_E_NOTCONSTRUCTED _HRESULT_TYPEDEF_(0x8004E02DL)")]
        public const int CO_E_NOTCONSTRUCTED = unchecked((int)(0x8004E02D));

        [NativeTypeName("#define CO_E_NOSYNCHRONIZATION _HRESULT_TYPEDEF_(0x8004E02EL)")]
        public const int CO_E_NOSYNCHRONIZATION = unchecked((int)(0x8004E02E));

        [NativeTypeName("#define CO_E_ISOLEVELMISMATCH _HRESULT_TYPEDEF_(0x8004E02FL)")]
        public const int CO_E_ISOLEVELMISMATCH = unchecked((int)(0x8004E02F));

        [NativeTypeName("#define CO_E_CALL_OUT_OF_TX_SCOPE_NOT_ALLOWED _HRESULT_TYPEDEF_(0x8004E030L)")]
        public const int CO_E_CALL_OUT_OF_TX_SCOPE_NOT_ALLOWED = unchecked((int)(0x8004E030));

        [NativeTypeName("#define CO_E_EXIT_TRANSACTION_SCOPE_NOT_CALLED _HRESULT_TYPEDEF_(0x8004E031L)")]
        public const int CO_E_EXIT_TRANSACTION_SCOPE_NOT_CALLED = unchecked((int)(0x8004E031));

        [NativeTypeName("#define OLE_S_USEREG _HRESULT_TYPEDEF_(0x00040000L)")]
        public const int OLE_S_USEREG = ((int)(0x00040000));

        [NativeTypeName("#define OLE_S_STATIC _HRESULT_TYPEDEF_(0x00040001L)")]
        public const int OLE_S_STATIC = ((int)(0x00040001));

        [NativeTypeName("#define OLE_S_MAC_CLIPFORMAT _HRESULT_TYPEDEF_(0x00040002L)")]
        public const int OLE_S_MAC_CLIPFORMAT = ((int)(0x00040002));

        [NativeTypeName("#define DRAGDROP_S_DROP _HRESULT_TYPEDEF_(0x00040100L)")]
        public const int DRAGDROP_S_DROP = ((int)(0x00040100));

        [NativeTypeName("#define DRAGDROP_S_CANCEL _HRESULT_TYPEDEF_(0x00040101L)")]
        public const int DRAGDROP_S_CANCEL = ((int)(0x00040101));

        [NativeTypeName("#define DRAGDROP_S_USEDEFAULTCURSORS _HRESULT_TYPEDEF_(0x00040102L)")]
        public const int DRAGDROP_S_USEDEFAULTCURSORS = ((int)(0x00040102));

        [NativeTypeName("#define DATA_S_SAMEFORMATETC _HRESULT_TYPEDEF_(0x00040130L)")]
        public const int DATA_S_SAMEFORMATETC = ((int)(0x00040130));

        [NativeTypeName("#define VIEW_S_ALREADY_FROZEN _HRESULT_TYPEDEF_(0x00040140L)")]
        public const int VIEW_S_ALREADY_FROZEN = ((int)(0x00040140));

        [NativeTypeName("#define CACHE_S_FORMATETC_NOTSUPPORTED _HRESULT_TYPEDEF_(0x00040170L)")]
        public const int CACHE_S_FORMATETC_NOTSUPPORTED = ((int)(0x00040170));

        [NativeTypeName("#define CACHE_S_SAMECACHE _HRESULT_TYPEDEF_(0x00040171L)")]
        public const int CACHE_S_SAMECACHE = ((int)(0x00040171));

        [NativeTypeName("#define CACHE_S_SOMECACHES_NOTUPDATED _HRESULT_TYPEDEF_(0x00040172L)")]
        public const int CACHE_S_SOMECACHES_NOTUPDATED = ((int)(0x00040172));

        [NativeTypeName("#define OLEOBJ_S_INVALIDVERB _HRESULT_TYPEDEF_(0x00040180L)")]
        public const int OLEOBJ_S_INVALIDVERB = ((int)(0x00040180));

        [NativeTypeName("#define OLEOBJ_S_CANNOT_DOVERB_NOW _HRESULT_TYPEDEF_(0x00040181L)")]
        public const int OLEOBJ_S_CANNOT_DOVERB_NOW = ((int)(0x00040181));

        [NativeTypeName("#define OLEOBJ_S_INVALIDHWND _HRESULT_TYPEDEF_(0x00040182L)")]
        public const int OLEOBJ_S_INVALIDHWND = ((int)(0x00040182));

        [NativeTypeName("#define INPLACE_S_TRUNCATED _HRESULT_TYPEDEF_(0x000401A0L)")]
        public const int INPLACE_S_TRUNCATED = ((int)(0x000401A0));

        [NativeTypeName("#define CONVERT10_S_NO_PRESENTATION _HRESULT_TYPEDEF_(0x000401C0L)")]
        public const int CONVERT10_S_NO_PRESENTATION = ((int)(0x000401C0));

        [NativeTypeName("#define MK_S_REDUCED_TO_SELF _HRESULT_TYPEDEF_(0x000401E2L)")]
        public const int MK_S_REDUCED_TO_SELF = ((int)(0x000401E2));

        [NativeTypeName("#define MK_S_ME _HRESULT_TYPEDEF_(0x000401E4L)")]
        public const int MK_S_ME = ((int)(0x000401E4));

        [NativeTypeName("#define MK_S_HIM _HRESULT_TYPEDEF_(0x000401E5L)")]
        public const int MK_S_HIM = ((int)(0x000401E5));

        [NativeTypeName("#define MK_S_US _HRESULT_TYPEDEF_(0x000401E6L)")]
        public const int MK_S_US = ((int)(0x000401E6));

        [NativeTypeName("#define MK_S_MONIKERALREADYREGISTERED _HRESULT_TYPEDEF_(0x000401E7L)")]
        public const int MK_S_MONIKERALREADYREGISTERED = ((int)(0x000401E7));

        [NativeTypeName("#define SCHED_S_TASK_READY _HRESULT_TYPEDEF_(0x00041300L)")]
        public const int SCHED_S_TASK_READY = ((int)(0x00041300));

        [NativeTypeName("#define SCHED_S_TASK_RUNNING _HRESULT_TYPEDEF_(0x00041301L)")]
        public const int SCHED_S_TASK_RUNNING = ((int)(0x00041301));

        [NativeTypeName("#define SCHED_S_TASK_DISABLED _HRESULT_TYPEDEF_(0x00041302L)")]
        public const int SCHED_S_TASK_DISABLED = ((int)(0x00041302));

        [NativeTypeName("#define SCHED_S_TASK_HAS_NOT_RUN _HRESULT_TYPEDEF_(0x00041303L)")]
        public const int SCHED_S_TASK_HAS_NOT_RUN = ((int)(0x00041303));

        [NativeTypeName("#define SCHED_S_TASK_NO_MORE_RUNS _HRESULT_TYPEDEF_(0x00041304L)")]
        public const int SCHED_S_TASK_NO_MORE_RUNS = ((int)(0x00041304));

        [NativeTypeName("#define SCHED_S_TASK_NOT_SCHEDULED _HRESULT_TYPEDEF_(0x00041305L)")]
        public const int SCHED_S_TASK_NOT_SCHEDULED = ((int)(0x00041305));

        [NativeTypeName("#define SCHED_S_TASK_TERMINATED _HRESULT_TYPEDEF_(0x00041306L)")]
        public const int SCHED_S_TASK_TERMINATED = ((int)(0x00041306));

        [NativeTypeName("#define SCHED_S_TASK_NO_VALID_TRIGGERS _HRESULT_TYPEDEF_(0x00041307L)")]
        public const int SCHED_S_TASK_NO_VALID_TRIGGERS = ((int)(0x00041307));

        [NativeTypeName("#define SCHED_S_EVENT_TRIGGER _HRESULT_TYPEDEF_(0x00041308L)")]
        public const int SCHED_S_EVENT_TRIGGER = ((int)(0x00041308));

        [NativeTypeName("#define SCHED_E_TRIGGER_NOT_FOUND _HRESULT_TYPEDEF_(0x80041309L)")]
        public const int SCHED_E_TRIGGER_NOT_FOUND = unchecked((int)(0x80041309));

        [NativeTypeName("#define SCHED_E_TASK_NOT_READY _HRESULT_TYPEDEF_(0x8004130AL)")]
        public const int SCHED_E_TASK_NOT_READY = unchecked((int)(0x8004130A));

        [NativeTypeName("#define SCHED_E_TASK_NOT_RUNNING _HRESULT_TYPEDEF_(0x8004130BL)")]
        public const int SCHED_E_TASK_NOT_RUNNING = unchecked((int)(0x8004130B));

        [NativeTypeName("#define SCHED_E_SERVICE_NOT_INSTALLED _HRESULT_TYPEDEF_(0x8004130CL)")]
        public const int SCHED_E_SERVICE_NOT_INSTALLED = unchecked((int)(0x8004130C));

        [NativeTypeName("#define SCHED_E_CANNOT_OPEN_TASK _HRESULT_TYPEDEF_(0x8004130DL)")]
        public const int SCHED_E_CANNOT_OPEN_TASK = unchecked((int)(0x8004130D));

        [NativeTypeName("#define SCHED_E_INVALID_TASK _HRESULT_TYPEDEF_(0x8004130EL)")]
        public const int SCHED_E_INVALID_TASK = unchecked((int)(0x8004130E));

        [NativeTypeName("#define SCHED_E_ACCOUNT_INFORMATION_NOT_SET _HRESULT_TYPEDEF_(0x8004130FL)")]
        public const int SCHED_E_ACCOUNT_INFORMATION_NOT_SET = unchecked((int)(0x8004130F));

        [NativeTypeName("#define SCHED_E_ACCOUNT_NAME_NOT_FOUND _HRESULT_TYPEDEF_(0x80041310L)")]
        public const int SCHED_E_ACCOUNT_NAME_NOT_FOUND = unchecked((int)(0x80041310));

        [NativeTypeName("#define SCHED_E_ACCOUNT_DBASE_CORRUPT _HRESULT_TYPEDEF_(0x80041311L)")]
        public const int SCHED_E_ACCOUNT_DBASE_CORRUPT = unchecked((int)(0x80041311));

        [NativeTypeName("#define SCHED_E_NO_SECURITY_SERVICES _HRESULT_TYPEDEF_(0x80041312L)")]
        public const int SCHED_E_NO_SECURITY_SERVICES = unchecked((int)(0x80041312));

        [NativeTypeName("#define SCHED_E_UNKNOWN_OBJECT_VERSION _HRESULT_TYPEDEF_(0x80041313L)")]
        public const int SCHED_E_UNKNOWN_OBJECT_VERSION = unchecked((int)(0x80041313));

        [NativeTypeName("#define SCHED_E_UNSUPPORTED_ACCOUNT_OPTION _HRESULT_TYPEDEF_(0x80041314L)")]
        public const int SCHED_E_UNSUPPORTED_ACCOUNT_OPTION = unchecked((int)(0x80041314));

        [NativeTypeName("#define SCHED_E_SERVICE_NOT_RUNNING _HRESULT_TYPEDEF_(0x80041315L)")]
        public const int SCHED_E_SERVICE_NOT_RUNNING = unchecked((int)(0x80041315));

        [NativeTypeName("#define SCHED_E_UNEXPECTEDNODE _HRESULT_TYPEDEF_(0x80041316L)")]
        public const int SCHED_E_UNEXPECTEDNODE = unchecked((int)(0x80041316));

        [NativeTypeName("#define SCHED_E_NAMESPACE _HRESULT_TYPEDEF_(0x80041317L)")]
        public const int SCHED_E_NAMESPACE = unchecked((int)(0x80041317));

        [NativeTypeName("#define SCHED_E_INVALIDVALUE _HRESULT_TYPEDEF_(0x80041318L)")]
        public const int SCHED_E_INVALIDVALUE = unchecked((int)(0x80041318));

        [NativeTypeName("#define SCHED_E_MISSINGNODE _HRESULT_TYPEDEF_(0x80041319L)")]
        public const int SCHED_E_MISSINGNODE = unchecked((int)(0x80041319));

        [NativeTypeName("#define SCHED_E_MALFORMEDXML _HRESULT_TYPEDEF_(0x8004131AL)")]
        public const int SCHED_E_MALFORMEDXML = unchecked((int)(0x8004131A));

        [NativeTypeName("#define SCHED_S_SOME_TRIGGERS_FAILED _HRESULT_TYPEDEF_(0x0004131BL)")]
        public const int SCHED_S_SOME_TRIGGERS_FAILED = ((int)(0x0004131B));

        [NativeTypeName("#define SCHED_S_BATCH_LOGON_PROBLEM _HRESULT_TYPEDEF_(0x0004131CL)")]
        public const int SCHED_S_BATCH_LOGON_PROBLEM = ((int)(0x0004131C));

        [NativeTypeName("#define SCHED_E_TOO_MANY_NODES _HRESULT_TYPEDEF_(0x8004131DL)")]
        public const int SCHED_E_TOO_MANY_NODES = unchecked((int)(0x8004131D));

        [NativeTypeName("#define SCHED_E_PAST_END_BOUNDARY _HRESULT_TYPEDEF_(0x8004131EL)")]
        public const int SCHED_E_PAST_END_BOUNDARY = unchecked((int)(0x8004131E));

        [NativeTypeName("#define SCHED_E_ALREADY_RUNNING _HRESULT_TYPEDEF_(0x8004131FL)")]
        public const int SCHED_E_ALREADY_RUNNING = unchecked((int)(0x8004131F));

        [NativeTypeName("#define SCHED_E_USER_NOT_LOGGED_ON _HRESULT_TYPEDEF_(0x80041320L)")]
        public const int SCHED_E_USER_NOT_LOGGED_ON = unchecked((int)(0x80041320));

        [NativeTypeName("#define SCHED_E_INVALID_TASK_HASH _HRESULT_TYPEDEF_(0x80041321L)")]
        public const int SCHED_E_INVALID_TASK_HASH = unchecked((int)(0x80041321));

        [NativeTypeName("#define SCHED_E_SERVICE_NOT_AVAILABLE _HRESULT_TYPEDEF_(0x80041322L)")]
        public const int SCHED_E_SERVICE_NOT_AVAILABLE = unchecked((int)(0x80041322));

        [NativeTypeName("#define SCHED_E_SERVICE_TOO_BUSY _HRESULT_TYPEDEF_(0x80041323L)")]
        public const int SCHED_E_SERVICE_TOO_BUSY = unchecked((int)(0x80041323));

        [NativeTypeName("#define SCHED_E_TASK_ATTEMPTED _HRESULT_TYPEDEF_(0x80041324L)")]
        public const int SCHED_E_TASK_ATTEMPTED = unchecked((int)(0x80041324));

        [NativeTypeName("#define SCHED_S_TASK_QUEUED _HRESULT_TYPEDEF_(0x00041325L)")]
        public const int SCHED_S_TASK_QUEUED = ((int)(0x00041325));

        [NativeTypeName("#define SCHED_E_TASK_DISABLED _HRESULT_TYPEDEF_(0x80041326L)")]
        public const int SCHED_E_TASK_DISABLED = unchecked((int)(0x80041326));

        [NativeTypeName("#define SCHED_E_TASK_NOT_V1_COMPAT _HRESULT_TYPEDEF_(0x80041327L)")]
        public const int SCHED_E_TASK_NOT_V1_COMPAT = unchecked((int)(0x80041327));

        [NativeTypeName("#define SCHED_E_START_ON_DEMAND _HRESULT_TYPEDEF_(0x80041328L)")]
        public const int SCHED_E_START_ON_DEMAND = unchecked((int)(0x80041328));

        [NativeTypeName("#define SCHED_E_TASK_NOT_UBPM_COMPAT _HRESULT_TYPEDEF_(0x80041329L)")]
        public const int SCHED_E_TASK_NOT_UBPM_COMPAT = unchecked((int)(0x80041329));

        [NativeTypeName("#define SCHED_E_DEPRECATED_FEATURE_USED _HRESULT_TYPEDEF_(0x80041330L)")]
        public const int SCHED_E_DEPRECATED_FEATURE_USED = unchecked((int)(0x80041330));

        [NativeTypeName("#define CO_E_CLASS_CREATE_FAILED _HRESULT_TYPEDEF_(0x80080001L)")]
        public const int CO_E_CLASS_CREATE_FAILED = unchecked((int)(0x80080001));

        [NativeTypeName("#define CO_E_SCM_ERROR _HRESULT_TYPEDEF_(0x80080002L)")]
        public const int CO_E_SCM_ERROR = unchecked((int)(0x80080002));

        [NativeTypeName("#define CO_E_SCM_RPC_FAILURE _HRESULT_TYPEDEF_(0x80080003L)")]
        public const int CO_E_SCM_RPC_FAILURE = unchecked((int)(0x80080003));

        [NativeTypeName("#define CO_E_BAD_PATH _HRESULT_TYPEDEF_(0x80080004L)")]
        public const int CO_E_BAD_PATH = unchecked((int)(0x80080004));

        [NativeTypeName("#define CO_E_SERVER_EXEC_FAILURE _HRESULT_TYPEDEF_(0x80080005L)")]
        public const int CO_E_SERVER_EXEC_FAILURE = unchecked((int)(0x80080005));

        [NativeTypeName("#define CO_E_OBJSRV_RPC_FAILURE _HRESULT_TYPEDEF_(0x80080006L)")]
        public const int CO_E_OBJSRV_RPC_FAILURE = unchecked((int)(0x80080006));

        [NativeTypeName("#define MK_E_NO_NORMALIZED _HRESULT_TYPEDEF_(0x80080007L)")]
        public const int MK_E_NO_NORMALIZED = unchecked((int)(0x80080007));

        [NativeTypeName("#define CO_E_SERVER_STOPPING _HRESULT_TYPEDEF_(0x80080008L)")]
        public const int CO_E_SERVER_STOPPING = unchecked((int)(0x80080008));

        [NativeTypeName("#define MEM_E_INVALID_ROOT _HRESULT_TYPEDEF_(0x80080009L)")]
        public const int MEM_E_INVALID_ROOT = unchecked((int)(0x80080009));

        [NativeTypeName("#define MEM_E_INVALID_LINK _HRESULT_TYPEDEF_(0x80080010L)")]
        public const int MEM_E_INVALID_LINK = unchecked((int)(0x80080010));

        [NativeTypeName("#define MEM_E_INVALID_SIZE _HRESULT_TYPEDEF_(0x80080011L)")]
        public const int MEM_E_INVALID_SIZE = unchecked((int)(0x80080011));

        [NativeTypeName("#define CO_S_NOTALLINTERFACES _HRESULT_TYPEDEF_(0x00080012L)")]
        public const int CO_S_NOTALLINTERFACES = ((int)(0x00080012));

        [NativeTypeName("#define CO_S_MACHINENAMENOTFOUND _HRESULT_TYPEDEF_(0x00080013L)")]
        public const int CO_S_MACHINENAMENOTFOUND = ((int)(0x00080013));

        [NativeTypeName("#define CO_E_MISSING_DISPLAYNAME _HRESULT_TYPEDEF_(0x80080015L)")]
        public const int CO_E_MISSING_DISPLAYNAME = unchecked((int)(0x80080015));

        [NativeTypeName("#define CO_E_RUNAS_VALUE_MUST_BE_AAA _HRESULT_TYPEDEF_(0x80080016L)")]
        public const int CO_E_RUNAS_VALUE_MUST_BE_AAA = unchecked((int)(0x80080016));

        [NativeTypeName("#define CO_E_ELEVATION_DISABLED _HRESULT_TYPEDEF_(0x80080017L)")]
        public const int CO_E_ELEVATION_DISABLED = unchecked((int)(0x80080017));

        [NativeTypeName("#define APPX_E_PACKAGING_INTERNAL _HRESULT_TYPEDEF_(0x80080200L)")]
        public const int APPX_E_PACKAGING_INTERNAL = unchecked((int)(0x80080200));

        [NativeTypeName("#define APPX_E_INTERLEAVING_NOT_ALLOWED _HRESULT_TYPEDEF_(0x80080201L)")]
        public const int APPX_E_INTERLEAVING_NOT_ALLOWED = unchecked((int)(0x80080201));

        [NativeTypeName("#define APPX_E_RELATIONSHIPS_NOT_ALLOWED _HRESULT_TYPEDEF_(0x80080202L)")]
        public const int APPX_E_RELATIONSHIPS_NOT_ALLOWED = unchecked((int)(0x80080202));

        [NativeTypeName("#define APPX_E_MISSING_REQUIRED_FILE _HRESULT_TYPEDEF_(0x80080203L)")]
        public const int APPX_E_MISSING_REQUIRED_FILE = unchecked((int)(0x80080203));

        [NativeTypeName("#define APPX_E_INVALID_MANIFEST _HRESULT_TYPEDEF_(0x80080204L)")]
        public const int APPX_E_INVALID_MANIFEST = unchecked((int)(0x80080204));

        [NativeTypeName("#define APPX_E_INVALID_BLOCKMAP _HRESULT_TYPEDEF_(0x80080205L)")]
        public const int APPX_E_INVALID_BLOCKMAP = unchecked((int)(0x80080205));

        [NativeTypeName("#define APPX_E_CORRUPT_CONTENT _HRESULT_TYPEDEF_(0x80080206L)")]
        public const int APPX_E_CORRUPT_CONTENT = unchecked((int)(0x80080206));

        [NativeTypeName("#define APPX_E_BLOCK_HASH_INVALID _HRESULT_TYPEDEF_(0x80080207L)")]
        public const int APPX_E_BLOCK_HASH_INVALID = unchecked((int)(0x80080207));

        [NativeTypeName("#define APPX_E_REQUESTED_RANGE_TOO_LARGE _HRESULT_TYPEDEF_(0x80080208L)")]
        public const int APPX_E_REQUESTED_RANGE_TOO_LARGE = unchecked((int)(0x80080208));

        [NativeTypeName("#define APPX_E_INVALID_SIP_CLIENT_DATA _HRESULT_TYPEDEF_(0x80080209L)")]
        public const int APPX_E_INVALID_SIP_CLIENT_DATA = unchecked((int)(0x80080209));

        [NativeTypeName("#define APPX_E_INVALID_KEY_INFO _HRESULT_TYPEDEF_(0x8008020AL)")]
        public const int APPX_E_INVALID_KEY_INFO = unchecked((int)(0x8008020A));

        [NativeTypeName("#define APPX_E_INVALID_CONTENTGROUPMAP _HRESULT_TYPEDEF_(0x8008020BL)")]
        public const int APPX_E_INVALID_CONTENTGROUPMAP = unchecked((int)(0x8008020B));

        [NativeTypeName("#define APPX_E_INVALID_APPINSTALLER _HRESULT_TYPEDEF_(0x8008020CL)")]
        public const int APPX_E_INVALID_APPINSTALLER = unchecked((int)(0x8008020C));

        [NativeTypeName("#define APPX_E_DELTA_BASELINE_VERSION_MISMATCH _HRESULT_TYPEDEF_(0x8008020DL)")]
        public const int APPX_E_DELTA_BASELINE_VERSION_MISMATCH = unchecked((int)(0x8008020D));

        [NativeTypeName("#define APPX_E_DELTA_PACKAGE_MISSING_FILE _HRESULT_TYPEDEF_(0x8008020EL)")]
        public const int APPX_E_DELTA_PACKAGE_MISSING_FILE = unchecked((int)(0x8008020E));

        [NativeTypeName("#define APPX_E_INVALID_DELTA_PACKAGE _HRESULT_TYPEDEF_(0x8008020FL)")]
        public const int APPX_E_INVALID_DELTA_PACKAGE = unchecked((int)(0x8008020F));

        [NativeTypeName("#define APPX_E_DELTA_APPENDED_PACKAGE_NOT_ALLOWED _HRESULT_TYPEDEF_(0x80080210L)")]
        public const int APPX_E_DELTA_APPENDED_PACKAGE_NOT_ALLOWED = unchecked((int)(0x80080210));

        [NativeTypeName("#define APPX_E_INVALID_PACKAGING_LAYOUT _HRESULT_TYPEDEF_(0x80080211L)")]
        public const int APPX_E_INVALID_PACKAGING_LAYOUT = unchecked((int)(0x80080211));

        [NativeTypeName("#define APPX_E_INVALID_PACKAGESIGNCONFIG _HRESULT_TYPEDEF_(0x80080212L)")]
        public const int APPX_E_INVALID_PACKAGESIGNCONFIG = unchecked((int)(0x80080212));

        [NativeTypeName("#define APPX_E_RESOURCESPRI_NOT_ALLOWED _HRESULT_TYPEDEF_(0x80080213L)")]
        public const int APPX_E_RESOURCESPRI_NOT_ALLOWED = unchecked((int)(0x80080213));

        [NativeTypeName("#define APPX_E_FILE_COMPRESSION_MISMATCH _HRESULT_TYPEDEF_(0x80080214L)")]
        public const int APPX_E_FILE_COMPRESSION_MISMATCH = unchecked((int)(0x80080214));

        [NativeTypeName("#define APPX_E_INVALID_PAYLOAD_PACKAGE_EXTENSION _HRESULT_TYPEDEF_(0x80080215L)")]
        public const int APPX_E_INVALID_PAYLOAD_PACKAGE_EXTENSION = unchecked((int)(0x80080215));

        [NativeTypeName("#define APPX_E_INVALID_ENCRYPTION_EXCLUSION_FILE_LIST _HRESULT_TYPEDEF_(0x80080216L)")]
        public const int APPX_E_INVALID_ENCRYPTION_EXCLUSION_FILE_LIST = unchecked((int)(0x80080216));

        [NativeTypeName("#define BT_E_SPURIOUS_ACTIVATION _HRESULT_TYPEDEF_(0x80080300L)")]
        public const int BT_E_SPURIOUS_ACTIVATION = unchecked((int)(0x80080300));

        [NativeTypeName("#define DISP_E_UNKNOWNINTERFACE _HRESULT_TYPEDEF_(0x80020001L)")]
        public const int DISP_E_UNKNOWNINTERFACE = unchecked((int)(0x80020001));

        [NativeTypeName("#define DISP_E_MEMBERNOTFOUND _HRESULT_TYPEDEF_(0x80020003L)")]
        public const int DISP_E_MEMBERNOTFOUND = unchecked((int)(0x80020003));

        [NativeTypeName("#define DISP_E_PARAMNOTFOUND _HRESULT_TYPEDEF_(0x80020004L)")]
        public const int DISP_E_PARAMNOTFOUND = unchecked((int)(0x80020004));

        [NativeTypeName("#define DISP_E_TYPEMISMATCH _HRESULT_TYPEDEF_(0x80020005L)")]
        public const int DISP_E_TYPEMISMATCH = unchecked((int)(0x80020005));

        [NativeTypeName("#define DISP_E_UNKNOWNNAME _HRESULT_TYPEDEF_(0x80020006L)")]
        public const int DISP_E_UNKNOWNNAME = unchecked((int)(0x80020006));

        [NativeTypeName("#define DISP_E_NONAMEDARGS _HRESULT_TYPEDEF_(0x80020007L)")]
        public const int DISP_E_NONAMEDARGS = unchecked((int)(0x80020007));

        [NativeTypeName("#define DISP_E_BADVARTYPE _HRESULT_TYPEDEF_(0x80020008L)")]
        public const int DISP_E_BADVARTYPE = unchecked((int)(0x80020008));

        [NativeTypeName("#define DISP_E_EXCEPTION _HRESULT_TYPEDEF_(0x80020009L)")]
        public const int DISP_E_EXCEPTION = unchecked((int)(0x80020009));

        [NativeTypeName("#define DISP_E_OVERFLOW _HRESULT_TYPEDEF_(0x8002000AL)")]
        public const int DISP_E_OVERFLOW = unchecked((int)(0x8002000A));

        [NativeTypeName("#define DISP_E_BADINDEX _HRESULT_TYPEDEF_(0x8002000BL)")]
        public const int DISP_E_BADINDEX = unchecked((int)(0x8002000B));

        [NativeTypeName("#define DISP_E_UNKNOWNLCID _HRESULT_TYPEDEF_(0x8002000CL)")]
        public const int DISP_E_UNKNOWNLCID = unchecked((int)(0x8002000C));

        [NativeTypeName("#define DISP_E_ARRAYISLOCKED _HRESULT_TYPEDEF_(0x8002000DL)")]
        public const int DISP_E_ARRAYISLOCKED = unchecked((int)(0x8002000D));

        [NativeTypeName("#define DISP_E_BADPARAMCOUNT _HRESULT_TYPEDEF_(0x8002000EL)")]
        public const int DISP_E_BADPARAMCOUNT = unchecked((int)(0x8002000E));

        [NativeTypeName("#define DISP_E_PARAMNOTOPTIONAL _HRESULT_TYPEDEF_(0x8002000FL)")]
        public const int DISP_E_PARAMNOTOPTIONAL = unchecked((int)(0x8002000F));

        [NativeTypeName("#define DISP_E_BADCALLEE _HRESULT_TYPEDEF_(0x80020010L)")]
        public const int DISP_E_BADCALLEE = unchecked((int)(0x80020010));

        [NativeTypeName("#define DISP_E_NOTACOLLECTION _HRESULT_TYPEDEF_(0x80020011L)")]
        public const int DISP_E_NOTACOLLECTION = unchecked((int)(0x80020011));

        [NativeTypeName("#define DISP_E_DIVBYZERO _HRESULT_TYPEDEF_(0x80020012L)")]
        public const int DISP_E_DIVBYZERO = unchecked((int)(0x80020012));

        [NativeTypeName("#define DISP_E_BUFFERTOOSMALL _HRESULT_TYPEDEF_(0x80020013L)")]
        public const int DISP_E_BUFFERTOOSMALL = unchecked((int)(0x80020013));

        [NativeTypeName("#define TYPE_E_BUFFERTOOSMALL _HRESULT_TYPEDEF_(0x80028016L)")]
        public const int TYPE_E_BUFFERTOOSMALL = unchecked((int)(0x80028016));

        [NativeTypeName("#define TYPE_E_FIELDNOTFOUND _HRESULT_TYPEDEF_(0x80028017L)")]
        public const int TYPE_E_FIELDNOTFOUND = unchecked((int)(0x80028017));

        [NativeTypeName("#define TYPE_E_INVDATAREAD _HRESULT_TYPEDEF_(0x80028018L)")]
        public const int TYPE_E_INVDATAREAD = unchecked((int)(0x80028018));

        [NativeTypeName("#define TYPE_E_UNSUPFORMAT _HRESULT_TYPEDEF_(0x80028019L)")]
        public const int TYPE_E_UNSUPFORMAT = unchecked((int)(0x80028019));

        [NativeTypeName("#define TYPE_E_REGISTRYACCESS _HRESULT_TYPEDEF_(0x8002801CL)")]
        public const int TYPE_E_REGISTRYACCESS = unchecked((int)(0x8002801C));

        [NativeTypeName("#define TYPE_E_LIBNOTREGISTERED _HRESULT_TYPEDEF_(0x8002801DL)")]
        public const int TYPE_E_LIBNOTREGISTERED = unchecked((int)(0x8002801D));

        [NativeTypeName("#define TYPE_E_UNDEFINEDTYPE _HRESULT_TYPEDEF_(0x80028027L)")]
        public const int TYPE_E_UNDEFINEDTYPE = unchecked((int)(0x80028027));

        [NativeTypeName("#define TYPE_E_QUALIFIEDNAMEDISALLOWED _HRESULT_TYPEDEF_(0x80028028L)")]
        public const int TYPE_E_QUALIFIEDNAMEDISALLOWED = unchecked((int)(0x80028028));

        [NativeTypeName("#define TYPE_E_INVALIDSTATE _HRESULT_TYPEDEF_(0x80028029L)")]
        public const int TYPE_E_INVALIDSTATE = unchecked((int)(0x80028029));

        [NativeTypeName("#define TYPE_E_WRONGTYPEKIND _HRESULT_TYPEDEF_(0x8002802AL)")]
        public const int TYPE_E_WRONGTYPEKIND = unchecked((int)(0x8002802A));

        [NativeTypeName("#define TYPE_E_ELEMENTNOTFOUND _HRESULT_TYPEDEF_(0x8002802BL)")]
        public const int TYPE_E_ELEMENTNOTFOUND = unchecked((int)(0x8002802B));

        [NativeTypeName("#define TYPE_E_AMBIGUOUSNAME _HRESULT_TYPEDEF_(0x8002802CL)")]
        public const int TYPE_E_AMBIGUOUSNAME = unchecked((int)(0x8002802C));

        [NativeTypeName("#define TYPE_E_NAMECONFLICT _HRESULT_TYPEDEF_(0x8002802DL)")]
        public const int TYPE_E_NAMECONFLICT = unchecked((int)(0x8002802D));

        [NativeTypeName("#define TYPE_E_UNKNOWNLCID _HRESULT_TYPEDEF_(0x8002802EL)")]
        public const int TYPE_E_UNKNOWNLCID = unchecked((int)(0x8002802E));

        [NativeTypeName("#define TYPE_E_DLLFUNCTIONNOTFOUND _HRESULT_TYPEDEF_(0x8002802FL)")]
        public const int TYPE_E_DLLFUNCTIONNOTFOUND = unchecked((int)(0x8002802F));

        [NativeTypeName("#define TYPE_E_BADMODULEKIND _HRESULT_TYPEDEF_(0x800288BDL)")]
        public const int TYPE_E_BADMODULEKIND = unchecked((int)(0x800288BD));

        [NativeTypeName("#define TYPE_E_SIZETOOBIG _HRESULT_TYPEDEF_(0x800288C5L)")]
        public const int TYPE_E_SIZETOOBIG = unchecked((int)(0x800288C5));

        [NativeTypeName("#define TYPE_E_DUPLICATEID _HRESULT_TYPEDEF_(0x800288C6L)")]
        public const int TYPE_E_DUPLICATEID = unchecked((int)(0x800288C6));

        [NativeTypeName("#define TYPE_E_INVALIDID _HRESULT_TYPEDEF_(0x800288CFL)")]
        public const int TYPE_E_INVALIDID = unchecked((int)(0x800288CF));

        [NativeTypeName("#define TYPE_E_TYPEMISMATCH _HRESULT_TYPEDEF_(0x80028CA0L)")]
        public const int TYPE_E_TYPEMISMATCH = unchecked((int)(0x80028CA0));

        [NativeTypeName("#define TYPE_E_OUTOFBOUNDS _HRESULT_TYPEDEF_(0x80028CA1L)")]
        public const int TYPE_E_OUTOFBOUNDS = unchecked((int)(0x80028CA1));

        [NativeTypeName("#define TYPE_E_IOERROR _HRESULT_TYPEDEF_(0x80028CA2L)")]
        public const int TYPE_E_IOERROR = unchecked((int)(0x80028CA2));

        [NativeTypeName("#define TYPE_E_CANTCREATETMPFILE _HRESULT_TYPEDEF_(0x80028CA3L)")]
        public const int TYPE_E_CANTCREATETMPFILE = unchecked((int)(0x80028CA3));

        [NativeTypeName("#define TYPE_E_CANTLOADLIBRARY _HRESULT_TYPEDEF_(0x80029C4AL)")]
        public const int TYPE_E_CANTLOADLIBRARY = unchecked((int)(0x80029C4A));

        [NativeTypeName("#define TYPE_E_INCONSISTENTPROPFUNCS _HRESULT_TYPEDEF_(0x80029C83L)")]
        public const int TYPE_E_INCONSISTENTPROPFUNCS = unchecked((int)(0x80029C83));

        [NativeTypeName("#define TYPE_E_CIRCULARTYPE _HRESULT_TYPEDEF_(0x80029C84L)")]
        public const int TYPE_E_CIRCULARTYPE = unchecked((int)(0x80029C84));

        [NativeTypeName("#define STG_E_INVALIDFUNCTION _HRESULT_TYPEDEF_(0x80030001L)")]
        public const int STG_E_INVALIDFUNCTION = unchecked((int)(0x80030001));

        [NativeTypeName("#define STG_E_FILENOTFOUND _HRESULT_TYPEDEF_(0x80030002L)")]
        public const int STG_E_FILENOTFOUND = unchecked((int)(0x80030002));

        [NativeTypeName("#define STG_E_PATHNOTFOUND _HRESULT_TYPEDEF_(0x80030003L)")]
        public const int STG_E_PATHNOTFOUND = unchecked((int)(0x80030003));

        [NativeTypeName("#define STG_E_TOOMANYOPENFILES _HRESULT_TYPEDEF_(0x80030004L)")]
        public const int STG_E_TOOMANYOPENFILES = unchecked((int)(0x80030004));

        [NativeTypeName("#define STG_E_ACCESSDENIED _HRESULT_TYPEDEF_(0x80030005L)")]
        public const int STG_E_ACCESSDENIED = unchecked((int)(0x80030005));

        [NativeTypeName("#define STG_E_INVALIDHANDLE _HRESULT_TYPEDEF_(0x80030006L)")]
        public const int STG_E_INVALIDHANDLE = unchecked((int)(0x80030006));

        [NativeTypeName("#define STG_E_INSUFFICIENTMEMORY _HRESULT_TYPEDEF_(0x80030008L)")]
        public const int STG_E_INSUFFICIENTMEMORY = unchecked((int)(0x80030008));

        [NativeTypeName("#define STG_E_INVALIDPOINTER _HRESULT_TYPEDEF_(0x80030009L)")]
        public const int STG_E_INVALIDPOINTER = unchecked((int)(0x80030009));

        [NativeTypeName("#define STG_E_NOMOREFILES _HRESULT_TYPEDEF_(0x80030012L)")]
        public const int STG_E_NOMOREFILES = unchecked((int)(0x80030012));

        [NativeTypeName("#define STG_E_DISKISWRITEPROTECTED _HRESULT_TYPEDEF_(0x80030013L)")]
        public const int STG_E_DISKISWRITEPROTECTED = unchecked((int)(0x80030013));

        [NativeTypeName("#define STG_E_SEEKERROR _HRESULT_TYPEDEF_(0x80030019L)")]
        public const int STG_E_SEEKERROR = unchecked((int)(0x80030019));

        [NativeTypeName("#define STG_E_WRITEFAULT _HRESULT_TYPEDEF_(0x8003001DL)")]
        public const int STG_E_WRITEFAULT = unchecked((int)(0x8003001D));

        [NativeTypeName("#define STG_E_READFAULT _HRESULT_TYPEDEF_(0x8003001EL)")]
        public const int STG_E_READFAULT = unchecked((int)(0x8003001E));

        [NativeTypeName("#define STG_E_SHAREVIOLATION _HRESULT_TYPEDEF_(0x80030020L)")]
        public const int STG_E_SHAREVIOLATION = unchecked((int)(0x80030020));

        [NativeTypeName("#define STG_E_LOCKVIOLATION _HRESULT_TYPEDEF_(0x80030021L)")]
        public const int STG_E_LOCKVIOLATION = unchecked((int)(0x80030021));

        [NativeTypeName("#define STG_E_FILEALREADYEXISTS _HRESULT_TYPEDEF_(0x80030050L)")]
        public const int STG_E_FILEALREADYEXISTS = unchecked((int)(0x80030050));

        [NativeTypeName("#define STG_E_INVALIDPARAMETER _HRESULT_TYPEDEF_(0x80030057L)")]
        public const int STG_E_INVALIDPARAMETER = unchecked((int)(0x80030057));

        [NativeTypeName("#define STG_E_MEDIUMFULL _HRESULT_TYPEDEF_(0x80030070L)")]
        public const int STG_E_MEDIUMFULL = unchecked((int)(0x80030070));

        [NativeTypeName("#define STG_E_PROPSETMISMATCHED _HRESULT_TYPEDEF_(0x800300F0L)")]
        public const int STG_E_PROPSETMISMATCHED = unchecked((int)(0x800300F0));

        [NativeTypeName("#define STG_E_ABNORMALAPIEXIT _HRESULT_TYPEDEF_(0x800300FAL)")]
        public const int STG_E_ABNORMALAPIEXIT = unchecked((int)(0x800300FA));

        [NativeTypeName("#define STG_E_INVALIDHEADER _HRESULT_TYPEDEF_(0x800300FBL)")]
        public const int STG_E_INVALIDHEADER = unchecked((int)(0x800300FB));

        [NativeTypeName("#define STG_E_INVALIDNAME _HRESULT_TYPEDEF_(0x800300FCL)")]
        public const int STG_E_INVALIDNAME = unchecked((int)(0x800300FC));

        [NativeTypeName("#define STG_E_UNKNOWN _HRESULT_TYPEDEF_(0x800300FDL)")]
        public const int STG_E_UNKNOWN = unchecked((int)(0x800300FD));

        [NativeTypeName("#define STG_E_UNIMPLEMENTEDFUNCTION _HRESULT_TYPEDEF_(0x800300FEL)")]
        public const int STG_E_UNIMPLEMENTEDFUNCTION = unchecked((int)(0x800300FE));

        [NativeTypeName("#define STG_E_INVALIDFLAG _HRESULT_TYPEDEF_(0x800300FFL)")]
        public const int STG_E_INVALIDFLAG = unchecked((int)(0x800300FF));

        [NativeTypeName("#define STG_E_INUSE _HRESULT_TYPEDEF_(0x80030100L)")]
        public const int STG_E_INUSE = unchecked((int)(0x80030100));

        [NativeTypeName("#define STG_E_NOTCURRENT _HRESULT_TYPEDEF_(0x80030101L)")]
        public const int STG_E_NOTCURRENT = unchecked((int)(0x80030101));

        [NativeTypeName("#define STG_E_REVERTED _HRESULT_TYPEDEF_(0x80030102L)")]
        public const int STG_E_REVERTED = unchecked((int)(0x80030102));

        [NativeTypeName("#define STG_E_CANTSAVE _HRESULT_TYPEDEF_(0x80030103L)")]
        public const int STG_E_CANTSAVE = unchecked((int)(0x80030103));

        [NativeTypeName("#define STG_E_OLDFORMAT _HRESULT_TYPEDEF_(0x80030104L)")]
        public const int STG_E_OLDFORMAT = unchecked((int)(0x80030104));

        [NativeTypeName("#define STG_E_OLDDLL _HRESULT_TYPEDEF_(0x80030105L)")]
        public const int STG_E_OLDDLL = unchecked((int)(0x80030105));

        [NativeTypeName("#define STG_E_SHAREREQUIRED _HRESULT_TYPEDEF_(0x80030106L)")]
        public const int STG_E_SHAREREQUIRED = unchecked((int)(0x80030106));

        [NativeTypeName("#define STG_E_NOTFILEBASEDSTORAGE _HRESULT_TYPEDEF_(0x80030107L)")]
        public const int STG_E_NOTFILEBASEDSTORAGE = unchecked((int)(0x80030107));

        [NativeTypeName("#define STG_E_EXTANTMARSHALLINGS _HRESULT_TYPEDEF_(0x80030108L)")]
        public const int STG_E_EXTANTMARSHALLINGS = unchecked((int)(0x80030108));

        [NativeTypeName("#define STG_E_DOCFILECORRUPT _HRESULT_TYPEDEF_(0x80030109L)")]
        public const int STG_E_DOCFILECORRUPT = unchecked((int)(0x80030109));

        [NativeTypeName("#define STG_E_BADBASEADDRESS _HRESULT_TYPEDEF_(0x80030110L)")]
        public const int STG_E_BADBASEADDRESS = unchecked((int)(0x80030110));

        [NativeTypeName("#define STG_E_DOCFILETOOLARGE _HRESULT_TYPEDEF_(0x80030111L)")]
        public const int STG_E_DOCFILETOOLARGE = unchecked((int)(0x80030111));

        [NativeTypeName("#define STG_E_NOTSIMPLEFORMAT _HRESULT_TYPEDEF_(0x80030112L)")]
        public const int STG_E_NOTSIMPLEFORMAT = unchecked((int)(0x80030112));

        [NativeTypeName("#define STG_E_INCOMPLETE _HRESULT_TYPEDEF_(0x80030201L)")]
        public const int STG_E_INCOMPLETE = unchecked((int)(0x80030201));

        [NativeTypeName("#define STG_E_TERMINATED _HRESULT_TYPEDEF_(0x80030202L)")]
        public const int STG_E_TERMINATED = unchecked((int)(0x80030202));

        [NativeTypeName("#define STG_S_CONVERTED _HRESULT_TYPEDEF_(0x00030200L)")]
        public const int STG_S_CONVERTED = ((int)(0x00030200));

        [NativeTypeName("#define STG_S_BLOCK _HRESULT_TYPEDEF_(0x00030201L)")]
        public const int STG_S_BLOCK = ((int)(0x00030201));

        [NativeTypeName("#define STG_S_RETRYNOW _HRESULT_TYPEDEF_(0x00030202L)")]
        public const int STG_S_RETRYNOW = ((int)(0x00030202));

        [NativeTypeName("#define STG_S_MONITORING _HRESULT_TYPEDEF_(0x00030203L)")]
        public const int STG_S_MONITORING = ((int)(0x00030203));

        [NativeTypeName("#define STG_S_MULTIPLEOPENS _HRESULT_TYPEDEF_(0x00030204L)")]
        public const int STG_S_MULTIPLEOPENS = ((int)(0x00030204));

        [NativeTypeName("#define STG_S_CONSOLIDATIONFAILED _HRESULT_TYPEDEF_(0x00030205L)")]
        public const int STG_S_CONSOLIDATIONFAILED = ((int)(0x00030205));

        [NativeTypeName("#define STG_S_CANNOTCONSOLIDATE _HRESULT_TYPEDEF_(0x00030206L)")]
        public const int STG_S_CANNOTCONSOLIDATE = ((int)(0x00030206));

        [NativeTypeName("#define STG_S_POWER_CYCLE_REQUIRED _HRESULT_TYPEDEF_(0x00030207L)")]
        public const int STG_S_POWER_CYCLE_REQUIRED = ((int)(0x00030207));

        [NativeTypeName("#define STG_E_FIRMWARE_SLOT_INVALID _HRESULT_TYPEDEF_(0x80030208L)")]
        public const int STG_E_FIRMWARE_SLOT_INVALID = unchecked((int)(0x80030208));

        [NativeTypeName("#define STG_E_FIRMWARE_IMAGE_INVALID _HRESULT_TYPEDEF_(0x80030209L)")]
        public const int STG_E_FIRMWARE_IMAGE_INVALID = unchecked((int)(0x80030209));

        [NativeTypeName("#define STG_E_DEVICE_UNRESPONSIVE _HRESULT_TYPEDEF_(0x8003020AL)")]
        public const int STG_E_DEVICE_UNRESPONSIVE = unchecked((int)(0x8003020A));

        [NativeTypeName("#define STG_E_STATUS_COPY_PROTECTION_FAILURE _HRESULT_TYPEDEF_(0x80030305L)")]
        public const int STG_E_STATUS_COPY_PROTECTION_FAILURE = unchecked((int)(0x80030305));

        [NativeTypeName("#define STG_E_CSS_AUTHENTICATION_FAILURE _HRESULT_TYPEDEF_(0x80030306L)")]
        public const int STG_E_CSS_AUTHENTICATION_FAILURE = unchecked((int)(0x80030306));

        [NativeTypeName("#define STG_E_CSS_KEY_NOT_PRESENT _HRESULT_TYPEDEF_(0x80030307L)")]
        public const int STG_E_CSS_KEY_NOT_PRESENT = unchecked((int)(0x80030307));

        [NativeTypeName("#define STG_E_CSS_KEY_NOT_ESTABLISHED _HRESULT_TYPEDEF_(0x80030308L)")]
        public const int STG_E_CSS_KEY_NOT_ESTABLISHED = unchecked((int)(0x80030308));

        [NativeTypeName("#define STG_E_CSS_SCRAMBLED_SECTOR _HRESULT_TYPEDEF_(0x80030309L)")]
        public const int STG_E_CSS_SCRAMBLED_SECTOR = unchecked((int)(0x80030309));

        [NativeTypeName("#define STG_E_CSS_REGION_MISMATCH _HRESULT_TYPEDEF_(0x8003030AL)")]
        public const int STG_E_CSS_REGION_MISMATCH = unchecked((int)(0x8003030A));

        [NativeTypeName("#define STG_E_RESETS_EXHAUSTED _HRESULT_TYPEDEF_(0x8003030BL)")]
        public const int STG_E_RESETS_EXHAUSTED = unchecked((int)(0x8003030B));

        [NativeTypeName("#define RPC_E_CALL_REJECTED _HRESULT_TYPEDEF_(0x80010001L)")]
        public const int RPC_E_CALL_REJECTED = unchecked((int)(0x80010001));

        [NativeTypeName("#define RPC_E_CALL_CANCELED _HRESULT_TYPEDEF_(0x80010002L)")]
        public const int RPC_E_CALL_CANCELED = unchecked((int)(0x80010002));

        [NativeTypeName("#define RPC_E_CANTPOST_INSENDCALL _HRESULT_TYPEDEF_(0x80010003L)")]
        public const int RPC_E_CANTPOST_INSENDCALL = unchecked((int)(0x80010003));

        [NativeTypeName("#define RPC_E_CANTCALLOUT_INASYNCCALL _HRESULT_TYPEDEF_(0x80010004L)")]
        public const int RPC_E_CANTCALLOUT_INASYNCCALL = unchecked((int)(0x80010004));

        [NativeTypeName("#define RPC_E_CANTCALLOUT_INEXTERNALCALL _HRESULT_TYPEDEF_(0x80010005L)")]
        public const int RPC_E_CANTCALLOUT_INEXTERNALCALL = unchecked((int)(0x80010005));

        [NativeTypeName("#define RPC_E_CONNECTION_TERMINATED _HRESULT_TYPEDEF_(0x80010006L)")]
        public const int RPC_E_CONNECTION_TERMINATED = unchecked((int)(0x80010006));

        [NativeTypeName("#define RPC_E_SERVER_DIED _HRESULT_TYPEDEF_(0x80010007L)")]
        public const int RPC_E_SERVER_DIED = unchecked((int)(0x80010007));

        [NativeTypeName("#define RPC_E_CLIENT_DIED _HRESULT_TYPEDEF_(0x80010008L)")]
        public const int RPC_E_CLIENT_DIED = unchecked((int)(0x80010008));

        [NativeTypeName("#define RPC_E_INVALID_DATAPACKET _HRESULT_TYPEDEF_(0x80010009L)")]
        public const int RPC_E_INVALID_DATAPACKET = unchecked((int)(0x80010009));

        [NativeTypeName("#define RPC_E_CANTTRANSMIT_CALL _HRESULT_TYPEDEF_(0x8001000AL)")]
        public const int RPC_E_CANTTRANSMIT_CALL = unchecked((int)(0x8001000A));

        [NativeTypeName("#define RPC_E_CLIENT_CANTMARSHAL_DATA _HRESULT_TYPEDEF_(0x8001000BL)")]
        public const int RPC_E_CLIENT_CANTMARSHAL_DATA = unchecked((int)(0x8001000B));

        [NativeTypeName("#define RPC_E_CLIENT_CANTUNMARSHAL_DATA _HRESULT_TYPEDEF_(0x8001000CL)")]
        public const int RPC_E_CLIENT_CANTUNMARSHAL_DATA = unchecked((int)(0x8001000C));

        [NativeTypeName("#define RPC_E_SERVER_CANTMARSHAL_DATA _HRESULT_TYPEDEF_(0x8001000DL)")]
        public const int RPC_E_SERVER_CANTMARSHAL_DATA = unchecked((int)(0x8001000D));

        [NativeTypeName("#define RPC_E_SERVER_CANTUNMARSHAL_DATA _HRESULT_TYPEDEF_(0x8001000EL)")]
        public const int RPC_E_SERVER_CANTUNMARSHAL_DATA = unchecked((int)(0x8001000E));

        [NativeTypeName("#define RPC_E_INVALID_DATA _HRESULT_TYPEDEF_(0x8001000FL)")]
        public const int RPC_E_INVALID_DATA = unchecked((int)(0x8001000F));

        [NativeTypeName("#define RPC_E_INVALID_PARAMETER _HRESULT_TYPEDEF_(0x80010010L)")]
        public const int RPC_E_INVALID_PARAMETER = unchecked((int)(0x80010010));

        [NativeTypeName("#define RPC_E_CANTCALLOUT_AGAIN _HRESULT_TYPEDEF_(0x80010011L)")]
        public const int RPC_E_CANTCALLOUT_AGAIN = unchecked((int)(0x80010011));

        [NativeTypeName("#define RPC_E_SERVER_DIED_DNE _HRESULT_TYPEDEF_(0x80010012L)")]
        public const int RPC_E_SERVER_DIED_DNE = unchecked((int)(0x80010012));

        [NativeTypeName("#define RPC_E_SYS_CALL_FAILED _HRESULT_TYPEDEF_(0x80010100L)")]
        public const int RPC_E_SYS_CALL_FAILED = unchecked((int)(0x80010100));

        [NativeTypeName("#define RPC_E_OUT_OF_RESOURCES _HRESULT_TYPEDEF_(0x80010101L)")]
        public const int RPC_E_OUT_OF_RESOURCES = unchecked((int)(0x80010101));

        [NativeTypeName("#define RPC_E_ATTEMPTED_MULTITHREAD _HRESULT_TYPEDEF_(0x80010102L)")]
        public const int RPC_E_ATTEMPTED_MULTITHREAD = unchecked((int)(0x80010102));

        [NativeTypeName("#define RPC_E_NOT_REGISTERED _HRESULT_TYPEDEF_(0x80010103L)")]
        public const int RPC_E_NOT_REGISTERED = unchecked((int)(0x80010103));

        [NativeTypeName("#define RPC_E_FAULT _HRESULT_TYPEDEF_(0x80010104L)")]
        public const int RPC_E_FAULT = unchecked((int)(0x80010104));

        [NativeTypeName("#define RPC_E_SERVERFAULT _HRESULT_TYPEDEF_(0x80010105L)")]
        public const int RPC_E_SERVERFAULT = unchecked((int)(0x80010105));

        [NativeTypeName("#define RPC_E_CHANGED_MODE _HRESULT_TYPEDEF_(0x80010106L)")]
        public const int RPC_E_CHANGED_MODE = unchecked((int)(0x80010106));

        [NativeTypeName("#define RPC_E_INVALIDMETHOD _HRESULT_TYPEDEF_(0x80010107L)")]
        public const int RPC_E_INVALIDMETHOD = unchecked((int)(0x80010107));

        [NativeTypeName("#define RPC_E_DISCONNECTED _HRESULT_TYPEDEF_(0x80010108L)")]
        public const int RPC_E_DISCONNECTED = unchecked((int)(0x80010108));

        [NativeTypeName("#define RPC_E_RETRY _HRESULT_TYPEDEF_(0x80010109L)")]
        public const int RPC_E_RETRY = unchecked((int)(0x80010109));

        [NativeTypeName("#define RPC_E_SERVERCALL_RETRYLATER _HRESULT_TYPEDEF_(0x8001010AL)")]
        public const int RPC_E_SERVERCALL_RETRYLATER = unchecked((int)(0x8001010A));

        [NativeTypeName("#define RPC_E_SERVERCALL_REJECTED _HRESULT_TYPEDEF_(0x8001010BL)")]
        public const int RPC_E_SERVERCALL_REJECTED = unchecked((int)(0x8001010B));

        [NativeTypeName("#define RPC_E_INVALID_CALLDATA _HRESULT_TYPEDEF_(0x8001010CL)")]
        public const int RPC_E_INVALID_CALLDATA = unchecked((int)(0x8001010C));

        [NativeTypeName("#define RPC_E_CANTCALLOUT_ININPUTSYNCCALL _HRESULT_TYPEDEF_(0x8001010DL)")]
        public const int RPC_E_CANTCALLOUT_ININPUTSYNCCALL = unchecked((int)(0x8001010D));

        [NativeTypeName("#define RPC_E_WRONG_THREAD _HRESULT_TYPEDEF_(0x8001010EL)")]
        public const int RPC_E_WRONG_THREAD = unchecked((int)(0x8001010E));

        [NativeTypeName("#define RPC_E_THREAD_NOT_INIT _HRESULT_TYPEDEF_(0x8001010FL)")]
        public const int RPC_E_THREAD_NOT_INIT = unchecked((int)(0x8001010F));

        [NativeTypeName("#define RPC_E_VERSION_MISMATCH _HRESULT_TYPEDEF_(0x80010110L)")]
        public const int RPC_E_VERSION_MISMATCH = unchecked((int)(0x80010110));

        [NativeTypeName("#define RPC_E_INVALID_HEADER _HRESULT_TYPEDEF_(0x80010111L)")]
        public const int RPC_E_INVALID_HEADER = unchecked((int)(0x80010111));

        [NativeTypeName("#define RPC_E_INVALID_EXTENSION _HRESULT_TYPEDEF_(0x80010112L)")]
        public const int RPC_E_INVALID_EXTENSION = unchecked((int)(0x80010112));

        [NativeTypeName("#define RPC_E_INVALID_IPID _HRESULT_TYPEDEF_(0x80010113L)")]
        public const int RPC_E_INVALID_IPID = unchecked((int)(0x80010113));

        [NativeTypeName("#define RPC_E_INVALID_OBJECT _HRESULT_TYPEDEF_(0x80010114L)")]
        public const int RPC_E_INVALID_OBJECT = unchecked((int)(0x80010114));

        [NativeTypeName("#define RPC_S_CALLPENDING _HRESULT_TYPEDEF_(0x80010115L)")]
        public const int RPC_S_CALLPENDING = unchecked((int)(0x80010115));

        [NativeTypeName("#define RPC_S_WAITONTIMER _HRESULT_TYPEDEF_(0x80010116L)")]
        public const int RPC_S_WAITONTIMER = unchecked((int)(0x80010116));

        [NativeTypeName("#define RPC_E_CALL_COMPLETE _HRESULT_TYPEDEF_(0x80010117L)")]
        public const int RPC_E_CALL_COMPLETE = unchecked((int)(0x80010117));

        [NativeTypeName("#define RPC_E_UNSECURE_CALL _HRESULT_TYPEDEF_(0x80010118L)")]
        public const int RPC_E_UNSECURE_CALL = unchecked((int)(0x80010118));

        [NativeTypeName("#define RPC_E_TOO_LATE _HRESULT_TYPEDEF_(0x80010119L)")]
        public const int RPC_E_TOO_LATE = unchecked((int)(0x80010119));

        [NativeTypeName("#define RPC_E_NO_GOOD_SECURITY_PACKAGES _HRESULT_TYPEDEF_(0x8001011AL)")]
        public const int RPC_E_NO_GOOD_SECURITY_PACKAGES = unchecked((int)(0x8001011A));

        [NativeTypeName("#define RPC_E_ACCESS_DENIED _HRESULT_TYPEDEF_(0x8001011BL)")]
        public const int RPC_E_ACCESS_DENIED = unchecked((int)(0x8001011B));

        [NativeTypeName("#define RPC_E_REMOTE_DISABLED _HRESULT_TYPEDEF_(0x8001011CL)")]
        public const int RPC_E_REMOTE_DISABLED = unchecked((int)(0x8001011C));

        [NativeTypeName("#define RPC_E_INVALID_OBJREF _HRESULT_TYPEDEF_(0x8001011DL)")]
        public const int RPC_E_INVALID_OBJREF = unchecked((int)(0x8001011D));

        [NativeTypeName("#define RPC_E_NO_CONTEXT _HRESULT_TYPEDEF_(0x8001011EL)")]
        public const int RPC_E_NO_CONTEXT = unchecked((int)(0x8001011E));

        [NativeTypeName("#define RPC_E_TIMEOUT _HRESULT_TYPEDEF_(0x8001011FL)")]
        public const int RPC_E_TIMEOUT = unchecked((int)(0x8001011F));

        [NativeTypeName("#define RPC_E_NO_SYNC _HRESULT_TYPEDEF_(0x80010120L)")]
        public const int RPC_E_NO_SYNC = unchecked((int)(0x80010120));

        [NativeTypeName("#define RPC_E_FULLSIC_REQUIRED _HRESULT_TYPEDEF_(0x80010121L)")]
        public const int RPC_E_FULLSIC_REQUIRED = unchecked((int)(0x80010121));

        [NativeTypeName("#define RPC_E_INVALID_STD_NAME _HRESULT_TYPEDEF_(0x80010122L)")]
        public const int RPC_E_INVALID_STD_NAME = unchecked((int)(0x80010122));

        [NativeTypeName("#define CO_E_FAILEDTOIMPERSONATE _HRESULT_TYPEDEF_(0x80010123L)")]
        public const int CO_E_FAILEDTOIMPERSONATE = unchecked((int)(0x80010123));

        [NativeTypeName("#define CO_E_FAILEDTOGETSECCTX _HRESULT_TYPEDEF_(0x80010124L)")]
        public const int CO_E_FAILEDTOGETSECCTX = unchecked((int)(0x80010124));

        [NativeTypeName("#define CO_E_FAILEDTOOPENTHREADTOKEN _HRESULT_TYPEDEF_(0x80010125L)")]
        public const int CO_E_FAILEDTOOPENTHREADTOKEN = unchecked((int)(0x80010125));

        [NativeTypeName("#define CO_E_FAILEDTOGETTOKENINFO _HRESULT_TYPEDEF_(0x80010126L)")]
        public const int CO_E_FAILEDTOGETTOKENINFO = unchecked((int)(0x80010126));

        [NativeTypeName("#define CO_E_TRUSTEEDOESNTMATCHCLIENT _HRESULT_TYPEDEF_(0x80010127L)")]
        public const int CO_E_TRUSTEEDOESNTMATCHCLIENT = unchecked((int)(0x80010127));

        [NativeTypeName("#define CO_E_FAILEDTOQUERYCLIENTBLANKET _HRESULT_TYPEDEF_(0x80010128L)")]
        public const int CO_E_FAILEDTOQUERYCLIENTBLANKET = unchecked((int)(0x80010128));

        [NativeTypeName("#define CO_E_FAILEDTOSETDACL _HRESULT_TYPEDEF_(0x80010129L)")]
        public const int CO_E_FAILEDTOSETDACL = unchecked((int)(0x80010129));

        [NativeTypeName("#define CO_E_ACCESSCHECKFAILED _HRESULT_TYPEDEF_(0x8001012AL)")]
        public const int CO_E_ACCESSCHECKFAILED = unchecked((int)(0x8001012A));

        [NativeTypeName("#define CO_E_NETACCESSAPIFAILED _HRESULT_TYPEDEF_(0x8001012BL)")]
        public const int CO_E_NETACCESSAPIFAILED = unchecked((int)(0x8001012B));

        [NativeTypeName("#define CO_E_WRONGTRUSTEENAMESYNTAX _HRESULT_TYPEDEF_(0x8001012CL)")]
        public const int CO_E_WRONGTRUSTEENAMESYNTAX = unchecked((int)(0x8001012C));

        [NativeTypeName("#define CO_E_INVALIDSID _HRESULT_TYPEDEF_(0x8001012DL)")]
        public const int CO_E_INVALIDSID = unchecked((int)(0x8001012D));

        [NativeTypeName("#define CO_E_CONVERSIONFAILED _HRESULT_TYPEDEF_(0x8001012EL)")]
        public const int CO_E_CONVERSIONFAILED = unchecked((int)(0x8001012E));

        [NativeTypeName("#define CO_E_NOMATCHINGSIDFOUND _HRESULT_TYPEDEF_(0x8001012FL)")]
        public const int CO_E_NOMATCHINGSIDFOUND = unchecked((int)(0x8001012F));

        [NativeTypeName("#define CO_E_LOOKUPACCSIDFAILED _HRESULT_TYPEDEF_(0x80010130L)")]
        public const int CO_E_LOOKUPACCSIDFAILED = unchecked((int)(0x80010130));

        [NativeTypeName("#define CO_E_NOMATCHINGNAMEFOUND _HRESULT_TYPEDEF_(0x80010131L)")]
        public const int CO_E_NOMATCHINGNAMEFOUND = unchecked((int)(0x80010131));

        [NativeTypeName("#define CO_E_LOOKUPACCNAMEFAILED _HRESULT_TYPEDEF_(0x80010132L)")]
        public const int CO_E_LOOKUPACCNAMEFAILED = unchecked((int)(0x80010132));

        [NativeTypeName("#define CO_E_SETSERLHNDLFAILED _HRESULT_TYPEDEF_(0x80010133L)")]
        public const int CO_E_SETSERLHNDLFAILED = unchecked((int)(0x80010133));

        [NativeTypeName("#define CO_E_FAILEDTOGETWINDIR _HRESULT_TYPEDEF_(0x80010134L)")]
        public const int CO_E_FAILEDTOGETWINDIR = unchecked((int)(0x80010134));

        [NativeTypeName("#define CO_E_PATHTOOLONG _HRESULT_TYPEDEF_(0x80010135L)")]
        public const int CO_E_PATHTOOLONG = unchecked((int)(0x80010135));

        [NativeTypeName("#define CO_E_FAILEDTOGENUUID _HRESULT_TYPEDEF_(0x80010136L)")]
        public const int CO_E_FAILEDTOGENUUID = unchecked((int)(0x80010136));

        [NativeTypeName("#define CO_E_FAILEDTOCREATEFILE _HRESULT_TYPEDEF_(0x80010137L)")]
        public const int CO_E_FAILEDTOCREATEFILE = unchecked((int)(0x80010137));

        [NativeTypeName("#define CO_E_FAILEDTOCLOSEHANDLE _HRESULT_TYPEDEF_(0x80010138L)")]
        public const int CO_E_FAILEDTOCLOSEHANDLE = unchecked((int)(0x80010138));

        [NativeTypeName("#define CO_E_EXCEEDSYSACLLIMIT _HRESULT_TYPEDEF_(0x80010139L)")]
        public const int CO_E_EXCEEDSYSACLLIMIT = unchecked((int)(0x80010139));

        [NativeTypeName("#define CO_E_ACESINWRONGORDER _HRESULT_TYPEDEF_(0x8001013AL)")]
        public const int CO_E_ACESINWRONGORDER = unchecked((int)(0x8001013A));

        [NativeTypeName("#define CO_E_INCOMPATIBLESTREAMVERSION _HRESULT_TYPEDEF_(0x8001013BL)")]
        public const int CO_E_INCOMPATIBLESTREAMVERSION = unchecked((int)(0x8001013B));

        [NativeTypeName("#define CO_E_FAILEDTOOPENPROCESSTOKEN _HRESULT_TYPEDEF_(0x8001013CL)")]
        public const int CO_E_FAILEDTOOPENPROCESSTOKEN = unchecked((int)(0x8001013C));

        [NativeTypeName("#define CO_E_DECODEFAILED _HRESULT_TYPEDEF_(0x8001013DL)")]
        public const int CO_E_DECODEFAILED = unchecked((int)(0x8001013D));

        [NativeTypeName("#define CO_E_ACNOTINITIALIZED _HRESULT_TYPEDEF_(0x8001013FL)")]
        public const int CO_E_ACNOTINITIALIZED = unchecked((int)(0x8001013F));

        [NativeTypeName("#define CO_E_CANCEL_DISABLED _HRESULT_TYPEDEF_(0x80010140L)")]
        public const int CO_E_CANCEL_DISABLED = unchecked((int)(0x80010140));

        [NativeTypeName("#define RPC_E_UNEXPECTED _HRESULT_TYPEDEF_(0x8001FFFFL)")]
        public const int RPC_E_UNEXPECTED = unchecked((int)(0x8001FFFF));

        [NativeTypeName("#define ERROR_AUDITING_DISABLED _HRESULT_TYPEDEF_(0xC0090001L)")]
        public const int ERROR_AUDITING_DISABLED = unchecked((int)(0xC0090001));

        [NativeTypeName("#define ERROR_ALL_SIDS_FILTERED _HRESULT_TYPEDEF_(0xC0090002L)")]
        public const int ERROR_ALL_SIDS_FILTERED = unchecked((int)(0xC0090002));

        [NativeTypeName("#define ERROR_BIZRULES_NOT_ENABLED _HRESULT_TYPEDEF_(0xC0090003L)")]
        public const int ERROR_BIZRULES_NOT_ENABLED = unchecked((int)(0xC0090003));

        [NativeTypeName("#define NTE_BAD_UID _HRESULT_TYPEDEF_(0x80090001L)")]
        public const int NTE_BAD_UID = unchecked((int)(0x80090001));

        [NativeTypeName("#define NTE_BAD_HASH _HRESULT_TYPEDEF_(0x80090002L)")]
        public const int NTE_BAD_HASH = unchecked((int)(0x80090002));

        [NativeTypeName("#define NTE_BAD_KEY _HRESULT_TYPEDEF_(0x80090003L)")]
        public const int NTE_BAD_KEY = unchecked((int)(0x80090003));

        [NativeTypeName("#define NTE_BAD_LEN _HRESULT_TYPEDEF_(0x80090004L)")]
        public const int NTE_BAD_LEN = unchecked((int)(0x80090004));

        [NativeTypeName("#define NTE_BAD_DATA _HRESULT_TYPEDEF_(0x80090005L)")]
        public const int NTE_BAD_DATA = unchecked((int)(0x80090005));

        [NativeTypeName("#define NTE_BAD_SIGNATURE _HRESULT_TYPEDEF_(0x80090006L)")]
        public const int NTE_BAD_SIGNATURE = unchecked((int)(0x80090006));

        [NativeTypeName("#define NTE_BAD_VER _HRESULT_TYPEDEF_(0x80090007L)")]
        public const int NTE_BAD_VER = unchecked((int)(0x80090007));

        [NativeTypeName("#define NTE_BAD_ALGID _HRESULT_TYPEDEF_(0x80090008L)")]
        public const int NTE_BAD_ALGID = unchecked((int)(0x80090008));

        [NativeTypeName("#define NTE_BAD_FLAGS _HRESULT_TYPEDEF_(0x80090009L)")]
        public const int NTE_BAD_FLAGS = unchecked((int)(0x80090009));

        [NativeTypeName("#define NTE_BAD_TYPE _HRESULT_TYPEDEF_(0x8009000AL)")]
        public const int NTE_BAD_TYPE = unchecked((int)(0x8009000A));

        [NativeTypeName("#define NTE_BAD_KEY_STATE _HRESULT_TYPEDEF_(0x8009000BL)")]
        public const int NTE_BAD_KEY_STATE = unchecked((int)(0x8009000B));

        [NativeTypeName("#define NTE_BAD_HASH_STATE _HRESULT_TYPEDEF_(0x8009000CL)")]
        public const int NTE_BAD_HASH_STATE = unchecked((int)(0x8009000C));

        [NativeTypeName("#define NTE_NO_KEY _HRESULT_TYPEDEF_(0x8009000DL)")]
        public const int NTE_NO_KEY = unchecked((int)(0x8009000D));

        [NativeTypeName("#define NTE_NO_MEMORY _HRESULT_TYPEDEF_(0x8009000EL)")]
        public const int NTE_NO_MEMORY = unchecked((int)(0x8009000E));

        [NativeTypeName("#define NTE_EXISTS _HRESULT_TYPEDEF_(0x8009000FL)")]
        public const int NTE_EXISTS = unchecked((int)(0x8009000F));

        [NativeTypeName("#define NTE_PERM _HRESULT_TYPEDEF_(0x80090010L)")]
        public const int NTE_PERM = unchecked((int)(0x80090010));

        [NativeTypeName("#define NTE_NOT_FOUND _HRESULT_TYPEDEF_(0x80090011L)")]
        public const int NTE_NOT_FOUND = unchecked((int)(0x80090011));

        [NativeTypeName("#define NTE_DOUBLE_ENCRYPT _HRESULT_TYPEDEF_(0x80090012L)")]
        public const int NTE_DOUBLE_ENCRYPT = unchecked((int)(0x80090012));

        [NativeTypeName("#define NTE_BAD_PROVIDER _HRESULT_TYPEDEF_(0x80090013L)")]
        public const int NTE_BAD_PROVIDER = unchecked((int)(0x80090013));

        [NativeTypeName("#define NTE_BAD_PROV_TYPE _HRESULT_TYPEDEF_(0x80090014L)")]
        public const int NTE_BAD_PROV_TYPE = unchecked((int)(0x80090014));

        [NativeTypeName("#define NTE_BAD_PUBLIC_KEY _HRESULT_TYPEDEF_(0x80090015L)")]
        public const int NTE_BAD_PUBLIC_KEY = unchecked((int)(0x80090015));

        [NativeTypeName("#define NTE_BAD_KEYSET _HRESULT_TYPEDEF_(0x80090016L)")]
        public const int NTE_BAD_KEYSET = unchecked((int)(0x80090016));

        [NativeTypeName("#define NTE_PROV_TYPE_NOT_DEF _HRESULT_TYPEDEF_(0x80090017L)")]
        public const int NTE_PROV_TYPE_NOT_DEF = unchecked((int)(0x80090017));

        [NativeTypeName("#define NTE_PROV_TYPE_ENTRY_BAD _HRESULT_TYPEDEF_(0x80090018L)")]
        public const int NTE_PROV_TYPE_ENTRY_BAD = unchecked((int)(0x80090018));

        [NativeTypeName("#define NTE_KEYSET_NOT_DEF _HRESULT_TYPEDEF_(0x80090019L)")]
        public const int NTE_KEYSET_NOT_DEF = unchecked((int)(0x80090019));

        [NativeTypeName("#define NTE_KEYSET_ENTRY_BAD _HRESULT_TYPEDEF_(0x8009001AL)")]
        public const int NTE_KEYSET_ENTRY_BAD = unchecked((int)(0x8009001A));

        [NativeTypeName("#define NTE_PROV_TYPE_NO_MATCH _HRESULT_TYPEDEF_(0x8009001BL)")]
        public const int NTE_PROV_TYPE_NO_MATCH = unchecked((int)(0x8009001B));

        [NativeTypeName("#define NTE_SIGNATURE_FILE_BAD _HRESULT_TYPEDEF_(0x8009001CL)")]
        public const int NTE_SIGNATURE_FILE_BAD = unchecked((int)(0x8009001C));

        [NativeTypeName("#define NTE_PROVIDER_DLL_FAIL _HRESULT_TYPEDEF_(0x8009001DL)")]
        public const int NTE_PROVIDER_DLL_FAIL = unchecked((int)(0x8009001D));

        [NativeTypeName("#define NTE_PROV_DLL_NOT_FOUND _HRESULT_TYPEDEF_(0x8009001EL)")]
        public const int NTE_PROV_DLL_NOT_FOUND = unchecked((int)(0x8009001E));

        [NativeTypeName("#define NTE_BAD_KEYSET_PARAM _HRESULT_TYPEDEF_(0x8009001FL)")]
        public const int NTE_BAD_KEYSET_PARAM = unchecked((int)(0x8009001F));

        [NativeTypeName("#define NTE_FAIL _HRESULT_TYPEDEF_(0x80090020L)")]
        public const int NTE_FAIL = unchecked((int)(0x80090020));

        [NativeTypeName("#define NTE_SYS_ERR _HRESULT_TYPEDEF_(0x80090021L)")]
        public const int NTE_SYS_ERR = unchecked((int)(0x80090021));

        [NativeTypeName("#define NTE_SILENT_CONTEXT _HRESULT_TYPEDEF_(0x80090022L)")]
        public const int NTE_SILENT_CONTEXT = unchecked((int)(0x80090022));

        [NativeTypeName("#define NTE_TOKEN_KEYSET_STORAGE_FULL _HRESULT_TYPEDEF_(0x80090023L)")]
        public const int NTE_TOKEN_KEYSET_STORAGE_FULL = unchecked((int)(0x80090023));

        [NativeTypeName("#define NTE_TEMPORARY_PROFILE _HRESULT_TYPEDEF_(0x80090024L)")]
        public const int NTE_TEMPORARY_PROFILE = unchecked((int)(0x80090024));

        [NativeTypeName("#define NTE_FIXEDPARAMETER _HRESULT_TYPEDEF_(0x80090025L)")]
        public const int NTE_FIXEDPARAMETER = unchecked((int)(0x80090025));

        [NativeTypeName("#define NTE_INVALID_HANDLE _HRESULT_TYPEDEF_(0x80090026L)")]
        public const int NTE_INVALID_HANDLE = unchecked((int)(0x80090026));

        [NativeTypeName("#define NTE_INVALID_PARAMETER _HRESULT_TYPEDEF_(0x80090027L)")]
        public const int NTE_INVALID_PARAMETER = unchecked((int)(0x80090027));

        [NativeTypeName("#define NTE_BUFFER_TOO_SMALL _HRESULT_TYPEDEF_(0x80090028L)")]
        public const int NTE_BUFFER_TOO_SMALL = unchecked((int)(0x80090028));

        [NativeTypeName("#define NTE_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80090029L)")]
        public const int NTE_NOT_SUPPORTED = unchecked((int)(0x80090029));

        [NativeTypeName("#define NTE_NO_MORE_ITEMS _HRESULT_TYPEDEF_(0x8009002AL)")]
        public const int NTE_NO_MORE_ITEMS = unchecked((int)(0x8009002A));

        [NativeTypeName("#define NTE_BUFFERS_OVERLAP _HRESULT_TYPEDEF_(0x8009002BL)")]
        public const int NTE_BUFFERS_OVERLAP = unchecked((int)(0x8009002B));

        [NativeTypeName("#define NTE_DECRYPTION_FAILURE _HRESULT_TYPEDEF_(0x8009002CL)")]
        public const int NTE_DECRYPTION_FAILURE = unchecked((int)(0x8009002C));

        [NativeTypeName("#define NTE_INTERNAL_ERROR _HRESULT_TYPEDEF_(0x8009002DL)")]
        public const int NTE_INTERNAL_ERROR = unchecked((int)(0x8009002D));

        [NativeTypeName("#define NTE_UI_REQUIRED _HRESULT_TYPEDEF_(0x8009002EL)")]
        public const int NTE_UI_REQUIRED = unchecked((int)(0x8009002E));

        [NativeTypeName("#define NTE_HMAC_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x8009002FL)")]
        public const int NTE_HMAC_NOT_SUPPORTED = unchecked((int)(0x8009002F));

        [NativeTypeName("#define NTE_DEVICE_NOT_READY _HRESULT_TYPEDEF_(0x80090030L)")]
        public const int NTE_DEVICE_NOT_READY = unchecked((int)(0x80090030));

        [NativeTypeName("#define NTE_AUTHENTICATION_IGNORED _HRESULT_TYPEDEF_(0x80090031L)")]
        public const int NTE_AUTHENTICATION_IGNORED = unchecked((int)(0x80090031));

        [NativeTypeName("#define NTE_VALIDATION_FAILED _HRESULT_TYPEDEF_(0x80090032L)")]
        public const int NTE_VALIDATION_FAILED = unchecked((int)(0x80090032));

        [NativeTypeName("#define NTE_INCORRECT_PASSWORD _HRESULT_TYPEDEF_(0x80090033L)")]
        public const int NTE_INCORRECT_PASSWORD = unchecked((int)(0x80090033));

        [NativeTypeName("#define NTE_ENCRYPTION_FAILURE _HRESULT_TYPEDEF_(0x80090034L)")]
        public const int NTE_ENCRYPTION_FAILURE = unchecked((int)(0x80090034));

        [NativeTypeName("#define NTE_DEVICE_NOT_FOUND _HRESULT_TYPEDEF_(0x80090035L)")]
        public const int NTE_DEVICE_NOT_FOUND = unchecked((int)(0x80090035));

        [NativeTypeName("#define NTE_USER_CANCELLED _HRESULT_TYPEDEF_(0x80090036L)")]
        public const int NTE_USER_CANCELLED = unchecked((int)(0x80090036));

        [NativeTypeName("#define NTE_PASSWORD_CHANGE_REQUIRED _HRESULT_TYPEDEF_(0x80090037L)")]
        public const int NTE_PASSWORD_CHANGE_REQUIRED = unchecked((int)(0x80090037));

        [NativeTypeName("#define NTE_NOT_ACTIVE_CONSOLE _HRESULT_TYPEDEF_(0x80090038L)")]
        public const int NTE_NOT_ACTIVE_CONSOLE = unchecked((int)(0x80090038));

        [NativeTypeName("#define SEC_E_INSUFFICIENT_MEMORY _HRESULT_TYPEDEF_(0x80090300L)")]
        public const int SEC_E_INSUFFICIENT_MEMORY = unchecked((int)(0x80090300));

        [NativeTypeName("#define SEC_E_INVALID_HANDLE _HRESULT_TYPEDEF_(0x80090301L)")]
        public const int SEC_E_INVALID_HANDLE = unchecked((int)(0x80090301));

        [NativeTypeName("#define SEC_E_UNSUPPORTED_FUNCTION _HRESULT_TYPEDEF_(0x80090302L)")]
        public const int SEC_E_UNSUPPORTED_FUNCTION = unchecked((int)(0x80090302));

        [NativeTypeName("#define SEC_E_TARGET_UNKNOWN _HRESULT_TYPEDEF_(0x80090303L)")]
        public const int SEC_E_TARGET_UNKNOWN = unchecked((int)(0x80090303));

        [NativeTypeName("#define SEC_E_INTERNAL_ERROR _HRESULT_TYPEDEF_(0x80090304L)")]
        public const int SEC_E_INTERNAL_ERROR = unchecked((int)(0x80090304));

        [NativeTypeName("#define SEC_E_SECPKG_NOT_FOUND _HRESULT_TYPEDEF_(0x80090305L)")]
        public const int SEC_E_SECPKG_NOT_FOUND = unchecked((int)(0x80090305));

        [NativeTypeName("#define SEC_E_NOT_OWNER _HRESULT_TYPEDEF_(0x80090306L)")]
        public const int SEC_E_NOT_OWNER = unchecked((int)(0x80090306));

        [NativeTypeName("#define SEC_E_CANNOT_INSTALL _HRESULT_TYPEDEF_(0x80090307L)")]
        public const int SEC_E_CANNOT_INSTALL = unchecked((int)(0x80090307));

        [NativeTypeName("#define SEC_E_INVALID_TOKEN _HRESULT_TYPEDEF_(0x80090308L)")]
        public const int SEC_E_INVALID_TOKEN = unchecked((int)(0x80090308));

        [NativeTypeName("#define SEC_E_CANNOT_PACK _HRESULT_TYPEDEF_(0x80090309L)")]
        public const int SEC_E_CANNOT_PACK = unchecked((int)(0x80090309));

        [NativeTypeName("#define SEC_E_QOP_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x8009030AL)")]
        public const int SEC_E_QOP_NOT_SUPPORTED = unchecked((int)(0x8009030A));

        [NativeTypeName("#define SEC_E_NO_IMPERSONATION _HRESULT_TYPEDEF_(0x8009030BL)")]
        public const int SEC_E_NO_IMPERSONATION = unchecked((int)(0x8009030B));

        [NativeTypeName("#define SEC_E_LOGON_DENIED _HRESULT_TYPEDEF_(0x8009030CL)")]
        public const int SEC_E_LOGON_DENIED = unchecked((int)(0x8009030C));

        [NativeTypeName("#define SEC_E_UNKNOWN_CREDENTIALS _HRESULT_TYPEDEF_(0x8009030DL)")]
        public const int SEC_E_UNKNOWN_CREDENTIALS = unchecked((int)(0x8009030D));

        [NativeTypeName("#define SEC_E_NO_CREDENTIALS _HRESULT_TYPEDEF_(0x8009030EL)")]
        public const int SEC_E_NO_CREDENTIALS = unchecked((int)(0x8009030E));

        [NativeTypeName("#define SEC_E_MESSAGE_ALTERED _HRESULT_TYPEDEF_(0x8009030FL)")]
        public const int SEC_E_MESSAGE_ALTERED = unchecked((int)(0x8009030F));

        [NativeTypeName("#define SEC_E_OUT_OF_SEQUENCE _HRESULT_TYPEDEF_(0x80090310L)")]
        public const int SEC_E_OUT_OF_SEQUENCE = unchecked((int)(0x80090310));

        [NativeTypeName("#define SEC_E_NO_AUTHENTICATING_AUTHORITY _HRESULT_TYPEDEF_(0x80090311L)")]
        public const int SEC_E_NO_AUTHENTICATING_AUTHORITY = unchecked((int)(0x80090311));

        [NativeTypeName("#define SEC_I_CONTINUE_NEEDED _HRESULT_TYPEDEF_(0x00090312L)")]
        public const int SEC_I_CONTINUE_NEEDED = ((int)(0x00090312));

        [NativeTypeName("#define SEC_I_COMPLETE_NEEDED _HRESULT_TYPEDEF_(0x00090313L)")]
        public const int SEC_I_COMPLETE_NEEDED = ((int)(0x00090313));

        [NativeTypeName("#define SEC_I_COMPLETE_AND_CONTINUE _HRESULT_TYPEDEF_(0x00090314L)")]
        public const int SEC_I_COMPLETE_AND_CONTINUE = ((int)(0x00090314));

        [NativeTypeName("#define SEC_I_LOCAL_LOGON _HRESULT_TYPEDEF_(0x00090315L)")]
        public const int SEC_I_LOCAL_LOGON = ((int)(0x00090315));

        [NativeTypeName("#define SEC_I_GENERIC_EXTENSION_RECEIVED _HRESULT_TYPEDEF_(0x00090316L)")]
        public const int SEC_I_GENERIC_EXTENSION_RECEIVED = ((int)(0x00090316));

        [NativeTypeName("#define SEC_E_BAD_PKGID _HRESULT_TYPEDEF_(0x80090316L)")]
        public const int SEC_E_BAD_PKGID = unchecked((int)(0x80090316));

        [NativeTypeName("#define SEC_E_CONTEXT_EXPIRED _HRESULT_TYPEDEF_(0x80090317L)")]
        public const int SEC_E_CONTEXT_EXPIRED = unchecked((int)(0x80090317));

        [NativeTypeName("#define SEC_I_CONTEXT_EXPIRED _HRESULT_TYPEDEF_(0x00090317L)")]
        public const int SEC_I_CONTEXT_EXPIRED = ((int)(0x00090317));

        [NativeTypeName("#define SEC_E_INCOMPLETE_MESSAGE _HRESULT_TYPEDEF_(0x80090318L)")]
        public const int SEC_E_INCOMPLETE_MESSAGE = unchecked((int)(0x80090318));

        [NativeTypeName("#define SEC_E_INCOMPLETE_CREDENTIALS _HRESULT_TYPEDEF_(0x80090320L)")]
        public const int SEC_E_INCOMPLETE_CREDENTIALS = unchecked((int)(0x80090320));

        [NativeTypeName("#define SEC_E_BUFFER_TOO_SMALL _HRESULT_TYPEDEF_(0x80090321L)")]
        public const int SEC_E_BUFFER_TOO_SMALL = unchecked((int)(0x80090321));

        [NativeTypeName("#define SEC_I_INCOMPLETE_CREDENTIALS _HRESULT_TYPEDEF_(0x00090320L)")]
        public const int SEC_I_INCOMPLETE_CREDENTIALS = ((int)(0x00090320));

        [NativeTypeName("#define SEC_I_RENEGOTIATE _HRESULT_TYPEDEF_(0x00090321L)")]
        public const int SEC_I_RENEGOTIATE = ((int)(0x00090321));

        [NativeTypeName("#define SEC_E_WRONG_PRINCIPAL _HRESULT_TYPEDEF_(0x80090322L)")]
        public const int SEC_E_WRONG_PRINCIPAL = unchecked((int)(0x80090322));

        [NativeTypeName("#define SEC_I_NO_LSA_CONTEXT _HRESULT_TYPEDEF_(0x00090323L)")]
        public const int SEC_I_NO_LSA_CONTEXT = ((int)(0x00090323));

        [NativeTypeName("#define SEC_E_TIME_SKEW _HRESULT_TYPEDEF_(0x80090324L)")]
        public const int SEC_E_TIME_SKEW = unchecked((int)(0x80090324));

        [NativeTypeName("#define SEC_E_UNTRUSTED_ROOT _HRESULT_TYPEDEF_(0x80090325L)")]
        public const int SEC_E_UNTRUSTED_ROOT = unchecked((int)(0x80090325));

        [NativeTypeName("#define SEC_E_ILLEGAL_MESSAGE _HRESULT_TYPEDEF_(0x80090326L)")]
        public const int SEC_E_ILLEGAL_MESSAGE = unchecked((int)(0x80090326));

        [NativeTypeName("#define SEC_E_CERT_UNKNOWN _HRESULT_TYPEDEF_(0x80090327L)")]
        public const int SEC_E_CERT_UNKNOWN = unchecked((int)(0x80090327));

        [NativeTypeName("#define SEC_E_CERT_EXPIRED _HRESULT_TYPEDEF_(0x80090328L)")]
        public const int SEC_E_CERT_EXPIRED = unchecked((int)(0x80090328));

        [NativeTypeName("#define SEC_E_ENCRYPT_FAILURE _HRESULT_TYPEDEF_(0x80090329L)")]
        public const int SEC_E_ENCRYPT_FAILURE = unchecked((int)(0x80090329));

        [NativeTypeName("#define SEC_E_DECRYPT_FAILURE _HRESULT_TYPEDEF_(0x80090330L)")]
        public const int SEC_E_DECRYPT_FAILURE = unchecked((int)(0x80090330));

        [NativeTypeName("#define SEC_E_ALGORITHM_MISMATCH _HRESULT_TYPEDEF_(0x80090331L)")]
        public const int SEC_E_ALGORITHM_MISMATCH = unchecked((int)(0x80090331));

        [NativeTypeName("#define SEC_E_SECURITY_QOS_FAILED _HRESULT_TYPEDEF_(0x80090332L)")]
        public const int SEC_E_SECURITY_QOS_FAILED = unchecked((int)(0x80090332));

        [NativeTypeName("#define SEC_E_UNFINISHED_CONTEXT_DELETED _HRESULT_TYPEDEF_(0x80090333L)")]
        public const int SEC_E_UNFINISHED_CONTEXT_DELETED = unchecked((int)(0x80090333));

        [NativeTypeName("#define SEC_E_NO_TGT_REPLY _HRESULT_TYPEDEF_(0x80090334L)")]
        public const int SEC_E_NO_TGT_REPLY = unchecked((int)(0x80090334));

        [NativeTypeName("#define SEC_E_NO_IP_ADDRESSES _HRESULT_TYPEDEF_(0x80090335L)")]
        public const int SEC_E_NO_IP_ADDRESSES = unchecked((int)(0x80090335));

        [NativeTypeName("#define SEC_E_WRONG_CREDENTIAL_HANDLE _HRESULT_TYPEDEF_(0x80090336L)")]
        public const int SEC_E_WRONG_CREDENTIAL_HANDLE = unchecked((int)(0x80090336));

        [NativeTypeName("#define SEC_E_CRYPTO_SYSTEM_INVALID _HRESULT_TYPEDEF_(0x80090337L)")]
        public const int SEC_E_CRYPTO_SYSTEM_INVALID = unchecked((int)(0x80090337));

        [NativeTypeName("#define SEC_E_MAX_REFERRALS_EXCEEDED _HRESULT_TYPEDEF_(0x80090338L)")]
        public const int SEC_E_MAX_REFERRALS_EXCEEDED = unchecked((int)(0x80090338));

        [NativeTypeName("#define SEC_E_MUST_BE_KDC _HRESULT_TYPEDEF_(0x80090339L)")]
        public const int SEC_E_MUST_BE_KDC = unchecked((int)(0x80090339));

        [NativeTypeName("#define SEC_E_STRONG_CRYPTO_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x8009033AL)")]
        public const int SEC_E_STRONG_CRYPTO_NOT_SUPPORTED = unchecked((int)(0x8009033A));

        [NativeTypeName("#define SEC_E_TOO_MANY_PRINCIPALS _HRESULT_TYPEDEF_(0x8009033BL)")]
        public const int SEC_E_TOO_MANY_PRINCIPALS = unchecked((int)(0x8009033B));

        [NativeTypeName("#define SEC_E_NO_PA_DATA _HRESULT_TYPEDEF_(0x8009033CL)")]
        public const int SEC_E_NO_PA_DATA = unchecked((int)(0x8009033C));

        [NativeTypeName("#define SEC_E_PKINIT_NAME_MISMATCH _HRESULT_TYPEDEF_(0x8009033DL)")]
        public const int SEC_E_PKINIT_NAME_MISMATCH = unchecked((int)(0x8009033D));

        [NativeTypeName("#define SEC_E_SMARTCARD_LOGON_REQUIRED _HRESULT_TYPEDEF_(0x8009033EL)")]
        public const int SEC_E_SMARTCARD_LOGON_REQUIRED = unchecked((int)(0x8009033E));

        [NativeTypeName("#define SEC_E_SHUTDOWN_IN_PROGRESS _HRESULT_TYPEDEF_(0x8009033FL)")]
        public const int SEC_E_SHUTDOWN_IN_PROGRESS = unchecked((int)(0x8009033F));

        [NativeTypeName("#define SEC_E_KDC_INVALID_REQUEST _HRESULT_TYPEDEF_(0x80090340L)")]
        public const int SEC_E_KDC_INVALID_REQUEST = unchecked((int)(0x80090340));

        [NativeTypeName("#define SEC_E_KDC_UNABLE_TO_REFER _HRESULT_TYPEDEF_(0x80090341L)")]
        public const int SEC_E_KDC_UNABLE_TO_REFER = unchecked((int)(0x80090341));

        [NativeTypeName("#define SEC_E_KDC_UNKNOWN_ETYPE _HRESULT_TYPEDEF_(0x80090342L)")]
        public const int SEC_E_KDC_UNKNOWN_ETYPE = unchecked((int)(0x80090342));

        [NativeTypeName("#define SEC_E_UNSUPPORTED_PREAUTH _HRESULT_TYPEDEF_(0x80090343L)")]
        public const int SEC_E_UNSUPPORTED_PREAUTH = unchecked((int)(0x80090343));

        [NativeTypeName("#define SEC_E_DELEGATION_REQUIRED _HRESULT_TYPEDEF_(0x80090345L)")]
        public const int SEC_E_DELEGATION_REQUIRED = unchecked((int)(0x80090345));

        [NativeTypeName("#define SEC_E_BAD_BINDINGS _HRESULT_TYPEDEF_(0x80090346L)")]
        public const int SEC_E_BAD_BINDINGS = unchecked((int)(0x80090346));

        [NativeTypeName("#define SEC_E_MULTIPLE_ACCOUNTS _HRESULT_TYPEDEF_(0x80090347L)")]
        public const int SEC_E_MULTIPLE_ACCOUNTS = unchecked((int)(0x80090347));

        [NativeTypeName("#define SEC_E_NO_KERB_KEY _HRESULT_TYPEDEF_(0x80090348L)")]
        public const int SEC_E_NO_KERB_KEY = unchecked((int)(0x80090348));

        [NativeTypeName("#define SEC_E_CERT_WRONG_USAGE _HRESULT_TYPEDEF_(0x80090349L)")]
        public const int SEC_E_CERT_WRONG_USAGE = unchecked((int)(0x80090349));

        [NativeTypeName("#define SEC_E_DOWNGRADE_DETECTED _HRESULT_TYPEDEF_(0x80090350L)")]
        public const int SEC_E_DOWNGRADE_DETECTED = unchecked((int)(0x80090350));

        [NativeTypeName("#define SEC_E_SMARTCARD_CERT_REVOKED _HRESULT_TYPEDEF_(0x80090351L)")]
        public const int SEC_E_SMARTCARD_CERT_REVOKED = unchecked((int)(0x80090351));

        [NativeTypeName("#define SEC_E_ISSUING_CA_UNTRUSTED _HRESULT_TYPEDEF_(0x80090352L)")]
        public const int SEC_E_ISSUING_CA_UNTRUSTED = unchecked((int)(0x80090352));

        [NativeTypeName("#define SEC_E_REVOCATION_OFFLINE_C _HRESULT_TYPEDEF_(0x80090353L)")]
        public const int SEC_E_REVOCATION_OFFLINE_C = unchecked((int)(0x80090353));

        [NativeTypeName("#define SEC_E_PKINIT_CLIENT_FAILURE _HRESULT_TYPEDEF_(0x80090354L)")]
        public const int SEC_E_PKINIT_CLIENT_FAILURE = unchecked((int)(0x80090354));

        [NativeTypeName("#define SEC_E_SMARTCARD_CERT_EXPIRED _HRESULT_TYPEDEF_(0x80090355L)")]
        public const int SEC_E_SMARTCARD_CERT_EXPIRED = unchecked((int)(0x80090355));

        [NativeTypeName("#define SEC_E_NO_S4U_PROT_SUPPORT _HRESULT_TYPEDEF_(0x80090356L)")]
        public const int SEC_E_NO_S4U_PROT_SUPPORT = unchecked((int)(0x80090356));

        [NativeTypeName("#define SEC_E_CROSSREALM_DELEGATION_FAILURE _HRESULT_TYPEDEF_(0x80090357L)")]
        public const int SEC_E_CROSSREALM_DELEGATION_FAILURE = unchecked((int)(0x80090357));

        [NativeTypeName("#define SEC_E_REVOCATION_OFFLINE_KDC _HRESULT_TYPEDEF_(0x80090358L)")]
        public const int SEC_E_REVOCATION_OFFLINE_KDC = unchecked((int)(0x80090358));

        [NativeTypeName("#define SEC_E_ISSUING_CA_UNTRUSTED_KDC _HRESULT_TYPEDEF_(0x80090359L)")]
        public const int SEC_E_ISSUING_CA_UNTRUSTED_KDC = unchecked((int)(0x80090359));

        [NativeTypeName("#define SEC_E_KDC_CERT_EXPIRED _HRESULT_TYPEDEF_(0x8009035AL)")]
        public const int SEC_E_KDC_CERT_EXPIRED = unchecked((int)(0x8009035A));

        [NativeTypeName("#define SEC_E_KDC_CERT_REVOKED _HRESULT_TYPEDEF_(0x8009035BL)")]
        public const int SEC_E_KDC_CERT_REVOKED = unchecked((int)(0x8009035B));

        [NativeTypeName("#define SEC_I_SIGNATURE_NEEDED _HRESULT_TYPEDEF_(0x0009035CL)")]
        public const int SEC_I_SIGNATURE_NEEDED = ((int)(0x0009035C));

        [NativeTypeName("#define SEC_E_INVALID_PARAMETER _HRESULT_TYPEDEF_(0x8009035DL)")]
        public const int SEC_E_INVALID_PARAMETER = unchecked((int)(0x8009035D));

        [NativeTypeName("#define SEC_E_DELEGATION_POLICY _HRESULT_TYPEDEF_(0x8009035EL)")]
        public const int SEC_E_DELEGATION_POLICY = unchecked((int)(0x8009035E));

        [NativeTypeName("#define SEC_E_POLICY_NLTM_ONLY _HRESULT_TYPEDEF_(0x8009035FL)")]
        public const int SEC_E_POLICY_NLTM_ONLY = unchecked((int)(0x8009035F));

        [NativeTypeName("#define SEC_I_NO_RENEGOTIATION _HRESULT_TYPEDEF_(0x00090360L)")]
        public const int SEC_I_NO_RENEGOTIATION = ((int)(0x00090360));

        [NativeTypeName("#define SEC_E_NO_CONTEXT _HRESULT_TYPEDEF_(0x80090361L)")]
        public const int SEC_E_NO_CONTEXT = unchecked((int)(0x80090361));

        [NativeTypeName("#define SEC_E_PKU2U_CERT_FAILURE _HRESULT_TYPEDEF_(0x80090362L)")]
        public const int SEC_E_PKU2U_CERT_FAILURE = unchecked((int)(0x80090362));

        [NativeTypeName("#define SEC_E_MUTUAL_AUTH_FAILED _HRESULT_TYPEDEF_(0x80090363L)")]
        public const int SEC_E_MUTUAL_AUTH_FAILED = unchecked((int)(0x80090363));

        [NativeTypeName("#define SEC_I_MESSAGE_FRAGMENT _HRESULT_TYPEDEF_(0x00090364L)")]
        public const int SEC_I_MESSAGE_FRAGMENT = ((int)(0x00090364));

        [NativeTypeName("#define SEC_E_ONLY_HTTPS_ALLOWED _HRESULT_TYPEDEF_(0x80090365L)")]
        public const int SEC_E_ONLY_HTTPS_ALLOWED = unchecked((int)(0x80090365));

        [NativeTypeName("#define SEC_I_CONTINUE_NEEDED_MESSAGE_OK _HRESULT_TYPEDEF_(0x00090366L)")]
        public const int SEC_I_CONTINUE_NEEDED_MESSAGE_OK = ((int)(0x00090366));

        [NativeTypeName("#define SEC_E_APPLICATION_PROTOCOL_MISMATCH _HRESULT_TYPEDEF_(0x80090367L)")]
        public const int SEC_E_APPLICATION_PROTOCOL_MISMATCH = unchecked((int)(0x80090367));

        [NativeTypeName("#define SEC_I_ASYNC_CALL_PENDING _HRESULT_TYPEDEF_(0x00090368L)")]
        public const int SEC_I_ASYNC_CALL_PENDING = ((int)(0x00090368));

        [NativeTypeName("#define SEC_E_INVALID_UPN_NAME _HRESULT_TYPEDEF_(0x80090369L)")]
        public const int SEC_E_INVALID_UPN_NAME = unchecked((int)(0x80090369));

        [NativeTypeName("#define SEC_E_EXT_BUFFER_TOO_SMALL _HRESULT_TYPEDEF_(0x8009036AL)")]
        public const int SEC_E_EXT_BUFFER_TOO_SMALL = unchecked((int)(0x8009036A));

        [NativeTypeName("#define SEC_E_INSUFFICIENT_BUFFERS _HRESULT_TYPEDEF_(0x8009036BL)")]
        public const int SEC_E_INSUFFICIENT_BUFFERS = unchecked((int)(0x8009036B));

        [NativeTypeName("#define SEC_E_NO_SPM SEC_E_INTERNAL_ERROR")]
        public const int SEC_E_NO_SPM = unchecked((int)(0x80090304));

        [NativeTypeName("#define SEC_E_NOT_SUPPORTED SEC_E_UNSUPPORTED_FUNCTION")]
        public const int SEC_E_NOT_SUPPORTED = unchecked((int)(0x80090302));

        [NativeTypeName("#define CRYPT_E_MSG_ERROR _HRESULT_TYPEDEF_(0x80091001L)")]
        public const int CRYPT_E_MSG_ERROR = unchecked((int)(0x80091001));

        [NativeTypeName("#define CRYPT_E_UNKNOWN_ALGO _HRESULT_TYPEDEF_(0x80091002L)")]
        public const int CRYPT_E_UNKNOWN_ALGO = unchecked((int)(0x80091002));

        [NativeTypeName("#define CRYPT_E_OID_FORMAT _HRESULT_TYPEDEF_(0x80091003L)")]
        public const int CRYPT_E_OID_FORMAT = unchecked((int)(0x80091003));

        [NativeTypeName("#define CRYPT_E_INVALID_MSG_TYPE _HRESULT_TYPEDEF_(0x80091004L)")]
        public const int CRYPT_E_INVALID_MSG_TYPE = unchecked((int)(0x80091004));

        [NativeTypeName("#define CRYPT_E_UNEXPECTED_ENCODING _HRESULT_TYPEDEF_(0x80091005L)")]
        public const int CRYPT_E_UNEXPECTED_ENCODING = unchecked((int)(0x80091005));

        [NativeTypeName("#define CRYPT_E_AUTH_ATTR_MISSING _HRESULT_TYPEDEF_(0x80091006L)")]
        public const int CRYPT_E_AUTH_ATTR_MISSING = unchecked((int)(0x80091006));

        [NativeTypeName("#define CRYPT_E_HASH_VALUE _HRESULT_TYPEDEF_(0x80091007L)")]
        public const int CRYPT_E_HASH_VALUE = unchecked((int)(0x80091007));

        [NativeTypeName("#define CRYPT_E_INVALID_INDEX _HRESULT_TYPEDEF_(0x80091008L)")]
        public const int CRYPT_E_INVALID_INDEX = unchecked((int)(0x80091008));

        [NativeTypeName("#define CRYPT_E_ALREADY_DECRYPTED _HRESULT_TYPEDEF_(0x80091009L)")]
        public const int CRYPT_E_ALREADY_DECRYPTED = unchecked((int)(0x80091009));

        [NativeTypeName("#define CRYPT_E_NOT_DECRYPTED _HRESULT_TYPEDEF_(0x8009100AL)")]
        public const int CRYPT_E_NOT_DECRYPTED = unchecked((int)(0x8009100A));

        [NativeTypeName("#define CRYPT_E_RECIPIENT_NOT_FOUND _HRESULT_TYPEDEF_(0x8009100BL)")]
        public const int CRYPT_E_RECIPIENT_NOT_FOUND = unchecked((int)(0x8009100B));

        [NativeTypeName("#define CRYPT_E_CONTROL_TYPE _HRESULT_TYPEDEF_(0x8009100CL)")]
        public const int CRYPT_E_CONTROL_TYPE = unchecked((int)(0x8009100C));

        [NativeTypeName("#define CRYPT_E_ISSUER_SERIALNUMBER _HRESULT_TYPEDEF_(0x8009100DL)")]
        public const int CRYPT_E_ISSUER_SERIALNUMBER = unchecked((int)(0x8009100D));

        [NativeTypeName("#define CRYPT_E_SIGNER_NOT_FOUND _HRESULT_TYPEDEF_(0x8009100EL)")]
        public const int CRYPT_E_SIGNER_NOT_FOUND = unchecked((int)(0x8009100E));

        [NativeTypeName("#define CRYPT_E_ATTRIBUTES_MISSING _HRESULT_TYPEDEF_(0x8009100FL)")]
        public const int CRYPT_E_ATTRIBUTES_MISSING = unchecked((int)(0x8009100F));

        [NativeTypeName("#define CRYPT_E_STREAM_MSG_NOT_READY _HRESULT_TYPEDEF_(0x80091010L)")]
        public const int CRYPT_E_STREAM_MSG_NOT_READY = unchecked((int)(0x80091010));

        [NativeTypeName("#define CRYPT_E_STREAM_INSUFFICIENT_DATA _HRESULT_TYPEDEF_(0x80091011L)")]
        public const int CRYPT_E_STREAM_INSUFFICIENT_DATA = unchecked((int)(0x80091011));

        [NativeTypeName("#define CRYPT_I_NEW_PROTECTION_REQUIRED _HRESULT_TYPEDEF_(0x00091012L)")]
        public const int CRYPT_I_NEW_PROTECTION_REQUIRED = ((int)(0x00091012));

        [NativeTypeName("#define CRYPT_E_BAD_LEN _HRESULT_TYPEDEF_(0x80092001L)")]
        public const int CRYPT_E_BAD_LEN = unchecked((int)(0x80092001));

        [NativeTypeName("#define CRYPT_E_BAD_ENCODE _HRESULT_TYPEDEF_(0x80092002L)")]
        public const int CRYPT_E_BAD_ENCODE = unchecked((int)(0x80092002));

        [NativeTypeName("#define CRYPT_E_FILE_ERROR _HRESULT_TYPEDEF_(0x80092003L)")]
        public const int CRYPT_E_FILE_ERROR = unchecked((int)(0x80092003));

        [NativeTypeName("#define CRYPT_E_NOT_FOUND _HRESULT_TYPEDEF_(0x80092004L)")]
        public const int CRYPT_E_NOT_FOUND = unchecked((int)(0x80092004));

        [NativeTypeName("#define CRYPT_E_EXISTS _HRESULT_TYPEDEF_(0x80092005L)")]
        public const int CRYPT_E_EXISTS = unchecked((int)(0x80092005));

        [NativeTypeName("#define CRYPT_E_NO_PROVIDER _HRESULT_TYPEDEF_(0x80092006L)")]
        public const int CRYPT_E_NO_PROVIDER = unchecked((int)(0x80092006));

        [NativeTypeName("#define CRYPT_E_SELF_SIGNED _HRESULT_TYPEDEF_(0x80092007L)")]
        public const int CRYPT_E_SELF_SIGNED = unchecked((int)(0x80092007));

        [NativeTypeName("#define CRYPT_E_DELETED_PREV _HRESULT_TYPEDEF_(0x80092008L)")]
        public const int CRYPT_E_DELETED_PREV = unchecked((int)(0x80092008));

        [NativeTypeName("#define CRYPT_E_NO_MATCH _HRESULT_TYPEDEF_(0x80092009L)")]
        public const int CRYPT_E_NO_MATCH = unchecked((int)(0x80092009));

        [NativeTypeName("#define CRYPT_E_UNEXPECTED_MSG_TYPE _HRESULT_TYPEDEF_(0x8009200AL)")]
        public const int CRYPT_E_UNEXPECTED_MSG_TYPE = unchecked((int)(0x8009200A));

        [NativeTypeName("#define CRYPT_E_NO_KEY_PROPERTY _HRESULT_TYPEDEF_(0x8009200BL)")]
        public const int CRYPT_E_NO_KEY_PROPERTY = unchecked((int)(0x8009200B));

        [NativeTypeName("#define CRYPT_E_NO_DECRYPT_CERT _HRESULT_TYPEDEF_(0x8009200CL)")]
        public const int CRYPT_E_NO_DECRYPT_CERT = unchecked((int)(0x8009200C));

        [NativeTypeName("#define CRYPT_E_BAD_MSG _HRESULT_TYPEDEF_(0x8009200DL)")]
        public const int CRYPT_E_BAD_MSG = unchecked((int)(0x8009200D));

        [NativeTypeName("#define CRYPT_E_NO_SIGNER _HRESULT_TYPEDEF_(0x8009200EL)")]
        public const int CRYPT_E_NO_SIGNER = unchecked((int)(0x8009200E));

        [NativeTypeName("#define CRYPT_E_PENDING_CLOSE _HRESULT_TYPEDEF_(0x8009200FL)")]
        public const int CRYPT_E_PENDING_CLOSE = unchecked((int)(0x8009200F));

        [NativeTypeName("#define CRYPT_E_REVOKED _HRESULT_TYPEDEF_(0x80092010L)")]
        public const int CRYPT_E_REVOKED = unchecked((int)(0x80092010));

        [NativeTypeName("#define CRYPT_E_NO_REVOCATION_DLL _HRESULT_TYPEDEF_(0x80092011L)")]
        public const int CRYPT_E_NO_REVOCATION_DLL = unchecked((int)(0x80092011));

        [NativeTypeName("#define CRYPT_E_NO_REVOCATION_CHECK _HRESULT_TYPEDEF_(0x80092012L)")]
        public const int CRYPT_E_NO_REVOCATION_CHECK = unchecked((int)(0x80092012));

        [NativeTypeName("#define CRYPT_E_REVOCATION_OFFLINE _HRESULT_TYPEDEF_(0x80092013L)")]
        public const int CRYPT_E_REVOCATION_OFFLINE = unchecked((int)(0x80092013));

        [NativeTypeName("#define CRYPT_E_NOT_IN_REVOCATION_DATABASE _HRESULT_TYPEDEF_(0x80092014L)")]
        public const int CRYPT_E_NOT_IN_REVOCATION_DATABASE = unchecked((int)(0x80092014));

        [NativeTypeName("#define CRYPT_E_INVALID_NUMERIC_STRING _HRESULT_TYPEDEF_(0x80092020L)")]
        public const int CRYPT_E_INVALID_NUMERIC_STRING = unchecked((int)(0x80092020));

        [NativeTypeName("#define CRYPT_E_INVALID_PRINTABLE_STRING _HRESULT_TYPEDEF_(0x80092021L)")]
        public const int CRYPT_E_INVALID_PRINTABLE_STRING = unchecked((int)(0x80092021));

        [NativeTypeName("#define CRYPT_E_INVALID_IA5_STRING _HRESULT_TYPEDEF_(0x80092022L)")]
        public const int CRYPT_E_INVALID_IA5_STRING = unchecked((int)(0x80092022));

        [NativeTypeName("#define CRYPT_E_INVALID_X500_STRING _HRESULT_TYPEDEF_(0x80092023L)")]
        public const int CRYPT_E_INVALID_X500_STRING = unchecked((int)(0x80092023));

        [NativeTypeName("#define CRYPT_E_NOT_CHAR_STRING _HRESULT_TYPEDEF_(0x80092024L)")]
        public const int CRYPT_E_NOT_CHAR_STRING = unchecked((int)(0x80092024));

        [NativeTypeName("#define CRYPT_E_FILERESIZED _HRESULT_TYPEDEF_(0x80092025L)")]
        public const int CRYPT_E_FILERESIZED = unchecked((int)(0x80092025));

        [NativeTypeName("#define CRYPT_E_SECURITY_SETTINGS _HRESULT_TYPEDEF_(0x80092026L)")]
        public const int CRYPT_E_SECURITY_SETTINGS = unchecked((int)(0x80092026));

        [NativeTypeName("#define CRYPT_E_NO_VERIFY_USAGE_DLL _HRESULT_TYPEDEF_(0x80092027L)")]
        public const int CRYPT_E_NO_VERIFY_USAGE_DLL = unchecked((int)(0x80092027));

        [NativeTypeName("#define CRYPT_E_NO_VERIFY_USAGE_CHECK _HRESULT_TYPEDEF_(0x80092028L)")]
        public const int CRYPT_E_NO_VERIFY_USAGE_CHECK = unchecked((int)(0x80092028));

        [NativeTypeName("#define CRYPT_E_VERIFY_USAGE_OFFLINE _HRESULT_TYPEDEF_(0x80092029L)")]
        public const int CRYPT_E_VERIFY_USAGE_OFFLINE = unchecked((int)(0x80092029));

        [NativeTypeName("#define CRYPT_E_NOT_IN_CTL _HRESULT_TYPEDEF_(0x8009202AL)")]
        public const int CRYPT_E_NOT_IN_CTL = unchecked((int)(0x8009202A));

        [NativeTypeName("#define CRYPT_E_NO_TRUSTED_SIGNER _HRESULT_TYPEDEF_(0x8009202BL)")]
        public const int CRYPT_E_NO_TRUSTED_SIGNER = unchecked((int)(0x8009202B));

        [NativeTypeName("#define CRYPT_E_MISSING_PUBKEY_PARA _HRESULT_TYPEDEF_(0x8009202CL)")]
        public const int CRYPT_E_MISSING_PUBKEY_PARA = unchecked((int)(0x8009202C));

        [NativeTypeName("#define CRYPT_E_OBJECT_LOCATOR_OBJECT_NOT_FOUND _HRESULT_TYPEDEF_(0x8009202DL)")]
        public const int CRYPT_E_OBJECT_LOCATOR_OBJECT_NOT_FOUND = unchecked((int)(0x8009202D));

        [NativeTypeName("#define CRYPT_E_OSS_ERROR _HRESULT_TYPEDEF_(0x80093000L)")]
        public const int CRYPT_E_OSS_ERROR = unchecked((int)(0x80093000));

        [NativeTypeName("#define OSS_MORE_BUF _HRESULT_TYPEDEF_(0x80093001L)")]
        public const int OSS_MORE_BUF = unchecked((int)(0x80093001));

        [NativeTypeName("#define OSS_NEGATIVE_UINTEGER _HRESULT_TYPEDEF_(0x80093002L)")]
        public const int OSS_NEGATIVE_UINTEGER = unchecked((int)(0x80093002));

        [NativeTypeName("#define OSS_PDU_RANGE _HRESULT_TYPEDEF_(0x80093003L)")]
        public const int OSS_PDU_RANGE = unchecked((int)(0x80093003));

        [NativeTypeName("#define OSS_MORE_INPUT _HRESULT_TYPEDEF_(0x80093004L)")]
        public const int OSS_MORE_INPUT = unchecked((int)(0x80093004));

        [NativeTypeName("#define OSS_DATA_ERROR _HRESULT_TYPEDEF_(0x80093005L)")]
        public const int OSS_DATA_ERROR = unchecked((int)(0x80093005));

        [NativeTypeName("#define OSS_BAD_ARG _HRESULT_TYPEDEF_(0x80093006L)")]
        public const int OSS_BAD_ARG = unchecked((int)(0x80093006));

        [NativeTypeName("#define OSS_BAD_VERSION _HRESULT_TYPEDEF_(0x80093007L)")]
        public const int OSS_BAD_VERSION = unchecked((int)(0x80093007));

        [NativeTypeName("#define OSS_OUT_MEMORY _HRESULT_TYPEDEF_(0x80093008L)")]
        public const int OSS_OUT_MEMORY = unchecked((int)(0x80093008));

        [NativeTypeName("#define OSS_PDU_MISMATCH _HRESULT_TYPEDEF_(0x80093009L)")]
        public const int OSS_PDU_MISMATCH = unchecked((int)(0x80093009));

        [NativeTypeName("#define OSS_LIMITED _HRESULT_TYPEDEF_(0x8009300AL)")]
        public const int OSS_LIMITED = unchecked((int)(0x8009300A));

        [NativeTypeName("#define OSS_BAD_PTR _HRESULT_TYPEDEF_(0x8009300BL)")]
        public const int OSS_BAD_PTR = unchecked((int)(0x8009300B));

        [NativeTypeName("#define OSS_BAD_TIME _HRESULT_TYPEDEF_(0x8009300CL)")]
        public const int OSS_BAD_TIME = unchecked((int)(0x8009300C));

        [NativeTypeName("#define OSS_INDEFINITE_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x8009300DL)")]
        public const int OSS_INDEFINITE_NOT_SUPPORTED = unchecked((int)(0x8009300D));

        [NativeTypeName("#define OSS_MEM_ERROR _HRESULT_TYPEDEF_(0x8009300EL)")]
        public const int OSS_MEM_ERROR = unchecked((int)(0x8009300E));

        [NativeTypeName("#define OSS_BAD_TABLE _HRESULT_TYPEDEF_(0x8009300FL)")]
        public const int OSS_BAD_TABLE = unchecked((int)(0x8009300F));

        [NativeTypeName("#define OSS_TOO_LONG _HRESULT_TYPEDEF_(0x80093010L)")]
        public const int OSS_TOO_LONG = unchecked((int)(0x80093010));

        [NativeTypeName("#define OSS_CONSTRAINT_VIOLATED _HRESULT_TYPEDEF_(0x80093011L)")]
        public const int OSS_CONSTRAINT_VIOLATED = unchecked((int)(0x80093011));

        [NativeTypeName("#define OSS_FATAL_ERROR _HRESULT_TYPEDEF_(0x80093012L)")]
        public const int OSS_FATAL_ERROR = unchecked((int)(0x80093012));

        [NativeTypeName("#define OSS_ACCESS_SERIALIZATION_ERROR _HRESULT_TYPEDEF_(0x80093013L)")]
        public const int OSS_ACCESS_SERIALIZATION_ERROR = unchecked((int)(0x80093013));

        [NativeTypeName("#define OSS_NULL_TBL _HRESULT_TYPEDEF_(0x80093014L)")]
        public const int OSS_NULL_TBL = unchecked((int)(0x80093014));

        [NativeTypeName("#define OSS_NULL_FCN _HRESULT_TYPEDEF_(0x80093015L)")]
        public const int OSS_NULL_FCN = unchecked((int)(0x80093015));

        [NativeTypeName("#define OSS_BAD_ENCRULES _HRESULT_TYPEDEF_(0x80093016L)")]
        public const int OSS_BAD_ENCRULES = unchecked((int)(0x80093016));

        [NativeTypeName("#define OSS_UNAVAIL_ENCRULES _HRESULT_TYPEDEF_(0x80093017L)")]
        public const int OSS_UNAVAIL_ENCRULES = unchecked((int)(0x80093017));

        [NativeTypeName("#define OSS_CANT_OPEN_TRACE_WINDOW _HRESULT_TYPEDEF_(0x80093018L)")]
        public const int OSS_CANT_OPEN_TRACE_WINDOW = unchecked((int)(0x80093018));

        [NativeTypeName("#define OSS_UNIMPLEMENTED _HRESULT_TYPEDEF_(0x80093019L)")]
        public const int OSS_UNIMPLEMENTED = unchecked((int)(0x80093019));

        [NativeTypeName("#define OSS_OID_DLL_NOT_LINKED _HRESULT_TYPEDEF_(0x8009301AL)")]
        public const int OSS_OID_DLL_NOT_LINKED = unchecked((int)(0x8009301A));

        [NativeTypeName("#define OSS_CANT_OPEN_TRACE_FILE _HRESULT_TYPEDEF_(0x8009301BL)")]
        public const int OSS_CANT_OPEN_TRACE_FILE = unchecked((int)(0x8009301B));

        [NativeTypeName("#define OSS_TRACE_FILE_ALREADY_OPEN _HRESULT_TYPEDEF_(0x8009301CL)")]
        public const int OSS_TRACE_FILE_ALREADY_OPEN = unchecked((int)(0x8009301C));

        [NativeTypeName("#define OSS_TABLE_MISMATCH _HRESULT_TYPEDEF_(0x8009301DL)")]
        public const int OSS_TABLE_MISMATCH = unchecked((int)(0x8009301D));

        [NativeTypeName("#define OSS_TYPE_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x8009301EL)")]
        public const int OSS_TYPE_NOT_SUPPORTED = unchecked((int)(0x8009301E));

        [NativeTypeName("#define OSS_REAL_DLL_NOT_LINKED _HRESULT_TYPEDEF_(0x8009301FL)")]
        public const int OSS_REAL_DLL_NOT_LINKED = unchecked((int)(0x8009301F));

        [NativeTypeName("#define OSS_REAL_CODE_NOT_LINKED _HRESULT_TYPEDEF_(0x80093020L)")]
        public const int OSS_REAL_CODE_NOT_LINKED = unchecked((int)(0x80093020));

        [NativeTypeName("#define OSS_OUT_OF_RANGE _HRESULT_TYPEDEF_(0x80093021L)")]
        public const int OSS_OUT_OF_RANGE = unchecked((int)(0x80093021));

        [NativeTypeName("#define OSS_COPIER_DLL_NOT_LINKED _HRESULT_TYPEDEF_(0x80093022L)")]
        public const int OSS_COPIER_DLL_NOT_LINKED = unchecked((int)(0x80093022));

        [NativeTypeName("#define OSS_CONSTRAINT_DLL_NOT_LINKED _HRESULT_TYPEDEF_(0x80093023L)")]
        public const int OSS_CONSTRAINT_DLL_NOT_LINKED = unchecked((int)(0x80093023));

        [NativeTypeName("#define OSS_COMPARATOR_DLL_NOT_LINKED _HRESULT_TYPEDEF_(0x80093024L)")]
        public const int OSS_COMPARATOR_DLL_NOT_LINKED = unchecked((int)(0x80093024));

        [NativeTypeName("#define OSS_COMPARATOR_CODE_NOT_LINKED _HRESULT_TYPEDEF_(0x80093025L)")]
        public const int OSS_COMPARATOR_CODE_NOT_LINKED = unchecked((int)(0x80093025));

        [NativeTypeName("#define OSS_MEM_MGR_DLL_NOT_LINKED _HRESULT_TYPEDEF_(0x80093026L)")]
        public const int OSS_MEM_MGR_DLL_NOT_LINKED = unchecked((int)(0x80093026));

        [NativeTypeName("#define OSS_PDV_DLL_NOT_LINKED _HRESULT_TYPEDEF_(0x80093027L)")]
        public const int OSS_PDV_DLL_NOT_LINKED = unchecked((int)(0x80093027));

        [NativeTypeName("#define OSS_PDV_CODE_NOT_LINKED _HRESULT_TYPEDEF_(0x80093028L)")]
        public const int OSS_PDV_CODE_NOT_LINKED = unchecked((int)(0x80093028));

        [NativeTypeName("#define OSS_API_DLL_NOT_LINKED _HRESULT_TYPEDEF_(0x80093029L)")]
        public const int OSS_API_DLL_NOT_LINKED = unchecked((int)(0x80093029));

        [NativeTypeName("#define OSS_BERDER_DLL_NOT_LINKED _HRESULT_TYPEDEF_(0x8009302AL)")]
        public const int OSS_BERDER_DLL_NOT_LINKED = unchecked((int)(0x8009302A));

        [NativeTypeName("#define OSS_PER_DLL_NOT_LINKED _HRESULT_TYPEDEF_(0x8009302BL)")]
        public const int OSS_PER_DLL_NOT_LINKED = unchecked((int)(0x8009302B));

        [NativeTypeName("#define OSS_OPEN_TYPE_ERROR _HRESULT_TYPEDEF_(0x8009302CL)")]
        public const int OSS_OPEN_TYPE_ERROR = unchecked((int)(0x8009302C));

        [NativeTypeName("#define OSS_MUTEX_NOT_CREATED _HRESULT_TYPEDEF_(0x8009302DL)")]
        public const int OSS_MUTEX_NOT_CREATED = unchecked((int)(0x8009302D));

        [NativeTypeName("#define OSS_CANT_CLOSE_TRACE_FILE _HRESULT_TYPEDEF_(0x8009302EL)")]
        public const int OSS_CANT_CLOSE_TRACE_FILE = unchecked((int)(0x8009302E));

        [NativeTypeName("#define CRYPT_E_ASN1_ERROR _HRESULT_TYPEDEF_(0x80093100L)")]
        public const int CRYPT_E_ASN1_ERROR = unchecked((int)(0x80093100));

        [NativeTypeName("#define CRYPT_E_ASN1_INTERNAL _HRESULT_TYPEDEF_(0x80093101L)")]
        public const int CRYPT_E_ASN1_INTERNAL = unchecked((int)(0x80093101));

        [NativeTypeName("#define CRYPT_E_ASN1_EOD _HRESULT_TYPEDEF_(0x80093102L)")]
        public const int CRYPT_E_ASN1_EOD = unchecked((int)(0x80093102));

        [NativeTypeName("#define CRYPT_E_ASN1_CORRUPT _HRESULT_TYPEDEF_(0x80093103L)")]
        public const int CRYPT_E_ASN1_CORRUPT = unchecked((int)(0x80093103));

        [NativeTypeName("#define CRYPT_E_ASN1_LARGE _HRESULT_TYPEDEF_(0x80093104L)")]
        public const int CRYPT_E_ASN1_LARGE = unchecked((int)(0x80093104));

        [NativeTypeName("#define CRYPT_E_ASN1_CONSTRAINT _HRESULT_TYPEDEF_(0x80093105L)")]
        public const int CRYPT_E_ASN1_CONSTRAINT = unchecked((int)(0x80093105));

        [NativeTypeName("#define CRYPT_E_ASN1_MEMORY _HRESULT_TYPEDEF_(0x80093106L)")]
        public const int CRYPT_E_ASN1_MEMORY = unchecked((int)(0x80093106));

        [NativeTypeName("#define CRYPT_E_ASN1_OVERFLOW _HRESULT_TYPEDEF_(0x80093107L)")]
        public const int CRYPT_E_ASN1_OVERFLOW = unchecked((int)(0x80093107));

        [NativeTypeName("#define CRYPT_E_ASN1_BADPDU _HRESULT_TYPEDEF_(0x80093108L)")]
        public const int CRYPT_E_ASN1_BADPDU = unchecked((int)(0x80093108));

        [NativeTypeName("#define CRYPT_E_ASN1_BADARGS _HRESULT_TYPEDEF_(0x80093109L)")]
        public const int CRYPT_E_ASN1_BADARGS = unchecked((int)(0x80093109));

        [NativeTypeName("#define CRYPT_E_ASN1_BADREAL _HRESULT_TYPEDEF_(0x8009310AL)")]
        public const int CRYPT_E_ASN1_BADREAL = unchecked((int)(0x8009310A));

        [NativeTypeName("#define CRYPT_E_ASN1_BADTAG _HRESULT_TYPEDEF_(0x8009310BL)")]
        public const int CRYPT_E_ASN1_BADTAG = unchecked((int)(0x8009310B));

        [NativeTypeName("#define CRYPT_E_ASN1_CHOICE _HRESULT_TYPEDEF_(0x8009310CL)")]
        public const int CRYPT_E_ASN1_CHOICE = unchecked((int)(0x8009310C));

        [NativeTypeName("#define CRYPT_E_ASN1_RULE _HRESULT_TYPEDEF_(0x8009310DL)")]
        public const int CRYPT_E_ASN1_RULE = unchecked((int)(0x8009310D));

        [NativeTypeName("#define CRYPT_E_ASN1_UTF8 _HRESULT_TYPEDEF_(0x8009310EL)")]
        public const int CRYPT_E_ASN1_UTF8 = unchecked((int)(0x8009310E));

        [NativeTypeName("#define CRYPT_E_ASN1_PDU_TYPE _HRESULT_TYPEDEF_(0x80093133L)")]
        public const int CRYPT_E_ASN1_PDU_TYPE = unchecked((int)(0x80093133));

        [NativeTypeName("#define CRYPT_E_ASN1_NYI _HRESULT_TYPEDEF_(0x80093134L)")]
        public const int CRYPT_E_ASN1_NYI = unchecked((int)(0x80093134));

        [NativeTypeName("#define CRYPT_E_ASN1_EXTENDED _HRESULT_TYPEDEF_(0x80093201L)")]
        public const int CRYPT_E_ASN1_EXTENDED = unchecked((int)(0x80093201));

        [NativeTypeName("#define CRYPT_E_ASN1_NOEOD _HRESULT_TYPEDEF_(0x80093202L)")]
        public const int CRYPT_E_ASN1_NOEOD = unchecked((int)(0x80093202));

        [NativeTypeName("#define CERTSRV_E_BAD_REQUESTSUBJECT _HRESULT_TYPEDEF_(0x80094001L)")]
        public const int CERTSRV_E_BAD_REQUESTSUBJECT = unchecked((int)(0x80094001));

        [NativeTypeName("#define CERTSRV_E_NO_REQUEST _HRESULT_TYPEDEF_(0x80094002L)")]
        public const int CERTSRV_E_NO_REQUEST = unchecked((int)(0x80094002));

        [NativeTypeName("#define CERTSRV_E_BAD_REQUESTSTATUS _HRESULT_TYPEDEF_(0x80094003L)")]
        public const int CERTSRV_E_BAD_REQUESTSTATUS = unchecked((int)(0x80094003));

        [NativeTypeName("#define CERTSRV_E_PROPERTY_EMPTY _HRESULT_TYPEDEF_(0x80094004L)")]
        public const int CERTSRV_E_PROPERTY_EMPTY = unchecked((int)(0x80094004));

        [NativeTypeName("#define CERTSRV_E_INVALID_CA_CERTIFICATE _HRESULT_TYPEDEF_(0x80094005L)")]
        public const int CERTSRV_E_INVALID_CA_CERTIFICATE = unchecked((int)(0x80094005));

        [NativeTypeName("#define CERTSRV_E_SERVER_SUSPENDED _HRESULT_TYPEDEF_(0x80094006L)")]
        public const int CERTSRV_E_SERVER_SUSPENDED = unchecked((int)(0x80094006));

        [NativeTypeName("#define CERTSRV_E_ENCODING_LENGTH _HRESULT_TYPEDEF_(0x80094007L)")]
        public const int CERTSRV_E_ENCODING_LENGTH = unchecked((int)(0x80094007));

        [NativeTypeName("#define CERTSRV_E_ROLECONFLICT _HRESULT_TYPEDEF_(0x80094008L)")]
        public const int CERTSRV_E_ROLECONFLICT = unchecked((int)(0x80094008));

        [NativeTypeName("#define CERTSRV_E_RESTRICTEDOFFICER _HRESULT_TYPEDEF_(0x80094009L)")]
        public const int CERTSRV_E_RESTRICTEDOFFICER = unchecked((int)(0x80094009));

        [NativeTypeName("#define CERTSRV_E_KEY_ARCHIVAL_NOT_CONFIGURED _HRESULT_TYPEDEF_(0x8009400AL)")]
        public const int CERTSRV_E_KEY_ARCHIVAL_NOT_CONFIGURED = unchecked((int)(0x8009400A));

        [NativeTypeName("#define CERTSRV_E_NO_VALID_KRA _HRESULT_TYPEDEF_(0x8009400BL)")]
        public const int CERTSRV_E_NO_VALID_KRA = unchecked((int)(0x8009400B));

        [NativeTypeName("#define CERTSRV_E_BAD_REQUEST_KEY_ARCHIVAL _HRESULT_TYPEDEF_(0x8009400CL)")]
        public const int CERTSRV_E_BAD_REQUEST_KEY_ARCHIVAL = unchecked((int)(0x8009400C));

        [NativeTypeName("#define CERTSRV_E_NO_CAADMIN_DEFINED _HRESULT_TYPEDEF_(0x8009400DL)")]
        public const int CERTSRV_E_NO_CAADMIN_DEFINED = unchecked((int)(0x8009400D));

        [NativeTypeName("#define CERTSRV_E_BAD_RENEWAL_CERT_ATTRIBUTE _HRESULT_TYPEDEF_(0x8009400EL)")]
        public const int CERTSRV_E_BAD_RENEWAL_CERT_ATTRIBUTE = unchecked((int)(0x8009400E));

        [NativeTypeName("#define CERTSRV_E_NO_DB_SESSIONS _HRESULT_TYPEDEF_(0x8009400FL)")]
        public const int CERTSRV_E_NO_DB_SESSIONS = unchecked((int)(0x8009400F));

        [NativeTypeName("#define CERTSRV_E_ALIGNMENT_FAULT _HRESULT_TYPEDEF_(0x80094010L)")]
        public const int CERTSRV_E_ALIGNMENT_FAULT = unchecked((int)(0x80094010));

        [NativeTypeName("#define CERTSRV_E_ENROLL_DENIED _HRESULT_TYPEDEF_(0x80094011L)")]
        public const int CERTSRV_E_ENROLL_DENIED = unchecked((int)(0x80094011));

        [NativeTypeName("#define CERTSRV_E_TEMPLATE_DENIED _HRESULT_TYPEDEF_(0x80094012L)")]
        public const int CERTSRV_E_TEMPLATE_DENIED = unchecked((int)(0x80094012));

        [NativeTypeName("#define CERTSRV_E_DOWNLEVEL_DC_SSL_OR_UPGRADE _HRESULT_TYPEDEF_(0x80094013L)")]
        public const int CERTSRV_E_DOWNLEVEL_DC_SSL_OR_UPGRADE = unchecked((int)(0x80094013));

        [NativeTypeName("#define CERTSRV_E_ADMIN_DENIED_REQUEST _HRESULT_TYPEDEF_(0x80094014L)")]
        public const int CERTSRV_E_ADMIN_DENIED_REQUEST = unchecked((int)(0x80094014));

        [NativeTypeName("#define CERTSRV_E_NO_POLICY_SERVER _HRESULT_TYPEDEF_(0x80094015L)")]
        public const int CERTSRV_E_NO_POLICY_SERVER = unchecked((int)(0x80094015));

        [NativeTypeName("#define CERTSRV_E_WEAK_SIGNATURE_OR_KEY _HRESULT_TYPEDEF_(0x80094016L)")]
        public const int CERTSRV_E_WEAK_SIGNATURE_OR_KEY = unchecked((int)(0x80094016));

        [NativeTypeName("#define CERTSRV_E_KEY_ATTESTATION_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80094017L)")]
        public const int CERTSRV_E_KEY_ATTESTATION_NOT_SUPPORTED = unchecked((int)(0x80094017));

        [NativeTypeName("#define CERTSRV_E_ENCRYPTION_CERT_REQUIRED _HRESULT_TYPEDEF_(0x80094018L)")]
        public const int CERTSRV_E_ENCRYPTION_CERT_REQUIRED = unchecked((int)(0x80094018));

        [NativeTypeName("#define CERTSRV_E_UNSUPPORTED_CERT_TYPE _HRESULT_TYPEDEF_(0x80094800L)")]
        public const int CERTSRV_E_UNSUPPORTED_CERT_TYPE = unchecked((int)(0x80094800));

        [NativeTypeName("#define CERTSRV_E_NO_CERT_TYPE _HRESULT_TYPEDEF_(0x80094801L)")]
        public const int CERTSRV_E_NO_CERT_TYPE = unchecked((int)(0x80094801));

        [NativeTypeName("#define CERTSRV_E_TEMPLATE_CONFLICT _HRESULT_TYPEDEF_(0x80094802L)")]
        public const int CERTSRV_E_TEMPLATE_CONFLICT = unchecked((int)(0x80094802));

        [NativeTypeName("#define CERTSRV_E_SUBJECT_ALT_NAME_REQUIRED _HRESULT_TYPEDEF_(0x80094803L)")]
        public const int CERTSRV_E_SUBJECT_ALT_NAME_REQUIRED = unchecked((int)(0x80094803));

        [NativeTypeName("#define CERTSRV_E_ARCHIVED_KEY_REQUIRED _HRESULT_TYPEDEF_(0x80094804L)")]
        public const int CERTSRV_E_ARCHIVED_KEY_REQUIRED = unchecked((int)(0x80094804));

        [NativeTypeName("#define CERTSRV_E_SMIME_REQUIRED _HRESULT_TYPEDEF_(0x80094805L)")]
        public const int CERTSRV_E_SMIME_REQUIRED = unchecked((int)(0x80094805));

        [NativeTypeName("#define CERTSRV_E_BAD_RENEWAL_SUBJECT _HRESULT_TYPEDEF_(0x80094806L)")]
        public const int CERTSRV_E_BAD_RENEWAL_SUBJECT = unchecked((int)(0x80094806));

        [NativeTypeName("#define CERTSRV_E_BAD_TEMPLATE_VERSION _HRESULT_TYPEDEF_(0x80094807L)")]
        public const int CERTSRV_E_BAD_TEMPLATE_VERSION = unchecked((int)(0x80094807));

        [NativeTypeName("#define CERTSRV_E_TEMPLATE_POLICY_REQUIRED _HRESULT_TYPEDEF_(0x80094808L)")]
        public const int CERTSRV_E_TEMPLATE_POLICY_REQUIRED = unchecked((int)(0x80094808));

        [NativeTypeName("#define CERTSRV_E_SIGNATURE_POLICY_REQUIRED _HRESULT_TYPEDEF_(0x80094809L)")]
        public const int CERTSRV_E_SIGNATURE_POLICY_REQUIRED = unchecked((int)(0x80094809));

        [NativeTypeName("#define CERTSRV_E_SIGNATURE_COUNT _HRESULT_TYPEDEF_(0x8009480AL)")]
        public const int CERTSRV_E_SIGNATURE_COUNT = unchecked((int)(0x8009480A));

        [NativeTypeName("#define CERTSRV_E_SIGNATURE_REJECTED _HRESULT_TYPEDEF_(0x8009480BL)")]
        public const int CERTSRV_E_SIGNATURE_REJECTED = unchecked((int)(0x8009480B));

        [NativeTypeName("#define CERTSRV_E_ISSUANCE_POLICY_REQUIRED _HRESULT_TYPEDEF_(0x8009480CL)")]
        public const int CERTSRV_E_ISSUANCE_POLICY_REQUIRED = unchecked((int)(0x8009480C));

        [NativeTypeName("#define CERTSRV_E_SUBJECT_UPN_REQUIRED _HRESULT_TYPEDEF_(0x8009480DL)")]
        public const int CERTSRV_E_SUBJECT_UPN_REQUIRED = unchecked((int)(0x8009480D));

        [NativeTypeName("#define CERTSRV_E_SUBJECT_DIRECTORY_GUID_REQUIRED _HRESULT_TYPEDEF_(0x8009480EL)")]
        public const int CERTSRV_E_SUBJECT_DIRECTORY_GUID_REQUIRED = unchecked((int)(0x8009480E));

        [NativeTypeName("#define CERTSRV_E_SUBJECT_DNS_REQUIRED _HRESULT_TYPEDEF_(0x8009480FL)")]
        public const int CERTSRV_E_SUBJECT_DNS_REQUIRED = unchecked((int)(0x8009480F));

        [NativeTypeName("#define CERTSRV_E_ARCHIVED_KEY_UNEXPECTED _HRESULT_TYPEDEF_(0x80094810L)")]
        public const int CERTSRV_E_ARCHIVED_KEY_UNEXPECTED = unchecked((int)(0x80094810));

        [NativeTypeName("#define CERTSRV_E_KEY_LENGTH _HRESULT_TYPEDEF_(0x80094811L)")]
        public const int CERTSRV_E_KEY_LENGTH = unchecked((int)(0x80094811));

        [NativeTypeName("#define CERTSRV_E_SUBJECT_EMAIL_REQUIRED _HRESULT_TYPEDEF_(0x80094812L)")]
        public const int CERTSRV_E_SUBJECT_EMAIL_REQUIRED = unchecked((int)(0x80094812));

        [NativeTypeName("#define CERTSRV_E_UNKNOWN_CERT_TYPE _HRESULT_TYPEDEF_(0x80094813L)")]
        public const int CERTSRV_E_UNKNOWN_CERT_TYPE = unchecked((int)(0x80094813));

        [NativeTypeName("#define CERTSRV_E_CERT_TYPE_OVERLAP _HRESULT_TYPEDEF_(0x80094814L)")]
        public const int CERTSRV_E_CERT_TYPE_OVERLAP = unchecked((int)(0x80094814));

        [NativeTypeName("#define CERTSRV_E_TOO_MANY_SIGNATURES _HRESULT_TYPEDEF_(0x80094815L)")]
        public const int CERTSRV_E_TOO_MANY_SIGNATURES = unchecked((int)(0x80094815));

        [NativeTypeName("#define CERTSRV_E_RENEWAL_BAD_PUBLIC_KEY _HRESULT_TYPEDEF_(0x80094816L)")]
        public const int CERTSRV_E_RENEWAL_BAD_PUBLIC_KEY = unchecked((int)(0x80094816));

        [NativeTypeName("#define CERTSRV_E_INVALID_EK _HRESULT_TYPEDEF_(0x80094817L)")]
        public const int CERTSRV_E_INVALID_EK = unchecked((int)(0x80094817));

        [NativeTypeName("#define CERTSRV_E_INVALID_IDBINDING _HRESULT_TYPEDEF_(0x80094818L)")]
        public const int CERTSRV_E_INVALID_IDBINDING = unchecked((int)(0x80094818));

        [NativeTypeName("#define CERTSRV_E_INVALID_ATTESTATION _HRESULT_TYPEDEF_(0x80094819L)")]
        public const int CERTSRV_E_INVALID_ATTESTATION = unchecked((int)(0x80094819));

        [NativeTypeName("#define CERTSRV_E_KEY_ATTESTATION _HRESULT_TYPEDEF_(0x8009481AL)")]
        public const int CERTSRV_E_KEY_ATTESTATION = unchecked((int)(0x8009481A));

        [NativeTypeName("#define CERTSRV_E_CORRUPT_KEY_ATTESTATION _HRESULT_TYPEDEF_(0x8009481BL)")]
        public const int CERTSRV_E_CORRUPT_KEY_ATTESTATION = unchecked((int)(0x8009481B));

        [NativeTypeName("#define CERTSRV_E_EXPIRED_CHALLENGE _HRESULT_TYPEDEF_(0x8009481CL)")]
        public const int CERTSRV_E_EXPIRED_CHALLENGE = unchecked((int)(0x8009481C));

        [NativeTypeName("#define CERTSRV_E_INVALID_RESPONSE _HRESULT_TYPEDEF_(0x8009481DL)")]
        public const int CERTSRV_E_INVALID_RESPONSE = unchecked((int)(0x8009481D));

        [NativeTypeName("#define CERTSRV_E_INVALID_REQUESTID _HRESULT_TYPEDEF_(0x8009481EL)")]
        public const int CERTSRV_E_INVALID_REQUESTID = unchecked((int)(0x8009481E));

        [NativeTypeName("#define CERTSRV_E_REQUEST_PRECERTIFICATE_MISMATCH _HRESULT_TYPEDEF_(0x8009481FL)")]
        public const int CERTSRV_E_REQUEST_PRECERTIFICATE_MISMATCH = unchecked((int)(0x8009481F));

        [NativeTypeName("#define CERTSRV_E_PENDING_CLIENT_RESPONSE _HRESULT_TYPEDEF_(0x80094820L)")]
        public const int CERTSRV_E_PENDING_CLIENT_RESPONSE = unchecked((int)(0x80094820));

        [NativeTypeName("#define XENROLL_E_KEY_NOT_EXPORTABLE _HRESULT_TYPEDEF_(0x80095000L)")]
        public const int XENROLL_E_KEY_NOT_EXPORTABLE = unchecked((int)(0x80095000));

        [NativeTypeName("#define XENROLL_E_CANNOT_ADD_ROOT_CERT _HRESULT_TYPEDEF_(0x80095001L)")]
        public const int XENROLL_E_CANNOT_ADD_ROOT_CERT = unchecked((int)(0x80095001));

        [NativeTypeName("#define XENROLL_E_RESPONSE_KA_HASH_NOT_FOUND _HRESULT_TYPEDEF_(0x80095002L)")]
        public const int XENROLL_E_RESPONSE_KA_HASH_NOT_FOUND = unchecked((int)(0x80095002));

        [NativeTypeName("#define XENROLL_E_RESPONSE_UNEXPECTED_KA_HASH _HRESULT_TYPEDEF_(0x80095003L)")]
        public const int XENROLL_E_RESPONSE_UNEXPECTED_KA_HASH = unchecked((int)(0x80095003));

        [NativeTypeName("#define XENROLL_E_RESPONSE_KA_HASH_MISMATCH _HRESULT_TYPEDEF_(0x80095004L)")]
        public const int XENROLL_E_RESPONSE_KA_HASH_MISMATCH = unchecked((int)(0x80095004));

        [NativeTypeName("#define XENROLL_E_KEYSPEC_SMIME_MISMATCH _HRESULT_TYPEDEF_(0x80095005L)")]
        public const int XENROLL_E_KEYSPEC_SMIME_MISMATCH = unchecked((int)(0x80095005));

        [NativeTypeName("#define TRUST_E_SYSTEM_ERROR _HRESULT_TYPEDEF_(0x80096001L)")]
        public const int TRUST_E_SYSTEM_ERROR = unchecked((int)(0x80096001));

        [NativeTypeName("#define TRUST_E_NO_SIGNER_CERT _HRESULT_TYPEDEF_(0x80096002L)")]
        public const int TRUST_E_NO_SIGNER_CERT = unchecked((int)(0x80096002));

        [NativeTypeName("#define TRUST_E_COUNTER_SIGNER _HRESULT_TYPEDEF_(0x80096003L)")]
        public const int TRUST_E_COUNTER_SIGNER = unchecked((int)(0x80096003));

        [NativeTypeName("#define TRUST_E_CERT_SIGNATURE _HRESULT_TYPEDEF_(0x80096004L)")]
        public const int TRUST_E_CERT_SIGNATURE = unchecked((int)(0x80096004));

        [NativeTypeName("#define TRUST_E_TIME_STAMP _HRESULT_TYPEDEF_(0x80096005L)")]
        public const int TRUST_E_TIME_STAMP = unchecked((int)(0x80096005));

        [NativeTypeName("#define TRUST_E_BAD_DIGEST _HRESULT_TYPEDEF_(0x80096010L)")]
        public const int TRUST_E_BAD_DIGEST = unchecked((int)(0x80096010));

        [NativeTypeName("#define TRUST_E_MALFORMED_SIGNATURE _HRESULT_TYPEDEF_(0x80096011L)")]
        public const int TRUST_E_MALFORMED_SIGNATURE = unchecked((int)(0x80096011));

        [NativeTypeName("#define TRUST_E_BASIC_CONSTRAINTS _HRESULT_TYPEDEF_(0x80096019L)")]
        public const int TRUST_E_BASIC_CONSTRAINTS = unchecked((int)(0x80096019));

        [NativeTypeName("#define TRUST_E_FINANCIAL_CRITERIA _HRESULT_TYPEDEF_(0x8009601EL)")]
        public const int TRUST_E_FINANCIAL_CRITERIA = unchecked((int)(0x8009601E));

        [NativeTypeName("#define MSSIPOTF_E_OUTOFMEMRANGE _HRESULT_TYPEDEF_(0x80097001L)")]
        public const int MSSIPOTF_E_OUTOFMEMRANGE = unchecked((int)(0x80097001));

        [NativeTypeName("#define MSSIPOTF_E_CANTGETOBJECT _HRESULT_TYPEDEF_(0x80097002L)")]
        public const int MSSIPOTF_E_CANTGETOBJECT = unchecked((int)(0x80097002));

        [NativeTypeName("#define MSSIPOTF_E_NOHEADTABLE _HRESULT_TYPEDEF_(0x80097003L)")]
        public const int MSSIPOTF_E_NOHEADTABLE = unchecked((int)(0x80097003));

        [NativeTypeName("#define MSSIPOTF_E_BAD_MAGICNUMBER _HRESULT_TYPEDEF_(0x80097004L)")]
        public const int MSSIPOTF_E_BAD_MAGICNUMBER = unchecked((int)(0x80097004));

        [NativeTypeName("#define MSSIPOTF_E_BAD_OFFSET_TABLE _HRESULT_TYPEDEF_(0x80097005L)")]
        public const int MSSIPOTF_E_BAD_OFFSET_TABLE = unchecked((int)(0x80097005));

        [NativeTypeName("#define MSSIPOTF_E_TABLE_TAGORDER _HRESULT_TYPEDEF_(0x80097006L)")]
        public const int MSSIPOTF_E_TABLE_TAGORDER = unchecked((int)(0x80097006));

        [NativeTypeName("#define MSSIPOTF_E_TABLE_LONGWORD _HRESULT_TYPEDEF_(0x80097007L)")]
        public const int MSSIPOTF_E_TABLE_LONGWORD = unchecked((int)(0x80097007));

        [NativeTypeName("#define MSSIPOTF_E_BAD_FIRST_TABLE_PLACEMENT _HRESULT_TYPEDEF_(0x80097008L)")]
        public const int MSSIPOTF_E_BAD_FIRST_TABLE_PLACEMENT = unchecked((int)(0x80097008));

        [NativeTypeName("#define MSSIPOTF_E_TABLES_OVERLAP _HRESULT_TYPEDEF_(0x80097009L)")]
        public const int MSSIPOTF_E_TABLES_OVERLAP = unchecked((int)(0x80097009));

        [NativeTypeName("#define MSSIPOTF_E_TABLE_PADBYTES _HRESULT_TYPEDEF_(0x8009700AL)")]
        public const int MSSIPOTF_E_TABLE_PADBYTES = unchecked((int)(0x8009700A));

        [NativeTypeName("#define MSSIPOTF_E_FILETOOSMALL _HRESULT_TYPEDEF_(0x8009700BL)")]
        public const int MSSIPOTF_E_FILETOOSMALL = unchecked((int)(0x8009700B));

        [NativeTypeName("#define MSSIPOTF_E_TABLE_CHECKSUM _HRESULT_TYPEDEF_(0x8009700CL)")]
        public const int MSSIPOTF_E_TABLE_CHECKSUM = unchecked((int)(0x8009700C));

        [NativeTypeName("#define MSSIPOTF_E_FILE_CHECKSUM _HRESULT_TYPEDEF_(0x8009700DL)")]
        public const int MSSIPOTF_E_FILE_CHECKSUM = unchecked((int)(0x8009700D));

        [NativeTypeName("#define MSSIPOTF_E_FAILED_POLICY _HRESULT_TYPEDEF_(0x80097010L)")]
        public const int MSSIPOTF_E_FAILED_POLICY = unchecked((int)(0x80097010));

        [NativeTypeName("#define MSSIPOTF_E_FAILED_HINTS_CHECK _HRESULT_TYPEDEF_(0x80097011L)")]
        public const int MSSIPOTF_E_FAILED_HINTS_CHECK = unchecked((int)(0x80097011));

        [NativeTypeName("#define MSSIPOTF_E_NOT_OPENTYPE _HRESULT_TYPEDEF_(0x80097012L)")]
        public const int MSSIPOTF_E_NOT_OPENTYPE = unchecked((int)(0x80097012));

        [NativeTypeName("#define MSSIPOTF_E_FILE _HRESULT_TYPEDEF_(0x80097013L)")]
        public const int MSSIPOTF_E_FILE = unchecked((int)(0x80097013));

        [NativeTypeName("#define MSSIPOTF_E_CRYPT _HRESULT_TYPEDEF_(0x80097014L)")]
        public const int MSSIPOTF_E_CRYPT = unchecked((int)(0x80097014));

        [NativeTypeName("#define MSSIPOTF_E_BADVERSION _HRESULT_TYPEDEF_(0x80097015L)")]
        public const int MSSIPOTF_E_BADVERSION = unchecked((int)(0x80097015));

        [NativeTypeName("#define MSSIPOTF_E_DSIG_STRUCTURE _HRESULT_TYPEDEF_(0x80097016L)")]
        public const int MSSIPOTF_E_DSIG_STRUCTURE = unchecked((int)(0x80097016));

        [NativeTypeName("#define MSSIPOTF_E_PCONST_CHECK _HRESULT_TYPEDEF_(0x80097017L)")]
        public const int MSSIPOTF_E_PCONST_CHECK = unchecked((int)(0x80097017));

        [NativeTypeName("#define MSSIPOTF_E_STRUCTURE _HRESULT_TYPEDEF_(0x80097018L)")]
        public const int MSSIPOTF_E_STRUCTURE = unchecked((int)(0x80097018));

        [NativeTypeName("#define ERROR_CRED_REQUIRES_CONFIRMATION _HRESULT_TYPEDEF_(0x80097019L)")]
        public const int ERROR_CRED_REQUIRES_CONFIRMATION = unchecked((int)(0x80097019));

        [NativeTypeName("#define NTE_OP_OK 0")]
        public const int NTE_OP_OK = 0;

        [NativeTypeName("#define TRUST_E_PROVIDER_UNKNOWN _HRESULT_TYPEDEF_(0x800B0001L)")]
        public const int TRUST_E_PROVIDER_UNKNOWN = unchecked((int)(0x800B0001));

        [NativeTypeName("#define TRUST_E_ACTION_UNKNOWN _HRESULT_TYPEDEF_(0x800B0002L)")]
        public const int TRUST_E_ACTION_UNKNOWN = unchecked((int)(0x800B0002));

        [NativeTypeName("#define TRUST_E_SUBJECT_FORM_UNKNOWN _HRESULT_TYPEDEF_(0x800B0003L)")]
        public const int TRUST_E_SUBJECT_FORM_UNKNOWN = unchecked((int)(0x800B0003));

        [NativeTypeName("#define TRUST_E_SUBJECT_NOT_TRUSTED _HRESULT_TYPEDEF_(0x800B0004L)")]
        public const int TRUST_E_SUBJECT_NOT_TRUSTED = unchecked((int)(0x800B0004));

        [NativeTypeName("#define DIGSIG_E_ENCODE _HRESULT_TYPEDEF_(0x800B0005L)")]
        public const int DIGSIG_E_ENCODE = unchecked((int)(0x800B0005));

        [NativeTypeName("#define DIGSIG_E_DECODE _HRESULT_TYPEDEF_(0x800B0006L)")]
        public const int DIGSIG_E_DECODE = unchecked((int)(0x800B0006));

        [NativeTypeName("#define DIGSIG_E_EXTENSIBILITY _HRESULT_TYPEDEF_(0x800B0007L)")]
        public const int DIGSIG_E_EXTENSIBILITY = unchecked((int)(0x800B0007));

        [NativeTypeName("#define DIGSIG_E_CRYPTO _HRESULT_TYPEDEF_(0x800B0008L)")]
        public const int DIGSIG_E_CRYPTO = unchecked((int)(0x800B0008));

        [NativeTypeName("#define PERSIST_E_SIZEDEFINITE _HRESULT_TYPEDEF_(0x800B0009L)")]
        public const int PERSIST_E_SIZEDEFINITE = unchecked((int)(0x800B0009));

        [NativeTypeName("#define PERSIST_E_SIZEINDEFINITE _HRESULT_TYPEDEF_(0x800B000AL)")]
        public const int PERSIST_E_SIZEINDEFINITE = unchecked((int)(0x800B000A));

        [NativeTypeName("#define PERSIST_E_NOTSELFSIZING _HRESULT_TYPEDEF_(0x800B000BL)")]
        public const int PERSIST_E_NOTSELFSIZING = unchecked((int)(0x800B000B));

        [NativeTypeName("#define TRUST_E_NOSIGNATURE _HRESULT_TYPEDEF_(0x800B0100L)")]
        public const int TRUST_E_NOSIGNATURE = unchecked((int)(0x800B0100));

        [NativeTypeName("#define CERT_E_EXPIRED _HRESULT_TYPEDEF_(0x800B0101L)")]
        public const int CERT_E_EXPIRED = unchecked((int)(0x800B0101));

        [NativeTypeName("#define CERT_E_VALIDITYPERIODNESTING _HRESULT_TYPEDEF_(0x800B0102L)")]
        public const int CERT_E_VALIDITYPERIODNESTING = unchecked((int)(0x800B0102));

        [NativeTypeName("#define CERT_E_ROLE _HRESULT_TYPEDEF_(0x800B0103L)")]
        public const int CERT_E_ROLE = unchecked((int)(0x800B0103));

        [NativeTypeName("#define CERT_E_PATHLENCONST _HRESULT_TYPEDEF_(0x800B0104L)")]
        public const int CERT_E_PATHLENCONST = unchecked((int)(0x800B0104));

        [NativeTypeName("#define CERT_E_CRITICAL _HRESULT_TYPEDEF_(0x800B0105L)")]
        public const int CERT_E_CRITICAL = unchecked((int)(0x800B0105));

        [NativeTypeName("#define CERT_E_PURPOSE _HRESULT_TYPEDEF_(0x800B0106L)")]
        public const int CERT_E_PURPOSE = unchecked((int)(0x800B0106));

        [NativeTypeName("#define CERT_E_ISSUERCHAINING _HRESULT_TYPEDEF_(0x800B0107L)")]
        public const int CERT_E_ISSUERCHAINING = unchecked((int)(0x800B0107));

        [NativeTypeName("#define CERT_E_MALFORMED _HRESULT_TYPEDEF_(0x800B0108L)")]
        public const int CERT_E_MALFORMED = unchecked((int)(0x800B0108));

        [NativeTypeName("#define CERT_E_UNTRUSTEDROOT _HRESULT_TYPEDEF_(0x800B0109L)")]
        public const int CERT_E_UNTRUSTEDROOT = unchecked((int)(0x800B0109));

        [NativeTypeName("#define CERT_E_CHAINING _HRESULT_TYPEDEF_(0x800B010AL)")]
        public const int CERT_E_CHAINING = unchecked((int)(0x800B010A));

        [NativeTypeName("#define TRUST_E_FAIL _HRESULT_TYPEDEF_(0x800B010BL)")]
        public const int TRUST_E_FAIL = unchecked((int)(0x800B010B));

        [NativeTypeName("#define CERT_E_REVOKED _HRESULT_TYPEDEF_(0x800B010CL)")]
        public const int CERT_E_REVOKED = unchecked((int)(0x800B010C));

        [NativeTypeName("#define CERT_E_UNTRUSTEDTESTROOT _HRESULT_TYPEDEF_(0x800B010DL)")]
        public const int CERT_E_UNTRUSTEDTESTROOT = unchecked((int)(0x800B010D));

        [NativeTypeName("#define CERT_E_REVOCATION_FAILURE _HRESULT_TYPEDEF_(0x800B010EL)")]
        public const int CERT_E_REVOCATION_FAILURE = unchecked((int)(0x800B010E));

        [NativeTypeName("#define CERT_E_CN_NO_MATCH _HRESULT_TYPEDEF_(0x800B010FL)")]
        public const int CERT_E_CN_NO_MATCH = unchecked((int)(0x800B010F));

        [NativeTypeName("#define CERT_E_WRONG_USAGE _HRESULT_TYPEDEF_(0x800B0110L)")]
        public const int CERT_E_WRONG_USAGE = unchecked((int)(0x800B0110));

        [NativeTypeName("#define TRUST_E_EXPLICIT_DISTRUST _HRESULT_TYPEDEF_(0x800B0111L)")]
        public const int TRUST_E_EXPLICIT_DISTRUST = unchecked((int)(0x800B0111));

        [NativeTypeName("#define CERT_E_UNTRUSTEDCA _HRESULT_TYPEDEF_(0x800B0112L)")]
        public const int CERT_E_UNTRUSTEDCA = unchecked((int)(0x800B0112));

        [NativeTypeName("#define CERT_E_INVALID_POLICY _HRESULT_TYPEDEF_(0x800B0113L)")]
        public const int CERT_E_INVALID_POLICY = unchecked((int)(0x800B0113));

        [NativeTypeName("#define CERT_E_INVALID_NAME _HRESULT_TYPEDEF_(0x800B0114L)")]
        public const int CERT_E_INVALID_NAME = unchecked((int)(0x800B0114));

        [NativeTypeName("#define SPAPI_E_EXPECTED_SECTION_NAME _HRESULT_TYPEDEF_(0x800F0000L)")]
        public const int SPAPI_E_EXPECTED_SECTION_NAME = unchecked((int)(0x800F0000));

        [NativeTypeName("#define SPAPI_E_BAD_SECTION_NAME_LINE _HRESULT_TYPEDEF_(0x800F0001L)")]
        public const int SPAPI_E_BAD_SECTION_NAME_LINE = unchecked((int)(0x800F0001));

        [NativeTypeName("#define SPAPI_E_SECTION_NAME_TOO_LONG _HRESULT_TYPEDEF_(0x800F0002L)")]
        public const int SPAPI_E_SECTION_NAME_TOO_LONG = unchecked((int)(0x800F0002));

        [NativeTypeName("#define SPAPI_E_GENERAL_SYNTAX _HRESULT_TYPEDEF_(0x800F0003L)")]
        public const int SPAPI_E_GENERAL_SYNTAX = unchecked((int)(0x800F0003));

        [NativeTypeName("#define SPAPI_E_WRONG_INF_STYLE _HRESULT_TYPEDEF_(0x800F0100L)")]
        public const int SPAPI_E_WRONG_INF_STYLE = unchecked((int)(0x800F0100));

        [NativeTypeName("#define SPAPI_E_SECTION_NOT_FOUND _HRESULT_TYPEDEF_(0x800F0101L)")]
        public const int SPAPI_E_SECTION_NOT_FOUND = unchecked((int)(0x800F0101));

        [NativeTypeName("#define SPAPI_E_LINE_NOT_FOUND _HRESULT_TYPEDEF_(0x800F0102L)")]
        public const int SPAPI_E_LINE_NOT_FOUND = unchecked((int)(0x800F0102));

        [NativeTypeName("#define SPAPI_E_NO_BACKUP _HRESULT_TYPEDEF_(0x800F0103L)")]
        public const int SPAPI_E_NO_BACKUP = unchecked((int)(0x800F0103));

        [NativeTypeName("#define SPAPI_E_NO_ASSOCIATED_CLASS _HRESULT_TYPEDEF_(0x800F0200L)")]
        public const int SPAPI_E_NO_ASSOCIATED_CLASS = unchecked((int)(0x800F0200));

        [NativeTypeName("#define SPAPI_E_CLASS_MISMATCH _HRESULT_TYPEDEF_(0x800F0201L)")]
        public const int SPAPI_E_CLASS_MISMATCH = unchecked((int)(0x800F0201));

        [NativeTypeName("#define SPAPI_E_DUPLICATE_FOUND _HRESULT_TYPEDEF_(0x800F0202L)")]
        public const int SPAPI_E_DUPLICATE_FOUND = unchecked((int)(0x800F0202));

        [NativeTypeName("#define SPAPI_E_NO_DRIVER_SELECTED _HRESULT_TYPEDEF_(0x800F0203L)")]
        public const int SPAPI_E_NO_DRIVER_SELECTED = unchecked((int)(0x800F0203));

        [NativeTypeName("#define SPAPI_E_KEY_DOES_NOT_EXIST _HRESULT_TYPEDEF_(0x800F0204L)")]
        public const int SPAPI_E_KEY_DOES_NOT_EXIST = unchecked((int)(0x800F0204));

        [NativeTypeName("#define SPAPI_E_INVALID_DEVINST_NAME _HRESULT_TYPEDEF_(0x800F0205L)")]
        public const int SPAPI_E_INVALID_DEVINST_NAME = unchecked((int)(0x800F0205));

        [NativeTypeName("#define SPAPI_E_INVALID_CLASS _HRESULT_TYPEDEF_(0x800F0206L)")]
        public const int SPAPI_E_INVALID_CLASS = unchecked((int)(0x800F0206));

        [NativeTypeName("#define SPAPI_E_DEVINST_ALREADY_EXISTS _HRESULT_TYPEDEF_(0x800F0207L)")]
        public const int SPAPI_E_DEVINST_ALREADY_EXISTS = unchecked((int)(0x800F0207));

        [NativeTypeName("#define SPAPI_E_DEVINFO_NOT_REGISTERED _HRESULT_TYPEDEF_(0x800F0208L)")]
        public const int SPAPI_E_DEVINFO_NOT_REGISTERED = unchecked((int)(0x800F0208));

        [NativeTypeName("#define SPAPI_E_INVALID_REG_PROPERTY _HRESULT_TYPEDEF_(0x800F0209L)")]
        public const int SPAPI_E_INVALID_REG_PROPERTY = unchecked((int)(0x800F0209));

        [NativeTypeName("#define SPAPI_E_NO_INF _HRESULT_TYPEDEF_(0x800F020AL)")]
        public const int SPAPI_E_NO_INF = unchecked((int)(0x800F020A));

        [NativeTypeName("#define SPAPI_E_NO_SUCH_DEVINST _HRESULT_TYPEDEF_(0x800F020BL)")]
        public const int SPAPI_E_NO_SUCH_DEVINST = unchecked((int)(0x800F020B));

        [NativeTypeName("#define SPAPI_E_CANT_LOAD_CLASS_ICON _HRESULT_TYPEDEF_(0x800F020CL)")]
        public const int SPAPI_E_CANT_LOAD_CLASS_ICON = unchecked((int)(0x800F020C));

        [NativeTypeName("#define SPAPI_E_INVALID_CLASS_INSTALLER _HRESULT_TYPEDEF_(0x800F020DL)")]
        public const int SPAPI_E_INVALID_CLASS_INSTALLER = unchecked((int)(0x800F020D));

        [NativeTypeName("#define SPAPI_E_DI_DO_DEFAULT _HRESULT_TYPEDEF_(0x800F020EL)")]
        public const int SPAPI_E_DI_DO_DEFAULT = unchecked((int)(0x800F020E));

        [NativeTypeName("#define SPAPI_E_DI_NOFILECOPY _HRESULT_TYPEDEF_(0x800F020FL)")]
        public const int SPAPI_E_DI_NOFILECOPY = unchecked((int)(0x800F020F));

        [NativeTypeName("#define SPAPI_E_INVALID_HWPROFILE _HRESULT_TYPEDEF_(0x800F0210L)")]
        public const int SPAPI_E_INVALID_HWPROFILE = unchecked((int)(0x800F0210));

        [NativeTypeName("#define SPAPI_E_NO_DEVICE_SELECTED _HRESULT_TYPEDEF_(0x800F0211L)")]
        public const int SPAPI_E_NO_DEVICE_SELECTED = unchecked((int)(0x800F0211));

        [NativeTypeName("#define SPAPI_E_DEVINFO_LIST_LOCKED _HRESULT_TYPEDEF_(0x800F0212L)")]
        public const int SPAPI_E_DEVINFO_LIST_LOCKED = unchecked((int)(0x800F0212));

        [NativeTypeName("#define SPAPI_E_DEVINFO_DATA_LOCKED _HRESULT_TYPEDEF_(0x800F0213L)")]
        public const int SPAPI_E_DEVINFO_DATA_LOCKED = unchecked((int)(0x800F0213));

        [NativeTypeName("#define SPAPI_E_DI_BAD_PATH _HRESULT_TYPEDEF_(0x800F0214L)")]
        public const int SPAPI_E_DI_BAD_PATH = unchecked((int)(0x800F0214));

        [NativeTypeName("#define SPAPI_E_NO_CLASSINSTALL_PARAMS _HRESULT_TYPEDEF_(0x800F0215L)")]
        public const int SPAPI_E_NO_CLASSINSTALL_PARAMS = unchecked((int)(0x800F0215));

        [NativeTypeName("#define SPAPI_E_FILEQUEUE_LOCKED _HRESULT_TYPEDEF_(0x800F0216L)")]
        public const int SPAPI_E_FILEQUEUE_LOCKED = unchecked((int)(0x800F0216));

        [NativeTypeName("#define SPAPI_E_BAD_SERVICE_INSTALLSECT _HRESULT_TYPEDEF_(0x800F0217L)")]
        public const int SPAPI_E_BAD_SERVICE_INSTALLSECT = unchecked((int)(0x800F0217));

        [NativeTypeName("#define SPAPI_E_NO_CLASS_DRIVER_LIST _HRESULT_TYPEDEF_(0x800F0218L)")]
        public const int SPAPI_E_NO_CLASS_DRIVER_LIST = unchecked((int)(0x800F0218));

        [NativeTypeName("#define SPAPI_E_NO_ASSOCIATED_SERVICE _HRESULT_TYPEDEF_(0x800F0219L)")]
        public const int SPAPI_E_NO_ASSOCIATED_SERVICE = unchecked((int)(0x800F0219));

        [NativeTypeName("#define SPAPI_E_NO_DEFAULT_DEVICE_INTERFACE _HRESULT_TYPEDEF_(0x800F021AL)")]
        public const int SPAPI_E_NO_DEFAULT_DEVICE_INTERFACE = unchecked((int)(0x800F021A));

        [NativeTypeName("#define SPAPI_E_DEVICE_INTERFACE_ACTIVE _HRESULT_TYPEDEF_(0x800F021BL)")]
        public const int SPAPI_E_DEVICE_INTERFACE_ACTIVE = unchecked((int)(0x800F021B));

        [NativeTypeName("#define SPAPI_E_DEVICE_INTERFACE_REMOVED _HRESULT_TYPEDEF_(0x800F021CL)")]
        public const int SPAPI_E_DEVICE_INTERFACE_REMOVED = unchecked((int)(0x800F021C));

        [NativeTypeName("#define SPAPI_E_BAD_INTERFACE_INSTALLSECT _HRESULT_TYPEDEF_(0x800F021DL)")]
        public const int SPAPI_E_BAD_INTERFACE_INSTALLSECT = unchecked((int)(0x800F021D));

        [NativeTypeName("#define SPAPI_E_NO_SUCH_INTERFACE_CLASS _HRESULT_TYPEDEF_(0x800F021EL)")]
        public const int SPAPI_E_NO_SUCH_INTERFACE_CLASS = unchecked((int)(0x800F021E));

        [NativeTypeName("#define SPAPI_E_INVALID_REFERENCE_STRING _HRESULT_TYPEDEF_(0x800F021FL)")]
        public const int SPAPI_E_INVALID_REFERENCE_STRING = unchecked((int)(0x800F021F));

        [NativeTypeName("#define SPAPI_E_INVALID_MACHINENAME _HRESULT_TYPEDEF_(0x800F0220L)")]
        public const int SPAPI_E_INVALID_MACHINENAME = unchecked((int)(0x800F0220));

        [NativeTypeName("#define SPAPI_E_REMOTE_COMM_FAILURE _HRESULT_TYPEDEF_(0x800F0221L)")]
        public const int SPAPI_E_REMOTE_COMM_FAILURE = unchecked((int)(0x800F0221));

        [NativeTypeName("#define SPAPI_E_MACHINE_UNAVAILABLE _HRESULT_TYPEDEF_(0x800F0222L)")]
        public const int SPAPI_E_MACHINE_UNAVAILABLE = unchecked((int)(0x800F0222));

        [NativeTypeName("#define SPAPI_E_NO_CONFIGMGR_SERVICES _HRESULT_TYPEDEF_(0x800F0223L)")]
        public const int SPAPI_E_NO_CONFIGMGR_SERVICES = unchecked((int)(0x800F0223));

        [NativeTypeName("#define SPAPI_E_INVALID_PROPPAGE_PROVIDER _HRESULT_TYPEDEF_(0x800F0224L)")]
        public const int SPAPI_E_INVALID_PROPPAGE_PROVIDER = unchecked((int)(0x800F0224));

        [NativeTypeName("#define SPAPI_E_NO_SUCH_DEVICE_INTERFACE _HRESULT_TYPEDEF_(0x800F0225L)")]
        public const int SPAPI_E_NO_SUCH_DEVICE_INTERFACE = unchecked((int)(0x800F0225));

        [NativeTypeName("#define SPAPI_E_DI_POSTPROCESSING_REQUIRED _HRESULT_TYPEDEF_(0x800F0226L)")]
        public const int SPAPI_E_DI_POSTPROCESSING_REQUIRED = unchecked((int)(0x800F0226));

        [NativeTypeName("#define SPAPI_E_INVALID_COINSTALLER _HRESULT_TYPEDEF_(0x800F0227L)")]
        public const int SPAPI_E_INVALID_COINSTALLER = unchecked((int)(0x800F0227));

        [NativeTypeName("#define SPAPI_E_NO_COMPAT_DRIVERS _HRESULT_TYPEDEF_(0x800F0228L)")]
        public const int SPAPI_E_NO_COMPAT_DRIVERS = unchecked((int)(0x800F0228));

        [NativeTypeName("#define SPAPI_E_NO_DEVICE_ICON _HRESULT_TYPEDEF_(0x800F0229L)")]
        public const int SPAPI_E_NO_DEVICE_ICON = unchecked((int)(0x800F0229));

        [NativeTypeName("#define SPAPI_E_INVALID_INF_LOGCONFIG _HRESULT_TYPEDEF_(0x800F022AL)")]
        public const int SPAPI_E_INVALID_INF_LOGCONFIG = unchecked((int)(0x800F022A));

        [NativeTypeName("#define SPAPI_E_DI_DONT_INSTALL _HRESULT_TYPEDEF_(0x800F022BL)")]
        public const int SPAPI_E_DI_DONT_INSTALL = unchecked((int)(0x800F022B));

        [NativeTypeName("#define SPAPI_E_INVALID_FILTER_DRIVER _HRESULT_TYPEDEF_(0x800F022CL)")]
        public const int SPAPI_E_INVALID_FILTER_DRIVER = unchecked((int)(0x800F022C));

        [NativeTypeName("#define SPAPI_E_NON_WINDOWS_NT_DRIVER _HRESULT_TYPEDEF_(0x800F022DL)")]
        public const int SPAPI_E_NON_WINDOWS_NT_DRIVER = unchecked((int)(0x800F022D));

        [NativeTypeName("#define SPAPI_E_NON_WINDOWS_DRIVER _HRESULT_TYPEDEF_(0x800F022EL)")]
        public const int SPAPI_E_NON_WINDOWS_DRIVER = unchecked((int)(0x800F022E));

        [NativeTypeName("#define SPAPI_E_NO_CATALOG_FOR_OEM_INF _HRESULT_TYPEDEF_(0x800F022FL)")]
        public const int SPAPI_E_NO_CATALOG_FOR_OEM_INF = unchecked((int)(0x800F022F));

        [NativeTypeName("#define SPAPI_E_DEVINSTALL_QUEUE_NONNATIVE _HRESULT_TYPEDEF_(0x800F0230L)")]
        public const int SPAPI_E_DEVINSTALL_QUEUE_NONNATIVE = unchecked((int)(0x800F0230));

        [NativeTypeName("#define SPAPI_E_NOT_DISABLEABLE _HRESULT_TYPEDEF_(0x800F0231L)")]
        public const int SPAPI_E_NOT_DISABLEABLE = unchecked((int)(0x800F0231));

        [NativeTypeName("#define SPAPI_E_CANT_REMOVE_DEVINST _HRESULT_TYPEDEF_(0x800F0232L)")]
        public const int SPAPI_E_CANT_REMOVE_DEVINST = unchecked((int)(0x800F0232));

        [NativeTypeName("#define SPAPI_E_INVALID_TARGET _HRESULT_TYPEDEF_(0x800F0233L)")]
        public const int SPAPI_E_INVALID_TARGET = unchecked((int)(0x800F0233));

        [NativeTypeName("#define SPAPI_E_DRIVER_NONNATIVE _HRESULT_TYPEDEF_(0x800F0234L)")]
        public const int SPAPI_E_DRIVER_NONNATIVE = unchecked((int)(0x800F0234));

        [NativeTypeName("#define SPAPI_E_IN_WOW64 _HRESULT_TYPEDEF_(0x800F0235L)")]
        public const int SPAPI_E_IN_WOW64 = unchecked((int)(0x800F0235));

        [NativeTypeName("#define SPAPI_E_SET_SYSTEM_RESTORE_POINT _HRESULT_TYPEDEF_(0x800F0236L)")]
        public const int SPAPI_E_SET_SYSTEM_RESTORE_POINT = unchecked((int)(0x800F0236));

        [NativeTypeName("#define SPAPI_E_INCORRECTLY_COPIED_INF _HRESULT_TYPEDEF_(0x800F0237L)")]
        public const int SPAPI_E_INCORRECTLY_COPIED_INF = unchecked((int)(0x800F0237));

        [NativeTypeName("#define SPAPI_E_SCE_DISABLED _HRESULT_TYPEDEF_(0x800F0238L)")]
        public const int SPAPI_E_SCE_DISABLED = unchecked((int)(0x800F0238));

        [NativeTypeName("#define SPAPI_E_UNKNOWN_EXCEPTION _HRESULT_TYPEDEF_(0x800F0239L)")]
        public const int SPAPI_E_UNKNOWN_EXCEPTION = unchecked((int)(0x800F0239));

        [NativeTypeName("#define SPAPI_E_PNP_REGISTRY_ERROR _HRESULT_TYPEDEF_(0x800F023AL)")]
        public const int SPAPI_E_PNP_REGISTRY_ERROR = unchecked((int)(0x800F023A));

        [NativeTypeName("#define SPAPI_E_REMOTE_REQUEST_UNSUPPORTED _HRESULT_TYPEDEF_(0x800F023BL)")]
        public const int SPAPI_E_REMOTE_REQUEST_UNSUPPORTED = unchecked((int)(0x800F023B));

        [NativeTypeName("#define SPAPI_E_NOT_AN_INSTALLED_OEM_INF _HRESULT_TYPEDEF_(0x800F023CL)")]
        public const int SPAPI_E_NOT_AN_INSTALLED_OEM_INF = unchecked((int)(0x800F023C));

        [NativeTypeName("#define SPAPI_E_INF_IN_USE_BY_DEVICES _HRESULT_TYPEDEF_(0x800F023DL)")]
        public const int SPAPI_E_INF_IN_USE_BY_DEVICES = unchecked((int)(0x800F023D));

        [NativeTypeName("#define SPAPI_E_DI_FUNCTION_OBSOLETE _HRESULT_TYPEDEF_(0x800F023EL)")]
        public const int SPAPI_E_DI_FUNCTION_OBSOLETE = unchecked((int)(0x800F023E));

        [NativeTypeName("#define SPAPI_E_NO_AUTHENTICODE_CATALOG _HRESULT_TYPEDEF_(0x800F023FL)")]
        public const int SPAPI_E_NO_AUTHENTICODE_CATALOG = unchecked((int)(0x800F023F));

        [NativeTypeName("#define SPAPI_E_AUTHENTICODE_DISALLOWED _HRESULT_TYPEDEF_(0x800F0240L)")]
        public const int SPAPI_E_AUTHENTICODE_DISALLOWED = unchecked((int)(0x800F0240));

        [NativeTypeName("#define SPAPI_E_AUTHENTICODE_TRUSTED_PUBLISHER _HRESULT_TYPEDEF_(0x800F0241L)")]
        public const int SPAPI_E_AUTHENTICODE_TRUSTED_PUBLISHER = unchecked((int)(0x800F0241));

        [NativeTypeName("#define SPAPI_E_AUTHENTICODE_TRUST_NOT_ESTABLISHED _HRESULT_TYPEDEF_(0x800F0242L)")]
        public const int SPAPI_E_AUTHENTICODE_TRUST_NOT_ESTABLISHED = unchecked((int)(0x800F0242));

        [NativeTypeName("#define SPAPI_E_AUTHENTICODE_PUBLISHER_NOT_TRUSTED _HRESULT_TYPEDEF_(0x800F0243L)")]
        public const int SPAPI_E_AUTHENTICODE_PUBLISHER_NOT_TRUSTED = unchecked((int)(0x800F0243));

        [NativeTypeName("#define SPAPI_E_SIGNATURE_OSATTRIBUTE_MISMATCH _HRESULT_TYPEDEF_(0x800F0244L)")]
        public const int SPAPI_E_SIGNATURE_OSATTRIBUTE_MISMATCH = unchecked((int)(0x800F0244));

        [NativeTypeName("#define SPAPI_E_ONLY_VALIDATE_VIA_AUTHENTICODE _HRESULT_TYPEDEF_(0x800F0245L)")]
        public const int SPAPI_E_ONLY_VALIDATE_VIA_AUTHENTICODE = unchecked((int)(0x800F0245));

        [NativeTypeName("#define SPAPI_E_DEVICE_INSTALLER_NOT_READY _HRESULT_TYPEDEF_(0x800F0246L)")]
        public const int SPAPI_E_DEVICE_INSTALLER_NOT_READY = unchecked((int)(0x800F0246));

        [NativeTypeName("#define SPAPI_E_DRIVER_STORE_ADD_FAILED _HRESULT_TYPEDEF_(0x800F0247L)")]
        public const int SPAPI_E_DRIVER_STORE_ADD_FAILED = unchecked((int)(0x800F0247));

        [NativeTypeName("#define SPAPI_E_DEVICE_INSTALL_BLOCKED _HRESULT_TYPEDEF_(0x800F0248L)")]
        public const int SPAPI_E_DEVICE_INSTALL_BLOCKED = unchecked((int)(0x800F0248));

        [NativeTypeName("#define SPAPI_E_DRIVER_INSTALL_BLOCKED _HRESULT_TYPEDEF_(0x800F0249L)")]
        public const int SPAPI_E_DRIVER_INSTALL_BLOCKED = unchecked((int)(0x800F0249));

        [NativeTypeName("#define SPAPI_E_WRONG_INF_TYPE _HRESULT_TYPEDEF_(0x800F024AL)")]
        public const int SPAPI_E_WRONG_INF_TYPE = unchecked((int)(0x800F024A));

        [NativeTypeName("#define SPAPI_E_FILE_HASH_NOT_IN_CATALOG _HRESULT_TYPEDEF_(0x800F024BL)")]
        public const int SPAPI_E_FILE_HASH_NOT_IN_CATALOG = unchecked((int)(0x800F024B));

        [NativeTypeName("#define SPAPI_E_DRIVER_STORE_DELETE_FAILED _HRESULT_TYPEDEF_(0x800F024CL)")]
        public const int SPAPI_E_DRIVER_STORE_DELETE_FAILED = unchecked((int)(0x800F024C));

        [NativeTypeName("#define SPAPI_E_UNRECOVERABLE_STACK_OVERFLOW _HRESULT_TYPEDEF_(0x800F0300L)")]
        public const int SPAPI_E_UNRECOVERABLE_STACK_OVERFLOW = unchecked((int)(0x800F0300));

        [NativeTypeName("#define SPAPI_E_ERROR_NOT_INSTALLED _HRESULT_TYPEDEF_(0x800F1000L)")]
        public const int SPAPI_E_ERROR_NOT_INSTALLED = unchecked((int)(0x800F1000));

        [NativeTypeName("#define SCARD_S_SUCCESS NO_ERROR")]
        public const int SCARD_S_SUCCESS = 0;

        [NativeTypeName("#define SCARD_F_INTERNAL_ERROR _HRESULT_TYPEDEF_(0x80100001L)")]
        public const int SCARD_F_INTERNAL_ERROR = unchecked((int)(0x80100001));

        [NativeTypeName("#define SCARD_E_CANCELLED _HRESULT_TYPEDEF_(0x80100002L)")]
        public const int SCARD_E_CANCELLED = unchecked((int)(0x80100002));

        [NativeTypeName("#define SCARD_E_INVALID_HANDLE _HRESULT_TYPEDEF_(0x80100003L)")]
        public const int SCARD_E_INVALID_HANDLE = unchecked((int)(0x80100003));

        [NativeTypeName("#define SCARD_E_INVALID_PARAMETER _HRESULT_TYPEDEF_(0x80100004L)")]
        public const int SCARD_E_INVALID_PARAMETER = unchecked((int)(0x80100004));

        [NativeTypeName("#define SCARD_E_INVALID_TARGET _HRESULT_TYPEDEF_(0x80100005L)")]
        public const int SCARD_E_INVALID_TARGET = unchecked((int)(0x80100005));

        [NativeTypeName("#define SCARD_E_NO_MEMORY _HRESULT_TYPEDEF_(0x80100006L)")]
        public const int SCARD_E_NO_MEMORY = unchecked((int)(0x80100006));

        [NativeTypeName("#define SCARD_F_WAITED_TOO_LONG _HRESULT_TYPEDEF_(0x80100007L)")]
        public const int SCARD_F_WAITED_TOO_LONG = unchecked((int)(0x80100007));

        [NativeTypeName("#define SCARD_E_INSUFFICIENT_BUFFER _HRESULT_TYPEDEF_(0x80100008L)")]
        public const int SCARD_E_INSUFFICIENT_BUFFER = unchecked((int)(0x80100008));

        [NativeTypeName("#define SCARD_E_UNKNOWN_READER _HRESULT_TYPEDEF_(0x80100009L)")]
        public const int SCARD_E_UNKNOWN_READER = unchecked((int)(0x80100009));

        [NativeTypeName("#define SCARD_E_TIMEOUT _HRESULT_TYPEDEF_(0x8010000AL)")]
        public const int SCARD_E_TIMEOUT = unchecked((int)(0x8010000A));

        [NativeTypeName("#define SCARD_E_SHARING_VIOLATION _HRESULT_TYPEDEF_(0x8010000BL)")]
        public const int SCARD_E_SHARING_VIOLATION = unchecked((int)(0x8010000B));

        [NativeTypeName("#define SCARD_E_NO_SMARTCARD _HRESULT_TYPEDEF_(0x8010000CL)")]
        public const int SCARD_E_NO_SMARTCARD = unchecked((int)(0x8010000C));

        [NativeTypeName("#define SCARD_E_UNKNOWN_CARD _HRESULT_TYPEDEF_(0x8010000DL)")]
        public const int SCARD_E_UNKNOWN_CARD = unchecked((int)(0x8010000D));

        [NativeTypeName("#define SCARD_E_CANT_DISPOSE _HRESULT_TYPEDEF_(0x8010000EL)")]
        public const int SCARD_E_CANT_DISPOSE = unchecked((int)(0x8010000E));

        [NativeTypeName("#define SCARD_E_PROTO_MISMATCH _HRESULT_TYPEDEF_(0x8010000FL)")]
        public const int SCARD_E_PROTO_MISMATCH = unchecked((int)(0x8010000F));

        [NativeTypeName("#define SCARD_E_NOT_READY _HRESULT_TYPEDEF_(0x80100010L)")]
        public const int SCARD_E_NOT_READY = unchecked((int)(0x80100010));

        [NativeTypeName("#define SCARD_E_INVALID_VALUE _HRESULT_TYPEDEF_(0x80100011L)")]
        public const int SCARD_E_INVALID_VALUE = unchecked((int)(0x80100011));

        [NativeTypeName("#define SCARD_E_SYSTEM_CANCELLED _HRESULT_TYPEDEF_(0x80100012L)")]
        public const int SCARD_E_SYSTEM_CANCELLED = unchecked((int)(0x80100012));

        [NativeTypeName("#define SCARD_F_COMM_ERROR _HRESULT_TYPEDEF_(0x80100013L)")]
        public const int SCARD_F_COMM_ERROR = unchecked((int)(0x80100013));

        [NativeTypeName("#define SCARD_F_UNKNOWN_ERROR _HRESULT_TYPEDEF_(0x80100014L)")]
        public const int SCARD_F_UNKNOWN_ERROR = unchecked((int)(0x80100014));

        [NativeTypeName("#define SCARD_E_INVALID_ATR _HRESULT_TYPEDEF_(0x80100015L)")]
        public const int SCARD_E_INVALID_ATR = unchecked((int)(0x80100015));

        [NativeTypeName("#define SCARD_E_NOT_TRANSACTED _HRESULT_TYPEDEF_(0x80100016L)")]
        public const int SCARD_E_NOT_TRANSACTED = unchecked((int)(0x80100016));

        [NativeTypeName("#define SCARD_E_READER_UNAVAILABLE _HRESULT_TYPEDEF_(0x80100017L)")]
        public const int SCARD_E_READER_UNAVAILABLE = unchecked((int)(0x80100017));

        [NativeTypeName("#define SCARD_P_SHUTDOWN _HRESULT_TYPEDEF_(0x80100018L)")]
        public const int SCARD_P_SHUTDOWN = unchecked((int)(0x80100018));

        [NativeTypeName("#define SCARD_E_PCI_TOO_SMALL _HRESULT_TYPEDEF_(0x80100019L)")]
        public const int SCARD_E_PCI_TOO_SMALL = unchecked((int)(0x80100019));

        [NativeTypeName("#define SCARD_E_READER_UNSUPPORTED _HRESULT_TYPEDEF_(0x8010001AL)")]
        public const int SCARD_E_READER_UNSUPPORTED = unchecked((int)(0x8010001A));

        [NativeTypeName("#define SCARD_E_DUPLICATE_READER _HRESULT_TYPEDEF_(0x8010001BL)")]
        public const int SCARD_E_DUPLICATE_READER = unchecked((int)(0x8010001B));

        [NativeTypeName("#define SCARD_E_CARD_UNSUPPORTED _HRESULT_TYPEDEF_(0x8010001CL)")]
        public const int SCARD_E_CARD_UNSUPPORTED = unchecked((int)(0x8010001C));

        [NativeTypeName("#define SCARD_E_NO_SERVICE _HRESULT_TYPEDEF_(0x8010001DL)")]
        public const int SCARD_E_NO_SERVICE = unchecked((int)(0x8010001D));

        [NativeTypeName("#define SCARD_E_SERVICE_STOPPED _HRESULT_TYPEDEF_(0x8010001EL)")]
        public const int SCARD_E_SERVICE_STOPPED = unchecked((int)(0x8010001E));

        [NativeTypeName("#define SCARD_E_UNEXPECTED _HRESULT_TYPEDEF_(0x8010001FL)")]
        public const int SCARD_E_UNEXPECTED = unchecked((int)(0x8010001F));

        [NativeTypeName("#define SCARD_E_ICC_INSTALLATION _HRESULT_TYPEDEF_(0x80100020L)")]
        public const int SCARD_E_ICC_INSTALLATION = unchecked((int)(0x80100020));

        [NativeTypeName("#define SCARD_E_ICC_CREATEORDER _HRESULT_TYPEDEF_(0x80100021L)")]
        public const int SCARD_E_ICC_CREATEORDER = unchecked((int)(0x80100021));

        [NativeTypeName("#define SCARD_E_UNSUPPORTED_FEATURE _HRESULT_TYPEDEF_(0x80100022L)")]
        public const int SCARD_E_UNSUPPORTED_FEATURE = unchecked((int)(0x80100022));

        [NativeTypeName("#define SCARD_E_DIR_NOT_FOUND _HRESULT_TYPEDEF_(0x80100023L)")]
        public const int SCARD_E_DIR_NOT_FOUND = unchecked((int)(0x80100023));

        [NativeTypeName("#define SCARD_E_FILE_NOT_FOUND _HRESULT_TYPEDEF_(0x80100024L)")]
        public const int SCARD_E_FILE_NOT_FOUND = unchecked((int)(0x80100024));

        [NativeTypeName("#define SCARD_E_NO_DIR _HRESULT_TYPEDEF_(0x80100025L)")]
        public const int SCARD_E_NO_DIR = unchecked((int)(0x80100025));

        [NativeTypeName("#define SCARD_E_NO_FILE _HRESULT_TYPEDEF_(0x80100026L)")]
        public const int SCARD_E_NO_FILE = unchecked((int)(0x80100026));

        [NativeTypeName("#define SCARD_E_NO_ACCESS _HRESULT_TYPEDEF_(0x80100027L)")]
        public const int SCARD_E_NO_ACCESS = unchecked((int)(0x80100027));

        [NativeTypeName("#define SCARD_E_WRITE_TOO_MANY _HRESULT_TYPEDEF_(0x80100028L)")]
        public const int SCARD_E_WRITE_TOO_MANY = unchecked((int)(0x80100028));

        [NativeTypeName("#define SCARD_E_BAD_SEEK _HRESULT_TYPEDEF_(0x80100029L)")]
        public const int SCARD_E_BAD_SEEK = unchecked((int)(0x80100029));

        [NativeTypeName("#define SCARD_E_INVALID_CHV _HRESULT_TYPEDEF_(0x8010002AL)")]
        public const int SCARD_E_INVALID_CHV = unchecked((int)(0x8010002A));

        [NativeTypeName("#define SCARD_E_UNKNOWN_RES_MNG _HRESULT_TYPEDEF_(0x8010002BL)")]
        public const int SCARD_E_UNKNOWN_RES_MNG = unchecked((int)(0x8010002B));

        [NativeTypeName("#define SCARD_E_NO_SUCH_CERTIFICATE _HRESULT_TYPEDEF_(0x8010002CL)")]
        public const int SCARD_E_NO_SUCH_CERTIFICATE = unchecked((int)(0x8010002C));

        [NativeTypeName("#define SCARD_E_CERTIFICATE_UNAVAILABLE _HRESULT_TYPEDEF_(0x8010002DL)")]
        public const int SCARD_E_CERTIFICATE_UNAVAILABLE = unchecked((int)(0x8010002D));

        [NativeTypeName("#define SCARD_E_NO_READERS_AVAILABLE _HRESULT_TYPEDEF_(0x8010002EL)")]
        public const int SCARD_E_NO_READERS_AVAILABLE = unchecked((int)(0x8010002E));

        [NativeTypeName("#define SCARD_E_COMM_DATA_LOST _HRESULT_TYPEDEF_(0x8010002FL)")]
        public const int SCARD_E_COMM_DATA_LOST = unchecked((int)(0x8010002F));

        [NativeTypeName("#define SCARD_E_NO_KEY_CONTAINER _HRESULT_TYPEDEF_(0x80100030L)")]
        public const int SCARD_E_NO_KEY_CONTAINER = unchecked((int)(0x80100030));

        [NativeTypeName("#define SCARD_E_SERVER_TOO_BUSY _HRESULT_TYPEDEF_(0x80100031L)")]
        public const int SCARD_E_SERVER_TOO_BUSY = unchecked((int)(0x80100031));

        [NativeTypeName("#define SCARD_E_PIN_CACHE_EXPIRED _HRESULT_TYPEDEF_(0x80100032L)")]
        public const int SCARD_E_PIN_CACHE_EXPIRED = unchecked((int)(0x80100032));

        [NativeTypeName("#define SCARD_E_NO_PIN_CACHE _HRESULT_TYPEDEF_(0x80100033L)")]
        public const int SCARD_E_NO_PIN_CACHE = unchecked((int)(0x80100033));

        [NativeTypeName("#define SCARD_E_READ_ONLY_CARD _HRESULT_TYPEDEF_(0x80100034L)")]
        public const int SCARD_E_READ_ONLY_CARD = unchecked((int)(0x80100034));

        [NativeTypeName("#define SCARD_W_UNSUPPORTED_CARD _HRESULT_TYPEDEF_(0x80100065L)")]
        public const int SCARD_W_UNSUPPORTED_CARD = unchecked((int)(0x80100065));

        [NativeTypeName("#define SCARD_W_UNRESPONSIVE_CARD _HRESULT_TYPEDEF_(0x80100066L)")]
        public const int SCARD_W_UNRESPONSIVE_CARD = unchecked((int)(0x80100066));

        [NativeTypeName("#define SCARD_W_UNPOWERED_CARD _HRESULT_TYPEDEF_(0x80100067L)")]
        public const int SCARD_W_UNPOWERED_CARD = unchecked((int)(0x80100067));

        [NativeTypeName("#define SCARD_W_RESET_CARD _HRESULT_TYPEDEF_(0x80100068L)")]
        public const int SCARD_W_RESET_CARD = unchecked((int)(0x80100068));

        [NativeTypeName("#define SCARD_W_REMOVED_CARD _HRESULT_TYPEDEF_(0x80100069L)")]
        public const int SCARD_W_REMOVED_CARD = unchecked((int)(0x80100069));

        [NativeTypeName("#define SCARD_W_SECURITY_VIOLATION _HRESULT_TYPEDEF_(0x8010006AL)")]
        public const int SCARD_W_SECURITY_VIOLATION = unchecked((int)(0x8010006A));

        [NativeTypeName("#define SCARD_W_WRONG_CHV _HRESULT_TYPEDEF_(0x8010006BL)")]
        public const int SCARD_W_WRONG_CHV = unchecked((int)(0x8010006B));

        [NativeTypeName("#define SCARD_W_CHV_BLOCKED _HRESULT_TYPEDEF_(0x8010006CL)")]
        public const int SCARD_W_CHV_BLOCKED = unchecked((int)(0x8010006C));

        [NativeTypeName("#define SCARD_W_EOF _HRESULT_TYPEDEF_(0x8010006DL)")]
        public const int SCARD_W_EOF = unchecked((int)(0x8010006D));

        [NativeTypeName("#define SCARD_W_CANCELLED_BY_USER _HRESULT_TYPEDEF_(0x8010006EL)")]
        public const int SCARD_W_CANCELLED_BY_USER = unchecked((int)(0x8010006E));

        [NativeTypeName("#define SCARD_W_CARD_NOT_AUTHENTICATED _HRESULT_TYPEDEF_(0x8010006FL)")]
        public const int SCARD_W_CARD_NOT_AUTHENTICATED = unchecked((int)(0x8010006F));

        [NativeTypeName("#define SCARD_W_CACHE_ITEM_NOT_FOUND _HRESULT_TYPEDEF_(0x80100070L)")]
        public const int SCARD_W_CACHE_ITEM_NOT_FOUND = unchecked((int)(0x80100070));

        [NativeTypeName("#define SCARD_W_CACHE_ITEM_STALE _HRESULT_TYPEDEF_(0x80100071L)")]
        public const int SCARD_W_CACHE_ITEM_STALE = unchecked((int)(0x80100071));

        [NativeTypeName("#define SCARD_W_CACHE_ITEM_TOO_BIG _HRESULT_TYPEDEF_(0x80100072L)")]
        public const int SCARD_W_CACHE_ITEM_TOO_BIG = unchecked((int)(0x80100072));

        [NativeTypeName("#define COMADMIN_E_OBJECTERRORS _HRESULT_TYPEDEF_(0x80110401L)")]
        public const int COMADMIN_E_OBJECTERRORS = unchecked((int)(0x80110401));

        [NativeTypeName("#define COMADMIN_E_OBJECTINVALID _HRESULT_TYPEDEF_(0x80110402L)")]
        public const int COMADMIN_E_OBJECTINVALID = unchecked((int)(0x80110402));

        [NativeTypeName("#define COMADMIN_E_KEYMISSING _HRESULT_TYPEDEF_(0x80110403L)")]
        public const int COMADMIN_E_KEYMISSING = unchecked((int)(0x80110403));

        [NativeTypeName("#define COMADMIN_E_ALREADYINSTALLED _HRESULT_TYPEDEF_(0x80110404L)")]
        public const int COMADMIN_E_ALREADYINSTALLED = unchecked((int)(0x80110404));

        [NativeTypeName("#define COMADMIN_E_APP_FILE_WRITEFAIL _HRESULT_TYPEDEF_(0x80110407L)")]
        public const int COMADMIN_E_APP_FILE_WRITEFAIL = unchecked((int)(0x80110407));

        [NativeTypeName("#define COMADMIN_E_APP_FILE_READFAIL _HRESULT_TYPEDEF_(0x80110408L)")]
        public const int COMADMIN_E_APP_FILE_READFAIL = unchecked((int)(0x80110408));

        [NativeTypeName("#define COMADMIN_E_APP_FILE_VERSION _HRESULT_TYPEDEF_(0x80110409L)")]
        public const int COMADMIN_E_APP_FILE_VERSION = unchecked((int)(0x80110409));

        [NativeTypeName("#define COMADMIN_E_BADPATH _HRESULT_TYPEDEF_(0x8011040AL)")]
        public const int COMADMIN_E_BADPATH = unchecked((int)(0x8011040A));

        [NativeTypeName("#define COMADMIN_E_APPLICATIONEXISTS _HRESULT_TYPEDEF_(0x8011040BL)")]
        public const int COMADMIN_E_APPLICATIONEXISTS = unchecked((int)(0x8011040B));

        [NativeTypeName("#define COMADMIN_E_ROLEEXISTS _HRESULT_TYPEDEF_(0x8011040CL)")]
        public const int COMADMIN_E_ROLEEXISTS = unchecked((int)(0x8011040C));

        [NativeTypeName("#define COMADMIN_E_CANTCOPYFILE _HRESULT_TYPEDEF_(0x8011040DL)")]
        public const int COMADMIN_E_CANTCOPYFILE = unchecked((int)(0x8011040D));

        [NativeTypeName("#define COMADMIN_E_NOUSER _HRESULT_TYPEDEF_(0x8011040FL)")]
        public const int COMADMIN_E_NOUSER = unchecked((int)(0x8011040F));

        [NativeTypeName("#define COMADMIN_E_INVALIDUSERIDS _HRESULT_TYPEDEF_(0x80110410L)")]
        public const int COMADMIN_E_INVALIDUSERIDS = unchecked((int)(0x80110410));

        [NativeTypeName("#define COMADMIN_E_NOREGISTRYCLSID _HRESULT_TYPEDEF_(0x80110411L)")]
        public const int COMADMIN_E_NOREGISTRYCLSID = unchecked((int)(0x80110411));

        [NativeTypeName("#define COMADMIN_E_BADREGISTRYPROGID _HRESULT_TYPEDEF_(0x80110412L)")]
        public const int COMADMIN_E_BADREGISTRYPROGID = unchecked((int)(0x80110412));

        [NativeTypeName("#define COMADMIN_E_AUTHENTICATIONLEVEL _HRESULT_TYPEDEF_(0x80110413L)")]
        public const int COMADMIN_E_AUTHENTICATIONLEVEL = unchecked((int)(0x80110413));

        [NativeTypeName("#define COMADMIN_E_USERPASSWDNOTVALID _HRESULT_TYPEDEF_(0x80110414L)")]
        public const int COMADMIN_E_USERPASSWDNOTVALID = unchecked((int)(0x80110414));

        [NativeTypeName("#define COMADMIN_E_CLSIDORIIDMISMATCH _HRESULT_TYPEDEF_(0x80110418L)")]
        public const int COMADMIN_E_CLSIDORIIDMISMATCH = unchecked((int)(0x80110418));

        [NativeTypeName("#define COMADMIN_E_REMOTEINTERFACE _HRESULT_TYPEDEF_(0x80110419L)")]
        public const int COMADMIN_E_REMOTEINTERFACE = unchecked((int)(0x80110419));

        [NativeTypeName("#define COMADMIN_E_DLLREGISTERSERVER _HRESULT_TYPEDEF_(0x8011041AL)")]
        public const int COMADMIN_E_DLLREGISTERSERVER = unchecked((int)(0x8011041A));

        [NativeTypeName("#define COMADMIN_E_NOSERVERSHARE _HRESULT_TYPEDEF_(0x8011041BL)")]
        public const int COMADMIN_E_NOSERVERSHARE = unchecked((int)(0x8011041B));

        [NativeTypeName("#define COMADMIN_E_DLLLOADFAILED _HRESULT_TYPEDEF_(0x8011041DL)")]
        public const int COMADMIN_E_DLLLOADFAILED = unchecked((int)(0x8011041D));

        [NativeTypeName("#define COMADMIN_E_BADREGISTRYLIBID _HRESULT_TYPEDEF_(0x8011041EL)")]
        public const int COMADMIN_E_BADREGISTRYLIBID = unchecked((int)(0x8011041E));

        [NativeTypeName("#define COMADMIN_E_APPDIRNOTFOUND _HRESULT_TYPEDEF_(0x8011041FL)")]
        public const int COMADMIN_E_APPDIRNOTFOUND = unchecked((int)(0x8011041F));

        [NativeTypeName("#define COMADMIN_E_REGISTRARFAILED _HRESULT_TYPEDEF_(0x80110423L)")]
        public const int COMADMIN_E_REGISTRARFAILED = unchecked((int)(0x80110423));

        [NativeTypeName("#define COMADMIN_E_COMPFILE_DOESNOTEXIST _HRESULT_TYPEDEF_(0x80110424L)")]
        public const int COMADMIN_E_COMPFILE_DOESNOTEXIST = unchecked((int)(0x80110424));

        [NativeTypeName("#define COMADMIN_E_COMPFILE_LOADDLLFAIL _HRESULT_TYPEDEF_(0x80110425L)")]
        public const int COMADMIN_E_COMPFILE_LOADDLLFAIL = unchecked((int)(0x80110425));

        [NativeTypeName("#define COMADMIN_E_COMPFILE_GETCLASSOBJ _HRESULT_TYPEDEF_(0x80110426L)")]
        public const int COMADMIN_E_COMPFILE_GETCLASSOBJ = unchecked((int)(0x80110426));

        [NativeTypeName("#define COMADMIN_E_COMPFILE_CLASSNOTAVAIL _HRESULT_TYPEDEF_(0x80110427L)")]
        public const int COMADMIN_E_COMPFILE_CLASSNOTAVAIL = unchecked((int)(0x80110427));

        [NativeTypeName("#define COMADMIN_E_COMPFILE_BADTLB _HRESULT_TYPEDEF_(0x80110428L)")]
        public const int COMADMIN_E_COMPFILE_BADTLB = unchecked((int)(0x80110428));

        [NativeTypeName("#define COMADMIN_E_COMPFILE_NOTINSTALLABLE _HRESULT_TYPEDEF_(0x80110429L)")]
        public const int COMADMIN_E_COMPFILE_NOTINSTALLABLE = unchecked((int)(0x80110429));

        [NativeTypeName("#define COMADMIN_E_NOTCHANGEABLE _HRESULT_TYPEDEF_(0x8011042AL)")]
        public const int COMADMIN_E_NOTCHANGEABLE = unchecked((int)(0x8011042A));

        [NativeTypeName("#define COMADMIN_E_NOTDELETEABLE _HRESULT_TYPEDEF_(0x8011042BL)")]
        public const int COMADMIN_E_NOTDELETEABLE = unchecked((int)(0x8011042B));

        [NativeTypeName("#define COMADMIN_E_SESSION _HRESULT_TYPEDEF_(0x8011042CL)")]
        public const int COMADMIN_E_SESSION = unchecked((int)(0x8011042C));

        [NativeTypeName("#define COMADMIN_E_COMP_MOVE_LOCKED _HRESULT_TYPEDEF_(0x8011042DL)")]
        public const int COMADMIN_E_COMP_MOVE_LOCKED = unchecked((int)(0x8011042D));

        [NativeTypeName("#define COMADMIN_E_COMP_MOVE_BAD_DEST _HRESULT_TYPEDEF_(0x8011042EL)")]
        public const int COMADMIN_E_COMP_MOVE_BAD_DEST = unchecked((int)(0x8011042E));

        [NativeTypeName("#define COMADMIN_E_REGISTERTLB _HRESULT_TYPEDEF_(0x80110430L)")]
        public const int COMADMIN_E_REGISTERTLB = unchecked((int)(0x80110430));

        [NativeTypeName("#define COMADMIN_E_SYSTEMAPP _HRESULT_TYPEDEF_(0x80110433L)")]
        public const int COMADMIN_E_SYSTEMAPP = unchecked((int)(0x80110433));

        [NativeTypeName("#define COMADMIN_E_COMPFILE_NOREGISTRAR _HRESULT_TYPEDEF_(0x80110434L)")]
        public const int COMADMIN_E_COMPFILE_NOREGISTRAR = unchecked((int)(0x80110434));

        [NativeTypeName("#define COMADMIN_E_COREQCOMPINSTALLED _HRESULT_TYPEDEF_(0x80110435L)")]
        public const int COMADMIN_E_COREQCOMPINSTALLED = unchecked((int)(0x80110435));

        [NativeTypeName("#define COMADMIN_E_SERVICENOTINSTALLED _HRESULT_TYPEDEF_(0x80110436L)")]
        public const int COMADMIN_E_SERVICENOTINSTALLED = unchecked((int)(0x80110436));

        [NativeTypeName("#define COMADMIN_E_PROPERTYSAVEFAILED _HRESULT_TYPEDEF_(0x80110437L)")]
        public const int COMADMIN_E_PROPERTYSAVEFAILED = unchecked((int)(0x80110437));

        [NativeTypeName("#define COMADMIN_E_OBJECTEXISTS _HRESULT_TYPEDEF_(0x80110438L)")]
        public const int COMADMIN_E_OBJECTEXISTS = unchecked((int)(0x80110438));

        [NativeTypeName("#define COMADMIN_E_COMPONENTEXISTS _HRESULT_TYPEDEF_(0x80110439L)")]
        public const int COMADMIN_E_COMPONENTEXISTS = unchecked((int)(0x80110439));

        [NativeTypeName("#define COMADMIN_E_REGFILE_CORRUPT _HRESULT_TYPEDEF_(0x8011043BL)")]
        public const int COMADMIN_E_REGFILE_CORRUPT = unchecked((int)(0x8011043B));

        [NativeTypeName("#define COMADMIN_E_PROPERTY_OVERFLOW _HRESULT_TYPEDEF_(0x8011043CL)")]
        public const int COMADMIN_E_PROPERTY_OVERFLOW = unchecked((int)(0x8011043C));

        [NativeTypeName("#define COMADMIN_E_NOTINREGISTRY _HRESULT_TYPEDEF_(0x8011043EL)")]
        public const int COMADMIN_E_NOTINREGISTRY = unchecked((int)(0x8011043E));

        [NativeTypeName("#define COMADMIN_E_OBJECTNOTPOOLABLE _HRESULT_TYPEDEF_(0x8011043FL)")]
        public const int COMADMIN_E_OBJECTNOTPOOLABLE = unchecked((int)(0x8011043F));

        [NativeTypeName("#define COMADMIN_E_APPLID_MATCHES_CLSID _HRESULT_TYPEDEF_(0x80110446L)")]
        public const int COMADMIN_E_APPLID_MATCHES_CLSID = unchecked((int)(0x80110446));

        [NativeTypeName("#define COMADMIN_E_ROLE_DOES_NOT_EXIST _HRESULT_TYPEDEF_(0x80110447L)")]
        public const int COMADMIN_E_ROLE_DOES_NOT_EXIST = unchecked((int)(0x80110447));

        [NativeTypeName("#define COMADMIN_E_START_APP_NEEDS_COMPONENTS _HRESULT_TYPEDEF_(0x80110448L)")]
        public const int COMADMIN_E_START_APP_NEEDS_COMPONENTS = unchecked((int)(0x80110448));

        [NativeTypeName("#define COMADMIN_E_REQUIRES_DIFFERENT_PLATFORM _HRESULT_TYPEDEF_(0x80110449L)")]
        public const int COMADMIN_E_REQUIRES_DIFFERENT_PLATFORM = unchecked((int)(0x80110449));

        [NativeTypeName("#define COMADMIN_E_CAN_NOT_EXPORT_APP_PROXY _HRESULT_TYPEDEF_(0x8011044AL)")]
        public const int COMADMIN_E_CAN_NOT_EXPORT_APP_PROXY = unchecked((int)(0x8011044A));

        [NativeTypeName("#define COMADMIN_E_CAN_NOT_START_APP _HRESULT_TYPEDEF_(0x8011044BL)")]
        public const int COMADMIN_E_CAN_NOT_START_APP = unchecked((int)(0x8011044B));

        [NativeTypeName("#define COMADMIN_E_CAN_NOT_EXPORT_SYS_APP _HRESULT_TYPEDEF_(0x8011044CL)")]
        public const int COMADMIN_E_CAN_NOT_EXPORT_SYS_APP = unchecked((int)(0x8011044C));

        [NativeTypeName("#define COMADMIN_E_CANT_SUBSCRIBE_TO_COMPONENT _HRESULT_TYPEDEF_(0x8011044DL)")]
        public const int COMADMIN_E_CANT_SUBSCRIBE_TO_COMPONENT = unchecked((int)(0x8011044D));

        [NativeTypeName("#define COMADMIN_E_EVENTCLASS_CANT_BE_SUBSCRIBER _HRESULT_TYPEDEF_(0x8011044EL)")]
        public const int COMADMIN_E_EVENTCLASS_CANT_BE_SUBSCRIBER = unchecked((int)(0x8011044E));

        [NativeTypeName("#define COMADMIN_E_LIB_APP_PROXY_INCOMPATIBLE _HRESULT_TYPEDEF_(0x8011044FL)")]
        public const int COMADMIN_E_LIB_APP_PROXY_INCOMPATIBLE = unchecked((int)(0x8011044F));

        [NativeTypeName("#define COMADMIN_E_BASE_PARTITION_ONLY _HRESULT_TYPEDEF_(0x80110450L)")]
        public const int COMADMIN_E_BASE_PARTITION_ONLY = unchecked((int)(0x80110450));

        [NativeTypeName("#define COMADMIN_E_START_APP_DISABLED _HRESULT_TYPEDEF_(0x80110451L)")]
        public const int COMADMIN_E_START_APP_DISABLED = unchecked((int)(0x80110451));

        [NativeTypeName("#define COMADMIN_E_CAT_DUPLICATE_PARTITION_NAME _HRESULT_TYPEDEF_(0x80110457L)")]
        public const int COMADMIN_E_CAT_DUPLICATE_PARTITION_NAME = unchecked((int)(0x80110457));

        [NativeTypeName("#define COMADMIN_E_CAT_INVALID_PARTITION_NAME _HRESULT_TYPEDEF_(0x80110458L)")]
        public const int COMADMIN_E_CAT_INVALID_PARTITION_NAME = unchecked((int)(0x80110458));

        [NativeTypeName("#define COMADMIN_E_CAT_PARTITION_IN_USE _HRESULT_TYPEDEF_(0x80110459L)")]
        public const int COMADMIN_E_CAT_PARTITION_IN_USE = unchecked((int)(0x80110459));

        [NativeTypeName("#define COMADMIN_E_FILE_PARTITION_DUPLICATE_FILES _HRESULT_TYPEDEF_(0x8011045AL)")]
        public const int COMADMIN_E_FILE_PARTITION_DUPLICATE_FILES = unchecked((int)(0x8011045A));

        [NativeTypeName("#define COMADMIN_E_CAT_IMPORTED_COMPONENTS_NOT_ALLOWED _HRESULT_TYPEDEF_(0x8011045BL)")]
        public const int COMADMIN_E_CAT_IMPORTED_COMPONENTS_NOT_ALLOWED = unchecked((int)(0x8011045B));

        [NativeTypeName("#define COMADMIN_E_AMBIGUOUS_APPLICATION_NAME _HRESULT_TYPEDEF_(0x8011045CL)")]
        public const int COMADMIN_E_AMBIGUOUS_APPLICATION_NAME = unchecked((int)(0x8011045C));

        [NativeTypeName("#define COMADMIN_E_AMBIGUOUS_PARTITION_NAME _HRESULT_TYPEDEF_(0x8011045DL)")]
        public const int COMADMIN_E_AMBIGUOUS_PARTITION_NAME = unchecked((int)(0x8011045D));

        [NativeTypeName("#define COMADMIN_E_REGDB_NOTINITIALIZED _HRESULT_TYPEDEF_(0x80110472L)")]
        public const int COMADMIN_E_REGDB_NOTINITIALIZED = unchecked((int)(0x80110472));

        [NativeTypeName("#define COMADMIN_E_REGDB_NOTOPEN _HRESULT_TYPEDEF_(0x80110473L)")]
        public const int COMADMIN_E_REGDB_NOTOPEN = unchecked((int)(0x80110473));

        [NativeTypeName("#define COMADMIN_E_REGDB_SYSTEMERR _HRESULT_TYPEDEF_(0x80110474L)")]
        public const int COMADMIN_E_REGDB_SYSTEMERR = unchecked((int)(0x80110474));

        [NativeTypeName("#define COMADMIN_E_REGDB_ALREADYRUNNING _HRESULT_TYPEDEF_(0x80110475L)")]
        public const int COMADMIN_E_REGDB_ALREADYRUNNING = unchecked((int)(0x80110475));

        [NativeTypeName("#define COMADMIN_E_MIG_VERSIONNOTSUPPORTED _HRESULT_TYPEDEF_(0x80110480L)")]
        public const int COMADMIN_E_MIG_VERSIONNOTSUPPORTED = unchecked((int)(0x80110480));

        [NativeTypeName("#define COMADMIN_E_MIG_SCHEMANOTFOUND _HRESULT_TYPEDEF_(0x80110481L)")]
        public const int COMADMIN_E_MIG_SCHEMANOTFOUND = unchecked((int)(0x80110481));

        [NativeTypeName("#define COMADMIN_E_CAT_BITNESSMISMATCH _HRESULT_TYPEDEF_(0x80110482L)")]
        public const int COMADMIN_E_CAT_BITNESSMISMATCH = unchecked((int)(0x80110482));

        [NativeTypeName("#define COMADMIN_E_CAT_UNACCEPTABLEBITNESS _HRESULT_TYPEDEF_(0x80110483L)")]
        public const int COMADMIN_E_CAT_UNACCEPTABLEBITNESS = unchecked((int)(0x80110483));

        [NativeTypeName("#define COMADMIN_E_CAT_WRONGAPPBITNESS _HRESULT_TYPEDEF_(0x80110484L)")]
        public const int COMADMIN_E_CAT_WRONGAPPBITNESS = unchecked((int)(0x80110484));

        [NativeTypeName("#define COMADMIN_E_CAT_PAUSE_RESUME_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80110485L)")]
        public const int COMADMIN_E_CAT_PAUSE_RESUME_NOT_SUPPORTED = unchecked((int)(0x80110485));

        [NativeTypeName("#define COMADMIN_E_CAT_SERVERFAULT _HRESULT_TYPEDEF_(0x80110486L)")]
        public const int COMADMIN_E_CAT_SERVERFAULT = unchecked((int)(0x80110486));

        [NativeTypeName("#define COMQC_E_APPLICATION_NOT_QUEUED _HRESULT_TYPEDEF_(0x80110600L)")]
        public const int COMQC_E_APPLICATION_NOT_QUEUED = unchecked((int)(0x80110600));

        [NativeTypeName("#define COMQC_E_NO_QUEUEABLE_INTERFACES _HRESULT_TYPEDEF_(0x80110601L)")]
        public const int COMQC_E_NO_QUEUEABLE_INTERFACES = unchecked((int)(0x80110601));

        [NativeTypeName("#define COMQC_E_QUEUING_SERVICE_NOT_AVAILABLE _HRESULT_TYPEDEF_(0x80110602L)")]
        public const int COMQC_E_QUEUING_SERVICE_NOT_AVAILABLE = unchecked((int)(0x80110602));

        [NativeTypeName("#define COMQC_E_NO_IPERSISTSTREAM _HRESULT_TYPEDEF_(0x80110603L)")]
        public const int COMQC_E_NO_IPERSISTSTREAM = unchecked((int)(0x80110603));

        [NativeTypeName("#define COMQC_E_BAD_MESSAGE _HRESULT_TYPEDEF_(0x80110604L)")]
        public const int COMQC_E_BAD_MESSAGE = unchecked((int)(0x80110604));

        [NativeTypeName("#define COMQC_E_UNAUTHENTICATED _HRESULT_TYPEDEF_(0x80110605L)")]
        public const int COMQC_E_UNAUTHENTICATED = unchecked((int)(0x80110605));

        [NativeTypeName("#define COMQC_E_UNTRUSTED_ENQUEUER _HRESULT_TYPEDEF_(0x80110606L)")]
        public const int COMQC_E_UNTRUSTED_ENQUEUER = unchecked((int)(0x80110606));

        [NativeTypeName("#define MSDTC_E_DUPLICATE_RESOURCE _HRESULT_TYPEDEF_(0x80110701L)")]
        public const int MSDTC_E_DUPLICATE_RESOURCE = unchecked((int)(0x80110701));

        [NativeTypeName("#define COMADMIN_E_OBJECT_PARENT_MISSING _HRESULT_TYPEDEF_(0x80110808L)")]
        public const int COMADMIN_E_OBJECT_PARENT_MISSING = unchecked((int)(0x80110808));

        [NativeTypeName("#define COMADMIN_E_OBJECT_DOES_NOT_EXIST _HRESULT_TYPEDEF_(0x80110809L)")]
        public const int COMADMIN_E_OBJECT_DOES_NOT_EXIST = unchecked((int)(0x80110809));

        [NativeTypeName("#define COMADMIN_E_APP_NOT_RUNNING _HRESULT_TYPEDEF_(0x8011080AL)")]
        public const int COMADMIN_E_APP_NOT_RUNNING = unchecked((int)(0x8011080A));

        [NativeTypeName("#define COMADMIN_E_INVALID_PARTITION _HRESULT_TYPEDEF_(0x8011080BL)")]
        public const int COMADMIN_E_INVALID_PARTITION = unchecked((int)(0x8011080B));

        [NativeTypeName("#define COMADMIN_E_SVCAPP_NOT_POOLABLE_OR_RECYCLABLE _HRESULT_TYPEDEF_(0x8011080DL)")]
        public const int COMADMIN_E_SVCAPP_NOT_POOLABLE_OR_RECYCLABLE = unchecked((int)(0x8011080D));

        [NativeTypeName("#define COMADMIN_E_USER_IN_SET _HRESULT_TYPEDEF_(0x8011080EL)")]
        public const int COMADMIN_E_USER_IN_SET = unchecked((int)(0x8011080E));

        [NativeTypeName("#define COMADMIN_E_CANTRECYCLELIBRARYAPPS _HRESULT_TYPEDEF_(0x8011080FL)")]
        public const int COMADMIN_E_CANTRECYCLELIBRARYAPPS = unchecked((int)(0x8011080F));

        [NativeTypeName("#define COMADMIN_E_CANTRECYCLESERVICEAPPS _HRESULT_TYPEDEF_(0x80110811L)")]
        public const int COMADMIN_E_CANTRECYCLESERVICEAPPS = unchecked((int)(0x80110811));

        [NativeTypeName("#define COMADMIN_E_PROCESSALREADYRECYCLED _HRESULT_TYPEDEF_(0x80110812L)")]
        public const int COMADMIN_E_PROCESSALREADYRECYCLED = unchecked((int)(0x80110812));

        [NativeTypeName("#define COMADMIN_E_PAUSEDPROCESSMAYNOTBERECYCLED _HRESULT_TYPEDEF_(0x80110813L)")]
        public const int COMADMIN_E_PAUSEDPROCESSMAYNOTBERECYCLED = unchecked((int)(0x80110813));

        [NativeTypeName("#define COMADMIN_E_CANTMAKEINPROCSERVICE _HRESULT_TYPEDEF_(0x80110814L)")]
        public const int COMADMIN_E_CANTMAKEINPROCSERVICE = unchecked((int)(0x80110814));

        [NativeTypeName("#define COMADMIN_E_PROGIDINUSEBYCLSID _HRESULT_TYPEDEF_(0x80110815L)")]
        public const int COMADMIN_E_PROGIDINUSEBYCLSID = unchecked((int)(0x80110815));

        [NativeTypeName("#define COMADMIN_E_DEFAULT_PARTITION_NOT_IN_SET _HRESULT_TYPEDEF_(0x80110816L)")]
        public const int COMADMIN_E_DEFAULT_PARTITION_NOT_IN_SET = unchecked((int)(0x80110816));

        [NativeTypeName("#define COMADMIN_E_RECYCLEDPROCESSMAYNOTBEPAUSED _HRESULT_TYPEDEF_(0x80110817L)")]
        public const int COMADMIN_E_RECYCLEDPROCESSMAYNOTBEPAUSED = unchecked((int)(0x80110817));

        [NativeTypeName("#define COMADMIN_E_PARTITION_ACCESSDENIED _HRESULT_TYPEDEF_(0x80110818L)")]
        public const int COMADMIN_E_PARTITION_ACCESSDENIED = unchecked((int)(0x80110818));

        [NativeTypeName("#define COMADMIN_E_PARTITION_MSI_ONLY _HRESULT_TYPEDEF_(0x80110819L)")]
        public const int COMADMIN_E_PARTITION_MSI_ONLY = unchecked((int)(0x80110819));

        [NativeTypeName("#define COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_1_0_FORMAT _HRESULT_TYPEDEF_(0x8011081AL)")]
        public const int COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_1_0_FORMAT = unchecked((int)(0x8011081A));

        [NativeTypeName("#define COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_NONBASE_PARTITIONS _HRESULT_TYPEDEF_(0x8011081BL)")]
        public const int COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_NONBASE_PARTITIONS = unchecked((int)(0x8011081B));

        [NativeTypeName("#define COMADMIN_E_COMP_MOVE_SOURCE _HRESULT_TYPEDEF_(0x8011081CL)")]
        public const int COMADMIN_E_COMP_MOVE_SOURCE = unchecked((int)(0x8011081C));

        [NativeTypeName("#define COMADMIN_E_COMP_MOVE_DEST _HRESULT_TYPEDEF_(0x8011081DL)")]
        public const int COMADMIN_E_COMP_MOVE_DEST = unchecked((int)(0x8011081D));

        [NativeTypeName("#define COMADMIN_E_COMP_MOVE_PRIVATE _HRESULT_TYPEDEF_(0x8011081EL)")]
        public const int COMADMIN_E_COMP_MOVE_PRIVATE = unchecked((int)(0x8011081E));

        [NativeTypeName("#define COMADMIN_E_BASEPARTITION_REQUIRED_IN_SET _HRESULT_TYPEDEF_(0x8011081FL)")]
        public const int COMADMIN_E_BASEPARTITION_REQUIRED_IN_SET = unchecked((int)(0x8011081F));

        [NativeTypeName("#define COMADMIN_E_CANNOT_ALIAS_EVENTCLASS _HRESULT_TYPEDEF_(0x80110820L)")]
        public const int COMADMIN_E_CANNOT_ALIAS_EVENTCLASS = unchecked((int)(0x80110820));

        [NativeTypeName("#define COMADMIN_E_PRIVATE_ACCESSDENIED _HRESULT_TYPEDEF_(0x80110821L)")]
        public const int COMADMIN_E_PRIVATE_ACCESSDENIED = unchecked((int)(0x80110821));

        [NativeTypeName("#define COMADMIN_E_SAFERINVALID _HRESULT_TYPEDEF_(0x80110822L)")]
        public const int COMADMIN_E_SAFERINVALID = unchecked((int)(0x80110822));

        [NativeTypeName("#define COMADMIN_E_REGISTRY_ACCESSDENIED _HRESULT_TYPEDEF_(0x80110823L)")]
        public const int COMADMIN_E_REGISTRY_ACCESSDENIED = unchecked((int)(0x80110823));

        [NativeTypeName("#define COMADMIN_E_PARTITIONS_DISABLED _HRESULT_TYPEDEF_(0x80110824L)")]
        public const int COMADMIN_E_PARTITIONS_DISABLED = unchecked((int)(0x80110824));

        [NativeTypeName("#define WER_S_REPORT_DEBUG _HRESULT_TYPEDEF_(0x001B0000L)")]
        public const int WER_S_REPORT_DEBUG = ((int)(0x001B0000));

        [NativeTypeName("#define WER_S_REPORT_UPLOADED _HRESULT_TYPEDEF_(0x001B0001L)")]
        public const int WER_S_REPORT_UPLOADED = ((int)(0x001B0001));

        [NativeTypeName("#define WER_S_REPORT_QUEUED _HRESULT_TYPEDEF_(0x001B0002L)")]
        public const int WER_S_REPORT_QUEUED = ((int)(0x001B0002));

        [NativeTypeName("#define WER_S_DISABLED _HRESULT_TYPEDEF_(0x001B0003L)")]
        public const int WER_S_DISABLED = ((int)(0x001B0003));

        [NativeTypeName("#define WER_S_SUSPENDED_UPLOAD _HRESULT_TYPEDEF_(0x001B0004L)")]
        public const int WER_S_SUSPENDED_UPLOAD = ((int)(0x001B0004));

        [NativeTypeName("#define WER_S_DISABLED_QUEUE _HRESULT_TYPEDEF_(0x001B0005L)")]
        public const int WER_S_DISABLED_QUEUE = ((int)(0x001B0005));

        [NativeTypeName("#define WER_S_DISABLED_ARCHIVE _HRESULT_TYPEDEF_(0x001B0006L)")]
        public const int WER_S_DISABLED_ARCHIVE = ((int)(0x001B0006));

        [NativeTypeName("#define WER_S_REPORT_ASYNC _HRESULT_TYPEDEF_(0x001B0007L)")]
        public const int WER_S_REPORT_ASYNC = ((int)(0x001B0007));

        [NativeTypeName("#define WER_S_IGNORE_ASSERT_INSTANCE _HRESULT_TYPEDEF_(0x001B0008L)")]
        public const int WER_S_IGNORE_ASSERT_INSTANCE = ((int)(0x001B0008));

        [NativeTypeName("#define WER_S_IGNORE_ALL_ASSERTS _HRESULT_TYPEDEF_(0x001B0009L)")]
        public const int WER_S_IGNORE_ALL_ASSERTS = ((int)(0x001B0009));

        [NativeTypeName("#define WER_S_ASSERT_CONTINUE _HRESULT_TYPEDEF_(0x001B000AL)")]
        public const int WER_S_ASSERT_CONTINUE = ((int)(0x001B000A));

        [NativeTypeName("#define WER_S_THROTTLED _HRESULT_TYPEDEF_(0x001B000BL)")]
        public const int WER_S_THROTTLED = ((int)(0x001B000B));

        [NativeTypeName("#define WER_S_REPORT_UPLOADED_CAB _HRESULT_TYPEDEF_(0x001B000CL)")]
        public const int WER_S_REPORT_UPLOADED_CAB = ((int)(0x001B000C));

        [NativeTypeName("#define WER_E_CRASH_FAILURE _HRESULT_TYPEDEF_(0x801B8000L)")]
        public const int WER_E_CRASH_FAILURE = unchecked((int)(0x801B8000));

        [NativeTypeName("#define WER_E_CANCELED _HRESULT_TYPEDEF_(0x801B8001L)")]
        public const int WER_E_CANCELED = unchecked((int)(0x801B8001));

        [NativeTypeName("#define WER_E_NETWORK_FAILURE _HRESULT_TYPEDEF_(0x801B8002L)")]
        public const int WER_E_NETWORK_FAILURE = unchecked((int)(0x801B8002));

        [NativeTypeName("#define WER_E_NOT_INITIALIZED _HRESULT_TYPEDEF_(0x801B8003L)")]
        public const int WER_E_NOT_INITIALIZED = unchecked((int)(0x801B8003));

        [NativeTypeName("#define WER_E_ALREADY_REPORTING _HRESULT_TYPEDEF_(0x801B8004L)")]
        public const int WER_E_ALREADY_REPORTING = unchecked((int)(0x801B8004));

        [NativeTypeName("#define WER_E_DUMP_THROTTLED _HRESULT_TYPEDEF_(0x801B8005L)")]
        public const int WER_E_DUMP_THROTTLED = unchecked((int)(0x801B8005));

        [NativeTypeName("#define WER_E_INSUFFICIENT_CONSENT _HRESULT_TYPEDEF_(0x801B8006L)")]
        public const int WER_E_INSUFFICIENT_CONSENT = unchecked((int)(0x801B8006));

        [NativeTypeName("#define WER_E_TOO_HEAVY _HRESULT_TYPEDEF_(0x801B8007L)")]
        public const int WER_E_TOO_HEAVY = unchecked((int)(0x801B8007));

        [NativeTypeName("#define ERROR_FLT_IO_COMPLETE _HRESULT_TYPEDEF_(0x001F0001L)")]
        public const int ERROR_FLT_IO_COMPLETE = ((int)(0x001F0001));

        [NativeTypeName("#define ERROR_FLT_NO_HANDLER_DEFINED _HRESULT_TYPEDEF_(0x801F0001L)")]
        public const int ERROR_FLT_NO_HANDLER_DEFINED = unchecked((int)(0x801F0001));

        [NativeTypeName("#define ERROR_FLT_CONTEXT_ALREADY_DEFINED _HRESULT_TYPEDEF_(0x801F0002L)")]
        public const int ERROR_FLT_CONTEXT_ALREADY_DEFINED = unchecked((int)(0x801F0002));

        [NativeTypeName("#define ERROR_FLT_INVALID_ASYNCHRONOUS_REQUEST _HRESULT_TYPEDEF_(0x801F0003L)")]
        public const int ERROR_FLT_INVALID_ASYNCHRONOUS_REQUEST = unchecked((int)(0x801F0003));

        [NativeTypeName("#define ERROR_FLT_DISALLOW_FAST_IO _HRESULT_TYPEDEF_(0x801F0004L)")]
        public const int ERROR_FLT_DISALLOW_FAST_IO = unchecked((int)(0x801F0004));

        [NativeTypeName("#define ERROR_FLT_INVALID_NAME_REQUEST _HRESULT_TYPEDEF_(0x801F0005L)")]
        public const int ERROR_FLT_INVALID_NAME_REQUEST = unchecked((int)(0x801F0005));

        [NativeTypeName("#define ERROR_FLT_NOT_SAFE_TO_POST_OPERATION _HRESULT_TYPEDEF_(0x801F0006L)")]
        public const int ERROR_FLT_NOT_SAFE_TO_POST_OPERATION = unchecked((int)(0x801F0006));

        [NativeTypeName("#define ERROR_FLT_NOT_INITIALIZED _HRESULT_TYPEDEF_(0x801F0007L)")]
        public const int ERROR_FLT_NOT_INITIALIZED = unchecked((int)(0x801F0007));

        [NativeTypeName("#define ERROR_FLT_FILTER_NOT_READY _HRESULT_TYPEDEF_(0x801F0008L)")]
        public const int ERROR_FLT_FILTER_NOT_READY = unchecked((int)(0x801F0008));

        [NativeTypeName("#define ERROR_FLT_POST_OPERATION_CLEANUP _HRESULT_TYPEDEF_(0x801F0009L)")]
        public const int ERROR_FLT_POST_OPERATION_CLEANUP = unchecked((int)(0x801F0009));

        [NativeTypeName("#define ERROR_FLT_INTERNAL_ERROR _HRESULT_TYPEDEF_(0x801F000AL)")]
        public const int ERROR_FLT_INTERNAL_ERROR = unchecked((int)(0x801F000A));

        [NativeTypeName("#define ERROR_FLT_DELETING_OBJECT _HRESULT_TYPEDEF_(0x801F000BL)")]
        public const int ERROR_FLT_DELETING_OBJECT = unchecked((int)(0x801F000B));

        [NativeTypeName("#define ERROR_FLT_MUST_BE_NONPAGED_POOL _HRESULT_TYPEDEF_(0x801F000CL)")]
        public const int ERROR_FLT_MUST_BE_NONPAGED_POOL = unchecked((int)(0x801F000C));

        [NativeTypeName("#define ERROR_FLT_DUPLICATE_ENTRY _HRESULT_TYPEDEF_(0x801F000DL)")]
        public const int ERROR_FLT_DUPLICATE_ENTRY = unchecked((int)(0x801F000D));

        [NativeTypeName("#define ERROR_FLT_CBDQ_DISABLED _HRESULT_TYPEDEF_(0x801F000EL)")]
        public const int ERROR_FLT_CBDQ_DISABLED = unchecked((int)(0x801F000E));

        [NativeTypeName("#define ERROR_FLT_DO_NOT_ATTACH _HRESULT_TYPEDEF_(0x801F000FL)")]
        public const int ERROR_FLT_DO_NOT_ATTACH = unchecked((int)(0x801F000F));

        [NativeTypeName("#define ERROR_FLT_DO_NOT_DETACH _HRESULT_TYPEDEF_(0x801F0010L)")]
        public const int ERROR_FLT_DO_NOT_DETACH = unchecked((int)(0x801F0010));

        [NativeTypeName("#define ERROR_FLT_INSTANCE_ALTITUDE_COLLISION _HRESULT_TYPEDEF_(0x801F0011L)")]
        public const int ERROR_FLT_INSTANCE_ALTITUDE_COLLISION = unchecked((int)(0x801F0011));

        [NativeTypeName("#define ERROR_FLT_INSTANCE_NAME_COLLISION _HRESULT_TYPEDEF_(0x801F0012L)")]
        public const int ERROR_FLT_INSTANCE_NAME_COLLISION = unchecked((int)(0x801F0012));

        [NativeTypeName("#define ERROR_FLT_FILTER_NOT_FOUND _HRESULT_TYPEDEF_(0x801F0013L)")]
        public const int ERROR_FLT_FILTER_NOT_FOUND = unchecked((int)(0x801F0013));

        [NativeTypeName("#define ERROR_FLT_VOLUME_NOT_FOUND _HRESULT_TYPEDEF_(0x801F0014L)")]
        public const int ERROR_FLT_VOLUME_NOT_FOUND = unchecked((int)(0x801F0014));

        [NativeTypeName("#define ERROR_FLT_INSTANCE_NOT_FOUND _HRESULT_TYPEDEF_(0x801F0015L)")]
        public const int ERROR_FLT_INSTANCE_NOT_FOUND = unchecked((int)(0x801F0015));

        [NativeTypeName("#define ERROR_FLT_CONTEXT_ALLOCATION_NOT_FOUND _HRESULT_TYPEDEF_(0x801F0016L)")]
        public const int ERROR_FLT_CONTEXT_ALLOCATION_NOT_FOUND = unchecked((int)(0x801F0016));

        [NativeTypeName("#define ERROR_FLT_INVALID_CONTEXT_REGISTRATION _HRESULT_TYPEDEF_(0x801F0017L)")]
        public const int ERROR_FLT_INVALID_CONTEXT_REGISTRATION = unchecked((int)(0x801F0017));

        [NativeTypeName("#define ERROR_FLT_NAME_CACHE_MISS _HRESULT_TYPEDEF_(0x801F0018L)")]
        public const int ERROR_FLT_NAME_CACHE_MISS = unchecked((int)(0x801F0018));

        [NativeTypeName("#define ERROR_FLT_NO_DEVICE_OBJECT _HRESULT_TYPEDEF_(0x801F0019L)")]
        public const int ERROR_FLT_NO_DEVICE_OBJECT = unchecked((int)(0x801F0019));

        [NativeTypeName("#define ERROR_FLT_VOLUME_ALREADY_MOUNTED _HRESULT_TYPEDEF_(0x801F001AL)")]
        public const int ERROR_FLT_VOLUME_ALREADY_MOUNTED = unchecked((int)(0x801F001A));

        [NativeTypeName("#define ERROR_FLT_ALREADY_ENLISTED _HRESULT_TYPEDEF_(0x801F001BL)")]
        public const int ERROR_FLT_ALREADY_ENLISTED = unchecked((int)(0x801F001B));

        [NativeTypeName("#define ERROR_FLT_CONTEXT_ALREADY_LINKED _HRESULT_TYPEDEF_(0x801F001CL)")]
        public const int ERROR_FLT_CONTEXT_ALREADY_LINKED = unchecked((int)(0x801F001C));

        [NativeTypeName("#define ERROR_FLT_NO_WAITER_FOR_REPLY _HRESULT_TYPEDEF_(0x801F0020L)")]
        public const int ERROR_FLT_NO_WAITER_FOR_REPLY = unchecked((int)(0x801F0020));

        [NativeTypeName("#define ERROR_FLT_REGISTRATION_BUSY _HRESULT_TYPEDEF_(0x801F0023L)")]
        public const int ERROR_FLT_REGISTRATION_BUSY = unchecked((int)(0x801F0023));

        [NativeTypeName("#define ERROR_HUNG_DISPLAY_DRIVER_THREAD _HRESULT_TYPEDEF_(0x80260001L)")]
        public const int ERROR_HUNG_DISPLAY_DRIVER_THREAD = unchecked((int)(0x80260001));

        [NativeTypeName("#define DWM_E_COMPOSITIONDISABLED _HRESULT_TYPEDEF_(0x80263001L)")]
        public const int DWM_E_COMPOSITIONDISABLED = unchecked((int)(0x80263001));

        [NativeTypeName("#define DWM_E_REMOTING_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80263002L)")]
        public const int DWM_E_REMOTING_NOT_SUPPORTED = unchecked((int)(0x80263002));

        [NativeTypeName("#define DWM_E_NO_REDIRECTION_SURFACE_AVAILABLE _HRESULT_TYPEDEF_(0x80263003L)")]
        public const int DWM_E_NO_REDIRECTION_SURFACE_AVAILABLE = unchecked((int)(0x80263003));

        [NativeTypeName("#define DWM_E_NOT_QUEUING_PRESENTS _HRESULT_TYPEDEF_(0x80263004L)")]
        public const int DWM_E_NOT_QUEUING_PRESENTS = unchecked((int)(0x80263004));

        [NativeTypeName("#define DWM_E_ADAPTER_NOT_FOUND _HRESULT_TYPEDEF_(0x80263005L)")]
        public const int DWM_E_ADAPTER_NOT_FOUND = unchecked((int)(0x80263005));

        [NativeTypeName("#define DWM_S_GDI_REDIRECTION_SURFACE _HRESULT_TYPEDEF_(0x00263005L)")]
        public const int DWM_S_GDI_REDIRECTION_SURFACE = ((int)(0x00263005));

        [NativeTypeName("#define DWM_E_TEXTURE_TOO_LARGE _HRESULT_TYPEDEF_(0x80263007L)")]
        public const int DWM_E_TEXTURE_TOO_LARGE = unchecked((int)(0x80263007));

        [NativeTypeName("#define DWM_S_GDI_REDIRECTION_SURFACE_BLT_VIA_GDI _HRESULT_TYPEDEF_(0x00263008L)")]
        public const int DWM_S_GDI_REDIRECTION_SURFACE_BLT_VIA_GDI = ((int)(0x00263008));

        [NativeTypeName("#define ERROR_MONITOR_NO_DESCRIPTOR _HRESULT_TYPEDEF_(0x00261001L)")]
        public const int ERROR_MONITOR_NO_DESCRIPTOR = ((int)(0x00261001));

        [NativeTypeName("#define ERROR_MONITOR_UNKNOWN_DESCRIPTOR_FORMAT _HRESULT_TYPEDEF_(0x00261002L)")]
        public const int ERROR_MONITOR_UNKNOWN_DESCRIPTOR_FORMAT = ((int)(0x00261002));

        [NativeTypeName("#define ERROR_MONITOR_INVALID_DESCRIPTOR_CHECKSUM _HRESULT_TYPEDEF_(0xC0261003L)")]
        public const int ERROR_MONITOR_INVALID_DESCRIPTOR_CHECKSUM = unchecked((int)(0xC0261003));

        [NativeTypeName("#define ERROR_MONITOR_INVALID_STANDARD_TIMING_BLOCK _HRESULT_TYPEDEF_(0xC0261004L)")]
        public const int ERROR_MONITOR_INVALID_STANDARD_TIMING_BLOCK = unchecked((int)(0xC0261004));

        [NativeTypeName("#define ERROR_MONITOR_WMI_DATABLOCK_REGISTRATION_FAILED _HRESULT_TYPEDEF_(0xC0261005L)")]
        public const int ERROR_MONITOR_WMI_DATABLOCK_REGISTRATION_FAILED = unchecked((int)(0xC0261005));

        [NativeTypeName("#define ERROR_MONITOR_INVALID_SERIAL_NUMBER_MONDSC_BLOCK _HRESULT_TYPEDEF_(0xC0261006L)")]
        public const int ERROR_MONITOR_INVALID_SERIAL_NUMBER_MONDSC_BLOCK = unchecked((int)(0xC0261006));

        [NativeTypeName("#define ERROR_MONITOR_INVALID_USER_FRIENDLY_MONDSC_BLOCK _HRESULT_TYPEDEF_(0xC0261007L)")]
        public const int ERROR_MONITOR_INVALID_USER_FRIENDLY_MONDSC_BLOCK = unchecked((int)(0xC0261007));

        [NativeTypeName("#define ERROR_MONITOR_NO_MORE_DESCRIPTOR_DATA _HRESULT_TYPEDEF_(0xC0261008L)")]
        public const int ERROR_MONITOR_NO_MORE_DESCRIPTOR_DATA = unchecked((int)(0xC0261008));

        [NativeTypeName("#define ERROR_MONITOR_INVALID_DETAILED_TIMING_BLOCK _HRESULT_TYPEDEF_(0xC0261009L)")]
        public const int ERROR_MONITOR_INVALID_DETAILED_TIMING_BLOCK = unchecked((int)(0xC0261009));

        [NativeTypeName("#define ERROR_MONITOR_INVALID_MANUFACTURE_DATE _HRESULT_TYPEDEF_(0xC026100AL)")]
        public const int ERROR_MONITOR_INVALID_MANUFACTURE_DATE = unchecked((int)(0xC026100A));

        [NativeTypeName("#define ERROR_GRAPHICS_NOT_EXCLUSIVE_MODE_OWNER _HRESULT_TYPEDEF_(0xC0262000L)")]
        public const int ERROR_GRAPHICS_NOT_EXCLUSIVE_MODE_OWNER = unchecked((int)(0xC0262000));

        [NativeTypeName("#define ERROR_GRAPHICS_INSUFFICIENT_DMA_BUFFER _HRESULT_TYPEDEF_(0xC0262001L)")]
        public const int ERROR_GRAPHICS_INSUFFICIENT_DMA_BUFFER = unchecked((int)(0xC0262001));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_DISPLAY_ADAPTER _HRESULT_TYPEDEF_(0xC0262002L)")]
        public const int ERROR_GRAPHICS_INVALID_DISPLAY_ADAPTER = unchecked((int)(0xC0262002));

        [NativeTypeName("#define ERROR_GRAPHICS_ADAPTER_WAS_RESET _HRESULT_TYPEDEF_(0xC0262003L)")]
        public const int ERROR_GRAPHICS_ADAPTER_WAS_RESET = unchecked((int)(0xC0262003));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_DRIVER_MODEL _HRESULT_TYPEDEF_(0xC0262004L)")]
        public const int ERROR_GRAPHICS_INVALID_DRIVER_MODEL = unchecked((int)(0xC0262004));

        [NativeTypeName("#define ERROR_GRAPHICS_PRESENT_MODE_CHANGED _HRESULT_TYPEDEF_(0xC0262005L)")]
        public const int ERROR_GRAPHICS_PRESENT_MODE_CHANGED = unchecked((int)(0xC0262005));

        [NativeTypeName("#define ERROR_GRAPHICS_PRESENT_OCCLUDED _HRESULT_TYPEDEF_(0xC0262006L)")]
        public const int ERROR_GRAPHICS_PRESENT_OCCLUDED = unchecked((int)(0xC0262006));

        [NativeTypeName("#define ERROR_GRAPHICS_PRESENT_DENIED _HRESULT_TYPEDEF_(0xC0262007L)")]
        public const int ERROR_GRAPHICS_PRESENT_DENIED = unchecked((int)(0xC0262007));

        [NativeTypeName("#define ERROR_GRAPHICS_CANNOTCOLORCONVERT _HRESULT_TYPEDEF_(0xC0262008L)")]
        public const int ERROR_GRAPHICS_CANNOTCOLORCONVERT = unchecked((int)(0xC0262008));

        [NativeTypeName("#define ERROR_GRAPHICS_DRIVER_MISMATCH _HRESULT_TYPEDEF_(0xC0262009L)")]
        public const int ERROR_GRAPHICS_DRIVER_MISMATCH = unchecked((int)(0xC0262009));

        [NativeTypeName("#define ERROR_GRAPHICS_PARTIAL_DATA_POPULATED _HRESULT_TYPEDEF_(0x4026200AL)")]
        public const int ERROR_GRAPHICS_PARTIAL_DATA_POPULATED = ((int)(0x4026200A));

        [NativeTypeName("#define ERROR_GRAPHICS_PRESENT_REDIRECTION_DISABLED _HRESULT_TYPEDEF_(0xC026200BL)")]
        public const int ERROR_GRAPHICS_PRESENT_REDIRECTION_DISABLED = unchecked((int)(0xC026200B));

        [NativeTypeName("#define ERROR_GRAPHICS_PRESENT_UNOCCLUDED _HRESULT_TYPEDEF_(0xC026200CL)")]
        public const int ERROR_GRAPHICS_PRESENT_UNOCCLUDED = unchecked((int)(0xC026200C));

        [NativeTypeName("#define ERROR_GRAPHICS_WINDOWDC_NOT_AVAILABLE _HRESULT_TYPEDEF_(0xC026200DL)")]
        public const int ERROR_GRAPHICS_WINDOWDC_NOT_AVAILABLE = unchecked((int)(0xC026200D));

        [NativeTypeName("#define ERROR_GRAPHICS_WINDOWLESS_PRESENT_DISABLED _HRESULT_TYPEDEF_(0xC026200EL)")]
        public const int ERROR_GRAPHICS_WINDOWLESS_PRESENT_DISABLED = unchecked((int)(0xC026200E));

        [NativeTypeName("#define ERROR_GRAPHICS_PRESENT_INVALID_WINDOW _HRESULT_TYPEDEF_(0xC026200FL)")]
        public const int ERROR_GRAPHICS_PRESENT_INVALID_WINDOW = unchecked((int)(0xC026200F));

        [NativeTypeName("#define ERROR_GRAPHICS_PRESENT_BUFFER_NOT_BOUND _HRESULT_TYPEDEF_(0xC0262010L)")]
        public const int ERROR_GRAPHICS_PRESENT_BUFFER_NOT_BOUND = unchecked((int)(0xC0262010));

        [NativeTypeName("#define ERROR_GRAPHICS_VAIL_STATE_CHANGED _HRESULT_TYPEDEF_(0xC0262011L)")]
        public const int ERROR_GRAPHICS_VAIL_STATE_CHANGED = unchecked((int)(0xC0262011));

        [NativeTypeName("#define ERROR_GRAPHICS_INDIRECT_DISPLAY_ABANDON_SWAPCHAIN _HRESULT_TYPEDEF_(0xC0262012L)")]
        public const int ERROR_GRAPHICS_INDIRECT_DISPLAY_ABANDON_SWAPCHAIN = unchecked((int)(0xC0262012));

        [NativeTypeName("#define ERROR_GRAPHICS_INDIRECT_DISPLAY_DEVICE_STOPPED _HRESULT_TYPEDEF_(0xC0262013L)")]
        public const int ERROR_GRAPHICS_INDIRECT_DISPLAY_DEVICE_STOPPED = unchecked((int)(0xC0262013));

        [NativeTypeName("#define ERROR_GRAPHICS_VAIL_FAILED_TO_SEND_CREATE_SUPERWETINK_MESSAGE _HRESULT_TYPEDEF_(0xC0262014L)")]
        public const int ERROR_GRAPHICS_VAIL_FAILED_TO_SEND_CREATE_SUPERWETINK_MESSAGE = unchecked((int)(0xC0262014));

        [NativeTypeName("#define ERROR_GRAPHICS_VAIL_FAILED_TO_SEND_DESTROY_SUPERWETINK_MESSAGE _HRESULT_TYPEDEF_(0xC0262015L)")]
        public const int ERROR_GRAPHICS_VAIL_FAILED_TO_SEND_DESTROY_SUPERWETINK_MESSAGE = unchecked((int)(0xC0262015));

        [NativeTypeName("#define ERROR_GRAPHICS_NO_VIDEO_MEMORY _HRESULT_TYPEDEF_(0xC0262100L)")]
        public const int ERROR_GRAPHICS_NO_VIDEO_MEMORY = unchecked((int)(0xC0262100));

        [NativeTypeName("#define ERROR_GRAPHICS_CANT_LOCK_MEMORY _HRESULT_TYPEDEF_(0xC0262101L)")]
        public const int ERROR_GRAPHICS_CANT_LOCK_MEMORY = unchecked((int)(0xC0262101));

        [NativeTypeName("#define ERROR_GRAPHICS_ALLOCATION_BUSY _HRESULT_TYPEDEF_(0xC0262102L)")]
        public const int ERROR_GRAPHICS_ALLOCATION_BUSY = unchecked((int)(0xC0262102));

        [NativeTypeName("#define ERROR_GRAPHICS_TOO_MANY_REFERENCES _HRESULT_TYPEDEF_(0xC0262103L)")]
        public const int ERROR_GRAPHICS_TOO_MANY_REFERENCES = unchecked((int)(0xC0262103));

        [NativeTypeName("#define ERROR_GRAPHICS_TRY_AGAIN_LATER _HRESULT_TYPEDEF_(0xC0262104L)")]
        public const int ERROR_GRAPHICS_TRY_AGAIN_LATER = unchecked((int)(0xC0262104));

        [NativeTypeName("#define ERROR_GRAPHICS_TRY_AGAIN_NOW _HRESULT_TYPEDEF_(0xC0262105L)")]
        public const int ERROR_GRAPHICS_TRY_AGAIN_NOW = unchecked((int)(0xC0262105));

        [NativeTypeName("#define ERROR_GRAPHICS_ALLOCATION_INVALID _HRESULT_TYPEDEF_(0xC0262106L)")]
        public const int ERROR_GRAPHICS_ALLOCATION_INVALID = unchecked((int)(0xC0262106));

        [NativeTypeName("#define ERROR_GRAPHICS_UNSWIZZLING_APERTURE_UNAVAILABLE _HRESULT_TYPEDEF_(0xC0262107L)")]
        public const int ERROR_GRAPHICS_UNSWIZZLING_APERTURE_UNAVAILABLE = unchecked((int)(0xC0262107));

        [NativeTypeName("#define ERROR_GRAPHICS_UNSWIZZLING_APERTURE_UNSUPPORTED _HRESULT_TYPEDEF_(0xC0262108L)")]
        public const int ERROR_GRAPHICS_UNSWIZZLING_APERTURE_UNSUPPORTED = unchecked((int)(0xC0262108));

        [NativeTypeName("#define ERROR_GRAPHICS_CANT_EVICT_PINNED_ALLOCATION _HRESULT_TYPEDEF_(0xC0262109L)")]
        public const int ERROR_GRAPHICS_CANT_EVICT_PINNED_ALLOCATION = unchecked((int)(0xC0262109));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_ALLOCATION_USAGE _HRESULT_TYPEDEF_(0xC0262110L)")]
        public const int ERROR_GRAPHICS_INVALID_ALLOCATION_USAGE = unchecked((int)(0xC0262110));

        [NativeTypeName("#define ERROR_GRAPHICS_CANT_RENDER_LOCKED_ALLOCATION _HRESULT_TYPEDEF_(0xC0262111L)")]
        public const int ERROR_GRAPHICS_CANT_RENDER_LOCKED_ALLOCATION = unchecked((int)(0xC0262111));

        [NativeTypeName("#define ERROR_GRAPHICS_ALLOCATION_CLOSED _HRESULT_TYPEDEF_(0xC0262112L)")]
        public const int ERROR_GRAPHICS_ALLOCATION_CLOSED = unchecked((int)(0xC0262112));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_ALLOCATION_INSTANCE _HRESULT_TYPEDEF_(0xC0262113L)")]
        public const int ERROR_GRAPHICS_INVALID_ALLOCATION_INSTANCE = unchecked((int)(0xC0262113));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_ALLOCATION_HANDLE _HRESULT_TYPEDEF_(0xC0262114L)")]
        public const int ERROR_GRAPHICS_INVALID_ALLOCATION_HANDLE = unchecked((int)(0xC0262114));

        [NativeTypeName("#define ERROR_GRAPHICS_WRONG_ALLOCATION_DEVICE _HRESULT_TYPEDEF_(0xC0262115L)")]
        public const int ERROR_GRAPHICS_WRONG_ALLOCATION_DEVICE = unchecked((int)(0xC0262115));

        [NativeTypeName("#define ERROR_GRAPHICS_ALLOCATION_CONTENT_LOST _HRESULT_TYPEDEF_(0xC0262116L)")]
        public const int ERROR_GRAPHICS_ALLOCATION_CONTENT_LOST = unchecked((int)(0xC0262116));

        [NativeTypeName("#define ERROR_GRAPHICS_GPU_EXCEPTION_ON_DEVICE _HRESULT_TYPEDEF_(0xC0262200L)")]
        public const int ERROR_GRAPHICS_GPU_EXCEPTION_ON_DEVICE = unchecked((int)(0xC0262200));

        [NativeTypeName("#define ERROR_GRAPHICS_SKIP_ALLOCATION_PREPARATION _HRESULT_TYPEDEF_(0x40262201L)")]
        public const int ERROR_GRAPHICS_SKIP_ALLOCATION_PREPARATION = ((int)(0x40262201));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_VIDPN_TOPOLOGY _HRESULT_TYPEDEF_(0xC0262300L)")]
        public const int ERROR_GRAPHICS_INVALID_VIDPN_TOPOLOGY = unchecked((int)(0xC0262300));

        [NativeTypeName("#define ERROR_GRAPHICS_VIDPN_TOPOLOGY_NOT_SUPPORTED _HRESULT_TYPEDEF_(0xC0262301L)")]
        public const int ERROR_GRAPHICS_VIDPN_TOPOLOGY_NOT_SUPPORTED = unchecked((int)(0xC0262301));

        [NativeTypeName("#define ERROR_GRAPHICS_VIDPN_TOPOLOGY_CURRENTLY_NOT_SUPPORTED _HRESULT_TYPEDEF_(0xC0262302L)")]
        public const int ERROR_GRAPHICS_VIDPN_TOPOLOGY_CURRENTLY_NOT_SUPPORTED = unchecked((int)(0xC0262302));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_VIDPN _HRESULT_TYPEDEF_(0xC0262303L)")]
        public const int ERROR_GRAPHICS_INVALID_VIDPN = unchecked((int)(0xC0262303));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE _HRESULT_TYPEDEF_(0xC0262304L)")]
        public const int ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE = unchecked((int)(0xC0262304));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET _HRESULT_TYPEDEF_(0xC0262305L)")]
        public const int ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET = unchecked((int)(0xC0262305));

        [NativeTypeName("#define ERROR_GRAPHICS_VIDPN_MODALITY_NOT_SUPPORTED _HRESULT_TYPEDEF_(0xC0262306L)")]
        public const int ERROR_GRAPHICS_VIDPN_MODALITY_NOT_SUPPORTED = unchecked((int)(0xC0262306));

        [NativeTypeName("#define ERROR_GRAPHICS_MODE_NOT_PINNED _HRESULT_TYPEDEF_(0x00262307L)")]
        public const int ERROR_GRAPHICS_MODE_NOT_PINNED = ((int)(0x00262307));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_VIDPN_SOURCEMODESET _HRESULT_TYPEDEF_(0xC0262308L)")]
        public const int ERROR_GRAPHICS_INVALID_VIDPN_SOURCEMODESET = unchecked((int)(0xC0262308));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_VIDPN_TARGETMODESET _HRESULT_TYPEDEF_(0xC0262309L)")]
        public const int ERROR_GRAPHICS_INVALID_VIDPN_TARGETMODESET = unchecked((int)(0xC0262309));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_FREQUENCY _HRESULT_TYPEDEF_(0xC026230AL)")]
        public const int ERROR_GRAPHICS_INVALID_FREQUENCY = unchecked((int)(0xC026230A));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_ACTIVE_REGION _HRESULT_TYPEDEF_(0xC026230BL)")]
        public const int ERROR_GRAPHICS_INVALID_ACTIVE_REGION = unchecked((int)(0xC026230B));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_TOTAL_REGION _HRESULT_TYPEDEF_(0xC026230CL)")]
        public const int ERROR_GRAPHICS_INVALID_TOTAL_REGION = unchecked((int)(0xC026230C));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE_MODE _HRESULT_TYPEDEF_(0xC0262310L)")]
        public const int ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE_MODE = unchecked((int)(0xC0262310));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET_MODE _HRESULT_TYPEDEF_(0xC0262311L)")]
        public const int ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET_MODE = unchecked((int)(0xC0262311));

        [NativeTypeName("#define ERROR_GRAPHICS_PINNED_MODE_MUST_REMAIN_IN_SET _HRESULT_TYPEDEF_(0xC0262312L)")]
        public const int ERROR_GRAPHICS_PINNED_MODE_MUST_REMAIN_IN_SET = unchecked((int)(0xC0262312));

        [NativeTypeName("#define ERROR_GRAPHICS_PATH_ALREADY_IN_TOPOLOGY _HRESULT_TYPEDEF_(0xC0262313L)")]
        public const int ERROR_GRAPHICS_PATH_ALREADY_IN_TOPOLOGY = unchecked((int)(0xC0262313));

        [NativeTypeName("#define ERROR_GRAPHICS_MODE_ALREADY_IN_MODESET _HRESULT_TYPEDEF_(0xC0262314L)")]
        public const int ERROR_GRAPHICS_MODE_ALREADY_IN_MODESET = unchecked((int)(0xC0262314));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_VIDEOPRESENTSOURCESET _HRESULT_TYPEDEF_(0xC0262315L)")]
        public const int ERROR_GRAPHICS_INVALID_VIDEOPRESENTSOURCESET = unchecked((int)(0xC0262315));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_VIDEOPRESENTTARGETSET _HRESULT_TYPEDEF_(0xC0262316L)")]
        public const int ERROR_GRAPHICS_INVALID_VIDEOPRESENTTARGETSET = unchecked((int)(0xC0262316));

        [NativeTypeName("#define ERROR_GRAPHICS_SOURCE_ALREADY_IN_SET _HRESULT_TYPEDEF_(0xC0262317L)")]
        public const int ERROR_GRAPHICS_SOURCE_ALREADY_IN_SET = unchecked((int)(0xC0262317));

        [NativeTypeName("#define ERROR_GRAPHICS_TARGET_ALREADY_IN_SET _HRESULT_TYPEDEF_(0xC0262318L)")]
        public const int ERROR_GRAPHICS_TARGET_ALREADY_IN_SET = unchecked((int)(0xC0262318));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_VIDPN_PRESENT_PATH _HRESULT_TYPEDEF_(0xC0262319L)")]
        public const int ERROR_GRAPHICS_INVALID_VIDPN_PRESENT_PATH = unchecked((int)(0xC0262319));

        [NativeTypeName("#define ERROR_GRAPHICS_NO_RECOMMENDED_VIDPN_TOPOLOGY _HRESULT_TYPEDEF_(0xC026231AL)")]
        public const int ERROR_GRAPHICS_NO_RECOMMENDED_VIDPN_TOPOLOGY = unchecked((int)(0xC026231A));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGESET _HRESULT_TYPEDEF_(0xC026231BL)")]
        public const int ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGESET = unchecked((int)(0xC026231B));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE _HRESULT_TYPEDEF_(0xC026231CL)")]
        public const int ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE = unchecked((int)(0xC026231C));

        [NativeTypeName("#define ERROR_GRAPHICS_FREQUENCYRANGE_NOT_IN_SET _HRESULT_TYPEDEF_(0xC026231DL)")]
        public const int ERROR_GRAPHICS_FREQUENCYRANGE_NOT_IN_SET = unchecked((int)(0xC026231D));

        [NativeTypeName("#define ERROR_GRAPHICS_NO_PREFERRED_MODE _HRESULT_TYPEDEF_(0x0026231EL)")]
        public const int ERROR_GRAPHICS_NO_PREFERRED_MODE = ((int)(0x0026231E));

        [NativeTypeName("#define ERROR_GRAPHICS_FREQUENCYRANGE_ALREADY_IN_SET _HRESULT_TYPEDEF_(0xC026231FL)")]
        public const int ERROR_GRAPHICS_FREQUENCYRANGE_ALREADY_IN_SET = unchecked((int)(0xC026231F));

        [NativeTypeName("#define ERROR_GRAPHICS_STALE_MODESET _HRESULT_TYPEDEF_(0xC0262320L)")]
        public const int ERROR_GRAPHICS_STALE_MODESET = unchecked((int)(0xC0262320));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_MONITOR_SOURCEMODESET _HRESULT_TYPEDEF_(0xC0262321L)")]
        public const int ERROR_GRAPHICS_INVALID_MONITOR_SOURCEMODESET = unchecked((int)(0xC0262321));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_MONITOR_SOURCE_MODE _HRESULT_TYPEDEF_(0xC0262322L)")]
        public const int ERROR_GRAPHICS_INVALID_MONITOR_SOURCE_MODE = unchecked((int)(0xC0262322));

        [NativeTypeName("#define ERROR_GRAPHICS_NO_RECOMMENDED_FUNCTIONAL_VIDPN _HRESULT_TYPEDEF_(0xC0262323L)")]
        public const int ERROR_GRAPHICS_NO_RECOMMENDED_FUNCTIONAL_VIDPN = unchecked((int)(0xC0262323));

        [NativeTypeName("#define ERROR_GRAPHICS_MODE_ID_MUST_BE_UNIQUE _HRESULT_TYPEDEF_(0xC0262324L)")]
        public const int ERROR_GRAPHICS_MODE_ID_MUST_BE_UNIQUE = unchecked((int)(0xC0262324));

        [NativeTypeName("#define ERROR_GRAPHICS_EMPTY_ADAPTER_MONITOR_MODE_SUPPORT_INTERSECTION _HRESULT_TYPEDEF_(0xC0262325L)")]
        public const int ERROR_GRAPHICS_EMPTY_ADAPTER_MONITOR_MODE_SUPPORT_INTERSECTION = unchecked((int)(0xC0262325));

        [NativeTypeName("#define ERROR_GRAPHICS_VIDEO_PRESENT_TARGETS_LESS_THAN_SOURCES _HRESULT_TYPEDEF_(0xC0262326L)")]
        public const int ERROR_GRAPHICS_VIDEO_PRESENT_TARGETS_LESS_THAN_SOURCES = unchecked((int)(0xC0262326));

        [NativeTypeName("#define ERROR_GRAPHICS_PATH_NOT_IN_TOPOLOGY _HRESULT_TYPEDEF_(0xC0262327L)")]
        public const int ERROR_GRAPHICS_PATH_NOT_IN_TOPOLOGY = unchecked((int)(0xC0262327));

        [NativeTypeName("#define ERROR_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_SOURCE _HRESULT_TYPEDEF_(0xC0262328L)")]
        public const int ERROR_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_SOURCE = unchecked((int)(0xC0262328));

        [NativeTypeName("#define ERROR_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_TARGET _HRESULT_TYPEDEF_(0xC0262329L)")]
        public const int ERROR_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_TARGET = unchecked((int)(0xC0262329));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_MONITORDESCRIPTORSET _HRESULT_TYPEDEF_(0xC026232AL)")]
        public const int ERROR_GRAPHICS_INVALID_MONITORDESCRIPTORSET = unchecked((int)(0xC026232A));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_MONITORDESCRIPTOR _HRESULT_TYPEDEF_(0xC026232BL)")]
        public const int ERROR_GRAPHICS_INVALID_MONITORDESCRIPTOR = unchecked((int)(0xC026232B));

        [NativeTypeName("#define ERROR_GRAPHICS_MONITORDESCRIPTOR_NOT_IN_SET _HRESULT_TYPEDEF_(0xC026232CL)")]
        public const int ERROR_GRAPHICS_MONITORDESCRIPTOR_NOT_IN_SET = unchecked((int)(0xC026232C));

        [NativeTypeName("#define ERROR_GRAPHICS_MONITORDESCRIPTOR_ALREADY_IN_SET _HRESULT_TYPEDEF_(0xC026232DL)")]
        public const int ERROR_GRAPHICS_MONITORDESCRIPTOR_ALREADY_IN_SET = unchecked((int)(0xC026232D));

        [NativeTypeName("#define ERROR_GRAPHICS_MONITORDESCRIPTOR_ID_MUST_BE_UNIQUE _HRESULT_TYPEDEF_(0xC026232EL)")]
        public const int ERROR_GRAPHICS_MONITORDESCRIPTOR_ID_MUST_BE_UNIQUE = unchecked((int)(0xC026232E));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_VIDPN_TARGET_SUBSET_TYPE _HRESULT_TYPEDEF_(0xC026232FL)")]
        public const int ERROR_GRAPHICS_INVALID_VIDPN_TARGET_SUBSET_TYPE = unchecked((int)(0xC026232F));

        [NativeTypeName("#define ERROR_GRAPHICS_RESOURCES_NOT_RELATED _HRESULT_TYPEDEF_(0xC0262330L)")]
        public const int ERROR_GRAPHICS_RESOURCES_NOT_RELATED = unchecked((int)(0xC0262330));

        [NativeTypeName("#define ERROR_GRAPHICS_SOURCE_ID_MUST_BE_UNIQUE _HRESULT_TYPEDEF_(0xC0262331L)")]
        public const int ERROR_GRAPHICS_SOURCE_ID_MUST_BE_UNIQUE = unchecked((int)(0xC0262331));

        [NativeTypeName("#define ERROR_GRAPHICS_TARGET_ID_MUST_BE_UNIQUE _HRESULT_TYPEDEF_(0xC0262332L)")]
        public const int ERROR_GRAPHICS_TARGET_ID_MUST_BE_UNIQUE = unchecked((int)(0xC0262332));

        [NativeTypeName("#define ERROR_GRAPHICS_NO_AVAILABLE_VIDPN_TARGET _HRESULT_TYPEDEF_(0xC0262333L)")]
        public const int ERROR_GRAPHICS_NO_AVAILABLE_VIDPN_TARGET = unchecked((int)(0xC0262333));

        [NativeTypeName("#define ERROR_GRAPHICS_MONITOR_COULD_NOT_BE_ASSOCIATED_WITH_ADAPTER _HRESULT_TYPEDEF_(0xC0262334L)")]
        public const int ERROR_GRAPHICS_MONITOR_COULD_NOT_BE_ASSOCIATED_WITH_ADAPTER = unchecked((int)(0xC0262334));

        [NativeTypeName("#define ERROR_GRAPHICS_NO_VIDPNMGR _HRESULT_TYPEDEF_(0xC0262335L)")]
        public const int ERROR_GRAPHICS_NO_VIDPNMGR = unchecked((int)(0xC0262335));

        [NativeTypeName("#define ERROR_GRAPHICS_NO_ACTIVE_VIDPN _HRESULT_TYPEDEF_(0xC0262336L)")]
        public const int ERROR_GRAPHICS_NO_ACTIVE_VIDPN = unchecked((int)(0xC0262336));

        [NativeTypeName("#define ERROR_GRAPHICS_STALE_VIDPN_TOPOLOGY _HRESULT_TYPEDEF_(0xC0262337L)")]
        public const int ERROR_GRAPHICS_STALE_VIDPN_TOPOLOGY = unchecked((int)(0xC0262337));

        [NativeTypeName("#define ERROR_GRAPHICS_MONITOR_NOT_CONNECTED _HRESULT_TYPEDEF_(0xC0262338L)")]
        public const int ERROR_GRAPHICS_MONITOR_NOT_CONNECTED = unchecked((int)(0xC0262338));

        [NativeTypeName("#define ERROR_GRAPHICS_SOURCE_NOT_IN_TOPOLOGY _HRESULT_TYPEDEF_(0xC0262339L)")]
        public const int ERROR_GRAPHICS_SOURCE_NOT_IN_TOPOLOGY = unchecked((int)(0xC0262339));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_PRIMARYSURFACE_SIZE _HRESULT_TYPEDEF_(0xC026233AL)")]
        public const int ERROR_GRAPHICS_INVALID_PRIMARYSURFACE_SIZE = unchecked((int)(0xC026233A));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_VISIBLEREGION_SIZE _HRESULT_TYPEDEF_(0xC026233BL)")]
        public const int ERROR_GRAPHICS_INVALID_VISIBLEREGION_SIZE = unchecked((int)(0xC026233B));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_STRIDE _HRESULT_TYPEDEF_(0xC026233CL)")]
        public const int ERROR_GRAPHICS_INVALID_STRIDE = unchecked((int)(0xC026233C));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_PIXELFORMAT _HRESULT_TYPEDEF_(0xC026233DL)")]
        public const int ERROR_GRAPHICS_INVALID_PIXELFORMAT = unchecked((int)(0xC026233D));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_COLORBASIS _HRESULT_TYPEDEF_(0xC026233EL)")]
        public const int ERROR_GRAPHICS_INVALID_COLORBASIS = unchecked((int)(0xC026233E));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_PIXELVALUEACCESSMODE _HRESULT_TYPEDEF_(0xC026233FL)")]
        public const int ERROR_GRAPHICS_INVALID_PIXELVALUEACCESSMODE = unchecked((int)(0xC026233F));

        [NativeTypeName("#define ERROR_GRAPHICS_TARGET_NOT_IN_TOPOLOGY _HRESULT_TYPEDEF_(0xC0262340L)")]
        public const int ERROR_GRAPHICS_TARGET_NOT_IN_TOPOLOGY = unchecked((int)(0xC0262340));

        [NativeTypeName("#define ERROR_GRAPHICS_NO_DISPLAY_MODE_MANAGEMENT_SUPPORT _HRESULT_TYPEDEF_(0xC0262341L)")]
        public const int ERROR_GRAPHICS_NO_DISPLAY_MODE_MANAGEMENT_SUPPORT = unchecked((int)(0xC0262341));

        [NativeTypeName("#define ERROR_GRAPHICS_VIDPN_SOURCE_IN_USE _HRESULT_TYPEDEF_(0xC0262342L)")]
        public const int ERROR_GRAPHICS_VIDPN_SOURCE_IN_USE = unchecked((int)(0xC0262342));

        [NativeTypeName("#define ERROR_GRAPHICS_CANT_ACCESS_ACTIVE_VIDPN _HRESULT_TYPEDEF_(0xC0262343L)")]
        public const int ERROR_GRAPHICS_CANT_ACCESS_ACTIVE_VIDPN = unchecked((int)(0xC0262343));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_PATH_IMPORTANCE_ORDINAL _HRESULT_TYPEDEF_(0xC0262344L)")]
        public const int ERROR_GRAPHICS_INVALID_PATH_IMPORTANCE_ORDINAL = unchecked((int)(0xC0262344));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_PATH_CONTENT_GEOMETRY_TRANSFORMATION _HRESULT_TYPEDEF_(0xC0262345L)")]
        public const int ERROR_GRAPHICS_INVALID_PATH_CONTENT_GEOMETRY_TRANSFORMATION = unchecked((int)(0xC0262345));

        [NativeTypeName("#define ERROR_GRAPHICS_PATH_CONTENT_GEOMETRY_TRANSFORMATION_NOT_SUPPORTED _HRESULT_TYPEDEF_(0xC0262346L)")]
        public const int ERROR_GRAPHICS_PATH_CONTENT_GEOMETRY_TRANSFORMATION_NOT_SUPPORTED = unchecked((int)(0xC0262346));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_GAMMA_RAMP _HRESULT_TYPEDEF_(0xC0262347L)")]
        public const int ERROR_GRAPHICS_INVALID_GAMMA_RAMP = unchecked((int)(0xC0262347));

        [NativeTypeName("#define ERROR_GRAPHICS_GAMMA_RAMP_NOT_SUPPORTED _HRESULT_TYPEDEF_(0xC0262348L)")]
        public const int ERROR_GRAPHICS_GAMMA_RAMP_NOT_SUPPORTED = unchecked((int)(0xC0262348));

        [NativeTypeName("#define ERROR_GRAPHICS_MULTISAMPLING_NOT_SUPPORTED _HRESULT_TYPEDEF_(0xC0262349L)")]
        public const int ERROR_GRAPHICS_MULTISAMPLING_NOT_SUPPORTED = unchecked((int)(0xC0262349));

        [NativeTypeName("#define ERROR_GRAPHICS_MODE_NOT_IN_MODESET _HRESULT_TYPEDEF_(0xC026234AL)")]
        public const int ERROR_GRAPHICS_MODE_NOT_IN_MODESET = unchecked((int)(0xC026234A));

        [NativeTypeName("#define ERROR_GRAPHICS_DATASET_IS_EMPTY _HRESULT_TYPEDEF_(0x0026234BL)")]
        public const int ERROR_GRAPHICS_DATASET_IS_EMPTY = ((int)(0x0026234B));

        [NativeTypeName("#define ERROR_GRAPHICS_NO_MORE_ELEMENTS_IN_DATASET _HRESULT_TYPEDEF_(0x0026234CL)")]
        public const int ERROR_GRAPHICS_NO_MORE_ELEMENTS_IN_DATASET = ((int)(0x0026234C));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_VIDPN_TOPOLOGY_RECOMMENDATION_REASON _HRESULT_TYPEDEF_(0xC026234DL)")]
        public const int ERROR_GRAPHICS_INVALID_VIDPN_TOPOLOGY_RECOMMENDATION_REASON = unchecked((int)(0xC026234D));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_PATH_CONTENT_TYPE _HRESULT_TYPEDEF_(0xC026234EL)")]
        public const int ERROR_GRAPHICS_INVALID_PATH_CONTENT_TYPE = unchecked((int)(0xC026234E));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_COPYPROTECTION_TYPE _HRESULT_TYPEDEF_(0xC026234FL)")]
        public const int ERROR_GRAPHICS_INVALID_COPYPROTECTION_TYPE = unchecked((int)(0xC026234F));

        [NativeTypeName("#define ERROR_GRAPHICS_UNASSIGNED_MODESET_ALREADY_EXISTS _HRESULT_TYPEDEF_(0xC0262350L)")]
        public const int ERROR_GRAPHICS_UNASSIGNED_MODESET_ALREADY_EXISTS = unchecked((int)(0xC0262350));

        [NativeTypeName("#define ERROR_GRAPHICS_PATH_CONTENT_GEOMETRY_TRANSFORMATION_NOT_PINNED _HRESULT_TYPEDEF_(0x00262351L)")]
        public const int ERROR_GRAPHICS_PATH_CONTENT_GEOMETRY_TRANSFORMATION_NOT_PINNED = ((int)(0x00262351));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_SCANLINE_ORDERING _HRESULT_TYPEDEF_(0xC0262352L)")]
        public const int ERROR_GRAPHICS_INVALID_SCANLINE_ORDERING = unchecked((int)(0xC0262352));

        [NativeTypeName("#define ERROR_GRAPHICS_TOPOLOGY_CHANGES_NOT_ALLOWED _HRESULT_TYPEDEF_(0xC0262353L)")]
        public const int ERROR_GRAPHICS_TOPOLOGY_CHANGES_NOT_ALLOWED = unchecked((int)(0xC0262353));

        [NativeTypeName("#define ERROR_GRAPHICS_NO_AVAILABLE_IMPORTANCE_ORDINALS _HRESULT_TYPEDEF_(0xC0262354L)")]
        public const int ERROR_GRAPHICS_NO_AVAILABLE_IMPORTANCE_ORDINALS = unchecked((int)(0xC0262354));

        [NativeTypeName("#define ERROR_GRAPHICS_INCOMPATIBLE_PRIVATE_FORMAT _HRESULT_TYPEDEF_(0xC0262355L)")]
        public const int ERROR_GRAPHICS_INCOMPATIBLE_PRIVATE_FORMAT = unchecked((int)(0xC0262355));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_MODE_PRUNING_ALGORITHM _HRESULT_TYPEDEF_(0xC0262356L)")]
        public const int ERROR_GRAPHICS_INVALID_MODE_PRUNING_ALGORITHM = unchecked((int)(0xC0262356));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_MONITOR_CAPABILITY_ORIGIN _HRESULT_TYPEDEF_(0xC0262357L)")]
        public const int ERROR_GRAPHICS_INVALID_MONITOR_CAPABILITY_ORIGIN = unchecked((int)(0xC0262357));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE_CONSTRAINT _HRESULT_TYPEDEF_(0xC0262358L)")]
        public const int ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE_CONSTRAINT = unchecked((int)(0xC0262358));

        [NativeTypeName("#define ERROR_GRAPHICS_MAX_NUM_PATHS_REACHED _HRESULT_TYPEDEF_(0xC0262359L)")]
        public const int ERROR_GRAPHICS_MAX_NUM_PATHS_REACHED = unchecked((int)(0xC0262359));

        [NativeTypeName("#define ERROR_GRAPHICS_CANCEL_VIDPN_TOPOLOGY_AUGMENTATION _HRESULT_TYPEDEF_(0xC026235AL)")]
        public const int ERROR_GRAPHICS_CANCEL_VIDPN_TOPOLOGY_AUGMENTATION = unchecked((int)(0xC026235A));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_CLIENT_TYPE _HRESULT_TYPEDEF_(0xC026235BL)")]
        public const int ERROR_GRAPHICS_INVALID_CLIENT_TYPE = unchecked((int)(0xC026235B));

        [NativeTypeName("#define ERROR_GRAPHICS_CLIENTVIDPN_NOT_SET _HRESULT_TYPEDEF_(0xC026235CL)")]
        public const int ERROR_GRAPHICS_CLIENTVIDPN_NOT_SET = unchecked((int)(0xC026235C));

        [NativeTypeName("#define ERROR_GRAPHICS_SPECIFIED_CHILD_ALREADY_CONNECTED _HRESULT_TYPEDEF_(0xC0262400L)")]
        public const int ERROR_GRAPHICS_SPECIFIED_CHILD_ALREADY_CONNECTED = unchecked((int)(0xC0262400));

        [NativeTypeName("#define ERROR_GRAPHICS_CHILD_DESCRIPTOR_NOT_SUPPORTED _HRESULT_TYPEDEF_(0xC0262401L)")]
        public const int ERROR_GRAPHICS_CHILD_DESCRIPTOR_NOT_SUPPORTED = unchecked((int)(0xC0262401));

        [NativeTypeName("#define ERROR_GRAPHICS_UNKNOWN_CHILD_STATUS _HRESULT_TYPEDEF_(0x4026242FL)")]
        public const int ERROR_GRAPHICS_UNKNOWN_CHILD_STATUS = ((int)(0x4026242F));

        [NativeTypeName("#define ERROR_GRAPHICS_NOT_A_LINKED_ADAPTER _HRESULT_TYPEDEF_(0xC0262430L)")]
        public const int ERROR_GRAPHICS_NOT_A_LINKED_ADAPTER = unchecked((int)(0xC0262430));

        [NativeTypeName("#define ERROR_GRAPHICS_LEADLINK_NOT_ENUMERATED _HRESULT_TYPEDEF_(0xC0262431L)")]
        public const int ERROR_GRAPHICS_LEADLINK_NOT_ENUMERATED = unchecked((int)(0xC0262431));

        [NativeTypeName("#define ERROR_GRAPHICS_CHAINLINKS_NOT_ENUMERATED _HRESULT_TYPEDEF_(0xC0262432L)")]
        public const int ERROR_GRAPHICS_CHAINLINKS_NOT_ENUMERATED = unchecked((int)(0xC0262432));

        [NativeTypeName("#define ERROR_GRAPHICS_ADAPTER_CHAIN_NOT_READY _HRESULT_TYPEDEF_(0xC0262433L)")]
        public const int ERROR_GRAPHICS_ADAPTER_CHAIN_NOT_READY = unchecked((int)(0xC0262433));

        [NativeTypeName("#define ERROR_GRAPHICS_CHAINLINKS_NOT_STARTED _HRESULT_TYPEDEF_(0xC0262434L)")]
        public const int ERROR_GRAPHICS_CHAINLINKS_NOT_STARTED = unchecked((int)(0xC0262434));

        [NativeTypeName("#define ERROR_GRAPHICS_CHAINLINKS_NOT_POWERED_ON _HRESULT_TYPEDEF_(0xC0262435L)")]
        public const int ERROR_GRAPHICS_CHAINLINKS_NOT_POWERED_ON = unchecked((int)(0xC0262435));

        [NativeTypeName("#define ERROR_GRAPHICS_INCONSISTENT_DEVICE_LINK_STATE _HRESULT_TYPEDEF_(0xC0262436L)")]
        public const int ERROR_GRAPHICS_INCONSISTENT_DEVICE_LINK_STATE = unchecked((int)(0xC0262436));

        [NativeTypeName("#define ERROR_GRAPHICS_LEADLINK_START_DEFERRED _HRESULT_TYPEDEF_(0x40262437L)")]
        public const int ERROR_GRAPHICS_LEADLINK_START_DEFERRED = ((int)(0x40262437));

        [NativeTypeName("#define ERROR_GRAPHICS_NOT_POST_DEVICE_DRIVER _HRESULT_TYPEDEF_(0xC0262438L)")]
        public const int ERROR_GRAPHICS_NOT_POST_DEVICE_DRIVER = unchecked((int)(0xC0262438));

        [NativeTypeName("#define ERROR_GRAPHICS_POLLING_TOO_FREQUENTLY _HRESULT_TYPEDEF_(0x40262439L)")]
        public const int ERROR_GRAPHICS_POLLING_TOO_FREQUENTLY = ((int)(0x40262439));

        [NativeTypeName("#define ERROR_GRAPHICS_START_DEFERRED _HRESULT_TYPEDEF_(0x4026243AL)")]
        public const int ERROR_GRAPHICS_START_DEFERRED = ((int)(0x4026243A));

        [NativeTypeName("#define ERROR_GRAPHICS_ADAPTER_ACCESS_NOT_EXCLUDED _HRESULT_TYPEDEF_(0xC026243BL)")]
        public const int ERROR_GRAPHICS_ADAPTER_ACCESS_NOT_EXCLUDED = unchecked((int)(0xC026243B));

        [NativeTypeName("#define ERROR_GRAPHICS_DEPENDABLE_CHILD_STATUS _HRESULT_TYPEDEF_(0x4026243CL)")]
        public const int ERROR_GRAPHICS_DEPENDABLE_CHILD_STATUS = ((int)(0x4026243C));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_NOT_SUPPORTED _HRESULT_TYPEDEF_(0xC0262500L)")]
        public const int ERROR_GRAPHICS_OPM_NOT_SUPPORTED = unchecked((int)(0xC0262500));

        [NativeTypeName("#define ERROR_GRAPHICS_COPP_NOT_SUPPORTED _HRESULT_TYPEDEF_(0xC0262501L)")]
        public const int ERROR_GRAPHICS_COPP_NOT_SUPPORTED = unchecked((int)(0xC0262501));

        [NativeTypeName("#define ERROR_GRAPHICS_UAB_NOT_SUPPORTED _HRESULT_TYPEDEF_(0xC0262502L)")]
        public const int ERROR_GRAPHICS_UAB_NOT_SUPPORTED = unchecked((int)(0xC0262502));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_INVALID_ENCRYPTED_PARAMETERS _HRESULT_TYPEDEF_(0xC0262503L)")]
        public const int ERROR_GRAPHICS_OPM_INVALID_ENCRYPTED_PARAMETERS = unchecked((int)(0xC0262503));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_NO_VIDEO_OUTPUTS_EXIST _HRESULT_TYPEDEF_(0xC0262505L)")]
        public const int ERROR_GRAPHICS_OPM_NO_VIDEO_OUTPUTS_EXIST = unchecked((int)(0xC0262505));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_INTERNAL_ERROR _HRESULT_TYPEDEF_(0xC026250BL)")]
        public const int ERROR_GRAPHICS_OPM_INTERNAL_ERROR = unchecked((int)(0xC026250B));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_INVALID_HANDLE _HRESULT_TYPEDEF_(0xC026250CL)")]
        public const int ERROR_GRAPHICS_OPM_INVALID_HANDLE = unchecked((int)(0xC026250C));

        [NativeTypeName("#define ERROR_GRAPHICS_PVP_INVALID_CERTIFICATE_LENGTH _HRESULT_TYPEDEF_(0xC026250EL)")]
        public const int ERROR_GRAPHICS_PVP_INVALID_CERTIFICATE_LENGTH = unchecked((int)(0xC026250E));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_SPANNING_MODE_ENABLED _HRESULT_TYPEDEF_(0xC026250FL)")]
        public const int ERROR_GRAPHICS_OPM_SPANNING_MODE_ENABLED = unchecked((int)(0xC026250F));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_THEATER_MODE_ENABLED _HRESULT_TYPEDEF_(0xC0262510L)")]
        public const int ERROR_GRAPHICS_OPM_THEATER_MODE_ENABLED = unchecked((int)(0xC0262510));

        [NativeTypeName("#define ERROR_GRAPHICS_PVP_HFS_FAILED _HRESULT_TYPEDEF_(0xC0262511L)")]
        public const int ERROR_GRAPHICS_PVP_HFS_FAILED = unchecked((int)(0xC0262511));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_INVALID_SRM _HRESULT_TYPEDEF_(0xC0262512L)")]
        public const int ERROR_GRAPHICS_OPM_INVALID_SRM = unchecked((int)(0xC0262512));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_HDCP _HRESULT_TYPEDEF_(0xC0262513L)")]
        public const int ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_HDCP = unchecked((int)(0xC0262513));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_ACP _HRESULT_TYPEDEF_(0xC0262514L)")]
        public const int ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_ACP = unchecked((int)(0xC0262514));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_CGMSA _HRESULT_TYPEDEF_(0xC0262515L)")]
        public const int ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_CGMSA = unchecked((int)(0xC0262515));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_HDCP_SRM_NEVER_SET _HRESULT_TYPEDEF_(0xC0262516L)")]
        public const int ERROR_GRAPHICS_OPM_HDCP_SRM_NEVER_SET = unchecked((int)(0xC0262516));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_RESOLUTION_TOO_HIGH _HRESULT_TYPEDEF_(0xC0262517L)")]
        public const int ERROR_GRAPHICS_OPM_RESOLUTION_TOO_HIGH = unchecked((int)(0xC0262517));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_ALL_HDCP_HARDWARE_ALREADY_IN_USE _HRESULT_TYPEDEF_(0xC0262518L)")]
        public const int ERROR_GRAPHICS_OPM_ALL_HDCP_HARDWARE_ALREADY_IN_USE = unchecked((int)(0xC0262518));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_NO_LONGER_EXISTS _HRESULT_TYPEDEF_(0xC026251AL)")]
        public const int ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_NO_LONGER_EXISTS = unchecked((int)(0xC026251A));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_SESSION_TYPE_CHANGE_IN_PROGRESS _HRESULT_TYPEDEF_(0xC026251BL)")]
        public const int ERROR_GRAPHICS_OPM_SESSION_TYPE_CHANGE_IN_PROGRESS = unchecked((int)(0xC026251B));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_DOES_NOT_HAVE_COPP_SEMANTICS _HRESULT_TYPEDEF_(0xC026251CL)")]
        public const int ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_DOES_NOT_HAVE_COPP_SEMANTICS = unchecked((int)(0xC026251C));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_INVALID_INFORMATION_REQUEST _HRESULT_TYPEDEF_(0xC026251DL)")]
        public const int ERROR_GRAPHICS_OPM_INVALID_INFORMATION_REQUEST = unchecked((int)(0xC026251D));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_DRIVER_INTERNAL_ERROR _HRESULT_TYPEDEF_(0xC026251EL)")]
        public const int ERROR_GRAPHICS_OPM_DRIVER_INTERNAL_ERROR = unchecked((int)(0xC026251E));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_DOES_NOT_HAVE_OPM_SEMANTICS _HRESULT_TYPEDEF_(0xC026251FL)")]
        public const int ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_DOES_NOT_HAVE_OPM_SEMANTICS = unchecked((int)(0xC026251F));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_SIGNALING_NOT_SUPPORTED _HRESULT_TYPEDEF_(0xC0262520L)")]
        public const int ERROR_GRAPHICS_OPM_SIGNALING_NOT_SUPPORTED = unchecked((int)(0xC0262520));

        [NativeTypeName("#define ERROR_GRAPHICS_OPM_INVALID_CONFIGURATION_REQUEST _HRESULT_TYPEDEF_(0xC0262521L)")]
        public const int ERROR_GRAPHICS_OPM_INVALID_CONFIGURATION_REQUEST = unchecked((int)(0xC0262521));

        [NativeTypeName("#define ERROR_GRAPHICS_I2C_NOT_SUPPORTED _HRESULT_TYPEDEF_(0xC0262580L)")]
        public const int ERROR_GRAPHICS_I2C_NOT_SUPPORTED = unchecked((int)(0xC0262580));

        [NativeTypeName("#define ERROR_GRAPHICS_I2C_DEVICE_DOES_NOT_EXIST _HRESULT_TYPEDEF_(0xC0262581L)")]
        public const int ERROR_GRAPHICS_I2C_DEVICE_DOES_NOT_EXIST = unchecked((int)(0xC0262581));

        [NativeTypeName("#define ERROR_GRAPHICS_I2C_ERROR_TRANSMITTING_DATA _HRESULT_TYPEDEF_(0xC0262582L)")]
        public const int ERROR_GRAPHICS_I2C_ERROR_TRANSMITTING_DATA = unchecked((int)(0xC0262582));

        [NativeTypeName("#define ERROR_GRAPHICS_I2C_ERROR_RECEIVING_DATA _HRESULT_TYPEDEF_(0xC0262583L)")]
        public const int ERROR_GRAPHICS_I2C_ERROR_RECEIVING_DATA = unchecked((int)(0xC0262583));

        [NativeTypeName("#define ERROR_GRAPHICS_DDCCI_VCP_NOT_SUPPORTED _HRESULT_TYPEDEF_(0xC0262584L)")]
        public const int ERROR_GRAPHICS_DDCCI_VCP_NOT_SUPPORTED = unchecked((int)(0xC0262584));

        [NativeTypeName("#define ERROR_GRAPHICS_DDCCI_INVALID_DATA _HRESULT_TYPEDEF_(0xC0262585L)")]
        public const int ERROR_GRAPHICS_DDCCI_INVALID_DATA = unchecked((int)(0xC0262585));

        [NativeTypeName("#define ERROR_GRAPHICS_DDCCI_MONITOR_RETURNED_INVALID_TIMING_STATUS_BYTE _HRESULT_TYPEDEF_(0xC0262586L)")]
        public const int ERROR_GRAPHICS_DDCCI_MONITOR_RETURNED_INVALID_TIMING_STATUS_BYTE = unchecked((int)(0xC0262586));

        [NativeTypeName("#define ERROR_GRAPHICS_MCA_INVALID_CAPABILITIES_STRING _HRESULT_TYPEDEF_(0xC0262587L)")]
        public const int ERROR_GRAPHICS_MCA_INVALID_CAPABILITIES_STRING = unchecked((int)(0xC0262587));

        [NativeTypeName("#define ERROR_GRAPHICS_MCA_INTERNAL_ERROR _HRESULT_TYPEDEF_(0xC0262588L)")]
        public const int ERROR_GRAPHICS_MCA_INTERNAL_ERROR = unchecked((int)(0xC0262588));

        [NativeTypeName("#define ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_COMMAND _HRESULT_TYPEDEF_(0xC0262589L)")]
        public const int ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_COMMAND = unchecked((int)(0xC0262589));

        [NativeTypeName("#define ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_LENGTH _HRESULT_TYPEDEF_(0xC026258AL)")]
        public const int ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_LENGTH = unchecked((int)(0xC026258A));

        [NativeTypeName("#define ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_CHECKSUM _HRESULT_TYPEDEF_(0xC026258BL)")]
        public const int ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_CHECKSUM = unchecked((int)(0xC026258B));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_PHYSICAL_MONITOR_HANDLE _HRESULT_TYPEDEF_(0xC026258CL)")]
        public const int ERROR_GRAPHICS_INVALID_PHYSICAL_MONITOR_HANDLE = unchecked((int)(0xC026258C));

        [NativeTypeName("#define ERROR_GRAPHICS_MONITOR_NO_LONGER_EXISTS _HRESULT_TYPEDEF_(0xC026258DL)")]
        public const int ERROR_GRAPHICS_MONITOR_NO_LONGER_EXISTS = unchecked((int)(0xC026258D));

        [NativeTypeName("#define ERROR_GRAPHICS_DDCCI_CURRENT_CURRENT_VALUE_GREATER_THAN_MAXIMUM_VALUE _HRESULT_TYPEDEF_(0xC02625D8L)")]
        public const int ERROR_GRAPHICS_DDCCI_CURRENT_CURRENT_VALUE_GREATER_THAN_MAXIMUM_VALUE = unchecked((int)(0xC02625D8));

        [NativeTypeName("#define ERROR_GRAPHICS_MCA_INVALID_VCP_VERSION _HRESULT_TYPEDEF_(0xC02625D9L)")]
        public const int ERROR_GRAPHICS_MCA_INVALID_VCP_VERSION = unchecked((int)(0xC02625D9));

        [NativeTypeName("#define ERROR_GRAPHICS_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION _HRESULT_TYPEDEF_(0xC02625DAL)")]
        public const int ERROR_GRAPHICS_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION = unchecked((int)(0xC02625DA));

        [NativeTypeName("#define ERROR_GRAPHICS_MCA_MCCS_VERSION_MISMATCH _HRESULT_TYPEDEF_(0xC02625DBL)")]
        public const int ERROR_GRAPHICS_MCA_MCCS_VERSION_MISMATCH = unchecked((int)(0xC02625DB));

        [NativeTypeName("#define ERROR_GRAPHICS_MCA_UNSUPPORTED_MCCS_VERSION _HRESULT_TYPEDEF_(0xC02625DCL)")]
        public const int ERROR_GRAPHICS_MCA_UNSUPPORTED_MCCS_VERSION = unchecked((int)(0xC02625DC));

        [NativeTypeName("#define ERROR_GRAPHICS_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED _HRESULT_TYPEDEF_(0xC02625DEL)")]
        public const int ERROR_GRAPHICS_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED = unchecked((int)(0xC02625DE));

        [NativeTypeName("#define ERROR_GRAPHICS_MCA_UNSUPPORTED_COLOR_TEMPERATURE _HRESULT_TYPEDEF_(0xC02625DFL)")]
        public const int ERROR_GRAPHICS_MCA_UNSUPPORTED_COLOR_TEMPERATURE = unchecked((int)(0xC02625DF));

        [NativeTypeName("#define ERROR_GRAPHICS_ONLY_CONSOLE_SESSION_SUPPORTED _HRESULT_TYPEDEF_(0xC02625E0L)")]
        public const int ERROR_GRAPHICS_ONLY_CONSOLE_SESSION_SUPPORTED = unchecked((int)(0xC02625E0));

        [NativeTypeName("#define ERROR_GRAPHICS_NO_DISPLAY_DEVICE_CORRESPONDS_TO_NAME _HRESULT_TYPEDEF_(0xC02625E1L)")]
        public const int ERROR_GRAPHICS_NO_DISPLAY_DEVICE_CORRESPONDS_TO_NAME = unchecked((int)(0xC02625E1));

        [NativeTypeName("#define ERROR_GRAPHICS_DISPLAY_DEVICE_NOT_ATTACHED_TO_DESKTOP _HRESULT_TYPEDEF_(0xC02625E2L)")]
        public const int ERROR_GRAPHICS_DISPLAY_DEVICE_NOT_ATTACHED_TO_DESKTOP = unchecked((int)(0xC02625E2));

        [NativeTypeName("#define ERROR_GRAPHICS_MIRRORING_DEVICES_NOT_SUPPORTED _HRESULT_TYPEDEF_(0xC02625E3L)")]
        public const int ERROR_GRAPHICS_MIRRORING_DEVICES_NOT_SUPPORTED = unchecked((int)(0xC02625E3));

        [NativeTypeName("#define ERROR_GRAPHICS_INVALID_POINTER _HRESULT_TYPEDEF_(0xC02625E4L)")]
        public const int ERROR_GRAPHICS_INVALID_POINTER = unchecked((int)(0xC02625E4));

        [NativeTypeName("#define ERROR_GRAPHICS_NO_MONITORS_CORRESPOND_TO_DISPLAY_DEVICE _HRESULT_TYPEDEF_(0xC02625E5L)")]
        public const int ERROR_GRAPHICS_NO_MONITORS_CORRESPOND_TO_DISPLAY_DEVICE = unchecked((int)(0xC02625E5));

        [NativeTypeName("#define ERROR_GRAPHICS_PARAMETER_ARRAY_TOO_SMALL _HRESULT_TYPEDEF_(0xC02625E6L)")]
        public const int ERROR_GRAPHICS_PARAMETER_ARRAY_TOO_SMALL = unchecked((int)(0xC02625E6));

        [NativeTypeName("#define ERROR_GRAPHICS_INTERNAL_ERROR _HRESULT_TYPEDEF_(0xC02625E7L)")]
        public const int ERROR_GRAPHICS_INTERNAL_ERROR = unchecked((int)(0xC02625E7));

        [NativeTypeName("#define ERROR_GRAPHICS_SESSION_TYPE_CHANGE_IN_PROGRESS _HRESULT_TYPEDEF_(0xC02605E8L)")]
        public const int ERROR_GRAPHICS_SESSION_TYPE_CHANGE_IN_PROGRESS = unchecked((int)(0xC02605E8));

        [NativeTypeName("#define NAP_E_INVALID_PACKET _HRESULT_TYPEDEF_(0x80270001L)")]
        public const int NAP_E_INVALID_PACKET = unchecked((int)(0x80270001));

        [NativeTypeName("#define NAP_E_MISSING_SOH _HRESULT_TYPEDEF_(0x80270002L)")]
        public const int NAP_E_MISSING_SOH = unchecked((int)(0x80270002));

        [NativeTypeName("#define NAP_E_CONFLICTING_ID _HRESULT_TYPEDEF_(0x80270003L)")]
        public const int NAP_E_CONFLICTING_ID = unchecked((int)(0x80270003));

        [NativeTypeName("#define NAP_E_NO_CACHED_SOH _HRESULT_TYPEDEF_(0x80270004L)")]
        public const int NAP_E_NO_CACHED_SOH = unchecked((int)(0x80270004));

        [NativeTypeName("#define NAP_E_STILL_BOUND _HRESULT_TYPEDEF_(0x80270005L)")]
        public const int NAP_E_STILL_BOUND = unchecked((int)(0x80270005));

        [NativeTypeName("#define NAP_E_NOT_REGISTERED _HRESULT_TYPEDEF_(0x80270006L)")]
        public const int NAP_E_NOT_REGISTERED = unchecked((int)(0x80270006));

        [NativeTypeName("#define NAP_E_NOT_INITIALIZED _HRESULT_TYPEDEF_(0x80270007L)")]
        public const int NAP_E_NOT_INITIALIZED = unchecked((int)(0x80270007));

        [NativeTypeName("#define NAP_E_MISMATCHED_ID _HRESULT_TYPEDEF_(0x80270008L)")]
        public const int NAP_E_MISMATCHED_ID = unchecked((int)(0x80270008));

        [NativeTypeName("#define NAP_E_NOT_PENDING _HRESULT_TYPEDEF_(0x80270009L)")]
        public const int NAP_E_NOT_PENDING = unchecked((int)(0x80270009));

        [NativeTypeName("#define NAP_E_ID_NOT_FOUND _HRESULT_TYPEDEF_(0x8027000AL)")]
        public const int NAP_E_ID_NOT_FOUND = unchecked((int)(0x8027000A));

        [NativeTypeName("#define NAP_E_MAXSIZE_TOO_SMALL _HRESULT_TYPEDEF_(0x8027000BL)")]
        public const int NAP_E_MAXSIZE_TOO_SMALL = unchecked((int)(0x8027000B));

        [NativeTypeName("#define NAP_E_SERVICE_NOT_RUNNING _HRESULT_TYPEDEF_(0x8027000CL)")]
        public const int NAP_E_SERVICE_NOT_RUNNING = unchecked((int)(0x8027000C));

        [NativeTypeName("#define NAP_S_CERT_ALREADY_PRESENT _HRESULT_TYPEDEF_(0x0027000DL)")]
        public const int NAP_S_CERT_ALREADY_PRESENT = ((int)(0x0027000D));

        [NativeTypeName("#define NAP_E_ENTITY_DISABLED _HRESULT_TYPEDEF_(0x8027000EL)")]
        public const int NAP_E_ENTITY_DISABLED = unchecked((int)(0x8027000E));

        [NativeTypeName("#define NAP_E_NETSH_GROUPPOLICY_ERROR _HRESULT_TYPEDEF_(0x8027000FL)")]
        public const int NAP_E_NETSH_GROUPPOLICY_ERROR = unchecked((int)(0x8027000F));

        [NativeTypeName("#define NAP_E_TOO_MANY_CALLS _HRESULT_TYPEDEF_(0x80270010L)")]
        public const int NAP_E_TOO_MANY_CALLS = unchecked((int)(0x80270010));

        [NativeTypeName("#define NAP_E_SHV_CONFIG_EXISTED _HRESULT_TYPEDEF_(0x80270011L)")]
        public const int NAP_E_SHV_CONFIG_EXISTED = unchecked((int)(0x80270011));

        [NativeTypeName("#define NAP_E_SHV_CONFIG_NOT_FOUND _HRESULT_TYPEDEF_(0x80270012L)")]
        public const int NAP_E_SHV_CONFIG_NOT_FOUND = unchecked((int)(0x80270012));

        [NativeTypeName("#define NAP_E_SHV_TIMEOUT _HRESULT_TYPEDEF_(0x80270013L)")]
        public const int NAP_E_SHV_TIMEOUT = unchecked((int)(0x80270013));

        [NativeTypeName("#define TPM_E_ERROR_MASK _HRESULT_TYPEDEF_(0x80280000L)")]
        public const int TPM_E_ERROR_MASK = unchecked((int)(0x80280000));

        [NativeTypeName("#define TPM_E_AUTHFAIL _HRESULT_TYPEDEF_(0x80280001L)")]
        public const int TPM_E_AUTHFAIL = unchecked((int)(0x80280001));

        [NativeTypeName("#define TPM_E_BADINDEX _HRESULT_TYPEDEF_(0x80280002L)")]
        public const int TPM_E_BADINDEX = unchecked((int)(0x80280002));

        [NativeTypeName("#define TPM_E_BAD_PARAMETER _HRESULT_TYPEDEF_(0x80280003L)")]
        public const int TPM_E_BAD_PARAMETER = unchecked((int)(0x80280003));

        [NativeTypeName("#define TPM_E_AUDITFAILURE _HRESULT_TYPEDEF_(0x80280004L)")]
        public const int TPM_E_AUDITFAILURE = unchecked((int)(0x80280004));

        [NativeTypeName("#define TPM_E_CLEAR_DISABLED _HRESULT_TYPEDEF_(0x80280005L)")]
        public const int TPM_E_CLEAR_DISABLED = unchecked((int)(0x80280005));

        [NativeTypeName("#define TPM_E_DEACTIVATED _HRESULT_TYPEDEF_(0x80280006L)")]
        public const int TPM_E_DEACTIVATED = unchecked((int)(0x80280006));

        [NativeTypeName("#define TPM_E_DISABLED _HRESULT_TYPEDEF_(0x80280007L)")]
        public const int TPM_E_DISABLED = unchecked((int)(0x80280007));

        [NativeTypeName("#define TPM_E_DISABLED_CMD _HRESULT_TYPEDEF_(0x80280008L)")]
        public const int TPM_E_DISABLED_CMD = unchecked((int)(0x80280008));

        [NativeTypeName("#define TPM_E_FAIL _HRESULT_TYPEDEF_(0x80280009L)")]
        public const int TPM_E_FAIL = unchecked((int)(0x80280009));

        [NativeTypeName("#define TPM_E_BAD_ORDINAL _HRESULT_TYPEDEF_(0x8028000AL)")]
        public const int TPM_E_BAD_ORDINAL = unchecked((int)(0x8028000A));

        [NativeTypeName("#define TPM_E_INSTALL_DISABLED _HRESULT_TYPEDEF_(0x8028000BL)")]
        public const int TPM_E_INSTALL_DISABLED = unchecked((int)(0x8028000B));

        [NativeTypeName("#define TPM_E_INVALID_KEYHANDLE _HRESULT_TYPEDEF_(0x8028000CL)")]
        public const int TPM_E_INVALID_KEYHANDLE = unchecked((int)(0x8028000C));

        [NativeTypeName("#define TPM_E_KEYNOTFOUND _HRESULT_TYPEDEF_(0x8028000DL)")]
        public const int TPM_E_KEYNOTFOUND = unchecked((int)(0x8028000D));

        [NativeTypeName("#define TPM_E_INAPPROPRIATE_ENC _HRESULT_TYPEDEF_(0x8028000EL)")]
        public const int TPM_E_INAPPROPRIATE_ENC = unchecked((int)(0x8028000E));

        [NativeTypeName("#define TPM_E_MIGRATEFAIL _HRESULT_TYPEDEF_(0x8028000FL)")]
        public const int TPM_E_MIGRATEFAIL = unchecked((int)(0x8028000F));

        [NativeTypeName("#define TPM_E_INVALID_PCR_INFO _HRESULT_TYPEDEF_(0x80280010L)")]
        public const int TPM_E_INVALID_PCR_INFO = unchecked((int)(0x80280010));

        [NativeTypeName("#define TPM_E_NOSPACE _HRESULT_TYPEDEF_(0x80280011L)")]
        public const int TPM_E_NOSPACE = unchecked((int)(0x80280011));

        [NativeTypeName("#define TPM_E_NOSRK _HRESULT_TYPEDEF_(0x80280012L)")]
        public const int TPM_E_NOSRK = unchecked((int)(0x80280012));

        [NativeTypeName("#define TPM_E_NOTSEALED_BLOB _HRESULT_TYPEDEF_(0x80280013L)")]
        public const int TPM_E_NOTSEALED_BLOB = unchecked((int)(0x80280013));

        [NativeTypeName("#define TPM_E_OWNER_SET _HRESULT_TYPEDEF_(0x80280014L)")]
        public const int TPM_E_OWNER_SET = unchecked((int)(0x80280014));

        [NativeTypeName("#define TPM_E_RESOURCES _HRESULT_TYPEDEF_(0x80280015L)")]
        public const int TPM_E_RESOURCES = unchecked((int)(0x80280015));

        [NativeTypeName("#define TPM_E_SHORTRANDOM _HRESULT_TYPEDEF_(0x80280016L)")]
        public const int TPM_E_SHORTRANDOM = unchecked((int)(0x80280016));

        [NativeTypeName("#define TPM_E_SIZE _HRESULT_TYPEDEF_(0x80280017L)")]
        public const int TPM_E_SIZE = unchecked((int)(0x80280017));

        [NativeTypeName("#define TPM_E_WRONGPCRVAL _HRESULT_TYPEDEF_(0x80280018L)")]
        public const int TPM_E_WRONGPCRVAL = unchecked((int)(0x80280018));

        [NativeTypeName("#define TPM_E_BAD_PARAM_SIZE _HRESULT_TYPEDEF_(0x80280019L)")]
        public const int TPM_E_BAD_PARAM_SIZE = unchecked((int)(0x80280019));

        [NativeTypeName("#define TPM_E_SHA_THREAD _HRESULT_TYPEDEF_(0x8028001AL)")]
        public const int TPM_E_SHA_THREAD = unchecked((int)(0x8028001A));

        [NativeTypeName("#define TPM_E_SHA_ERROR _HRESULT_TYPEDEF_(0x8028001BL)")]
        public const int TPM_E_SHA_ERROR = unchecked((int)(0x8028001B));

        [NativeTypeName("#define TPM_E_FAILEDSELFTEST _HRESULT_TYPEDEF_(0x8028001CL)")]
        public const int TPM_E_FAILEDSELFTEST = unchecked((int)(0x8028001C));

        [NativeTypeName("#define TPM_E_AUTH2FAIL _HRESULT_TYPEDEF_(0x8028001DL)")]
        public const int TPM_E_AUTH2FAIL = unchecked((int)(0x8028001D));

        [NativeTypeName("#define TPM_E_BADTAG _HRESULT_TYPEDEF_(0x8028001EL)")]
        public const int TPM_E_BADTAG = unchecked((int)(0x8028001E));

        [NativeTypeName("#define TPM_E_IOERROR _HRESULT_TYPEDEF_(0x8028001FL)")]
        public const int TPM_E_IOERROR = unchecked((int)(0x8028001F));

        [NativeTypeName("#define TPM_E_ENCRYPT_ERROR _HRESULT_TYPEDEF_(0x80280020L)")]
        public const int TPM_E_ENCRYPT_ERROR = unchecked((int)(0x80280020));

        [NativeTypeName("#define TPM_E_DECRYPT_ERROR _HRESULT_TYPEDEF_(0x80280021L)")]
        public const int TPM_E_DECRYPT_ERROR = unchecked((int)(0x80280021));

        [NativeTypeName("#define TPM_E_INVALID_AUTHHANDLE _HRESULT_TYPEDEF_(0x80280022L)")]
        public const int TPM_E_INVALID_AUTHHANDLE = unchecked((int)(0x80280022));

        [NativeTypeName("#define TPM_E_NO_ENDORSEMENT _HRESULT_TYPEDEF_(0x80280023L)")]
        public const int TPM_E_NO_ENDORSEMENT = unchecked((int)(0x80280023));

        [NativeTypeName("#define TPM_E_INVALID_KEYUSAGE _HRESULT_TYPEDEF_(0x80280024L)")]
        public const int TPM_E_INVALID_KEYUSAGE = unchecked((int)(0x80280024));

        [NativeTypeName("#define TPM_E_WRONG_ENTITYTYPE _HRESULT_TYPEDEF_(0x80280025L)")]
        public const int TPM_E_WRONG_ENTITYTYPE = unchecked((int)(0x80280025));

        [NativeTypeName("#define TPM_E_INVALID_POSTINIT _HRESULT_TYPEDEF_(0x80280026L)")]
        public const int TPM_E_INVALID_POSTINIT = unchecked((int)(0x80280026));

        [NativeTypeName("#define TPM_E_INAPPROPRIATE_SIG _HRESULT_TYPEDEF_(0x80280027L)")]
        public const int TPM_E_INAPPROPRIATE_SIG = unchecked((int)(0x80280027));

        [NativeTypeName("#define TPM_E_BAD_KEY_PROPERTY _HRESULT_TYPEDEF_(0x80280028L)")]
        public const int TPM_E_BAD_KEY_PROPERTY = unchecked((int)(0x80280028));

        [NativeTypeName("#define TPM_E_BAD_MIGRATION _HRESULT_TYPEDEF_(0x80280029L)")]
        public const int TPM_E_BAD_MIGRATION = unchecked((int)(0x80280029));

        [NativeTypeName("#define TPM_E_BAD_SCHEME _HRESULT_TYPEDEF_(0x8028002AL)")]
        public const int TPM_E_BAD_SCHEME = unchecked((int)(0x8028002A));

        [NativeTypeName("#define TPM_E_BAD_DATASIZE _HRESULT_TYPEDEF_(0x8028002BL)")]
        public const int TPM_E_BAD_DATASIZE = unchecked((int)(0x8028002B));

        [NativeTypeName("#define TPM_E_BAD_MODE _HRESULT_TYPEDEF_(0x8028002CL)")]
        public const int TPM_E_BAD_MODE = unchecked((int)(0x8028002C));

        [NativeTypeName("#define TPM_E_BAD_PRESENCE _HRESULT_TYPEDEF_(0x8028002DL)")]
        public const int TPM_E_BAD_PRESENCE = unchecked((int)(0x8028002D));

        [NativeTypeName("#define TPM_E_BAD_VERSION _HRESULT_TYPEDEF_(0x8028002EL)")]
        public const int TPM_E_BAD_VERSION = unchecked((int)(0x8028002E));

        [NativeTypeName("#define TPM_E_NO_WRAP_TRANSPORT _HRESULT_TYPEDEF_(0x8028002FL)")]
        public const int TPM_E_NO_WRAP_TRANSPORT = unchecked((int)(0x8028002F));

        [NativeTypeName("#define TPM_E_AUDITFAIL_UNSUCCESSFUL _HRESULT_TYPEDEF_(0x80280030L)")]
        public const int TPM_E_AUDITFAIL_UNSUCCESSFUL = unchecked((int)(0x80280030));

        [NativeTypeName("#define TPM_E_AUDITFAIL_SUCCESSFUL _HRESULT_TYPEDEF_(0x80280031L)")]
        public const int TPM_E_AUDITFAIL_SUCCESSFUL = unchecked((int)(0x80280031));

        [NativeTypeName("#define TPM_E_NOTRESETABLE _HRESULT_TYPEDEF_(0x80280032L)")]
        public const int TPM_E_NOTRESETABLE = unchecked((int)(0x80280032));

        [NativeTypeName("#define TPM_E_NOTLOCAL _HRESULT_TYPEDEF_(0x80280033L)")]
        public const int TPM_E_NOTLOCAL = unchecked((int)(0x80280033));

        [NativeTypeName("#define TPM_E_BAD_TYPE _HRESULT_TYPEDEF_(0x80280034L)")]
        public const int TPM_E_BAD_TYPE = unchecked((int)(0x80280034));

        [NativeTypeName("#define TPM_E_INVALID_RESOURCE _HRESULT_TYPEDEF_(0x80280035L)")]
        public const int TPM_E_INVALID_RESOURCE = unchecked((int)(0x80280035));

        [NativeTypeName("#define TPM_E_NOTFIPS _HRESULT_TYPEDEF_(0x80280036L)")]
        public const int TPM_E_NOTFIPS = unchecked((int)(0x80280036));

        [NativeTypeName("#define TPM_E_INVALID_FAMILY _HRESULT_TYPEDEF_(0x80280037L)")]
        public const int TPM_E_INVALID_FAMILY = unchecked((int)(0x80280037));

        [NativeTypeName("#define TPM_E_NO_NV_PERMISSION _HRESULT_TYPEDEF_(0x80280038L)")]
        public const int TPM_E_NO_NV_PERMISSION = unchecked((int)(0x80280038));

        [NativeTypeName("#define TPM_E_REQUIRES_SIGN _HRESULT_TYPEDEF_(0x80280039L)")]
        public const int TPM_E_REQUIRES_SIGN = unchecked((int)(0x80280039));

        [NativeTypeName("#define TPM_E_KEY_NOTSUPPORTED _HRESULT_TYPEDEF_(0x8028003AL)")]
        public const int TPM_E_KEY_NOTSUPPORTED = unchecked((int)(0x8028003A));

        [NativeTypeName("#define TPM_E_AUTH_CONFLICT _HRESULT_TYPEDEF_(0x8028003BL)")]
        public const int TPM_E_AUTH_CONFLICT = unchecked((int)(0x8028003B));

        [NativeTypeName("#define TPM_E_AREA_LOCKED _HRESULT_TYPEDEF_(0x8028003CL)")]
        public const int TPM_E_AREA_LOCKED = unchecked((int)(0x8028003C));

        [NativeTypeName("#define TPM_E_BAD_LOCALITY _HRESULT_TYPEDEF_(0x8028003DL)")]
        public const int TPM_E_BAD_LOCALITY = unchecked((int)(0x8028003D));

        [NativeTypeName("#define TPM_E_READ_ONLY _HRESULT_TYPEDEF_(0x8028003EL)")]
        public const int TPM_E_READ_ONLY = unchecked((int)(0x8028003E));

        [NativeTypeName("#define TPM_E_PER_NOWRITE _HRESULT_TYPEDEF_(0x8028003FL)")]
        public const int TPM_E_PER_NOWRITE = unchecked((int)(0x8028003F));

        [NativeTypeName("#define TPM_E_FAMILYCOUNT _HRESULT_TYPEDEF_(0x80280040L)")]
        public const int TPM_E_FAMILYCOUNT = unchecked((int)(0x80280040));

        [NativeTypeName("#define TPM_E_WRITE_LOCKED _HRESULT_TYPEDEF_(0x80280041L)")]
        public const int TPM_E_WRITE_LOCKED = unchecked((int)(0x80280041));

        [NativeTypeName("#define TPM_E_BAD_ATTRIBUTES _HRESULT_TYPEDEF_(0x80280042L)")]
        public const int TPM_E_BAD_ATTRIBUTES = unchecked((int)(0x80280042));

        [NativeTypeName("#define TPM_E_INVALID_STRUCTURE _HRESULT_TYPEDEF_(0x80280043L)")]
        public const int TPM_E_INVALID_STRUCTURE = unchecked((int)(0x80280043));

        [NativeTypeName("#define TPM_E_KEY_OWNER_CONTROL _HRESULT_TYPEDEF_(0x80280044L)")]
        public const int TPM_E_KEY_OWNER_CONTROL = unchecked((int)(0x80280044));

        [NativeTypeName("#define TPM_E_BAD_COUNTER _HRESULT_TYPEDEF_(0x80280045L)")]
        public const int TPM_E_BAD_COUNTER = unchecked((int)(0x80280045));

        [NativeTypeName("#define TPM_E_NOT_FULLWRITE _HRESULT_TYPEDEF_(0x80280046L)")]
        public const int TPM_E_NOT_FULLWRITE = unchecked((int)(0x80280046));

        [NativeTypeName("#define TPM_E_CONTEXT_GAP _HRESULT_TYPEDEF_(0x80280047L)")]
        public const int TPM_E_CONTEXT_GAP = unchecked((int)(0x80280047));

        [NativeTypeName("#define TPM_E_MAXNVWRITES _HRESULT_TYPEDEF_(0x80280048L)")]
        public const int TPM_E_MAXNVWRITES = unchecked((int)(0x80280048));

        [NativeTypeName("#define TPM_E_NOOPERATOR _HRESULT_TYPEDEF_(0x80280049L)")]
        public const int TPM_E_NOOPERATOR = unchecked((int)(0x80280049));

        [NativeTypeName("#define TPM_E_RESOURCEMISSING _HRESULT_TYPEDEF_(0x8028004AL)")]
        public const int TPM_E_RESOURCEMISSING = unchecked((int)(0x8028004A));

        [NativeTypeName("#define TPM_E_DELEGATE_LOCK _HRESULT_TYPEDEF_(0x8028004BL)")]
        public const int TPM_E_DELEGATE_LOCK = unchecked((int)(0x8028004B));

        [NativeTypeName("#define TPM_E_DELEGATE_FAMILY _HRESULT_TYPEDEF_(0x8028004CL)")]
        public const int TPM_E_DELEGATE_FAMILY = unchecked((int)(0x8028004C));

        [NativeTypeName("#define TPM_E_DELEGATE_ADMIN _HRESULT_TYPEDEF_(0x8028004DL)")]
        public const int TPM_E_DELEGATE_ADMIN = unchecked((int)(0x8028004D));

        [NativeTypeName("#define TPM_E_TRANSPORT_NOTEXCLUSIVE _HRESULT_TYPEDEF_(0x8028004EL)")]
        public const int TPM_E_TRANSPORT_NOTEXCLUSIVE = unchecked((int)(0x8028004E));

        [NativeTypeName("#define TPM_E_OWNER_CONTROL _HRESULT_TYPEDEF_(0x8028004FL)")]
        public const int TPM_E_OWNER_CONTROL = unchecked((int)(0x8028004F));

        [NativeTypeName("#define TPM_E_DAA_RESOURCES _HRESULT_TYPEDEF_(0x80280050L)")]
        public const int TPM_E_DAA_RESOURCES = unchecked((int)(0x80280050));

        [NativeTypeName("#define TPM_E_DAA_INPUT_DATA0 _HRESULT_TYPEDEF_(0x80280051L)")]
        public const int TPM_E_DAA_INPUT_DATA0 = unchecked((int)(0x80280051));

        [NativeTypeName("#define TPM_E_DAA_INPUT_DATA1 _HRESULT_TYPEDEF_(0x80280052L)")]
        public const int TPM_E_DAA_INPUT_DATA1 = unchecked((int)(0x80280052));

        [NativeTypeName("#define TPM_E_DAA_ISSUER_SETTINGS _HRESULT_TYPEDEF_(0x80280053L)")]
        public const int TPM_E_DAA_ISSUER_SETTINGS = unchecked((int)(0x80280053));

        [NativeTypeName("#define TPM_E_DAA_TPM_SETTINGS _HRESULT_TYPEDEF_(0x80280054L)")]
        public const int TPM_E_DAA_TPM_SETTINGS = unchecked((int)(0x80280054));

        [NativeTypeName("#define TPM_E_DAA_STAGE _HRESULT_TYPEDEF_(0x80280055L)")]
        public const int TPM_E_DAA_STAGE = unchecked((int)(0x80280055));

        [NativeTypeName("#define TPM_E_DAA_ISSUER_VALIDITY _HRESULT_TYPEDEF_(0x80280056L)")]
        public const int TPM_E_DAA_ISSUER_VALIDITY = unchecked((int)(0x80280056));

        [NativeTypeName("#define TPM_E_DAA_WRONG_W _HRESULT_TYPEDEF_(0x80280057L)")]
        public const int TPM_E_DAA_WRONG_W = unchecked((int)(0x80280057));

        [NativeTypeName("#define TPM_E_BAD_HANDLE _HRESULT_TYPEDEF_(0x80280058L)")]
        public const int TPM_E_BAD_HANDLE = unchecked((int)(0x80280058));

        [NativeTypeName("#define TPM_E_BAD_DELEGATE _HRESULT_TYPEDEF_(0x80280059L)")]
        public const int TPM_E_BAD_DELEGATE = unchecked((int)(0x80280059));

        [NativeTypeName("#define TPM_E_BADCONTEXT _HRESULT_TYPEDEF_(0x8028005AL)")]
        public const int TPM_E_BADCONTEXT = unchecked((int)(0x8028005A));

        [NativeTypeName("#define TPM_E_TOOMANYCONTEXTS _HRESULT_TYPEDEF_(0x8028005BL)")]
        public const int TPM_E_TOOMANYCONTEXTS = unchecked((int)(0x8028005B));

        [NativeTypeName("#define TPM_E_MA_TICKET_SIGNATURE _HRESULT_TYPEDEF_(0x8028005CL)")]
        public const int TPM_E_MA_TICKET_SIGNATURE = unchecked((int)(0x8028005C));

        [NativeTypeName("#define TPM_E_MA_DESTINATION _HRESULT_TYPEDEF_(0x8028005DL)")]
        public const int TPM_E_MA_DESTINATION = unchecked((int)(0x8028005D));

        [NativeTypeName("#define TPM_E_MA_SOURCE _HRESULT_TYPEDEF_(0x8028005EL)")]
        public const int TPM_E_MA_SOURCE = unchecked((int)(0x8028005E));

        [NativeTypeName("#define TPM_E_MA_AUTHORITY _HRESULT_TYPEDEF_(0x8028005FL)")]
        public const int TPM_E_MA_AUTHORITY = unchecked((int)(0x8028005F));

        [NativeTypeName("#define TPM_E_PERMANENTEK _HRESULT_TYPEDEF_(0x80280061L)")]
        public const int TPM_E_PERMANENTEK = unchecked((int)(0x80280061));

        [NativeTypeName("#define TPM_E_BAD_SIGNATURE _HRESULT_TYPEDEF_(0x80280062L)")]
        public const int TPM_E_BAD_SIGNATURE = unchecked((int)(0x80280062));

        [NativeTypeName("#define TPM_E_NOCONTEXTSPACE _HRESULT_TYPEDEF_(0x80280063L)")]
        public const int TPM_E_NOCONTEXTSPACE = unchecked((int)(0x80280063));

        [NativeTypeName("#define TPM_20_E_ASYMMETRIC _HRESULT_TYPEDEF_(0x80280081L)")]
        public const int TPM_20_E_ASYMMETRIC = unchecked((int)(0x80280081));

        [NativeTypeName("#define TPM_20_E_ATTRIBUTES _HRESULT_TYPEDEF_(0x80280082L)")]
        public const int TPM_20_E_ATTRIBUTES = unchecked((int)(0x80280082));

        [NativeTypeName("#define TPM_20_E_HASH _HRESULT_TYPEDEF_(0x80280083L)")]
        public const int TPM_20_E_HASH = unchecked((int)(0x80280083));

        [NativeTypeName("#define TPM_20_E_VALUE _HRESULT_TYPEDEF_(0x80280084L)")]
        public const int TPM_20_E_VALUE = unchecked((int)(0x80280084));

        [NativeTypeName("#define TPM_20_E_HIERARCHY _HRESULT_TYPEDEF_(0x80280085L)")]
        public const int TPM_20_E_HIERARCHY = unchecked((int)(0x80280085));

        [NativeTypeName("#define TPM_20_E_KEY_SIZE _HRESULT_TYPEDEF_(0x80280087L)")]
        public const int TPM_20_E_KEY_SIZE = unchecked((int)(0x80280087));

        [NativeTypeName("#define TPM_20_E_MGF _HRESULT_TYPEDEF_(0x80280088L)")]
        public const int TPM_20_E_MGF = unchecked((int)(0x80280088));

        [NativeTypeName("#define TPM_20_E_MODE _HRESULT_TYPEDEF_(0x80280089L)")]
        public const int TPM_20_E_MODE = unchecked((int)(0x80280089));

        [NativeTypeName("#define TPM_20_E_TYPE _HRESULT_TYPEDEF_(0x8028008AL)")]
        public const int TPM_20_E_TYPE = unchecked((int)(0x8028008A));

        [NativeTypeName("#define TPM_20_E_HANDLE _HRESULT_TYPEDEF_(0x8028008BL)")]
        public const int TPM_20_E_HANDLE = unchecked((int)(0x8028008B));

        [NativeTypeName("#define TPM_20_E_KDF _HRESULT_TYPEDEF_(0x8028008CL)")]
        public const int TPM_20_E_KDF = unchecked((int)(0x8028008C));

        [NativeTypeName("#define TPM_20_E_RANGE _HRESULT_TYPEDEF_(0x8028008DL)")]
        public const int TPM_20_E_RANGE = unchecked((int)(0x8028008D));

        [NativeTypeName("#define TPM_20_E_AUTH_FAIL _HRESULT_TYPEDEF_(0x8028008EL)")]
        public const int TPM_20_E_AUTH_FAIL = unchecked((int)(0x8028008E));

        [NativeTypeName("#define TPM_20_E_NONCE _HRESULT_TYPEDEF_(0x8028008FL)")]
        public const int TPM_20_E_NONCE = unchecked((int)(0x8028008F));

        [NativeTypeName("#define TPM_20_E_PP _HRESULT_TYPEDEF_(0x80280090L)")]
        public const int TPM_20_E_PP = unchecked((int)(0x80280090));

        [NativeTypeName("#define TPM_20_E_SCHEME _HRESULT_TYPEDEF_(0x80280092L)")]
        public const int TPM_20_E_SCHEME = unchecked((int)(0x80280092));

        [NativeTypeName("#define TPM_20_E_SIZE _HRESULT_TYPEDEF_(0x80280095L)")]
        public const int TPM_20_E_SIZE = unchecked((int)(0x80280095));

        [NativeTypeName("#define TPM_20_E_SYMMETRIC _HRESULT_TYPEDEF_(0x80280096L)")]
        public const int TPM_20_E_SYMMETRIC = unchecked((int)(0x80280096));

        [NativeTypeName("#define TPM_20_E_TAG _HRESULT_TYPEDEF_(0x80280097L)")]
        public const int TPM_20_E_TAG = unchecked((int)(0x80280097));

        [NativeTypeName("#define TPM_20_E_SELECTOR _HRESULT_TYPEDEF_(0x80280098L)")]
        public const int TPM_20_E_SELECTOR = unchecked((int)(0x80280098));

        [NativeTypeName("#define TPM_20_E_INSUFFICIENT _HRESULT_TYPEDEF_(0x8028009AL)")]
        public const int TPM_20_E_INSUFFICIENT = unchecked((int)(0x8028009A));

        [NativeTypeName("#define TPM_20_E_SIGNATURE _HRESULT_TYPEDEF_(0x8028009BL)")]
        public const int TPM_20_E_SIGNATURE = unchecked((int)(0x8028009B));

        [NativeTypeName("#define TPM_20_E_KEY _HRESULT_TYPEDEF_(0x8028009CL)")]
        public const int TPM_20_E_KEY = unchecked((int)(0x8028009C));

        [NativeTypeName("#define TPM_20_E_POLICY_FAIL _HRESULT_TYPEDEF_(0x8028009DL)")]
        public const int TPM_20_E_POLICY_FAIL = unchecked((int)(0x8028009D));

        [NativeTypeName("#define TPM_20_E_INTEGRITY _HRESULT_TYPEDEF_(0x8028009FL)")]
        public const int TPM_20_E_INTEGRITY = unchecked((int)(0x8028009F));

        [NativeTypeName("#define TPM_20_E_TICKET _HRESULT_TYPEDEF_(0x802800A0L)")]
        public const int TPM_20_E_TICKET = unchecked((int)(0x802800A0));

        [NativeTypeName("#define TPM_20_E_RESERVED_BITS _HRESULT_TYPEDEF_(0x802800A1L)")]
        public const int TPM_20_E_RESERVED_BITS = unchecked((int)(0x802800A1));

        [NativeTypeName("#define TPM_20_E_BAD_AUTH _HRESULT_TYPEDEF_(0x802800A2L)")]
        public const int TPM_20_E_BAD_AUTH = unchecked((int)(0x802800A2));

        [NativeTypeName("#define TPM_20_E_EXPIRED _HRESULT_TYPEDEF_(0x802800A3L)")]
        public const int TPM_20_E_EXPIRED = unchecked((int)(0x802800A3));

        [NativeTypeName("#define TPM_20_E_POLICY_CC _HRESULT_TYPEDEF_(0x802800A4L)")]
        public const int TPM_20_E_POLICY_CC = unchecked((int)(0x802800A4));

        [NativeTypeName("#define TPM_20_E_BINDING _HRESULT_TYPEDEF_(0x802800A5L)")]
        public const int TPM_20_E_BINDING = unchecked((int)(0x802800A5));

        [NativeTypeName("#define TPM_20_E_CURVE _HRESULT_TYPEDEF_(0x802800A6L)")]
        public const int TPM_20_E_CURVE = unchecked((int)(0x802800A6));

        [NativeTypeName("#define TPM_20_E_ECC_POINT _HRESULT_TYPEDEF_(0x802800A7L)")]
        public const int TPM_20_E_ECC_POINT = unchecked((int)(0x802800A7));

        [NativeTypeName("#define TPM_20_E_INITIALIZE _HRESULT_TYPEDEF_(0x80280100L)")]
        public const int TPM_20_E_INITIALIZE = unchecked((int)(0x80280100));

        [NativeTypeName("#define TPM_20_E_FAILURE _HRESULT_TYPEDEF_(0x80280101L)")]
        public const int TPM_20_E_FAILURE = unchecked((int)(0x80280101));

        [NativeTypeName("#define TPM_20_E_SEQUENCE _HRESULT_TYPEDEF_(0x80280103L)")]
        public const int TPM_20_E_SEQUENCE = unchecked((int)(0x80280103));

        [NativeTypeName("#define TPM_20_E_PRIVATE _HRESULT_TYPEDEF_(0x8028010BL)")]
        public const int TPM_20_E_PRIVATE = unchecked((int)(0x8028010B));

        [NativeTypeName("#define TPM_20_E_HMAC _HRESULT_TYPEDEF_(0x80280119L)")]
        public const int TPM_20_E_HMAC = unchecked((int)(0x80280119));

        [NativeTypeName("#define TPM_20_E_DISABLED _HRESULT_TYPEDEF_(0x80280120L)")]
        public const int TPM_20_E_DISABLED = unchecked((int)(0x80280120));

        [NativeTypeName("#define TPM_20_E_EXCLUSIVE _HRESULT_TYPEDEF_(0x80280121L)")]
        public const int TPM_20_E_EXCLUSIVE = unchecked((int)(0x80280121));

        [NativeTypeName("#define TPM_20_E_ECC_CURVE _HRESULT_TYPEDEF_(0x80280123L)")]
        public const int TPM_20_E_ECC_CURVE = unchecked((int)(0x80280123));

        [NativeTypeName("#define TPM_20_E_AUTH_TYPE _HRESULT_TYPEDEF_(0x80280124L)")]
        public const int TPM_20_E_AUTH_TYPE = unchecked((int)(0x80280124));

        [NativeTypeName("#define TPM_20_E_AUTH_MISSING _HRESULT_TYPEDEF_(0x80280125L)")]
        public const int TPM_20_E_AUTH_MISSING = unchecked((int)(0x80280125));

        [NativeTypeName("#define TPM_20_E_POLICY _HRESULT_TYPEDEF_(0x80280126L)")]
        public const int TPM_20_E_POLICY = unchecked((int)(0x80280126));

        [NativeTypeName("#define TPM_20_E_PCR _HRESULT_TYPEDEF_(0x80280127L)")]
        public const int TPM_20_E_PCR = unchecked((int)(0x80280127));

        [NativeTypeName("#define TPM_20_E_PCR_CHANGED _HRESULT_TYPEDEF_(0x80280128L)")]
        public const int TPM_20_E_PCR_CHANGED = unchecked((int)(0x80280128));

        [NativeTypeName("#define TPM_20_E_UPGRADE _HRESULT_TYPEDEF_(0x8028012DL)")]
        public const int TPM_20_E_UPGRADE = unchecked((int)(0x8028012D));

        [NativeTypeName("#define TPM_20_E_TOO_MANY_CONTEXTS _HRESULT_TYPEDEF_(0x8028012EL)")]
        public const int TPM_20_E_TOO_MANY_CONTEXTS = unchecked((int)(0x8028012E));

        [NativeTypeName("#define TPM_20_E_AUTH_UNAVAILABLE _HRESULT_TYPEDEF_(0x8028012FL)")]
        public const int TPM_20_E_AUTH_UNAVAILABLE = unchecked((int)(0x8028012F));

        [NativeTypeName("#define TPM_20_E_REBOOT _HRESULT_TYPEDEF_(0x80280130L)")]
        public const int TPM_20_E_REBOOT = unchecked((int)(0x80280130));

        [NativeTypeName("#define TPM_20_E_UNBALANCED _HRESULT_TYPEDEF_(0x80280131L)")]
        public const int TPM_20_E_UNBALANCED = unchecked((int)(0x80280131));

        [NativeTypeName("#define TPM_20_E_COMMAND_SIZE _HRESULT_TYPEDEF_(0x80280142L)")]
        public const int TPM_20_E_COMMAND_SIZE = unchecked((int)(0x80280142));

        [NativeTypeName("#define TPM_20_E_COMMAND_CODE _HRESULT_TYPEDEF_(0x80280143L)")]
        public const int TPM_20_E_COMMAND_CODE = unchecked((int)(0x80280143));

        [NativeTypeName("#define TPM_20_E_AUTHSIZE _HRESULT_TYPEDEF_(0x80280144L)")]
        public const int TPM_20_E_AUTHSIZE = unchecked((int)(0x80280144));

        [NativeTypeName("#define TPM_20_E_AUTH_CONTEXT _HRESULT_TYPEDEF_(0x80280145L)")]
        public const int TPM_20_E_AUTH_CONTEXT = unchecked((int)(0x80280145));

        [NativeTypeName("#define TPM_20_E_NV_RANGE _HRESULT_TYPEDEF_(0x80280146L)")]
        public const int TPM_20_E_NV_RANGE = unchecked((int)(0x80280146));

        [NativeTypeName("#define TPM_20_E_NV_SIZE _HRESULT_TYPEDEF_(0x80280147L)")]
        public const int TPM_20_E_NV_SIZE = unchecked((int)(0x80280147));

        [NativeTypeName("#define TPM_20_E_NV_LOCKED _HRESULT_TYPEDEF_(0x80280148L)")]
        public const int TPM_20_E_NV_LOCKED = unchecked((int)(0x80280148));

        [NativeTypeName("#define TPM_20_E_NV_AUTHORIZATION _HRESULT_TYPEDEF_(0x80280149L)")]
        public const int TPM_20_E_NV_AUTHORIZATION = unchecked((int)(0x80280149));

        [NativeTypeName("#define TPM_20_E_NV_UNINITIALIZED _HRESULT_TYPEDEF_(0x8028014AL)")]
        public const int TPM_20_E_NV_UNINITIALIZED = unchecked((int)(0x8028014A));

        [NativeTypeName("#define TPM_20_E_NV_SPACE _HRESULT_TYPEDEF_(0x8028014BL)")]
        public const int TPM_20_E_NV_SPACE = unchecked((int)(0x8028014B));

        [NativeTypeName("#define TPM_20_E_NV_DEFINED _HRESULT_TYPEDEF_(0x8028014CL)")]
        public const int TPM_20_E_NV_DEFINED = unchecked((int)(0x8028014C));

        [NativeTypeName("#define TPM_20_E_BAD_CONTEXT _HRESULT_TYPEDEF_(0x80280150L)")]
        public const int TPM_20_E_BAD_CONTEXT = unchecked((int)(0x80280150));

        [NativeTypeName("#define TPM_20_E_CPHASH _HRESULT_TYPEDEF_(0x80280151L)")]
        public const int TPM_20_E_CPHASH = unchecked((int)(0x80280151));

        [NativeTypeName("#define TPM_20_E_PARENT _HRESULT_TYPEDEF_(0x80280152L)")]
        public const int TPM_20_E_PARENT = unchecked((int)(0x80280152));

        [NativeTypeName("#define TPM_20_E_NEEDS_TEST _HRESULT_TYPEDEF_(0x80280153L)")]
        public const int TPM_20_E_NEEDS_TEST = unchecked((int)(0x80280153));

        [NativeTypeName("#define TPM_20_E_NO_RESULT _HRESULT_TYPEDEF_(0x80280154L)")]
        public const int TPM_20_E_NO_RESULT = unchecked((int)(0x80280154));

        [NativeTypeName("#define TPM_20_E_SENSITIVE _HRESULT_TYPEDEF_(0x80280155L)")]
        public const int TPM_20_E_SENSITIVE = unchecked((int)(0x80280155));

        [NativeTypeName("#define TPM_E_COMMAND_BLOCKED _HRESULT_TYPEDEF_(0x80280400L)")]
        public const int TPM_E_COMMAND_BLOCKED = unchecked((int)(0x80280400));

        [NativeTypeName("#define TPM_E_INVALID_HANDLE _HRESULT_TYPEDEF_(0x80280401L)")]
        public const int TPM_E_INVALID_HANDLE = unchecked((int)(0x80280401));

        [NativeTypeName("#define TPM_E_DUPLICATE_VHANDLE _HRESULT_TYPEDEF_(0x80280402L)")]
        public const int TPM_E_DUPLICATE_VHANDLE = unchecked((int)(0x80280402));

        [NativeTypeName("#define TPM_E_EMBEDDED_COMMAND_BLOCKED _HRESULT_TYPEDEF_(0x80280403L)")]
        public const int TPM_E_EMBEDDED_COMMAND_BLOCKED = unchecked((int)(0x80280403));

        [NativeTypeName("#define TPM_E_EMBEDDED_COMMAND_UNSUPPORTED _HRESULT_TYPEDEF_(0x80280404L)")]
        public const int TPM_E_EMBEDDED_COMMAND_UNSUPPORTED = unchecked((int)(0x80280404));

        [NativeTypeName("#define TPM_E_RETRY _HRESULT_TYPEDEF_(0x80280800L)")]
        public const int TPM_E_RETRY = unchecked((int)(0x80280800));

        [NativeTypeName("#define TPM_E_NEEDS_SELFTEST _HRESULT_TYPEDEF_(0x80280801L)")]
        public const int TPM_E_NEEDS_SELFTEST = unchecked((int)(0x80280801));

        [NativeTypeName("#define TPM_E_DOING_SELFTEST _HRESULT_TYPEDEF_(0x80280802L)")]
        public const int TPM_E_DOING_SELFTEST = unchecked((int)(0x80280802));

        [NativeTypeName("#define TPM_E_DEFEND_LOCK_RUNNING _HRESULT_TYPEDEF_(0x80280803L)")]
        public const int TPM_E_DEFEND_LOCK_RUNNING = unchecked((int)(0x80280803));

        [NativeTypeName("#define TPM_20_E_CONTEXT_GAP _HRESULT_TYPEDEF_(0x80280901L)")]
        public const int TPM_20_E_CONTEXT_GAP = unchecked((int)(0x80280901));

        [NativeTypeName("#define TPM_20_E_OBJECT_MEMORY _HRESULT_TYPEDEF_(0x80280902L)")]
        public const int TPM_20_E_OBJECT_MEMORY = unchecked((int)(0x80280902));

        [NativeTypeName("#define TPM_20_E_SESSION_MEMORY _HRESULT_TYPEDEF_(0x80280903L)")]
        public const int TPM_20_E_SESSION_MEMORY = unchecked((int)(0x80280903));

        [NativeTypeName("#define TPM_20_E_MEMORY _HRESULT_TYPEDEF_(0x80280904L)")]
        public const int TPM_20_E_MEMORY = unchecked((int)(0x80280904));

        [NativeTypeName("#define TPM_20_E_SESSION_HANDLES _HRESULT_TYPEDEF_(0x80280905L)")]
        public const int TPM_20_E_SESSION_HANDLES = unchecked((int)(0x80280905));

        [NativeTypeName("#define TPM_20_E_OBJECT_HANDLES _HRESULT_TYPEDEF_(0x80280906L)")]
        public const int TPM_20_E_OBJECT_HANDLES = unchecked((int)(0x80280906));

        [NativeTypeName("#define TPM_20_E_LOCALITY _HRESULT_TYPEDEF_(0x80280907L)")]
        public const int TPM_20_E_LOCALITY = unchecked((int)(0x80280907));

        [NativeTypeName("#define TPM_20_E_YIELDED _HRESULT_TYPEDEF_(0x80280908L)")]
        public const int TPM_20_E_YIELDED = unchecked((int)(0x80280908));

        [NativeTypeName("#define TPM_20_E_CANCELED _HRESULT_TYPEDEF_(0x80280909L)")]
        public const int TPM_20_E_CANCELED = unchecked((int)(0x80280909));

        [NativeTypeName("#define TPM_20_E_TESTING _HRESULT_TYPEDEF_(0x8028090AL)")]
        public const int TPM_20_E_TESTING = unchecked((int)(0x8028090A));

        [NativeTypeName("#define TPM_20_E_NV_RATE _HRESULT_TYPEDEF_(0x80280920L)")]
        public const int TPM_20_E_NV_RATE = unchecked((int)(0x80280920));

        [NativeTypeName("#define TPM_20_E_LOCKOUT _HRESULT_TYPEDEF_(0x80280921L)")]
        public const int TPM_20_E_LOCKOUT = unchecked((int)(0x80280921));

        [NativeTypeName("#define TPM_20_E_RETRY _HRESULT_TYPEDEF_(0x80280922L)")]
        public const int TPM_20_E_RETRY = unchecked((int)(0x80280922));

        [NativeTypeName("#define TPM_20_E_NV_UNAVAILABLE _HRESULT_TYPEDEF_(0x80280923L)")]
        public const int TPM_20_E_NV_UNAVAILABLE = unchecked((int)(0x80280923));

        [NativeTypeName("#define TBS_E_INTERNAL_ERROR _HRESULT_TYPEDEF_(0x80284001L)")]
        public const int TBS_E_INTERNAL_ERROR = unchecked((int)(0x80284001));

        [NativeTypeName("#define TBS_E_BAD_PARAMETER _HRESULT_TYPEDEF_(0x80284002L)")]
        public const int TBS_E_BAD_PARAMETER = unchecked((int)(0x80284002));

        [NativeTypeName("#define TBS_E_INVALID_OUTPUT_POINTER _HRESULT_TYPEDEF_(0x80284003L)")]
        public const int TBS_E_INVALID_OUTPUT_POINTER = unchecked((int)(0x80284003));

        [NativeTypeName("#define TBS_E_INVALID_CONTEXT _HRESULT_TYPEDEF_(0x80284004L)")]
        public const int TBS_E_INVALID_CONTEXT = unchecked((int)(0x80284004));

        [NativeTypeName("#define TBS_E_INSUFFICIENT_BUFFER _HRESULT_TYPEDEF_(0x80284005L)")]
        public const int TBS_E_INSUFFICIENT_BUFFER = unchecked((int)(0x80284005));

        [NativeTypeName("#define TBS_E_IOERROR _HRESULT_TYPEDEF_(0x80284006L)")]
        public const int TBS_E_IOERROR = unchecked((int)(0x80284006));

        [NativeTypeName("#define TBS_E_INVALID_CONTEXT_PARAM _HRESULT_TYPEDEF_(0x80284007L)")]
        public const int TBS_E_INVALID_CONTEXT_PARAM = unchecked((int)(0x80284007));

        [NativeTypeName("#define TBS_E_SERVICE_NOT_RUNNING _HRESULT_TYPEDEF_(0x80284008L)")]
        public const int TBS_E_SERVICE_NOT_RUNNING = unchecked((int)(0x80284008));

        [NativeTypeName("#define TBS_E_TOO_MANY_TBS_CONTEXTS _HRESULT_TYPEDEF_(0x80284009L)")]
        public const int TBS_E_TOO_MANY_TBS_CONTEXTS = unchecked((int)(0x80284009));

        [NativeTypeName("#define TBS_E_TOO_MANY_RESOURCES _HRESULT_TYPEDEF_(0x8028400AL)")]
        public const int TBS_E_TOO_MANY_RESOURCES = unchecked((int)(0x8028400A));

        [NativeTypeName("#define TBS_E_SERVICE_START_PENDING _HRESULT_TYPEDEF_(0x8028400BL)")]
        public const int TBS_E_SERVICE_START_PENDING = unchecked((int)(0x8028400B));

        [NativeTypeName("#define TBS_E_PPI_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x8028400CL)")]
        public const int TBS_E_PPI_NOT_SUPPORTED = unchecked((int)(0x8028400C));

        [NativeTypeName("#define TBS_E_COMMAND_CANCELED _HRESULT_TYPEDEF_(0x8028400DL)")]
        public const int TBS_E_COMMAND_CANCELED = unchecked((int)(0x8028400D));

        [NativeTypeName("#define TBS_E_BUFFER_TOO_LARGE _HRESULT_TYPEDEF_(0x8028400EL)")]
        public const int TBS_E_BUFFER_TOO_LARGE = unchecked((int)(0x8028400E));

        [NativeTypeName("#define TBS_E_TPM_NOT_FOUND _HRESULT_TYPEDEF_(0x8028400FL)")]
        public const int TBS_E_TPM_NOT_FOUND = unchecked((int)(0x8028400F));

        [NativeTypeName("#define TBS_E_SERVICE_DISABLED _HRESULT_TYPEDEF_(0x80284010L)")]
        public const int TBS_E_SERVICE_DISABLED = unchecked((int)(0x80284010));

        [NativeTypeName("#define TBS_E_NO_EVENT_LOG _HRESULT_TYPEDEF_(0x80284011L)")]
        public const int TBS_E_NO_EVENT_LOG = unchecked((int)(0x80284011));

        [NativeTypeName("#define TBS_E_ACCESS_DENIED _HRESULT_TYPEDEF_(0x80284012L)")]
        public const int TBS_E_ACCESS_DENIED = unchecked((int)(0x80284012));

        [NativeTypeName("#define TBS_E_PROVISIONING_NOT_ALLOWED _HRESULT_TYPEDEF_(0x80284013L)")]
        public const int TBS_E_PROVISIONING_NOT_ALLOWED = unchecked((int)(0x80284013));

        [NativeTypeName("#define TBS_E_PPI_FUNCTION_UNSUPPORTED _HRESULT_TYPEDEF_(0x80284014L)")]
        public const int TBS_E_PPI_FUNCTION_UNSUPPORTED = unchecked((int)(0x80284014));

        [NativeTypeName("#define TBS_E_OWNERAUTH_NOT_FOUND _HRESULT_TYPEDEF_(0x80284015L)")]
        public const int TBS_E_OWNERAUTH_NOT_FOUND = unchecked((int)(0x80284015));

        [NativeTypeName("#define TBS_E_PROVISIONING_INCOMPLETE _HRESULT_TYPEDEF_(0x80284016L)")]
        public const int TBS_E_PROVISIONING_INCOMPLETE = unchecked((int)(0x80284016));

        [NativeTypeName("#define TPMAPI_E_INVALID_STATE _HRESULT_TYPEDEF_(0x80290100L)")]
        public const int TPMAPI_E_INVALID_STATE = unchecked((int)(0x80290100));

        [NativeTypeName("#define TPMAPI_E_NOT_ENOUGH_DATA _HRESULT_TYPEDEF_(0x80290101L)")]
        public const int TPMAPI_E_NOT_ENOUGH_DATA = unchecked((int)(0x80290101));

        [NativeTypeName("#define TPMAPI_E_TOO_MUCH_DATA _HRESULT_TYPEDEF_(0x80290102L)")]
        public const int TPMAPI_E_TOO_MUCH_DATA = unchecked((int)(0x80290102));

        [NativeTypeName("#define TPMAPI_E_INVALID_OUTPUT_POINTER _HRESULT_TYPEDEF_(0x80290103L)")]
        public const int TPMAPI_E_INVALID_OUTPUT_POINTER = unchecked((int)(0x80290103));

        [NativeTypeName("#define TPMAPI_E_INVALID_PARAMETER _HRESULT_TYPEDEF_(0x80290104L)")]
        public const int TPMAPI_E_INVALID_PARAMETER = unchecked((int)(0x80290104));

        [NativeTypeName("#define TPMAPI_E_OUT_OF_MEMORY _HRESULT_TYPEDEF_(0x80290105L)")]
        public const int TPMAPI_E_OUT_OF_MEMORY = unchecked((int)(0x80290105));

        [NativeTypeName("#define TPMAPI_E_BUFFER_TOO_SMALL _HRESULT_TYPEDEF_(0x80290106L)")]
        public const int TPMAPI_E_BUFFER_TOO_SMALL = unchecked((int)(0x80290106));

        [NativeTypeName("#define TPMAPI_E_INTERNAL_ERROR _HRESULT_TYPEDEF_(0x80290107L)")]
        public const int TPMAPI_E_INTERNAL_ERROR = unchecked((int)(0x80290107));

        [NativeTypeName("#define TPMAPI_E_ACCESS_DENIED _HRESULT_TYPEDEF_(0x80290108L)")]
        public const int TPMAPI_E_ACCESS_DENIED = unchecked((int)(0x80290108));

        [NativeTypeName("#define TPMAPI_E_AUTHORIZATION_FAILED _HRESULT_TYPEDEF_(0x80290109L)")]
        public const int TPMAPI_E_AUTHORIZATION_FAILED = unchecked((int)(0x80290109));

        [NativeTypeName("#define TPMAPI_E_INVALID_CONTEXT_HANDLE _HRESULT_TYPEDEF_(0x8029010AL)")]
        public const int TPMAPI_E_INVALID_CONTEXT_HANDLE = unchecked((int)(0x8029010A));

        [NativeTypeName("#define TPMAPI_E_TBS_COMMUNICATION_ERROR _HRESULT_TYPEDEF_(0x8029010BL)")]
        public const int TPMAPI_E_TBS_COMMUNICATION_ERROR = unchecked((int)(0x8029010B));

        [NativeTypeName("#define TPMAPI_E_TPM_COMMAND_ERROR _HRESULT_TYPEDEF_(0x8029010CL)")]
        public const int TPMAPI_E_TPM_COMMAND_ERROR = unchecked((int)(0x8029010C));

        [NativeTypeName("#define TPMAPI_E_MESSAGE_TOO_LARGE _HRESULT_TYPEDEF_(0x8029010DL)")]
        public const int TPMAPI_E_MESSAGE_TOO_LARGE = unchecked((int)(0x8029010D));

        [NativeTypeName("#define TPMAPI_E_INVALID_ENCODING _HRESULT_TYPEDEF_(0x8029010EL)")]
        public const int TPMAPI_E_INVALID_ENCODING = unchecked((int)(0x8029010E));

        [NativeTypeName("#define TPMAPI_E_INVALID_KEY_SIZE _HRESULT_TYPEDEF_(0x8029010FL)")]
        public const int TPMAPI_E_INVALID_KEY_SIZE = unchecked((int)(0x8029010F));

        [NativeTypeName("#define TPMAPI_E_ENCRYPTION_FAILED _HRESULT_TYPEDEF_(0x80290110L)")]
        public const int TPMAPI_E_ENCRYPTION_FAILED = unchecked((int)(0x80290110));

        [NativeTypeName("#define TPMAPI_E_INVALID_KEY_PARAMS _HRESULT_TYPEDEF_(0x80290111L)")]
        public const int TPMAPI_E_INVALID_KEY_PARAMS = unchecked((int)(0x80290111));

        [NativeTypeName("#define TPMAPI_E_INVALID_MIGRATION_AUTHORIZATION_BLOB _HRESULT_TYPEDEF_(0x80290112L)")]
        public const int TPMAPI_E_INVALID_MIGRATION_AUTHORIZATION_BLOB = unchecked((int)(0x80290112));

        [NativeTypeName("#define TPMAPI_E_INVALID_PCR_INDEX _HRESULT_TYPEDEF_(0x80290113L)")]
        public const int TPMAPI_E_INVALID_PCR_INDEX = unchecked((int)(0x80290113));

        [NativeTypeName("#define TPMAPI_E_INVALID_DELEGATE_BLOB _HRESULT_TYPEDEF_(0x80290114L)")]
        public const int TPMAPI_E_INVALID_DELEGATE_BLOB = unchecked((int)(0x80290114));

        [NativeTypeName("#define TPMAPI_E_INVALID_CONTEXT_PARAMS _HRESULT_TYPEDEF_(0x80290115L)")]
        public const int TPMAPI_E_INVALID_CONTEXT_PARAMS = unchecked((int)(0x80290115));

        [NativeTypeName("#define TPMAPI_E_INVALID_KEY_BLOB _HRESULT_TYPEDEF_(0x80290116L)")]
        public const int TPMAPI_E_INVALID_KEY_BLOB = unchecked((int)(0x80290116));

        [NativeTypeName("#define TPMAPI_E_INVALID_PCR_DATA _HRESULT_TYPEDEF_(0x80290117L)")]
        public const int TPMAPI_E_INVALID_PCR_DATA = unchecked((int)(0x80290117));

        [NativeTypeName("#define TPMAPI_E_INVALID_OWNER_AUTH _HRESULT_TYPEDEF_(0x80290118L)")]
        public const int TPMAPI_E_INVALID_OWNER_AUTH = unchecked((int)(0x80290118));

        [NativeTypeName("#define TPMAPI_E_FIPS_RNG_CHECK_FAILED _HRESULT_TYPEDEF_(0x80290119L)")]
        public const int TPMAPI_E_FIPS_RNG_CHECK_FAILED = unchecked((int)(0x80290119));

        [NativeTypeName("#define TPMAPI_E_EMPTY_TCG_LOG _HRESULT_TYPEDEF_(0x8029011AL)")]
        public const int TPMAPI_E_EMPTY_TCG_LOG = unchecked((int)(0x8029011A));

        [NativeTypeName("#define TPMAPI_E_INVALID_TCG_LOG_ENTRY _HRESULT_TYPEDEF_(0x8029011BL)")]
        public const int TPMAPI_E_INVALID_TCG_LOG_ENTRY = unchecked((int)(0x8029011B));

        [NativeTypeName("#define TPMAPI_E_TCG_SEPARATOR_ABSENT _HRESULT_TYPEDEF_(0x8029011CL)")]
        public const int TPMAPI_E_TCG_SEPARATOR_ABSENT = unchecked((int)(0x8029011C));

        [NativeTypeName("#define TPMAPI_E_TCG_INVALID_DIGEST_ENTRY _HRESULT_TYPEDEF_(0x8029011DL)")]
        public const int TPMAPI_E_TCG_INVALID_DIGEST_ENTRY = unchecked((int)(0x8029011D));

        [NativeTypeName("#define TPMAPI_E_POLICY_DENIES_OPERATION _HRESULT_TYPEDEF_(0x8029011EL)")]
        public const int TPMAPI_E_POLICY_DENIES_OPERATION = unchecked((int)(0x8029011E));

        [NativeTypeName("#define TPMAPI_E_NV_BITS_NOT_DEFINED _HRESULT_TYPEDEF_(0x8029011FL)")]
        public const int TPMAPI_E_NV_BITS_NOT_DEFINED = unchecked((int)(0x8029011F));

        [NativeTypeName("#define TPMAPI_E_NV_BITS_NOT_READY _HRESULT_TYPEDEF_(0x80290120L)")]
        public const int TPMAPI_E_NV_BITS_NOT_READY = unchecked((int)(0x80290120));

        [NativeTypeName("#define TPMAPI_E_SEALING_KEY_NOT_AVAILABLE _HRESULT_TYPEDEF_(0x80290121L)")]
        public const int TPMAPI_E_SEALING_KEY_NOT_AVAILABLE = unchecked((int)(0x80290121));

        [NativeTypeName("#define TPMAPI_E_NO_AUTHORIZATION_CHAIN_FOUND _HRESULT_TYPEDEF_(0x80290122L)")]
        public const int TPMAPI_E_NO_AUTHORIZATION_CHAIN_FOUND = unchecked((int)(0x80290122));

        [NativeTypeName("#define TPMAPI_E_SVN_COUNTER_NOT_AVAILABLE _HRESULT_TYPEDEF_(0x80290123L)")]
        public const int TPMAPI_E_SVN_COUNTER_NOT_AVAILABLE = unchecked((int)(0x80290123));

        [NativeTypeName("#define TPMAPI_E_OWNER_AUTH_NOT_NULL _HRESULT_TYPEDEF_(0x80290124L)")]
        public const int TPMAPI_E_OWNER_AUTH_NOT_NULL = unchecked((int)(0x80290124));

        [NativeTypeName("#define TPMAPI_E_ENDORSEMENT_AUTH_NOT_NULL _HRESULT_TYPEDEF_(0x80290125L)")]
        public const int TPMAPI_E_ENDORSEMENT_AUTH_NOT_NULL = unchecked((int)(0x80290125));

        [NativeTypeName("#define TPMAPI_E_AUTHORIZATION_REVOKED _HRESULT_TYPEDEF_(0x80290126L)")]
        public const int TPMAPI_E_AUTHORIZATION_REVOKED = unchecked((int)(0x80290126));

        [NativeTypeName("#define TPMAPI_E_MALFORMED_AUTHORIZATION_KEY _HRESULT_TYPEDEF_(0x80290127L)")]
        public const int TPMAPI_E_MALFORMED_AUTHORIZATION_KEY = unchecked((int)(0x80290127));

        [NativeTypeName("#define TPMAPI_E_AUTHORIZING_KEY_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80290128L)")]
        public const int TPMAPI_E_AUTHORIZING_KEY_NOT_SUPPORTED = unchecked((int)(0x80290128));

        [NativeTypeName("#define TPMAPI_E_INVALID_AUTHORIZATION_SIGNATURE _HRESULT_TYPEDEF_(0x80290129L)")]
        public const int TPMAPI_E_INVALID_AUTHORIZATION_SIGNATURE = unchecked((int)(0x80290129));

        [NativeTypeName("#define TPMAPI_E_MALFORMED_AUTHORIZATION_POLICY _HRESULT_TYPEDEF_(0x8029012AL)")]
        public const int TPMAPI_E_MALFORMED_AUTHORIZATION_POLICY = unchecked((int)(0x8029012A));

        [NativeTypeName("#define TPMAPI_E_MALFORMED_AUTHORIZATION_OTHER _HRESULT_TYPEDEF_(0x8029012BL)")]
        public const int TPMAPI_E_MALFORMED_AUTHORIZATION_OTHER = unchecked((int)(0x8029012B));

        [NativeTypeName("#define TPMAPI_E_SEALING_KEY_CHANGED _HRESULT_TYPEDEF_(0x8029012CL)")]
        public const int TPMAPI_E_SEALING_KEY_CHANGED = unchecked((int)(0x8029012C));

        [NativeTypeName("#define TPMAPI_E_INVALID_TPM_VERSION _HRESULT_TYPEDEF_(0x8029012DL)")]
        public const int TPMAPI_E_INVALID_TPM_VERSION = unchecked((int)(0x8029012D));

        [NativeTypeName("#define TPMAPI_E_INVALID_POLICYAUTH_BLOB_TYPE _HRESULT_TYPEDEF_(0x8029012EL)")]
        public const int TPMAPI_E_INVALID_POLICYAUTH_BLOB_TYPE = unchecked((int)(0x8029012E));

        [NativeTypeName("#define TBSIMP_E_BUFFER_TOO_SMALL _HRESULT_TYPEDEF_(0x80290200L)")]
        public const int TBSIMP_E_BUFFER_TOO_SMALL = unchecked((int)(0x80290200));

        [NativeTypeName("#define TBSIMP_E_CLEANUP_FAILED _HRESULT_TYPEDEF_(0x80290201L)")]
        public const int TBSIMP_E_CLEANUP_FAILED = unchecked((int)(0x80290201));

        [NativeTypeName("#define TBSIMP_E_INVALID_CONTEXT_HANDLE _HRESULT_TYPEDEF_(0x80290202L)")]
        public const int TBSIMP_E_INVALID_CONTEXT_HANDLE = unchecked((int)(0x80290202));

        [NativeTypeName("#define TBSIMP_E_INVALID_CONTEXT_PARAM _HRESULT_TYPEDEF_(0x80290203L)")]
        public const int TBSIMP_E_INVALID_CONTEXT_PARAM = unchecked((int)(0x80290203));

        [NativeTypeName("#define TBSIMP_E_TPM_ERROR _HRESULT_TYPEDEF_(0x80290204L)")]
        public const int TBSIMP_E_TPM_ERROR = unchecked((int)(0x80290204));

        [NativeTypeName("#define TBSIMP_E_HASH_BAD_KEY _HRESULT_TYPEDEF_(0x80290205L)")]
        public const int TBSIMP_E_HASH_BAD_KEY = unchecked((int)(0x80290205));

        [NativeTypeName("#define TBSIMP_E_DUPLICATE_VHANDLE _HRESULT_TYPEDEF_(0x80290206L)")]
        public const int TBSIMP_E_DUPLICATE_VHANDLE = unchecked((int)(0x80290206));

        [NativeTypeName("#define TBSIMP_E_INVALID_OUTPUT_POINTER _HRESULT_TYPEDEF_(0x80290207L)")]
        public const int TBSIMP_E_INVALID_OUTPUT_POINTER = unchecked((int)(0x80290207));

        [NativeTypeName("#define TBSIMP_E_INVALID_PARAMETER _HRESULT_TYPEDEF_(0x80290208L)")]
        public const int TBSIMP_E_INVALID_PARAMETER = unchecked((int)(0x80290208));

        [NativeTypeName("#define TBSIMP_E_RPC_INIT_FAILED _HRESULT_TYPEDEF_(0x80290209L)")]
        public const int TBSIMP_E_RPC_INIT_FAILED = unchecked((int)(0x80290209));

        [NativeTypeName("#define TBSIMP_E_SCHEDULER_NOT_RUNNING _HRESULT_TYPEDEF_(0x8029020AL)")]
        public const int TBSIMP_E_SCHEDULER_NOT_RUNNING = unchecked((int)(0x8029020A));

        [NativeTypeName("#define TBSIMP_E_COMMAND_CANCELED _HRESULT_TYPEDEF_(0x8029020BL)")]
        public const int TBSIMP_E_COMMAND_CANCELED = unchecked((int)(0x8029020B));

        [NativeTypeName("#define TBSIMP_E_OUT_OF_MEMORY _HRESULT_TYPEDEF_(0x8029020CL)")]
        public const int TBSIMP_E_OUT_OF_MEMORY = unchecked((int)(0x8029020C));

        [NativeTypeName("#define TBSIMP_E_LIST_NO_MORE_ITEMS _HRESULT_TYPEDEF_(0x8029020DL)")]
        public const int TBSIMP_E_LIST_NO_MORE_ITEMS = unchecked((int)(0x8029020D));

        [NativeTypeName("#define TBSIMP_E_LIST_NOT_FOUND _HRESULT_TYPEDEF_(0x8029020EL)")]
        public const int TBSIMP_E_LIST_NOT_FOUND = unchecked((int)(0x8029020E));

        [NativeTypeName("#define TBSIMP_E_NOT_ENOUGH_SPACE _HRESULT_TYPEDEF_(0x8029020FL)")]
        public const int TBSIMP_E_NOT_ENOUGH_SPACE = unchecked((int)(0x8029020F));

        [NativeTypeName("#define TBSIMP_E_NOT_ENOUGH_TPM_CONTEXTS _HRESULT_TYPEDEF_(0x80290210L)")]
        public const int TBSIMP_E_NOT_ENOUGH_TPM_CONTEXTS = unchecked((int)(0x80290210));

        [NativeTypeName("#define TBSIMP_E_COMMAND_FAILED _HRESULT_TYPEDEF_(0x80290211L)")]
        public const int TBSIMP_E_COMMAND_FAILED = unchecked((int)(0x80290211));

        [NativeTypeName("#define TBSIMP_E_UNKNOWN_ORDINAL _HRESULT_TYPEDEF_(0x80290212L)")]
        public const int TBSIMP_E_UNKNOWN_ORDINAL = unchecked((int)(0x80290212));

        [NativeTypeName("#define TBSIMP_E_RESOURCE_EXPIRED _HRESULT_TYPEDEF_(0x80290213L)")]
        public const int TBSIMP_E_RESOURCE_EXPIRED = unchecked((int)(0x80290213));

        [NativeTypeName("#define TBSIMP_E_INVALID_RESOURCE _HRESULT_TYPEDEF_(0x80290214L)")]
        public const int TBSIMP_E_INVALID_RESOURCE = unchecked((int)(0x80290214));

        [NativeTypeName("#define TBSIMP_E_NOTHING_TO_UNLOAD _HRESULT_TYPEDEF_(0x80290215L)")]
        public const int TBSIMP_E_NOTHING_TO_UNLOAD = unchecked((int)(0x80290215));

        [NativeTypeName("#define TBSIMP_E_HASH_TABLE_FULL _HRESULT_TYPEDEF_(0x80290216L)")]
        public const int TBSIMP_E_HASH_TABLE_FULL = unchecked((int)(0x80290216));

        [NativeTypeName("#define TBSIMP_E_TOO_MANY_TBS_CONTEXTS _HRESULT_TYPEDEF_(0x80290217L)")]
        public const int TBSIMP_E_TOO_MANY_TBS_CONTEXTS = unchecked((int)(0x80290217));

        [NativeTypeName("#define TBSIMP_E_TOO_MANY_RESOURCES _HRESULT_TYPEDEF_(0x80290218L)")]
        public const int TBSIMP_E_TOO_MANY_RESOURCES = unchecked((int)(0x80290218));

        [NativeTypeName("#define TBSIMP_E_PPI_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80290219L)")]
        public const int TBSIMP_E_PPI_NOT_SUPPORTED = unchecked((int)(0x80290219));

        [NativeTypeName("#define TBSIMP_E_TPM_INCOMPATIBLE _HRESULT_TYPEDEF_(0x8029021AL)")]
        public const int TBSIMP_E_TPM_INCOMPATIBLE = unchecked((int)(0x8029021A));

        [NativeTypeName("#define TBSIMP_E_NO_EVENT_LOG _HRESULT_TYPEDEF_(0x8029021BL)")]
        public const int TBSIMP_E_NO_EVENT_LOG = unchecked((int)(0x8029021B));

        [NativeTypeName("#define TPM_E_PPI_ACPI_FAILURE _HRESULT_TYPEDEF_(0x80290300L)")]
        public const int TPM_E_PPI_ACPI_FAILURE = unchecked((int)(0x80290300));

        [NativeTypeName("#define TPM_E_PPI_USER_ABORT _HRESULT_TYPEDEF_(0x80290301L)")]
        public const int TPM_E_PPI_USER_ABORT = unchecked((int)(0x80290301));

        [NativeTypeName("#define TPM_E_PPI_BIOS_FAILURE _HRESULT_TYPEDEF_(0x80290302L)")]
        public const int TPM_E_PPI_BIOS_FAILURE = unchecked((int)(0x80290302));

        [NativeTypeName("#define TPM_E_PPI_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80290303L)")]
        public const int TPM_E_PPI_NOT_SUPPORTED = unchecked((int)(0x80290303));

        [NativeTypeName("#define TPM_E_PPI_BLOCKED_IN_BIOS _HRESULT_TYPEDEF_(0x80290304L)")]
        public const int TPM_E_PPI_BLOCKED_IN_BIOS = unchecked((int)(0x80290304));

        [NativeTypeName("#define TPM_E_PCP_ERROR_MASK _HRESULT_TYPEDEF_(0x80290400L)")]
        public const int TPM_E_PCP_ERROR_MASK = unchecked((int)(0x80290400));

        [NativeTypeName("#define TPM_E_PCP_DEVICE_NOT_READY _HRESULT_TYPEDEF_(0x80290401L)")]
        public const int TPM_E_PCP_DEVICE_NOT_READY = unchecked((int)(0x80290401));

        [NativeTypeName("#define TPM_E_PCP_INVALID_HANDLE _HRESULT_TYPEDEF_(0x80290402L)")]
        public const int TPM_E_PCP_INVALID_HANDLE = unchecked((int)(0x80290402));

        [NativeTypeName("#define TPM_E_PCP_INVALID_PARAMETER _HRESULT_TYPEDEF_(0x80290403L)")]
        public const int TPM_E_PCP_INVALID_PARAMETER = unchecked((int)(0x80290403));

        [NativeTypeName("#define TPM_E_PCP_FLAG_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80290404L)")]
        public const int TPM_E_PCP_FLAG_NOT_SUPPORTED = unchecked((int)(0x80290404));

        [NativeTypeName("#define TPM_E_PCP_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80290405L)")]
        public const int TPM_E_PCP_NOT_SUPPORTED = unchecked((int)(0x80290405));

        [NativeTypeName("#define TPM_E_PCP_BUFFER_TOO_SMALL _HRESULT_TYPEDEF_(0x80290406L)")]
        public const int TPM_E_PCP_BUFFER_TOO_SMALL = unchecked((int)(0x80290406));

        [NativeTypeName("#define TPM_E_PCP_INTERNAL_ERROR _HRESULT_TYPEDEF_(0x80290407L)")]
        public const int TPM_E_PCP_INTERNAL_ERROR = unchecked((int)(0x80290407));

        [NativeTypeName("#define TPM_E_PCP_AUTHENTICATION_FAILED _HRESULT_TYPEDEF_(0x80290408L)")]
        public const int TPM_E_PCP_AUTHENTICATION_FAILED = unchecked((int)(0x80290408));

        [NativeTypeName("#define TPM_E_PCP_AUTHENTICATION_IGNORED _HRESULT_TYPEDEF_(0x80290409L)")]
        public const int TPM_E_PCP_AUTHENTICATION_IGNORED = unchecked((int)(0x80290409));

        [NativeTypeName("#define TPM_E_PCP_POLICY_NOT_FOUND _HRESULT_TYPEDEF_(0x8029040AL)")]
        public const int TPM_E_PCP_POLICY_NOT_FOUND = unchecked((int)(0x8029040A));

        [NativeTypeName("#define TPM_E_PCP_PROFILE_NOT_FOUND _HRESULT_TYPEDEF_(0x8029040BL)")]
        public const int TPM_E_PCP_PROFILE_NOT_FOUND = unchecked((int)(0x8029040B));

        [NativeTypeName("#define TPM_E_PCP_VALIDATION_FAILED _HRESULT_TYPEDEF_(0x8029040CL)")]
        public const int TPM_E_PCP_VALIDATION_FAILED = unchecked((int)(0x8029040C));

        [NativeTypeName("#define TPM_E_PCP_WRONG_PARENT _HRESULT_TYPEDEF_(0x8029040EL)")]
        public const int TPM_E_PCP_WRONG_PARENT = unchecked((int)(0x8029040E));

        [NativeTypeName("#define TPM_E_KEY_NOT_LOADED _HRESULT_TYPEDEF_(0x8029040FL)")]
        public const int TPM_E_KEY_NOT_LOADED = unchecked((int)(0x8029040F));

        [NativeTypeName("#define TPM_E_NO_KEY_CERTIFICATION _HRESULT_TYPEDEF_(0x80290410L)")]
        public const int TPM_E_NO_KEY_CERTIFICATION = unchecked((int)(0x80290410));

        [NativeTypeName("#define TPM_E_KEY_NOT_FINALIZED _HRESULT_TYPEDEF_(0x80290411L)")]
        public const int TPM_E_KEY_NOT_FINALIZED = unchecked((int)(0x80290411));

        [NativeTypeName("#define TPM_E_ATTESTATION_CHALLENGE_NOT_SET _HRESULT_TYPEDEF_(0x80290412L)")]
        public const int TPM_E_ATTESTATION_CHALLENGE_NOT_SET = unchecked((int)(0x80290412));

        [NativeTypeName("#define TPM_E_NOT_PCR_BOUND _HRESULT_TYPEDEF_(0x80290413L)")]
        public const int TPM_E_NOT_PCR_BOUND = unchecked((int)(0x80290413));

        [NativeTypeName("#define TPM_E_KEY_ALREADY_FINALIZED _HRESULT_TYPEDEF_(0x80290414L)")]
        public const int TPM_E_KEY_ALREADY_FINALIZED = unchecked((int)(0x80290414));

        [NativeTypeName("#define TPM_E_KEY_USAGE_POLICY_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80290415L)")]
        public const int TPM_E_KEY_USAGE_POLICY_NOT_SUPPORTED = unchecked((int)(0x80290415));

        [NativeTypeName("#define TPM_E_KEY_USAGE_POLICY_INVALID _HRESULT_TYPEDEF_(0x80290416L)")]
        public const int TPM_E_KEY_USAGE_POLICY_INVALID = unchecked((int)(0x80290416));

        [NativeTypeName("#define TPM_E_SOFT_KEY_ERROR _HRESULT_TYPEDEF_(0x80290417L)")]
        public const int TPM_E_SOFT_KEY_ERROR = unchecked((int)(0x80290417));

        [NativeTypeName("#define TPM_E_KEY_NOT_AUTHENTICATED _HRESULT_TYPEDEF_(0x80290418L)")]
        public const int TPM_E_KEY_NOT_AUTHENTICATED = unchecked((int)(0x80290418));

        [NativeTypeName("#define TPM_E_PCP_KEY_NOT_AIK _HRESULT_TYPEDEF_(0x80290419L)")]
        public const int TPM_E_PCP_KEY_NOT_AIK = unchecked((int)(0x80290419));

        [NativeTypeName("#define TPM_E_KEY_NOT_SIGNING_KEY _HRESULT_TYPEDEF_(0x8029041AL)")]
        public const int TPM_E_KEY_NOT_SIGNING_KEY = unchecked((int)(0x8029041A));

        [NativeTypeName("#define TPM_E_LOCKED_OUT _HRESULT_TYPEDEF_(0x8029041BL)")]
        public const int TPM_E_LOCKED_OUT = unchecked((int)(0x8029041B));

        [NativeTypeName("#define TPM_E_CLAIM_TYPE_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x8029041CL)")]
        public const int TPM_E_CLAIM_TYPE_NOT_SUPPORTED = unchecked((int)(0x8029041C));

        [NativeTypeName("#define TPM_E_VERSION_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x8029041DL)")]
        public const int TPM_E_VERSION_NOT_SUPPORTED = unchecked((int)(0x8029041D));

        [NativeTypeName("#define TPM_E_BUFFER_LENGTH_MISMATCH _HRESULT_TYPEDEF_(0x8029041EL)")]
        public const int TPM_E_BUFFER_LENGTH_MISMATCH = unchecked((int)(0x8029041E));

        [NativeTypeName("#define TPM_E_PCP_IFX_RSA_KEY_CREATION_BLOCKED _HRESULT_TYPEDEF_(0x8029041FL)")]
        public const int TPM_E_PCP_IFX_RSA_KEY_CREATION_BLOCKED = unchecked((int)(0x8029041F));

        [NativeTypeName("#define TPM_E_PCP_TICKET_MISSING _HRESULT_TYPEDEF_(0x80290420L)")]
        public const int TPM_E_PCP_TICKET_MISSING = unchecked((int)(0x80290420));

        [NativeTypeName("#define TPM_E_PCP_RAW_POLICY_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80290421L)")]
        public const int TPM_E_PCP_RAW_POLICY_NOT_SUPPORTED = unchecked((int)(0x80290421));

        [NativeTypeName("#define TPM_E_PCP_KEY_HANDLE_INVALIDATED _HRESULT_TYPEDEF_(0x80290422L)")]
        public const int TPM_E_PCP_KEY_HANDLE_INVALIDATED = unchecked((int)(0x80290422));

        [NativeTypeName("#define TPM_E_PCP_UNSUPPORTED_PSS_SALT _HRESULT_TYPEDEF_(0x40290423L)")]
        public const int TPM_E_PCP_UNSUPPORTED_PSS_SALT = ((int)(0x40290423));

        [NativeTypeName("#define TPM_E_PCP_PLATFORM_CLAIM_MAY_BE_OUTDATED _HRESULT_TYPEDEF_(0x40290424L)")]
        public const int TPM_E_PCP_PLATFORM_CLAIM_MAY_BE_OUTDATED = ((int)(0x40290424));

        [NativeTypeName("#define TPM_E_PCP_PLATFORM_CLAIM_OUTDATED _HRESULT_TYPEDEF_(0x40290425L)")]
        public const int TPM_E_PCP_PLATFORM_CLAIM_OUTDATED = ((int)(0x40290425));

        [NativeTypeName("#define TPM_E_PCP_PLATFORM_CLAIM_REBOOT _HRESULT_TYPEDEF_(0x40290426L)")]
        public const int TPM_E_PCP_PLATFORM_CLAIM_REBOOT = ((int)(0x40290426));

        [NativeTypeName("#define TPM_E_ZERO_EXHAUST_ENABLED _HRESULT_TYPEDEF_(0x80290500L)")]
        public const int TPM_E_ZERO_EXHAUST_ENABLED = unchecked((int)(0x80290500));

        [NativeTypeName("#define TPM_E_PROVISIONING_INCOMPLETE _HRESULT_TYPEDEF_(0x80290600L)")]
        public const int TPM_E_PROVISIONING_INCOMPLETE = unchecked((int)(0x80290600));

        [NativeTypeName("#define TPM_E_INVALID_OWNER_AUTH _HRESULT_TYPEDEF_(0x80290601L)")]
        public const int TPM_E_INVALID_OWNER_AUTH = unchecked((int)(0x80290601));

        [NativeTypeName("#define TPM_E_TOO_MUCH_DATA _HRESULT_TYPEDEF_(0x80290602L)")]
        public const int TPM_E_TOO_MUCH_DATA = unchecked((int)(0x80290602));

        [NativeTypeName("#define PLA_E_DCS_NOT_FOUND _HRESULT_TYPEDEF_(0x80300002L)")]
        public const int PLA_E_DCS_NOT_FOUND = unchecked((int)(0x80300002));

        [NativeTypeName("#define PLA_E_DCS_IN_USE _HRESULT_TYPEDEF_(0x803000AAL)")]
        public const int PLA_E_DCS_IN_USE = unchecked((int)(0x803000AA));

        [NativeTypeName("#define PLA_E_TOO_MANY_FOLDERS _HRESULT_TYPEDEF_(0x80300045L)")]
        public const int PLA_E_TOO_MANY_FOLDERS = unchecked((int)(0x80300045));

        [NativeTypeName("#define PLA_E_NO_MIN_DISK _HRESULT_TYPEDEF_(0x80300070L)")]
        public const int PLA_E_NO_MIN_DISK = unchecked((int)(0x80300070));

        [NativeTypeName("#define PLA_E_DCS_ALREADY_EXISTS _HRESULT_TYPEDEF_(0x803000B7L)")]
        public const int PLA_E_DCS_ALREADY_EXISTS = unchecked((int)(0x803000B7));

        [NativeTypeName("#define PLA_S_PROPERTY_IGNORED _HRESULT_TYPEDEF_(0x00300100L)")]
        public const int PLA_S_PROPERTY_IGNORED = ((int)(0x00300100));

        [NativeTypeName("#define PLA_E_PROPERTY_CONFLICT _HRESULT_TYPEDEF_(0x80300101L)")]
        public const int PLA_E_PROPERTY_CONFLICT = unchecked((int)(0x80300101));

        [NativeTypeName("#define PLA_E_DCS_SINGLETON_REQUIRED _HRESULT_TYPEDEF_(0x80300102L)")]
        public const int PLA_E_DCS_SINGLETON_REQUIRED = unchecked((int)(0x80300102));

        [NativeTypeName("#define PLA_E_CREDENTIALS_REQUIRED _HRESULT_TYPEDEF_(0x80300103L)")]
        public const int PLA_E_CREDENTIALS_REQUIRED = unchecked((int)(0x80300103));

        [NativeTypeName("#define PLA_E_DCS_NOT_RUNNING _HRESULT_TYPEDEF_(0x80300104L)")]
        public const int PLA_E_DCS_NOT_RUNNING = unchecked((int)(0x80300104));

        [NativeTypeName("#define PLA_E_CONFLICT_INCL_EXCL_API _HRESULT_TYPEDEF_(0x80300105L)")]
        public const int PLA_E_CONFLICT_INCL_EXCL_API = unchecked((int)(0x80300105));

        [NativeTypeName("#define PLA_E_NETWORK_EXE_NOT_VALID _HRESULT_TYPEDEF_(0x80300106L)")]
        public const int PLA_E_NETWORK_EXE_NOT_VALID = unchecked((int)(0x80300106));

        [NativeTypeName("#define PLA_E_EXE_ALREADY_CONFIGURED _HRESULT_TYPEDEF_(0x80300107L)")]
        public const int PLA_E_EXE_ALREADY_CONFIGURED = unchecked((int)(0x80300107));

        [NativeTypeName("#define PLA_E_EXE_PATH_NOT_VALID _HRESULT_TYPEDEF_(0x80300108L)")]
        public const int PLA_E_EXE_PATH_NOT_VALID = unchecked((int)(0x80300108));

        [NativeTypeName("#define PLA_E_DC_ALREADY_EXISTS _HRESULT_TYPEDEF_(0x80300109L)")]
        public const int PLA_E_DC_ALREADY_EXISTS = unchecked((int)(0x80300109));

        [NativeTypeName("#define PLA_E_DCS_START_WAIT_TIMEOUT _HRESULT_TYPEDEF_(0x8030010AL)")]
        public const int PLA_E_DCS_START_WAIT_TIMEOUT = unchecked((int)(0x8030010A));

        [NativeTypeName("#define PLA_E_DC_START_WAIT_TIMEOUT _HRESULT_TYPEDEF_(0x8030010BL)")]
        public const int PLA_E_DC_START_WAIT_TIMEOUT = unchecked((int)(0x8030010B));

        [NativeTypeName("#define PLA_E_REPORT_WAIT_TIMEOUT _HRESULT_TYPEDEF_(0x8030010CL)")]
        public const int PLA_E_REPORT_WAIT_TIMEOUT = unchecked((int)(0x8030010C));

        [NativeTypeName("#define PLA_E_NO_DUPLICATES _HRESULT_TYPEDEF_(0x8030010DL)")]
        public const int PLA_E_NO_DUPLICATES = unchecked((int)(0x8030010D));

        [NativeTypeName("#define PLA_E_EXE_FULL_PATH_REQUIRED _HRESULT_TYPEDEF_(0x8030010EL)")]
        public const int PLA_E_EXE_FULL_PATH_REQUIRED = unchecked((int)(0x8030010E));

        [NativeTypeName("#define PLA_E_INVALID_SESSION_NAME _HRESULT_TYPEDEF_(0x8030010FL)")]
        public const int PLA_E_INVALID_SESSION_NAME = unchecked((int)(0x8030010F));

        [NativeTypeName("#define PLA_E_PLA_CHANNEL_NOT_ENABLED _HRESULT_TYPEDEF_(0x80300110L)")]
        public const int PLA_E_PLA_CHANNEL_NOT_ENABLED = unchecked((int)(0x80300110));

        [NativeTypeName("#define PLA_E_TASKSCHED_CHANNEL_NOT_ENABLED _HRESULT_TYPEDEF_(0x80300111L)")]
        public const int PLA_E_TASKSCHED_CHANNEL_NOT_ENABLED = unchecked((int)(0x80300111));

        [NativeTypeName("#define PLA_E_RULES_MANAGER_FAILED _HRESULT_TYPEDEF_(0x80300112L)")]
        public const int PLA_E_RULES_MANAGER_FAILED = unchecked((int)(0x80300112));

        [NativeTypeName("#define PLA_E_CABAPI_FAILURE _HRESULT_TYPEDEF_(0x80300113L)")]
        public const int PLA_E_CABAPI_FAILURE = unchecked((int)(0x80300113));

        [NativeTypeName("#define FVE_E_LOCKED_VOLUME _HRESULT_TYPEDEF_(0x80310000L)")]
        public const int FVE_E_LOCKED_VOLUME = unchecked((int)(0x80310000));

        [NativeTypeName("#define FVE_E_NOT_ENCRYPTED _HRESULT_TYPEDEF_(0x80310001L)")]
        public const int FVE_E_NOT_ENCRYPTED = unchecked((int)(0x80310001));

        [NativeTypeName("#define FVE_E_NO_TPM_BIOS _HRESULT_TYPEDEF_(0x80310002L)")]
        public const int FVE_E_NO_TPM_BIOS = unchecked((int)(0x80310002));

        [NativeTypeName("#define FVE_E_NO_MBR_METRIC _HRESULT_TYPEDEF_(0x80310003L)")]
        public const int FVE_E_NO_MBR_METRIC = unchecked((int)(0x80310003));

        [NativeTypeName("#define FVE_E_NO_BOOTSECTOR_METRIC _HRESULT_TYPEDEF_(0x80310004L)")]
        public const int FVE_E_NO_BOOTSECTOR_METRIC = unchecked((int)(0x80310004));

        [NativeTypeName("#define FVE_E_NO_BOOTMGR_METRIC _HRESULT_TYPEDEF_(0x80310005L)")]
        public const int FVE_E_NO_BOOTMGR_METRIC = unchecked((int)(0x80310005));

        [NativeTypeName("#define FVE_E_WRONG_BOOTMGR _HRESULT_TYPEDEF_(0x80310006L)")]
        public const int FVE_E_WRONG_BOOTMGR = unchecked((int)(0x80310006));

        [NativeTypeName("#define FVE_E_SECURE_KEY_REQUIRED _HRESULT_TYPEDEF_(0x80310007L)")]
        public const int FVE_E_SECURE_KEY_REQUIRED = unchecked((int)(0x80310007));

        [NativeTypeName("#define FVE_E_NOT_ACTIVATED _HRESULT_TYPEDEF_(0x80310008L)")]
        public const int FVE_E_NOT_ACTIVATED = unchecked((int)(0x80310008));

        [NativeTypeName("#define FVE_E_ACTION_NOT_ALLOWED _HRESULT_TYPEDEF_(0x80310009L)")]
        public const int FVE_E_ACTION_NOT_ALLOWED = unchecked((int)(0x80310009));

        [NativeTypeName("#define FVE_E_AD_SCHEMA_NOT_INSTALLED _HRESULT_TYPEDEF_(0x8031000AL)")]
        public const int FVE_E_AD_SCHEMA_NOT_INSTALLED = unchecked((int)(0x8031000A));

        [NativeTypeName("#define FVE_E_AD_INVALID_DATATYPE _HRESULT_TYPEDEF_(0x8031000BL)")]
        public const int FVE_E_AD_INVALID_DATATYPE = unchecked((int)(0x8031000B));

        [NativeTypeName("#define FVE_E_AD_INVALID_DATASIZE _HRESULT_TYPEDEF_(0x8031000CL)")]
        public const int FVE_E_AD_INVALID_DATASIZE = unchecked((int)(0x8031000C));

        [NativeTypeName("#define FVE_E_AD_NO_VALUES _HRESULT_TYPEDEF_(0x8031000DL)")]
        public const int FVE_E_AD_NO_VALUES = unchecked((int)(0x8031000D));

        [NativeTypeName("#define FVE_E_AD_ATTR_NOT_SET _HRESULT_TYPEDEF_(0x8031000EL)")]
        public const int FVE_E_AD_ATTR_NOT_SET = unchecked((int)(0x8031000E));

        [NativeTypeName("#define FVE_E_AD_GUID_NOT_FOUND _HRESULT_TYPEDEF_(0x8031000FL)")]
        public const int FVE_E_AD_GUID_NOT_FOUND = unchecked((int)(0x8031000F));

        [NativeTypeName("#define FVE_E_BAD_INFORMATION _HRESULT_TYPEDEF_(0x80310010L)")]
        public const int FVE_E_BAD_INFORMATION = unchecked((int)(0x80310010));

        [NativeTypeName("#define FVE_E_TOO_SMALL _HRESULT_TYPEDEF_(0x80310011L)")]
        public const int FVE_E_TOO_SMALL = unchecked((int)(0x80310011));

        [NativeTypeName("#define FVE_E_SYSTEM_VOLUME _HRESULT_TYPEDEF_(0x80310012L)")]
        public const int FVE_E_SYSTEM_VOLUME = unchecked((int)(0x80310012));

        [NativeTypeName("#define FVE_E_FAILED_WRONG_FS _HRESULT_TYPEDEF_(0x80310013L)")]
        public const int FVE_E_FAILED_WRONG_FS = unchecked((int)(0x80310013));

        [NativeTypeName("#define FVE_E_BAD_PARTITION_SIZE _HRESULT_TYPEDEF_(0x80310014L)")]
        public const int FVE_E_BAD_PARTITION_SIZE = unchecked((int)(0x80310014));

        [NativeTypeName("#define FVE_E_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80310015L)")]
        public const int FVE_E_NOT_SUPPORTED = unchecked((int)(0x80310015));

        [NativeTypeName("#define FVE_E_BAD_DATA _HRESULT_TYPEDEF_(0x80310016L)")]
        public const int FVE_E_BAD_DATA = unchecked((int)(0x80310016));

        [NativeTypeName("#define FVE_E_VOLUME_NOT_BOUND _HRESULT_TYPEDEF_(0x80310017L)")]
        public const int FVE_E_VOLUME_NOT_BOUND = unchecked((int)(0x80310017));

        [NativeTypeName("#define FVE_E_TPM_NOT_OWNED _HRESULT_TYPEDEF_(0x80310018L)")]
        public const int FVE_E_TPM_NOT_OWNED = unchecked((int)(0x80310018));

        [NativeTypeName("#define FVE_E_NOT_DATA_VOLUME _HRESULT_TYPEDEF_(0x80310019L)")]
        public const int FVE_E_NOT_DATA_VOLUME = unchecked((int)(0x80310019));

        [NativeTypeName("#define FVE_E_AD_INSUFFICIENT_BUFFER _HRESULT_TYPEDEF_(0x8031001AL)")]
        public const int FVE_E_AD_INSUFFICIENT_BUFFER = unchecked((int)(0x8031001A));

        [NativeTypeName("#define FVE_E_CONV_READ _HRESULT_TYPEDEF_(0x8031001BL)")]
        public const int FVE_E_CONV_READ = unchecked((int)(0x8031001B));

        [NativeTypeName("#define FVE_E_CONV_WRITE _HRESULT_TYPEDEF_(0x8031001CL)")]
        public const int FVE_E_CONV_WRITE = unchecked((int)(0x8031001C));

        [NativeTypeName("#define FVE_E_KEY_REQUIRED _HRESULT_TYPEDEF_(0x8031001DL)")]
        public const int FVE_E_KEY_REQUIRED = unchecked((int)(0x8031001D));

        [NativeTypeName("#define FVE_E_CLUSTERING_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x8031001EL)")]
        public const int FVE_E_CLUSTERING_NOT_SUPPORTED = unchecked((int)(0x8031001E));

        [NativeTypeName("#define FVE_E_VOLUME_BOUND_ALREADY _HRESULT_TYPEDEF_(0x8031001FL)")]
        public const int FVE_E_VOLUME_BOUND_ALREADY = unchecked((int)(0x8031001F));

        [NativeTypeName("#define FVE_E_OS_NOT_PROTECTED _HRESULT_TYPEDEF_(0x80310020L)")]
        public const int FVE_E_OS_NOT_PROTECTED = unchecked((int)(0x80310020));

        [NativeTypeName("#define FVE_E_PROTECTION_DISABLED _HRESULT_TYPEDEF_(0x80310021L)")]
        public const int FVE_E_PROTECTION_DISABLED = unchecked((int)(0x80310021));

        [NativeTypeName("#define FVE_E_RECOVERY_KEY_REQUIRED _HRESULT_TYPEDEF_(0x80310022L)")]
        public const int FVE_E_RECOVERY_KEY_REQUIRED = unchecked((int)(0x80310022));

        [NativeTypeName("#define FVE_E_FOREIGN_VOLUME _HRESULT_TYPEDEF_(0x80310023L)")]
        public const int FVE_E_FOREIGN_VOLUME = unchecked((int)(0x80310023));

        [NativeTypeName("#define FVE_E_OVERLAPPED_UPDATE _HRESULT_TYPEDEF_(0x80310024L)")]
        public const int FVE_E_OVERLAPPED_UPDATE = unchecked((int)(0x80310024));

        [NativeTypeName("#define FVE_E_TPM_SRK_AUTH_NOT_ZERO _HRESULT_TYPEDEF_(0x80310025L)")]
        public const int FVE_E_TPM_SRK_AUTH_NOT_ZERO = unchecked((int)(0x80310025));

        [NativeTypeName("#define FVE_E_FAILED_SECTOR_SIZE _HRESULT_TYPEDEF_(0x80310026L)")]
        public const int FVE_E_FAILED_SECTOR_SIZE = unchecked((int)(0x80310026));

        [NativeTypeName("#define FVE_E_FAILED_AUTHENTICATION _HRESULT_TYPEDEF_(0x80310027L)")]
        public const int FVE_E_FAILED_AUTHENTICATION = unchecked((int)(0x80310027));

        [NativeTypeName("#define FVE_E_NOT_OS_VOLUME _HRESULT_TYPEDEF_(0x80310028L)")]
        public const int FVE_E_NOT_OS_VOLUME = unchecked((int)(0x80310028));

        [NativeTypeName("#define FVE_E_AUTOUNLOCK_ENABLED _HRESULT_TYPEDEF_(0x80310029L)")]
        public const int FVE_E_AUTOUNLOCK_ENABLED = unchecked((int)(0x80310029));

        [NativeTypeName("#define FVE_E_WRONG_BOOTSECTOR _HRESULT_TYPEDEF_(0x8031002AL)")]
        public const int FVE_E_WRONG_BOOTSECTOR = unchecked((int)(0x8031002A));

        [NativeTypeName("#define FVE_E_WRONG_SYSTEM_FS _HRESULT_TYPEDEF_(0x8031002BL)")]
        public const int FVE_E_WRONG_SYSTEM_FS = unchecked((int)(0x8031002B));

        [NativeTypeName("#define FVE_E_POLICY_PASSWORD_REQUIRED _HRESULT_TYPEDEF_(0x8031002CL)")]
        public const int FVE_E_POLICY_PASSWORD_REQUIRED = unchecked((int)(0x8031002C));

        [NativeTypeName("#define FVE_E_CANNOT_SET_FVEK_ENCRYPTED _HRESULT_TYPEDEF_(0x8031002DL)")]
        public const int FVE_E_CANNOT_SET_FVEK_ENCRYPTED = unchecked((int)(0x8031002D));

        [NativeTypeName("#define FVE_E_CANNOT_ENCRYPT_NO_KEY _HRESULT_TYPEDEF_(0x8031002EL)")]
        public const int FVE_E_CANNOT_ENCRYPT_NO_KEY = unchecked((int)(0x8031002E));

        [NativeTypeName("#define FVE_E_BOOTABLE_CDDVD _HRESULT_TYPEDEF_(0x80310030L)")]
        public const int FVE_E_BOOTABLE_CDDVD = unchecked((int)(0x80310030));

        [NativeTypeName("#define FVE_E_PROTECTOR_EXISTS _HRESULT_TYPEDEF_(0x80310031L)")]
        public const int FVE_E_PROTECTOR_EXISTS = unchecked((int)(0x80310031));

        [NativeTypeName("#define FVE_E_RELATIVE_PATH _HRESULT_TYPEDEF_(0x80310032L)")]
        public const int FVE_E_RELATIVE_PATH = unchecked((int)(0x80310032));

        [NativeTypeName("#define FVE_E_PROTECTOR_NOT_FOUND _HRESULT_TYPEDEF_(0x80310033L)")]
        public const int FVE_E_PROTECTOR_NOT_FOUND = unchecked((int)(0x80310033));

        [NativeTypeName("#define FVE_E_INVALID_KEY_FORMAT _HRESULT_TYPEDEF_(0x80310034L)")]
        public const int FVE_E_INVALID_KEY_FORMAT = unchecked((int)(0x80310034));

        [NativeTypeName("#define FVE_E_INVALID_PASSWORD_FORMAT _HRESULT_TYPEDEF_(0x80310035L)")]
        public const int FVE_E_INVALID_PASSWORD_FORMAT = unchecked((int)(0x80310035));

        [NativeTypeName("#define FVE_E_FIPS_RNG_CHECK_FAILED _HRESULT_TYPEDEF_(0x80310036L)")]
        public const int FVE_E_FIPS_RNG_CHECK_FAILED = unchecked((int)(0x80310036));

        [NativeTypeName("#define FVE_E_FIPS_PREVENTS_RECOVERY_PASSWORD _HRESULT_TYPEDEF_(0x80310037L)")]
        public const int FVE_E_FIPS_PREVENTS_RECOVERY_PASSWORD = unchecked((int)(0x80310037));

        [NativeTypeName("#define FVE_E_FIPS_PREVENTS_EXTERNAL_KEY_EXPORT _HRESULT_TYPEDEF_(0x80310038L)")]
        public const int FVE_E_FIPS_PREVENTS_EXTERNAL_KEY_EXPORT = unchecked((int)(0x80310038));

        [NativeTypeName("#define FVE_E_NOT_DECRYPTED _HRESULT_TYPEDEF_(0x80310039L)")]
        public const int FVE_E_NOT_DECRYPTED = unchecked((int)(0x80310039));

        [NativeTypeName("#define FVE_E_INVALID_PROTECTOR_TYPE _HRESULT_TYPEDEF_(0x8031003AL)")]
        public const int FVE_E_INVALID_PROTECTOR_TYPE = unchecked((int)(0x8031003A));

        [NativeTypeName("#define FVE_E_NO_PROTECTORS_TO_TEST _HRESULT_TYPEDEF_(0x8031003BL)")]
        public const int FVE_E_NO_PROTECTORS_TO_TEST = unchecked((int)(0x8031003B));

        [NativeTypeName("#define FVE_E_KEYFILE_NOT_FOUND _HRESULT_TYPEDEF_(0x8031003CL)")]
        public const int FVE_E_KEYFILE_NOT_FOUND = unchecked((int)(0x8031003C));

        [NativeTypeName("#define FVE_E_KEYFILE_INVALID _HRESULT_TYPEDEF_(0x8031003DL)")]
        public const int FVE_E_KEYFILE_INVALID = unchecked((int)(0x8031003D));

        [NativeTypeName("#define FVE_E_KEYFILE_NO_VMK _HRESULT_TYPEDEF_(0x8031003EL)")]
        public const int FVE_E_KEYFILE_NO_VMK = unchecked((int)(0x8031003E));

        [NativeTypeName("#define FVE_E_TPM_DISABLED _HRESULT_TYPEDEF_(0x8031003FL)")]
        public const int FVE_E_TPM_DISABLED = unchecked((int)(0x8031003F));

        [NativeTypeName("#define FVE_E_NOT_ALLOWED_IN_SAFE_MODE _HRESULT_TYPEDEF_(0x80310040L)")]
        public const int FVE_E_NOT_ALLOWED_IN_SAFE_MODE = unchecked((int)(0x80310040));

        [NativeTypeName("#define FVE_E_TPM_INVALID_PCR _HRESULT_TYPEDEF_(0x80310041L)")]
        public const int FVE_E_TPM_INVALID_PCR = unchecked((int)(0x80310041));

        [NativeTypeName("#define FVE_E_TPM_NO_VMK _HRESULT_TYPEDEF_(0x80310042L)")]
        public const int FVE_E_TPM_NO_VMK = unchecked((int)(0x80310042));

        [NativeTypeName("#define FVE_E_PIN_INVALID _HRESULT_TYPEDEF_(0x80310043L)")]
        public const int FVE_E_PIN_INVALID = unchecked((int)(0x80310043));

        [NativeTypeName("#define FVE_E_AUTH_INVALID_APPLICATION _HRESULT_TYPEDEF_(0x80310044L)")]
        public const int FVE_E_AUTH_INVALID_APPLICATION = unchecked((int)(0x80310044));

        [NativeTypeName("#define FVE_E_AUTH_INVALID_CONFIG _HRESULT_TYPEDEF_(0x80310045L)")]
        public const int FVE_E_AUTH_INVALID_CONFIG = unchecked((int)(0x80310045));

        [NativeTypeName("#define FVE_E_FIPS_DISABLE_PROTECTION_NOT_ALLOWED _HRESULT_TYPEDEF_(0x80310046L)")]
        public const int FVE_E_FIPS_DISABLE_PROTECTION_NOT_ALLOWED = unchecked((int)(0x80310046));

        [NativeTypeName("#define FVE_E_FS_NOT_EXTENDED _HRESULT_TYPEDEF_(0x80310047L)")]
        public const int FVE_E_FS_NOT_EXTENDED = unchecked((int)(0x80310047));

        [NativeTypeName("#define FVE_E_FIRMWARE_TYPE_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80310048L)")]
        public const int FVE_E_FIRMWARE_TYPE_NOT_SUPPORTED = unchecked((int)(0x80310048));

        [NativeTypeName("#define FVE_E_NO_LICENSE _HRESULT_TYPEDEF_(0x80310049L)")]
        public const int FVE_E_NO_LICENSE = unchecked((int)(0x80310049));

        [NativeTypeName("#define FVE_E_NOT_ON_STACK _HRESULT_TYPEDEF_(0x8031004AL)")]
        public const int FVE_E_NOT_ON_STACK = unchecked((int)(0x8031004A));

        [NativeTypeName("#define FVE_E_FS_MOUNTED _HRESULT_TYPEDEF_(0x8031004BL)")]
        public const int FVE_E_FS_MOUNTED = unchecked((int)(0x8031004B));

        [NativeTypeName("#define FVE_E_TOKEN_NOT_IMPERSONATED _HRESULT_TYPEDEF_(0x8031004CL)")]
        public const int FVE_E_TOKEN_NOT_IMPERSONATED = unchecked((int)(0x8031004C));

        [NativeTypeName("#define FVE_E_DRY_RUN_FAILED _HRESULT_TYPEDEF_(0x8031004DL)")]
        public const int FVE_E_DRY_RUN_FAILED = unchecked((int)(0x8031004D));

        [NativeTypeName("#define FVE_E_REBOOT_REQUIRED _HRESULT_TYPEDEF_(0x8031004EL)")]
        public const int FVE_E_REBOOT_REQUIRED = unchecked((int)(0x8031004E));

        [NativeTypeName("#define FVE_E_DEBUGGER_ENABLED _HRESULT_TYPEDEF_(0x8031004FL)")]
        public const int FVE_E_DEBUGGER_ENABLED = unchecked((int)(0x8031004F));

        [NativeTypeName("#define FVE_E_RAW_ACCESS _HRESULT_TYPEDEF_(0x80310050L)")]
        public const int FVE_E_RAW_ACCESS = unchecked((int)(0x80310050));

        [NativeTypeName("#define FVE_E_RAW_BLOCKED _HRESULT_TYPEDEF_(0x80310051L)")]
        public const int FVE_E_RAW_BLOCKED = unchecked((int)(0x80310051));

        [NativeTypeName("#define FVE_E_BCD_APPLICATIONS_PATH_INCORRECT _HRESULT_TYPEDEF_(0x80310052L)")]
        public const int FVE_E_BCD_APPLICATIONS_PATH_INCORRECT = unchecked((int)(0x80310052));

        [NativeTypeName("#define FVE_E_NOT_ALLOWED_IN_VERSION _HRESULT_TYPEDEF_(0x80310053L)")]
        public const int FVE_E_NOT_ALLOWED_IN_VERSION = unchecked((int)(0x80310053));

        [NativeTypeName("#define FVE_E_NO_AUTOUNLOCK_MASTER_KEY _HRESULT_TYPEDEF_(0x80310054L)")]
        public const int FVE_E_NO_AUTOUNLOCK_MASTER_KEY = unchecked((int)(0x80310054));

        [NativeTypeName("#define FVE_E_MOR_FAILED _HRESULT_TYPEDEF_(0x80310055L)")]
        public const int FVE_E_MOR_FAILED = unchecked((int)(0x80310055));

        [NativeTypeName("#define FVE_E_HIDDEN_VOLUME _HRESULT_TYPEDEF_(0x80310056L)")]
        public const int FVE_E_HIDDEN_VOLUME = unchecked((int)(0x80310056));

        [NativeTypeName("#define FVE_E_TRANSIENT_STATE _HRESULT_TYPEDEF_(0x80310057L)")]
        public const int FVE_E_TRANSIENT_STATE = unchecked((int)(0x80310057));

        [NativeTypeName("#define FVE_E_PUBKEY_NOT_ALLOWED _HRESULT_TYPEDEF_(0x80310058L)")]
        public const int FVE_E_PUBKEY_NOT_ALLOWED = unchecked((int)(0x80310058));

        [NativeTypeName("#define FVE_E_VOLUME_HANDLE_OPEN _HRESULT_TYPEDEF_(0x80310059L)")]
        public const int FVE_E_VOLUME_HANDLE_OPEN = unchecked((int)(0x80310059));

        [NativeTypeName("#define FVE_E_NO_FEATURE_LICENSE _HRESULT_TYPEDEF_(0x8031005AL)")]
        public const int FVE_E_NO_FEATURE_LICENSE = unchecked((int)(0x8031005A));

        [NativeTypeName("#define FVE_E_INVALID_STARTUP_OPTIONS _HRESULT_TYPEDEF_(0x8031005BL)")]
        public const int FVE_E_INVALID_STARTUP_OPTIONS = unchecked((int)(0x8031005B));

        [NativeTypeName("#define FVE_E_POLICY_RECOVERY_PASSWORD_NOT_ALLOWED _HRESULT_TYPEDEF_(0x8031005CL)")]
        public const int FVE_E_POLICY_RECOVERY_PASSWORD_NOT_ALLOWED = unchecked((int)(0x8031005C));

        [NativeTypeName("#define FVE_E_POLICY_RECOVERY_PASSWORD_REQUIRED _HRESULT_TYPEDEF_(0x8031005DL)")]
        public const int FVE_E_POLICY_RECOVERY_PASSWORD_REQUIRED = unchecked((int)(0x8031005D));

        [NativeTypeName("#define FVE_E_POLICY_RECOVERY_KEY_NOT_ALLOWED _HRESULT_TYPEDEF_(0x8031005EL)")]
        public const int FVE_E_POLICY_RECOVERY_KEY_NOT_ALLOWED = unchecked((int)(0x8031005E));

        [NativeTypeName("#define FVE_E_POLICY_RECOVERY_KEY_REQUIRED _HRESULT_TYPEDEF_(0x8031005FL)")]
        public const int FVE_E_POLICY_RECOVERY_KEY_REQUIRED = unchecked((int)(0x8031005F));

        [NativeTypeName("#define FVE_E_POLICY_STARTUP_PIN_NOT_ALLOWED _HRESULT_TYPEDEF_(0x80310060L)")]
        public const int FVE_E_POLICY_STARTUP_PIN_NOT_ALLOWED = unchecked((int)(0x80310060));

        [NativeTypeName("#define FVE_E_POLICY_STARTUP_PIN_REQUIRED _HRESULT_TYPEDEF_(0x80310061L)")]
        public const int FVE_E_POLICY_STARTUP_PIN_REQUIRED = unchecked((int)(0x80310061));

        [NativeTypeName("#define FVE_E_POLICY_STARTUP_KEY_NOT_ALLOWED _HRESULT_TYPEDEF_(0x80310062L)")]
        public const int FVE_E_POLICY_STARTUP_KEY_NOT_ALLOWED = unchecked((int)(0x80310062));

        [NativeTypeName("#define FVE_E_POLICY_STARTUP_KEY_REQUIRED _HRESULT_TYPEDEF_(0x80310063L)")]
        public const int FVE_E_POLICY_STARTUP_KEY_REQUIRED = unchecked((int)(0x80310063));

        [NativeTypeName("#define FVE_E_POLICY_STARTUP_PIN_KEY_NOT_ALLOWED _HRESULT_TYPEDEF_(0x80310064L)")]
        public const int FVE_E_POLICY_STARTUP_PIN_KEY_NOT_ALLOWED = unchecked((int)(0x80310064));

        [NativeTypeName("#define FVE_E_POLICY_STARTUP_PIN_KEY_REQUIRED _HRESULT_TYPEDEF_(0x80310065L)")]
        public const int FVE_E_POLICY_STARTUP_PIN_KEY_REQUIRED = unchecked((int)(0x80310065));

        [NativeTypeName("#define FVE_E_POLICY_STARTUP_TPM_NOT_ALLOWED _HRESULT_TYPEDEF_(0x80310066L)")]
        public const int FVE_E_POLICY_STARTUP_TPM_NOT_ALLOWED = unchecked((int)(0x80310066));

        [NativeTypeName("#define FVE_E_POLICY_STARTUP_TPM_REQUIRED _HRESULT_TYPEDEF_(0x80310067L)")]
        public const int FVE_E_POLICY_STARTUP_TPM_REQUIRED = unchecked((int)(0x80310067));

        [NativeTypeName("#define FVE_E_POLICY_INVALID_PIN_LENGTH _HRESULT_TYPEDEF_(0x80310068L)")]
        public const int FVE_E_POLICY_INVALID_PIN_LENGTH = unchecked((int)(0x80310068));

        [NativeTypeName("#define FVE_E_KEY_PROTECTOR_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80310069L)")]
        public const int FVE_E_KEY_PROTECTOR_NOT_SUPPORTED = unchecked((int)(0x80310069));

        [NativeTypeName("#define FVE_E_POLICY_PASSPHRASE_NOT_ALLOWED _HRESULT_TYPEDEF_(0x8031006AL)")]
        public const int FVE_E_POLICY_PASSPHRASE_NOT_ALLOWED = unchecked((int)(0x8031006A));

        [NativeTypeName("#define FVE_E_POLICY_PASSPHRASE_REQUIRED _HRESULT_TYPEDEF_(0x8031006BL)")]
        public const int FVE_E_POLICY_PASSPHRASE_REQUIRED = unchecked((int)(0x8031006B));

        [NativeTypeName("#define FVE_E_FIPS_PREVENTS_PASSPHRASE _HRESULT_TYPEDEF_(0x8031006CL)")]
        public const int FVE_E_FIPS_PREVENTS_PASSPHRASE = unchecked((int)(0x8031006C));

        [NativeTypeName("#define FVE_E_OS_VOLUME_PASSPHRASE_NOT_ALLOWED _HRESULT_TYPEDEF_(0x8031006DL)")]
        public const int FVE_E_OS_VOLUME_PASSPHRASE_NOT_ALLOWED = unchecked((int)(0x8031006D));

        [NativeTypeName("#define FVE_E_INVALID_BITLOCKER_OID _HRESULT_TYPEDEF_(0x8031006EL)")]
        public const int FVE_E_INVALID_BITLOCKER_OID = unchecked((int)(0x8031006E));

        [NativeTypeName("#define FVE_E_VOLUME_TOO_SMALL _HRESULT_TYPEDEF_(0x8031006FL)")]
        public const int FVE_E_VOLUME_TOO_SMALL = unchecked((int)(0x8031006F));

        [NativeTypeName("#define FVE_E_DV_NOT_SUPPORTED_ON_FS _HRESULT_TYPEDEF_(0x80310070L)")]
        public const int FVE_E_DV_NOT_SUPPORTED_ON_FS = unchecked((int)(0x80310070));

        [NativeTypeName("#define FVE_E_DV_NOT_ALLOWED_BY_GP _HRESULT_TYPEDEF_(0x80310071L)")]
        public const int FVE_E_DV_NOT_ALLOWED_BY_GP = unchecked((int)(0x80310071));

        [NativeTypeName("#define FVE_E_POLICY_USER_CERTIFICATE_NOT_ALLOWED _HRESULT_TYPEDEF_(0x80310072L)")]
        public const int FVE_E_POLICY_USER_CERTIFICATE_NOT_ALLOWED = unchecked((int)(0x80310072));

        [NativeTypeName("#define FVE_E_POLICY_USER_CERTIFICATE_REQUIRED _HRESULT_TYPEDEF_(0x80310073L)")]
        public const int FVE_E_POLICY_USER_CERTIFICATE_REQUIRED = unchecked((int)(0x80310073));

        [NativeTypeName("#define FVE_E_POLICY_USER_CERT_MUST_BE_HW _HRESULT_TYPEDEF_(0x80310074L)")]
        public const int FVE_E_POLICY_USER_CERT_MUST_BE_HW = unchecked((int)(0x80310074));

        [NativeTypeName("#define FVE_E_POLICY_USER_CONFIGURE_FDV_AUTOUNLOCK_NOT_ALLOWED _HRESULT_TYPEDEF_(0x80310075L)")]
        public const int FVE_E_POLICY_USER_CONFIGURE_FDV_AUTOUNLOCK_NOT_ALLOWED = unchecked((int)(0x80310075));

        [NativeTypeName("#define FVE_E_POLICY_USER_CONFIGURE_RDV_AUTOUNLOCK_NOT_ALLOWED _HRESULT_TYPEDEF_(0x80310076L)")]
        public const int FVE_E_POLICY_USER_CONFIGURE_RDV_AUTOUNLOCK_NOT_ALLOWED = unchecked((int)(0x80310076));

        [NativeTypeName("#define FVE_E_POLICY_USER_CONFIGURE_RDV_NOT_ALLOWED _HRESULT_TYPEDEF_(0x80310077L)")]
        public const int FVE_E_POLICY_USER_CONFIGURE_RDV_NOT_ALLOWED = unchecked((int)(0x80310077));

        [NativeTypeName("#define FVE_E_POLICY_USER_ENABLE_RDV_NOT_ALLOWED _HRESULT_TYPEDEF_(0x80310078L)")]
        public const int FVE_E_POLICY_USER_ENABLE_RDV_NOT_ALLOWED = unchecked((int)(0x80310078));

        [NativeTypeName("#define FVE_E_POLICY_USER_DISABLE_RDV_NOT_ALLOWED _HRESULT_TYPEDEF_(0x80310079L)")]
        public const int FVE_E_POLICY_USER_DISABLE_RDV_NOT_ALLOWED = unchecked((int)(0x80310079));

        [NativeTypeName("#define FVE_E_POLICY_INVALID_PASSPHRASE_LENGTH _HRESULT_TYPEDEF_(0x80310080L)")]
        public const int FVE_E_POLICY_INVALID_PASSPHRASE_LENGTH = unchecked((int)(0x80310080));

        [NativeTypeName("#define FVE_E_POLICY_PASSPHRASE_TOO_SIMPLE _HRESULT_TYPEDEF_(0x80310081L)")]
        public const int FVE_E_POLICY_PASSPHRASE_TOO_SIMPLE = unchecked((int)(0x80310081));

        [NativeTypeName("#define FVE_E_RECOVERY_PARTITION _HRESULT_TYPEDEF_(0x80310082L)")]
        public const int FVE_E_RECOVERY_PARTITION = unchecked((int)(0x80310082));

        [NativeTypeName("#define FVE_E_POLICY_CONFLICT_FDV_RK_OFF_AUK_ON _HRESULT_TYPEDEF_(0x80310083L)")]
        public const int FVE_E_POLICY_CONFLICT_FDV_RK_OFF_AUK_ON = unchecked((int)(0x80310083));

        [NativeTypeName("#define FVE_E_POLICY_CONFLICT_RDV_RK_OFF_AUK_ON _HRESULT_TYPEDEF_(0x80310084L)")]
        public const int FVE_E_POLICY_CONFLICT_RDV_RK_OFF_AUK_ON = unchecked((int)(0x80310084));

        [NativeTypeName("#define FVE_E_NON_BITLOCKER_OID _HRESULT_TYPEDEF_(0x80310085L)")]
        public const int FVE_E_NON_BITLOCKER_OID = unchecked((int)(0x80310085));

        [NativeTypeName("#define FVE_E_POLICY_PROHIBITS_SELFSIGNED _HRESULT_TYPEDEF_(0x80310086L)")]
        public const int FVE_E_POLICY_PROHIBITS_SELFSIGNED = unchecked((int)(0x80310086));

        [NativeTypeName("#define FVE_E_POLICY_CONFLICT_RO_AND_STARTUP_KEY_REQUIRED _HRESULT_TYPEDEF_(0x80310087L)")]
        public const int FVE_E_POLICY_CONFLICT_RO_AND_STARTUP_KEY_REQUIRED = unchecked((int)(0x80310087));

        [NativeTypeName("#define FVE_E_CONV_RECOVERY_FAILED _HRESULT_TYPEDEF_(0x80310088L)")]
        public const int FVE_E_CONV_RECOVERY_FAILED = unchecked((int)(0x80310088));

        [NativeTypeName("#define FVE_E_VIRTUALIZED_SPACE_TOO_BIG _HRESULT_TYPEDEF_(0x80310089L)")]
        public const int FVE_E_VIRTUALIZED_SPACE_TOO_BIG = unchecked((int)(0x80310089));

        [NativeTypeName("#define FVE_E_POLICY_CONFLICT_OSV_RP_OFF_ADB_ON _HRESULT_TYPEDEF_(0x80310090L)")]
        public const int FVE_E_POLICY_CONFLICT_OSV_RP_OFF_ADB_ON = unchecked((int)(0x80310090));

        [NativeTypeName("#define FVE_E_POLICY_CONFLICT_FDV_RP_OFF_ADB_ON _HRESULT_TYPEDEF_(0x80310091L)")]
        public const int FVE_E_POLICY_CONFLICT_FDV_RP_OFF_ADB_ON = unchecked((int)(0x80310091));

        [NativeTypeName("#define FVE_E_POLICY_CONFLICT_RDV_RP_OFF_ADB_ON _HRESULT_TYPEDEF_(0x80310092L)")]
        public const int FVE_E_POLICY_CONFLICT_RDV_RP_OFF_ADB_ON = unchecked((int)(0x80310092));

        [NativeTypeName("#define FVE_E_NON_BITLOCKER_KU _HRESULT_TYPEDEF_(0x80310093L)")]
        public const int FVE_E_NON_BITLOCKER_KU = unchecked((int)(0x80310093));

        [NativeTypeName("#define FVE_E_PRIVATEKEY_AUTH_FAILED _HRESULT_TYPEDEF_(0x80310094L)")]
        public const int FVE_E_PRIVATEKEY_AUTH_FAILED = unchecked((int)(0x80310094));

        [NativeTypeName("#define FVE_E_REMOVAL_OF_DRA_FAILED _HRESULT_TYPEDEF_(0x80310095L)")]
        public const int FVE_E_REMOVAL_OF_DRA_FAILED = unchecked((int)(0x80310095));

        [NativeTypeName("#define FVE_E_OPERATION_NOT_SUPPORTED_ON_VISTA_VOLUME _HRESULT_TYPEDEF_(0x80310096L)")]
        public const int FVE_E_OPERATION_NOT_SUPPORTED_ON_VISTA_VOLUME = unchecked((int)(0x80310096));

        [NativeTypeName("#define FVE_E_CANT_LOCK_AUTOUNLOCK_ENABLED_VOLUME _HRESULT_TYPEDEF_(0x80310097L)")]
        public const int FVE_E_CANT_LOCK_AUTOUNLOCK_ENABLED_VOLUME = unchecked((int)(0x80310097));

        [NativeTypeName("#define FVE_E_FIPS_HASH_KDF_NOT_ALLOWED _HRESULT_TYPEDEF_(0x80310098L)")]
        public const int FVE_E_FIPS_HASH_KDF_NOT_ALLOWED = unchecked((int)(0x80310098));

        [NativeTypeName("#define FVE_E_ENH_PIN_INVALID _HRESULT_TYPEDEF_(0x80310099L)")]
        public const int FVE_E_ENH_PIN_INVALID = unchecked((int)(0x80310099));

        [NativeTypeName("#define FVE_E_INVALID_PIN_CHARS _HRESULT_TYPEDEF_(0x8031009AL)")]
        public const int FVE_E_INVALID_PIN_CHARS = unchecked((int)(0x8031009A));

        [NativeTypeName("#define FVE_E_INVALID_DATUM_TYPE _HRESULT_TYPEDEF_(0x8031009BL)")]
        public const int FVE_E_INVALID_DATUM_TYPE = unchecked((int)(0x8031009B));

        [NativeTypeName("#define FVE_E_EFI_ONLY _HRESULT_TYPEDEF_(0x8031009CL)")]
        public const int FVE_E_EFI_ONLY = unchecked((int)(0x8031009C));

        [NativeTypeName("#define FVE_E_MULTIPLE_NKP_CERTS _HRESULT_TYPEDEF_(0x8031009DL)")]
        public const int FVE_E_MULTIPLE_NKP_CERTS = unchecked((int)(0x8031009D));

        [NativeTypeName("#define FVE_E_REMOVAL_OF_NKP_FAILED _HRESULT_TYPEDEF_(0x8031009EL)")]
        public const int FVE_E_REMOVAL_OF_NKP_FAILED = unchecked((int)(0x8031009E));

        [NativeTypeName("#define FVE_E_INVALID_NKP_CERT _HRESULT_TYPEDEF_(0x8031009FL)")]
        public const int FVE_E_INVALID_NKP_CERT = unchecked((int)(0x8031009F));

        [NativeTypeName("#define FVE_E_NO_EXISTING_PIN _HRESULT_TYPEDEF_(0x803100A0L)")]
        public const int FVE_E_NO_EXISTING_PIN = unchecked((int)(0x803100A0));

        [NativeTypeName("#define FVE_E_PROTECTOR_CHANGE_PIN_MISMATCH _HRESULT_TYPEDEF_(0x803100A1L)")]
        public const int FVE_E_PROTECTOR_CHANGE_PIN_MISMATCH = unchecked((int)(0x803100A1));

        [NativeTypeName("#define FVE_E_PIN_PROTECTOR_CHANGE_BY_STD_USER_DISALLOWED _HRESULT_TYPEDEF_(0x803100A2L)")]
        public const int FVE_E_PIN_PROTECTOR_CHANGE_BY_STD_USER_DISALLOWED = unchecked((int)(0x803100A2));

        [NativeTypeName("#define FVE_E_PROTECTOR_CHANGE_MAX_PIN_CHANGE_ATTEMPTS_REACHED _HRESULT_TYPEDEF_(0x803100A3L)")]
        public const int FVE_E_PROTECTOR_CHANGE_MAX_PIN_CHANGE_ATTEMPTS_REACHED = unchecked((int)(0x803100A3));

        [NativeTypeName("#define FVE_E_POLICY_PASSPHRASE_REQUIRES_ASCII _HRESULT_TYPEDEF_(0x803100A4L)")]
        public const int FVE_E_POLICY_PASSPHRASE_REQUIRES_ASCII = unchecked((int)(0x803100A4));

        [NativeTypeName("#define FVE_E_FULL_ENCRYPTION_NOT_ALLOWED_ON_TP_STORAGE _HRESULT_TYPEDEF_(0x803100A5L)")]
        public const int FVE_E_FULL_ENCRYPTION_NOT_ALLOWED_ON_TP_STORAGE = unchecked((int)(0x803100A5));

        [NativeTypeName("#define FVE_E_WIPE_NOT_ALLOWED_ON_TP_STORAGE _HRESULT_TYPEDEF_(0x803100A6L)")]
        public const int FVE_E_WIPE_NOT_ALLOWED_ON_TP_STORAGE = unchecked((int)(0x803100A6));

        [NativeTypeName("#define FVE_E_KEY_LENGTH_NOT_SUPPORTED_BY_EDRIVE _HRESULT_TYPEDEF_(0x803100A7L)")]
        public const int FVE_E_KEY_LENGTH_NOT_SUPPORTED_BY_EDRIVE = unchecked((int)(0x803100A7));

        [NativeTypeName("#define FVE_E_NO_EXISTING_PASSPHRASE _HRESULT_TYPEDEF_(0x803100A8L)")]
        public const int FVE_E_NO_EXISTING_PASSPHRASE = unchecked((int)(0x803100A8));

        [NativeTypeName("#define FVE_E_PROTECTOR_CHANGE_PASSPHRASE_MISMATCH _HRESULT_TYPEDEF_(0x803100A9L)")]
        public const int FVE_E_PROTECTOR_CHANGE_PASSPHRASE_MISMATCH = unchecked((int)(0x803100A9));

        [NativeTypeName("#define FVE_E_PASSPHRASE_TOO_LONG _HRESULT_TYPEDEF_(0x803100AAL)")]
        public const int FVE_E_PASSPHRASE_TOO_LONG = unchecked((int)(0x803100AA));

        [NativeTypeName("#define FVE_E_NO_PASSPHRASE_WITH_TPM _HRESULT_TYPEDEF_(0x803100ABL)")]
        public const int FVE_E_NO_PASSPHRASE_WITH_TPM = unchecked((int)(0x803100AB));

        [NativeTypeName("#define FVE_E_NO_TPM_WITH_PASSPHRASE _HRESULT_TYPEDEF_(0x803100ACL)")]
        public const int FVE_E_NO_TPM_WITH_PASSPHRASE = unchecked((int)(0x803100AC));

        [NativeTypeName("#define FVE_E_NOT_ALLOWED_ON_CSV_STACK _HRESULT_TYPEDEF_(0x803100ADL)")]
        public const int FVE_E_NOT_ALLOWED_ON_CSV_STACK = unchecked((int)(0x803100AD));

        [NativeTypeName("#define FVE_E_NOT_ALLOWED_ON_CLUSTER _HRESULT_TYPEDEF_(0x803100AEL)")]
        public const int FVE_E_NOT_ALLOWED_ON_CLUSTER = unchecked((int)(0x803100AE));

        [NativeTypeName("#define FVE_E_EDRIVE_NO_FAILOVER_TO_SW _HRESULT_TYPEDEF_(0x803100AFL)")]
        public const int FVE_E_EDRIVE_NO_FAILOVER_TO_SW = unchecked((int)(0x803100AF));

        [NativeTypeName("#define FVE_E_EDRIVE_BAND_IN_USE _HRESULT_TYPEDEF_(0x803100B0L)")]
        public const int FVE_E_EDRIVE_BAND_IN_USE = unchecked((int)(0x803100B0));

        [NativeTypeName("#define FVE_E_EDRIVE_DISALLOWED_BY_GP _HRESULT_TYPEDEF_(0x803100B1L)")]
        public const int FVE_E_EDRIVE_DISALLOWED_BY_GP = unchecked((int)(0x803100B1));

        [NativeTypeName("#define FVE_E_EDRIVE_INCOMPATIBLE_VOLUME _HRESULT_TYPEDEF_(0x803100B2L)")]
        public const int FVE_E_EDRIVE_INCOMPATIBLE_VOLUME = unchecked((int)(0x803100B2));

        [NativeTypeName("#define FVE_E_NOT_ALLOWED_TO_UPGRADE_WHILE_CONVERTING _HRESULT_TYPEDEF_(0x803100B3L)")]
        public const int FVE_E_NOT_ALLOWED_TO_UPGRADE_WHILE_CONVERTING = unchecked((int)(0x803100B3));

        [NativeTypeName("#define FVE_E_EDRIVE_DV_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x803100B4L)")]
        public const int FVE_E_EDRIVE_DV_NOT_SUPPORTED = unchecked((int)(0x803100B4));

        [NativeTypeName("#define FVE_E_NO_PREBOOT_KEYBOARD_DETECTED _HRESULT_TYPEDEF_(0x803100B5L)")]
        public const int FVE_E_NO_PREBOOT_KEYBOARD_DETECTED = unchecked((int)(0x803100B5));

        [NativeTypeName("#define FVE_E_NO_PREBOOT_KEYBOARD_OR_WINRE_DETECTED _HRESULT_TYPEDEF_(0x803100B6L)")]
        public const int FVE_E_NO_PREBOOT_KEYBOARD_OR_WINRE_DETECTED = unchecked((int)(0x803100B6));

        [NativeTypeName("#define FVE_E_POLICY_REQUIRES_STARTUP_PIN_ON_TOUCH_DEVICE _HRESULT_TYPEDEF_(0x803100B7L)")]
        public const int FVE_E_POLICY_REQUIRES_STARTUP_PIN_ON_TOUCH_DEVICE = unchecked((int)(0x803100B7));

        [NativeTypeName("#define FVE_E_POLICY_REQUIRES_RECOVERY_PASSWORD_ON_TOUCH_DEVICE _HRESULT_TYPEDEF_(0x803100B8L)")]
        public const int FVE_E_POLICY_REQUIRES_RECOVERY_PASSWORD_ON_TOUCH_DEVICE = unchecked((int)(0x803100B8));

        [NativeTypeName("#define FVE_E_WIPE_CANCEL_NOT_APPLICABLE _HRESULT_TYPEDEF_(0x803100B9L)")]
        public const int FVE_E_WIPE_CANCEL_NOT_APPLICABLE = unchecked((int)(0x803100B9));

        [NativeTypeName("#define FVE_E_SECUREBOOT_DISABLED _HRESULT_TYPEDEF_(0x803100BAL)")]
        public const int FVE_E_SECUREBOOT_DISABLED = unchecked((int)(0x803100BA));

        [NativeTypeName("#define FVE_E_SECUREBOOT_CONFIGURATION_INVALID _HRESULT_TYPEDEF_(0x803100BBL)")]
        public const int FVE_E_SECUREBOOT_CONFIGURATION_INVALID = unchecked((int)(0x803100BB));

        [NativeTypeName("#define FVE_E_EDRIVE_DRY_RUN_FAILED _HRESULT_TYPEDEF_(0x803100BCL)")]
        public const int FVE_E_EDRIVE_DRY_RUN_FAILED = unchecked((int)(0x803100BC));

        [NativeTypeName("#define FVE_E_SHADOW_COPY_PRESENT _HRESULT_TYPEDEF_(0x803100BDL)")]
        public const int FVE_E_SHADOW_COPY_PRESENT = unchecked((int)(0x803100BD));

        [NativeTypeName("#define FVE_E_POLICY_INVALID_ENHANCED_BCD_SETTINGS _HRESULT_TYPEDEF_(0x803100BEL)")]
        public const int FVE_E_POLICY_INVALID_ENHANCED_BCD_SETTINGS = unchecked((int)(0x803100BE));

        [NativeTypeName("#define FVE_E_EDRIVE_INCOMPATIBLE_FIRMWARE _HRESULT_TYPEDEF_(0x803100BFL)")]
        public const int FVE_E_EDRIVE_INCOMPATIBLE_FIRMWARE = unchecked((int)(0x803100BF));

        [NativeTypeName("#define FVE_E_PROTECTOR_CHANGE_MAX_PASSPHRASE_CHANGE_ATTEMPTS_REACHED _HRESULT_TYPEDEF_(0x803100C0L)")]
        public const int FVE_E_PROTECTOR_CHANGE_MAX_PASSPHRASE_CHANGE_ATTEMPTS_REACHED = unchecked((int)(0x803100C0));

        [NativeTypeName("#define FVE_E_PASSPHRASE_PROTECTOR_CHANGE_BY_STD_USER_DISALLOWED _HRESULT_TYPEDEF_(0x803100C1L)")]
        public const int FVE_E_PASSPHRASE_PROTECTOR_CHANGE_BY_STD_USER_DISALLOWED = unchecked((int)(0x803100C1));

        [NativeTypeName("#define FVE_E_LIVEID_ACCOUNT_SUSPENDED _HRESULT_TYPEDEF_(0x803100C2L)")]
        public const int FVE_E_LIVEID_ACCOUNT_SUSPENDED = unchecked((int)(0x803100C2));

        [NativeTypeName("#define FVE_E_LIVEID_ACCOUNT_BLOCKED _HRESULT_TYPEDEF_(0x803100C3L)")]
        public const int FVE_E_LIVEID_ACCOUNT_BLOCKED = unchecked((int)(0x803100C3));

        [NativeTypeName("#define FVE_E_NOT_PROVISIONED_ON_ALL_VOLUMES _HRESULT_TYPEDEF_(0x803100C4L)")]
        public const int FVE_E_NOT_PROVISIONED_ON_ALL_VOLUMES = unchecked((int)(0x803100C4));

        [NativeTypeName("#define FVE_E_DE_FIXED_DATA_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x803100C5L)")]
        public const int FVE_E_DE_FIXED_DATA_NOT_SUPPORTED = unchecked((int)(0x803100C5));

        [NativeTypeName("#define FVE_E_DE_HARDWARE_NOT_COMPLIANT _HRESULT_TYPEDEF_(0x803100C6L)")]
        public const int FVE_E_DE_HARDWARE_NOT_COMPLIANT = unchecked((int)(0x803100C6));

        [NativeTypeName("#define FVE_E_DE_WINRE_NOT_CONFIGURED _HRESULT_TYPEDEF_(0x803100C7L)")]
        public const int FVE_E_DE_WINRE_NOT_CONFIGURED = unchecked((int)(0x803100C7));

        [NativeTypeName("#define FVE_E_DE_PROTECTION_SUSPENDED _HRESULT_TYPEDEF_(0x803100C8L)")]
        public const int FVE_E_DE_PROTECTION_SUSPENDED = unchecked((int)(0x803100C8));

        [NativeTypeName("#define FVE_E_DE_OS_VOLUME_NOT_PROTECTED _HRESULT_TYPEDEF_(0x803100C9L)")]
        public const int FVE_E_DE_OS_VOLUME_NOT_PROTECTED = unchecked((int)(0x803100C9));

        [NativeTypeName("#define FVE_E_DE_DEVICE_LOCKEDOUT _HRESULT_TYPEDEF_(0x803100CAL)")]
        public const int FVE_E_DE_DEVICE_LOCKEDOUT = unchecked((int)(0x803100CA));

        [NativeTypeName("#define FVE_E_DE_PROTECTION_NOT_YET_ENABLED _HRESULT_TYPEDEF_(0x803100CBL)")]
        public const int FVE_E_DE_PROTECTION_NOT_YET_ENABLED = unchecked((int)(0x803100CB));

        [NativeTypeName("#define FVE_E_INVALID_PIN_CHARS_DETAILED _HRESULT_TYPEDEF_(0x803100CCL)")]
        public const int FVE_E_INVALID_PIN_CHARS_DETAILED = unchecked((int)(0x803100CC));

        [NativeTypeName("#define FVE_E_DEVICE_LOCKOUT_COUNTER_UNAVAILABLE _HRESULT_TYPEDEF_(0x803100CDL)")]
        public const int FVE_E_DEVICE_LOCKOUT_COUNTER_UNAVAILABLE = unchecked((int)(0x803100CD));

        [NativeTypeName("#define FVE_E_DEVICELOCKOUT_COUNTER_MISMATCH _HRESULT_TYPEDEF_(0x803100CEL)")]
        public const int FVE_E_DEVICELOCKOUT_COUNTER_MISMATCH = unchecked((int)(0x803100CE));

        [NativeTypeName("#define FVE_E_BUFFER_TOO_LARGE _HRESULT_TYPEDEF_(0x803100CFL)")]
        public const int FVE_E_BUFFER_TOO_LARGE = unchecked((int)(0x803100CF));

        [NativeTypeName("#define FVE_E_NO_SUCH_CAPABILITY_ON_TARGET _HRESULT_TYPEDEF_(0x803100D0L)")]
        public const int FVE_E_NO_SUCH_CAPABILITY_ON_TARGET = unchecked((int)(0x803100D0));

        [NativeTypeName("#define FVE_E_DE_PREVENTED_FOR_OS _HRESULT_TYPEDEF_(0x803100D1L)")]
        public const int FVE_E_DE_PREVENTED_FOR_OS = unchecked((int)(0x803100D1));

        [NativeTypeName("#define FVE_E_DE_VOLUME_OPTED_OUT _HRESULT_TYPEDEF_(0x803100D2L)")]
        public const int FVE_E_DE_VOLUME_OPTED_OUT = unchecked((int)(0x803100D2));

        [NativeTypeName("#define FVE_E_DE_VOLUME_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x803100D3L)")]
        public const int FVE_E_DE_VOLUME_NOT_SUPPORTED = unchecked((int)(0x803100D3));

        [NativeTypeName("#define FVE_E_EOW_NOT_SUPPORTED_IN_VERSION _HRESULT_TYPEDEF_(0x803100D4L)")]
        public const int FVE_E_EOW_NOT_SUPPORTED_IN_VERSION = unchecked((int)(0x803100D4));

        [NativeTypeName("#define FVE_E_ADBACKUP_NOT_ENABLED _HRESULT_TYPEDEF_(0x803100D5L)")]
        public const int FVE_E_ADBACKUP_NOT_ENABLED = unchecked((int)(0x803100D5));

        [NativeTypeName("#define FVE_E_VOLUME_EXTEND_PREVENTS_EOW_DECRYPT _HRESULT_TYPEDEF_(0x803100D6L)")]
        public const int FVE_E_VOLUME_EXTEND_PREVENTS_EOW_DECRYPT = unchecked((int)(0x803100D6));

        [NativeTypeName("#define FVE_E_NOT_DE_VOLUME _HRESULT_TYPEDEF_(0x803100D7L)")]
        public const int FVE_E_NOT_DE_VOLUME = unchecked((int)(0x803100D7));

        [NativeTypeName("#define FVE_E_PROTECTION_CANNOT_BE_DISABLED _HRESULT_TYPEDEF_(0x803100D8L)")]
        public const int FVE_E_PROTECTION_CANNOT_BE_DISABLED = unchecked((int)(0x803100D8));

        [NativeTypeName("#define FVE_E_OSV_KSR_NOT_ALLOWED _HRESULT_TYPEDEF_(0x803100D9L)")]
        public const int FVE_E_OSV_KSR_NOT_ALLOWED = unchecked((int)(0x803100D9));

        [NativeTypeName("#define FVE_E_AD_BACKUP_REQUIRED_POLICY_NOT_SET_OS_DRIVE _HRESULT_TYPEDEF_(0x803100DAL)")]
        public const int FVE_E_AD_BACKUP_REQUIRED_POLICY_NOT_SET_OS_DRIVE = unchecked((int)(0x803100DA));

        [NativeTypeName("#define FVE_E_AD_BACKUP_REQUIRED_POLICY_NOT_SET_FIXED_DRIVE _HRESULT_TYPEDEF_(0x803100DBL)")]
        public const int FVE_E_AD_BACKUP_REQUIRED_POLICY_NOT_SET_FIXED_DRIVE = unchecked((int)(0x803100DB));

        [NativeTypeName("#define FVE_E_AD_BACKUP_REQUIRED_POLICY_NOT_SET_REMOVABLE_DRIVE _HRESULT_TYPEDEF_(0x803100DCL)")]
        public const int FVE_E_AD_BACKUP_REQUIRED_POLICY_NOT_SET_REMOVABLE_DRIVE = unchecked((int)(0x803100DC));

        [NativeTypeName("#define FVE_E_KEY_ROTATION_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x803100DDL)")]
        public const int FVE_E_KEY_ROTATION_NOT_SUPPORTED = unchecked((int)(0x803100DD));

        [NativeTypeName("#define FVE_E_EXECUTE_REQUEST_SENT_TOO_SOON _HRESULT_TYPEDEF_(0x803100DEL)")]
        public const int FVE_E_EXECUTE_REQUEST_SENT_TOO_SOON = unchecked((int)(0x803100DE));

        [NativeTypeName("#define FVE_E_KEY_ROTATION_NOT_ENABLED _HRESULT_TYPEDEF_(0x803100DFL)")]
        public const int FVE_E_KEY_ROTATION_NOT_ENABLED = unchecked((int)(0x803100DF));

        [NativeTypeName("#define FVE_E_DEVICE_NOT_JOINED _HRESULT_TYPEDEF_(0x803100E0L)")]
        public const int FVE_E_DEVICE_NOT_JOINED = unchecked((int)(0x803100E0));

        [NativeTypeName("#define FVE_E_AAD_ENDPOINT_BUSY _HRESULT_TYPEDEF_(0x803100E1L)")]
        public const int FVE_E_AAD_ENDPOINT_BUSY = unchecked((int)(0x803100E1));

        [NativeTypeName("#define FWP_E_CALLOUT_NOT_FOUND _HRESULT_TYPEDEF_(0x80320001L)")]
        public const int FWP_E_CALLOUT_NOT_FOUND = unchecked((int)(0x80320001));

        [NativeTypeName("#define FWP_E_CONDITION_NOT_FOUND _HRESULT_TYPEDEF_(0x80320002L)")]
        public const int FWP_E_CONDITION_NOT_FOUND = unchecked((int)(0x80320002));

        [NativeTypeName("#define FWP_E_FILTER_NOT_FOUND _HRESULT_TYPEDEF_(0x80320003L)")]
        public const int FWP_E_FILTER_NOT_FOUND = unchecked((int)(0x80320003));

        [NativeTypeName("#define FWP_E_LAYER_NOT_FOUND _HRESULT_TYPEDEF_(0x80320004L)")]
        public const int FWP_E_LAYER_NOT_FOUND = unchecked((int)(0x80320004));

        [NativeTypeName("#define FWP_E_PROVIDER_NOT_FOUND _HRESULT_TYPEDEF_(0x80320005L)")]
        public const int FWP_E_PROVIDER_NOT_FOUND = unchecked((int)(0x80320005));

        [NativeTypeName("#define FWP_E_PROVIDER_CONTEXT_NOT_FOUND _HRESULT_TYPEDEF_(0x80320006L)")]
        public const int FWP_E_PROVIDER_CONTEXT_NOT_FOUND = unchecked((int)(0x80320006));

        [NativeTypeName("#define FWP_E_SUBLAYER_NOT_FOUND _HRESULT_TYPEDEF_(0x80320007L)")]
        public const int FWP_E_SUBLAYER_NOT_FOUND = unchecked((int)(0x80320007));

        [NativeTypeName("#define FWP_E_NOT_FOUND _HRESULT_TYPEDEF_(0x80320008L)")]
        public const int FWP_E_NOT_FOUND = unchecked((int)(0x80320008));

        [NativeTypeName("#define FWP_E_ALREADY_EXISTS _HRESULT_TYPEDEF_(0x80320009L)")]
        public const int FWP_E_ALREADY_EXISTS = unchecked((int)(0x80320009));

        [NativeTypeName("#define FWP_E_IN_USE _HRESULT_TYPEDEF_(0x8032000AL)")]
        public const int FWP_E_IN_USE = unchecked((int)(0x8032000A));

        [NativeTypeName("#define FWP_E_DYNAMIC_SESSION_IN_PROGRESS _HRESULT_TYPEDEF_(0x8032000BL)")]
        public const int FWP_E_DYNAMIC_SESSION_IN_PROGRESS = unchecked((int)(0x8032000B));

        [NativeTypeName("#define FWP_E_WRONG_SESSION _HRESULT_TYPEDEF_(0x8032000CL)")]
        public const int FWP_E_WRONG_SESSION = unchecked((int)(0x8032000C));

        [NativeTypeName("#define FWP_E_NO_TXN_IN_PROGRESS _HRESULT_TYPEDEF_(0x8032000DL)")]
        public const int FWP_E_NO_TXN_IN_PROGRESS = unchecked((int)(0x8032000D));

        [NativeTypeName("#define FWP_E_TXN_IN_PROGRESS _HRESULT_TYPEDEF_(0x8032000EL)")]
        public const int FWP_E_TXN_IN_PROGRESS = unchecked((int)(0x8032000E));

        [NativeTypeName("#define FWP_E_TXN_ABORTED _HRESULT_TYPEDEF_(0x8032000FL)")]
        public const int FWP_E_TXN_ABORTED = unchecked((int)(0x8032000F));

        [NativeTypeName("#define FWP_E_SESSION_ABORTED _HRESULT_TYPEDEF_(0x80320010L)")]
        public const int FWP_E_SESSION_ABORTED = unchecked((int)(0x80320010));

        [NativeTypeName("#define FWP_E_INCOMPATIBLE_TXN _HRESULT_TYPEDEF_(0x80320011L)")]
        public const int FWP_E_INCOMPATIBLE_TXN = unchecked((int)(0x80320011));

        [NativeTypeName("#define FWP_E_TIMEOUT _HRESULT_TYPEDEF_(0x80320012L)")]
        public const int FWP_E_TIMEOUT = unchecked((int)(0x80320012));

        [NativeTypeName("#define FWP_E_NET_EVENTS_DISABLED _HRESULT_TYPEDEF_(0x80320013L)")]
        public const int FWP_E_NET_EVENTS_DISABLED = unchecked((int)(0x80320013));

        [NativeTypeName("#define FWP_E_INCOMPATIBLE_LAYER _HRESULT_TYPEDEF_(0x80320014L)")]
        public const int FWP_E_INCOMPATIBLE_LAYER = unchecked((int)(0x80320014));

        [NativeTypeName("#define FWP_E_KM_CLIENTS_ONLY _HRESULT_TYPEDEF_(0x80320015L)")]
        public const int FWP_E_KM_CLIENTS_ONLY = unchecked((int)(0x80320015));

        [NativeTypeName("#define FWP_E_LIFETIME_MISMATCH _HRESULT_TYPEDEF_(0x80320016L)")]
        public const int FWP_E_LIFETIME_MISMATCH = unchecked((int)(0x80320016));

        [NativeTypeName("#define FWP_E_BUILTIN_OBJECT _HRESULT_TYPEDEF_(0x80320017L)")]
        public const int FWP_E_BUILTIN_OBJECT = unchecked((int)(0x80320017));

        [NativeTypeName("#define FWP_E_TOO_MANY_CALLOUTS _HRESULT_TYPEDEF_(0x80320018L)")]
        public const int FWP_E_TOO_MANY_CALLOUTS = unchecked((int)(0x80320018));

        [NativeTypeName("#define FWP_E_NOTIFICATION_DROPPED _HRESULT_TYPEDEF_(0x80320019L)")]
        public const int FWP_E_NOTIFICATION_DROPPED = unchecked((int)(0x80320019));

        [NativeTypeName("#define FWP_E_TRAFFIC_MISMATCH _HRESULT_TYPEDEF_(0x8032001AL)")]
        public const int FWP_E_TRAFFIC_MISMATCH = unchecked((int)(0x8032001A));

        [NativeTypeName("#define FWP_E_INCOMPATIBLE_SA_STATE _HRESULT_TYPEDEF_(0x8032001BL)")]
        public const int FWP_E_INCOMPATIBLE_SA_STATE = unchecked((int)(0x8032001B));

        [NativeTypeName("#define FWP_E_NULL_POINTER _HRESULT_TYPEDEF_(0x8032001CL)")]
        public const int FWP_E_NULL_POINTER = unchecked((int)(0x8032001C));

        [NativeTypeName("#define FWP_E_INVALID_ENUMERATOR _HRESULT_TYPEDEF_(0x8032001DL)")]
        public const int FWP_E_INVALID_ENUMERATOR = unchecked((int)(0x8032001D));

        [NativeTypeName("#define FWP_E_INVALID_FLAGS _HRESULT_TYPEDEF_(0x8032001EL)")]
        public const int FWP_E_INVALID_FLAGS = unchecked((int)(0x8032001E));

        [NativeTypeName("#define FWP_E_INVALID_NET_MASK _HRESULT_TYPEDEF_(0x8032001FL)")]
        public const int FWP_E_INVALID_NET_MASK = unchecked((int)(0x8032001F));

        [NativeTypeName("#define FWP_E_INVALID_RANGE _HRESULT_TYPEDEF_(0x80320020L)")]
        public const int FWP_E_INVALID_RANGE = unchecked((int)(0x80320020));

        [NativeTypeName("#define FWP_E_INVALID_INTERVAL _HRESULT_TYPEDEF_(0x80320021L)")]
        public const int FWP_E_INVALID_INTERVAL = unchecked((int)(0x80320021));

        [NativeTypeName("#define FWP_E_ZERO_LENGTH_ARRAY _HRESULT_TYPEDEF_(0x80320022L)")]
        public const int FWP_E_ZERO_LENGTH_ARRAY = unchecked((int)(0x80320022));

        [NativeTypeName("#define FWP_E_NULL_DISPLAY_NAME _HRESULT_TYPEDEF_(0x80320023L)")]
        public const int FWP_E_NULL_DISPLAY_NAME = unchecked((int)(0x80320023));

        [NativeTypeName("#define FWP_E_INVALID_ACTION_TYPE _HRESULT_TYPEDEF_(0x80320024L)")]
        public const int FWP_E_INVALID_ACTION_TYPE = unchecked((int)(0x80320024));

        [NativeTypeName("#define FWP_E_INVALID_WEIGHT _HRESULT_TYPEDEF_(0x80320025L)")]
        public const int FWP_E_INVALID_WEIGHT = unchecked((int)(0x80320025));

        [NativeTypeName("#define FWP_E_MATCH_TYPE_MISMATCH _HRESULT_TYPEDEF_(0x80320026L)")]
        public const int FWP_E_MATCH_TYPE_MISMATCH = unchecked((int)(0x80320026));

        [NativeTypeName("#define FWP_E_TYPE_MISMATCH _HRESULT_TYPEDEF_(0x80320027L)")]
        public const int FWP_E_TYPE_MISMATCH = unchecked((int)(0x80320027));

        [NativeTypeName("#define FWP_E_OUT_OF_BOUNDS _HRESULT_TYPEDEF_(0x80320028L)")]
        public const int FWP_E_OUT_OF_BOUNDS = unchecked((int)(0x80320028));

        [NativeTypeName("#define FWP_E_RESERVED _HRESULT_TYPEDEF_(0x80320029L)")]
        public const int FWP_E_RESERVED = unchecked((int)(0x80320029));

        [NativeTypeName("#define FWP_E_DUPLICATE_CONDITION _HRESULT_TYPEDEF_(0x8032002AL)")]
        public const int FWP_E_DUPLICATE_CONDITION = unchecked((int)(0x8032002A));

        [NativeTypeName("#define FWP_E_DUPLICATE_KEYMOD _HRESULT_TYPEDEF_(0x8032002BL)")]
        public const int FWP_E_DUPLICATE_KEYMOD = unchecked((int)(0x8032002B));

        [NativeTypeName("#define FWP_E_ACTION_INCOMPATIBLE_WITH_LAYER _HRESULT_TYPEDEF_(0x8032002CL)")]
        public const int FWP_E_ACTION_INCOMPATIBLE_WITH_LAYER = unchecked((int)(0x8032002C));

        [NativeTypeName("#define FWP_E_ACTION_INCOMPATIBLE_WITH_SUBLAYER _HRESULT_TYPEDEF_(0x8032002DL)")]
        public const int FWP_E_ACTION_INCOMPATIBLE_WITH_SUBLAYER = unchecked((int)(0x8032002D));

        [NativeTypeName("#define FWP_E_CONTEXT_INCOMPATIBLE_WITH_LAYER _HRESULT_TYPEDEF_(0x8032002EL)")]
        public const int FWP_E_CONTEXT_INCOMPATIBLE_WITH_LAYER = unchecked((int)(0x8032002E));

        [NativeTypeName("#define FWP_E_CONTEXT_INCOMPATIBLE_WITH_CALLOUT _HRESULT_TYPEDEF_(0x8032002FL)")]
        public const int FWP_E_CONTEXT_INCOMPATIBLE_WITH_CALLOUT = unchecked((int)(0x8032002F));

        [NativeTypeName("#define FWP_E_INCOMPATIBLE_AUTH_METHOD _HRESULT_TYPEDEF_(0x80320030L)")]
        public const int FWP_E_INCOMPATIBLE_AUTH_METHOD = unchecked((int)(0x80320030));

        [NativeTypeName("#define FWP_E_INCOMPATIBLE_DH_GROUP _HRESULT_TYPEDEF_(0x80320031L)")]
        public const int FWP_E_INCOMPATIBLE_DH_GROUP = unchecked((int)(0x80320031));

        [NativeTypeName("#define FWP_E_EM_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80320032L)")]
        public const int FWP_E_EM_NOT_SUPPORTED = unchecked((int)(0x80320032));

        [NativeTypeName("#define FWP_E_NEVER_MATCH _HRESULT_TYPEDEF_(0x80320033L)")]
        public const int FWP_E_NEVER_MATCH = unchecked((int)(0x80320033));

        [NativeTypeName("#define FWP_E_PROVIDER_CONTEXT_MISMATCH _HRESULT_TYPEDEF_(0x80320034L)")]
        public const int FWP_E_PROVIDER_CONTEXT_MISMATCH = unchecked((int)(0x80320034));

        [NativeTypeName("#define FWP_E_INVALID_PARAMETER _HRESULT_TYPEDEF_(0x80320035L)")]
        public const int FWP_E_INVALID_PARAMETER = unchecked((int)(0x80320035));

        [NativeTypeName("#define FWP_E_TOO_MANY_SUBLAYERS _HRESULT_TYPEDEF_(0x80320036L)")]
        public const int FWP_E_TOO_MANY_SUBLAYERS = unchecked((int)(0x80320036));

        [NativeTypeName("#define FWP_E_CALLOUT_NOTIFICATION_FAILED _HRESULT_TYPEDEF_(0x80320037L)")]
        public const int FWP_E_CALLOUT_NOTIFICATION_FAILED = unchecked((int)(0x80320037));

        [NativeTypeName("#define FWP_E_INVALID_AUTH_TRANSFORM _HRESULT_TYPEDEF_(0x80320038L)")]
        public const int FWP_E_INVALID_AUTH_TRANSFORM = unchecked((int)(0x80320038));

        [NativeTypeName("#define FWP_E_INVALID_CIPHER_TRANSFORM _HRESULT_TYPEDEF_(0x80320039L)")]
        public const int FWP_E_INVALID_CIPHER_TRANSFORM = unchecked((int)(0x80320039));

        [NativeTypeName("#define FWP_E_INCOMPATIBLE_CIPHER_TRANSFORM _HRESULT_TYPEDEF_(0x8032003AL)")]
        public const int FWP_E_INCOMPATIBLE_CIPHER_TRANSFORM = unchecked((int)(0x8032003A));

        [NativeTypeName("#define FWP_E_INVALID_TRANSFORM_COMBINATION _HRESULT_TYPEDEF_(0x8032003BL)")]
        public const int FWP_E_INVALID_TRANSFORM_COMBINATION = unchecked((int)(0x8032003B));

        [NativeTypeName("#define FWP_E_DUPLICATE_AUTH_METHOD _HRESULT_TYPEDEF_(0x8032003CL)")]
        public const int FWP_E_DUPLICATE_AUTH_METHOD = unchecked((int)(0x8032003C));

        [NativeTypeName("#define FWP_E_INVALID_TUNNEL_ENDPOINT _HRESULT_TYPEDEF_(0x8032003DL)")]
        public const int FWP_E_INVALID_TUNNEL_ENDPOINT = unchecked((int)(0x8032003D));

        [NativeTypeName("#define FWP_E_L2_DRIVER_NOT_READY _HRESULT_TYPEDEF_(0x8032003EL)")]
        public const int FWP_E_L2_DRIVER_NOT_READY = unchecked((int)(0x8032003E));

        [NativeTypeName("#define FWP_E_KEY_DICTATOR_ALREADY_REGISTERED _HRESULT_TYPEDEF_(0x8032003FL)")]
        public const int FWP_E_KEY_DICTATOR_ALREADY_REGISTERED = unchecked((int)(0x8032003F));

        [NativeTypeName("#define FWP_E_KEY_DICTATION_INVALID_KEYING_MATERIAL _HRESULT_TYPEDEF_(0x80320040L)")]
        public const int FWP_E_KEY_DICTATION_INVALID_KEYING_MATERIAL = unchecked((int)(0x80320040));

        [NativeTypeName("#define FWP_E_CONNECTIONS_DISABLED _HRESULT_TYPEDEF_(0x80320041L)")]
        public const int FWP_E_CONNECTIONS_DISABLED = unchecked((int)(0x80320041));

        [NativeTypeName("#define FWP_E_INVALID_DNS_NAME _HRESULT_TYPEDEF_(0x80320042L)")]
        public const int FWP_E_INVALID_DNS_NAME = unchecked((int)(0x80320042));

        [NativeTypeName("#define FWP_E_STILL_ON _HRESULT_TYPEDEF_(0x80320043L)")]
        public const int FWP_E_STILL_ON = unchecked((int)(0x80320043));

        [NativeTypeName("#define FWP_E_IKEEXT_NOT_RUNNING _HRESULT_TYPEDEF_(0x80320044L)")]
        public const int FWP_E_IKEEXT_NOT_RUNNING = unchecked((int)(0x80320044));

        [NativeTypeName("#define FWP_E_DROP_NOICMP _HRESULT_TYPEDEF_(0x80320104L)")]
        public const int FWP_E_DROP_NOICMP = unchecked((int)(0x80320104));

        [NativeTypeName("#define WS_S_ASYNC _HRESULT_TYPEDEF_(0x003D0000L)")]
        public const int WS_S_ASYNC = ((int)(0x003D0000));

        [NativeTypeName("#define WS_S_END _HRESULT_TYPEDEF_(0x003D0001L)")]
        public const int WS_S_END = ((int)(0x003D0001));

        [NativeTypeName("#define WS_E_INVALID_FORMAT _HRESULT_TYPEDEF_(0x803D0000L)")]
        public const int WS_E_INVALID_FORMAT = unchecked((int)(0x803D0000));

        [NativeTypeName("#define WS_E_OBJECT_FAULTED _HRESULT_TYPEDEF_(0x803D0001L)")]
        public const int WS_E_OBJECT_FAULTED = unchecked((int)(0x803D0001));

        [NativeTypeName("#define WS_E_NUMERIC_OVERFLOW _HRESULT_TYPEDEF_(0x803D0002L)")]
        public const int WS_E_NUMERIC_OVERFLOW = unchecked((int)(0x803D0002));

        [NativeTypeName("#define WS_E_INVALID_OPERATION _HRESULT_TYPEDEF_(0x803D0003L)")]
        public const int WS_E_INVALID_OPERATION = unchecked((int)(0x803D0003));

        [NativeTypeName("#define WS_E_OPERATION_ABORTED _HRESULT_TYPEDEF_(0x803D0004L)")]
        public const int WS_E_OPERATION_ABORTED = unchecked((int)(0x803D0004));

        [NativeTypeName("#define WS_E_ENDPOINT_ACCESS_DENIED _HRESULT_TYPEDEF_(0x803D0005L)")]
        public const int WS_E_ENDPOINT_ACCESS_DENIED = unchecked((int)(0x803D0005));

        [NativeTypeName("#define WS_E_OPERATION_TIMED_OUT _HRESULT_TYPEDEF_(0x803D0006L)")]
        public const int WS_E_OPERATION_TIMED_OUT = unchecked((int)(0x803D0006));

        [NativeTypeName("#define WS_E_OPERATION_ABANDONED _HRESULT_TYPEDEF_(0x803D0007L)")]
        public const int WS_E_OPERATION_ABANDONED = unchecked((int)(0x803D0007));

        [NativeTypeName("#define WS_E_QUOTA_EXCEEDED _HRESULT_TYPEDEF_(0x803D0008L)")]
        public const int WS_E_QUOTA_EXCEEDED = unchecked((int)(0x803D0008));

        [NativeTypeName("#define WS_E_NO_TRANSLATION_AVAILABLE _HRESULT_TYPEDEF_(0x803D0009L)")]
        public const int WS_E_NO_TRANSLATION_AVAILABLE = unchecked((int)(0x803D0009));

        [NativeTypeName("#define WS_E_SECURITY_VERIFICATION_FAILURE _HRESULT_TYPEDEF_(0x803D000AL)")]
        public const int WS_E_SECURITY_VERIFICATION_FAILURE = unchecked((int)(0x803D000A));

        [NativeTypeName("#define WS_E_ADDRESS_IN_USE _HRESULT_TYPEDEF_(0x803D000BL)")]
        public const int WS_E_ADDRESS_IN_USE = unchecked((int)(0x803D000B));

        [NativeTypeName("#define WS_E_ADDRESS_NOT_AVAILABLE _HRESULT_TYPEDEF_(0x803D000CL)")]
        public const int WS_E_ADDRESS_NOT_AVAILABLE = unchecked((int)(0x803D000C));

        [NativeTypeName("#define WS_E_ENDPOINT_NOT_FOUND _HRESULT_TYPEDEF_(0x803D000DL)")]
        public const int WS_E_ENDPOINT_NOT_FOUND = unchecked((int)(0x803D000D));

        [NativeTypeName("#define WS_E_ENDPOINT_NOT_AVAILABLE _HRESULT_TYPEDEF_(0x803D000EL)")]
        public const int WS_E_ENDPOINT_NOT_AVAILABLE = unchecked((int)(0x803D000E));

        [NativeTypeName("#define WS_E_ENDPOINT_FAILURE _HRESULT_TYPEDEF_(0x803D000FL)")]
        public const int WS_E_ENDPOINT_FAILURE = unchecked((int)(0x803D000F));

        [NativeTypeName("#define WS_E_ENDPOINT_UNREACHABLE _HRESULT_TYPEDEF_(0x803D0010L)")]
        public const int WS_E_ENDPOINT_UNREACHABLE = unchecked((int)(0x803D0010));

        [NativeTypeName("#define WS_E_ENDPOINT_ACTION_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x803D0011L)")]
        public const int WS_E_ENDPOINT_ACTION_NOT_SUPPORTED = unchecked((int)(0x803D0011));

        [NativeTypeName("#define WS_E_ENDPOINT_TOO_BUSY _HRESULT_TYPEDEF_(0x803D0012L)")]
        public const int WS_E_ENDPOINT_TOO_BUSY = unchecked((int)(0x803D0012));

        [NativeTypeName("#define WS_E_ENDPOINT_FAULT_RECEIVED _HRESULT_TYPEDEF_(0x803D0013L)")]
        public const int WS_E_ENDPOINT_FAULT_RECEIVED = unchecked((int)(0x803D0013));

        [NativeTypeName("#define WS_E_ENDPOINT_DISCONNECTED _HRESULT_TYPEDEF_(0x803D0014L)")]
        public const int WS_E_ENDPOINT_DISCONNECTED = unchecked((int)(0x803D0014));

        [NativeTypeName("#define WS_E_PROXY_FAILURE _HRESULT_TYPEDEF_(0x803D0015L)")]
        public const int WS_E_PROXY_FAILURE = unchecked((int)(0x803D0015));

        [NativeTypeName("#define WS_E_PROXY_ACCESS_DENIED _HRESULT_TYPEDEF_(0x803D0016L)")]
        public const int WS_E_PROXY_ACCESS_DENIED = unchecked((int)(0x803D0016));

        [NativeTypeName("#define WS_E_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x803D0017L)")]
        public const int WS_E_NOT_SUPPORTED = unchecked((int)(0x803D0017));

        [NativeTypeName("#define WS_E_PROXY_REQUIRES_BASIC_AUTH _HRESULT_TYPEDEF_(0x803D0018L)")]
        public const int WS_E_PROXY_REQUIRES_BASIC_AUTH = unchecked((int)(0x803D0018));

        [NativeTypeName("#define WS_E_PROXY_REQUIRES_DIGEST_AUTH _HRESULT_TYPEDEF_(0x803D0019L)")]
        public const int WS_E_PROXY_REQUIRES_DIGEST_AUTH = unchecked((int)(0x803D0019));

        [NativeTypeName("#define WS_E_PROXY_REQUIRES_NTLM_AUTH _HRESULT_TYPEDEF_(0x803D001AL)")]
        public const int WS_E_PROXY_REQUIRES_NTLM_AUTH = unchecked((int)(0x803D001A));

        [NativeTypeName("#define WS_E_PROXY_REQUIRES_NEGOTIATE_AUTH _HRESULT_TYPEDEF_(0x803D001BL)")]
        public const int WS_E_PROXY_REQUIRES_NEGOTIATE_AUTH = unchecked((int)(0x803D001B));

        [NativeTypeName("#define WS_E_SERVER_REQUIRES_BASIC_AUTH _HRESULT_TYPEDEF_(0x803D001CL)")]
        public const int WS_E_SERVER_REQUIRES_BASIC_AUTH = unchecked((int)(0x803D001C));

        [NativeTypeName("#define WS_E_SERVER_REQUIRES_DIGEST_AUTH _HRESULT_TYPEDEF_(0x803D001DL)")]
        public const int WS_E_SERVER_REQUIRES_DIGEST_AUTH = unchecked((int)(0x803D001D));

        [NativeTypeName("#define WS_E_SERVER_REQUIRES_NTLM_AUTH _HRESULT_TYPEDEF_(0x803D001EL)")]
        public const int WS_E_SERVER_REQUIRES_NTLM_AUTH = unchecked((int)(0x803D001E));

        [NativeTypeName("#define WS_E_SERVER_REQUIRES_NEGOTIATE_AUTH _HRESULT_TYPEDEF_(0x803D001FL)")]
        public const int WS_E_SERVER_REQUIRES_NEGOTIATE_AUTH = unchecked((int)(0x803D001F));

        [NativeTypeName("#define WS_E_INVALID_ENDPOINT_URL _HRESULT_TYPEDEF_(0x803D0020L)")]
        public const int WS_E_INVALID_ENDPOINT_URL = unchecked((int)(0x803D0020));

        [NativeTypeName("#define WS_E_OTHER _HRESULT_TYPEDEF_(0x803D0021L)")]
        public const int WS_E_OTHER = unchecked((int)(0x803D0021));

        [NativeTypeName("#define WS_E_SECURITY_TOKEN_EXPIRED _HRESULT_TYPEDEF_(0x803D0022L)")]
        public const int WS_E_SECURITY_TOKEN_EXPIRED = unchecked((int)(0x803D0022));

        [NativeTypeName("#define WS_E_SECURITY_SYSTEM_FAILURE _HRESULT_TYPEDEF_(0x803D0023L)")]
        public const int WS_E_SECURITY_SYSTEM_FAILURE = unchecked((int)(0x803D0023));

        [NativeTypeName("#define ERROR_NDIS_INTERFACE_CLOSING _NDIS_ERROR_TYPEDEF_(0x80340002L)")]
        public const uint ERROR_NDIS_INTERFACE_CLOSING = (uint)(0x80340002);

        [NativeTypeName("#define ERROR_NDIS_BAD_VERSION _NDIS_ERROR_TYPEDEF_(0x80340004L)")]
        public const uint ERROR_NDIS_BAD_VERSION = (uint)(0x80340004);

        [NativeTypeName("#define ERROR_NDIS_BAD_CHARACTERISTICS _NDIS_ERROR_TYPEDEF_(0x80340005L)")]
        public const uint ERROR_NDIS_BAD_CHARACTERISTICS = (uint)(0x80340005);

        [NativeTypeName("#define ERROR_NDIS_ADAPTER_NOT_FOUND _NDIS_ERROR_TYPEDEF_(0x80340006L)")]
        public const uint ERROR_NDIS_ADAPTER_NOT_FOUND = (uint)(0x80340006);

        [NativeTypeName("#define ERROR_NDIS_OPEN_FAILED _NDIS_ERROR_TYPEDEF_(0x80340007L)")]
        public const uint ERROR_NDIS_OPEN_FAILED = (uint)(0x80340007);

        [NativeTypeName("#define ERROR_NDIS_DEVICE_FAILED _NDIS_ERROR_TYPEDEF_(0x80340008L)")]
        public const uint ERROR_NDIS_DEVICE_FAILED = (uint)(0x80340008);

        [NativeTypeName("#define ERROR_NDIS_MULTICAST_FULL _NDIS_ERROR_TYPEDEF_(0x80340009L)")]
        public const uint ERROR_NDIS_MULTICAST_FULL = (uint)(0x80340009);

        [NativeTypeName("#define ERROR_NDIS_MULTICAST_EXISTS _NDIS_ERROR_TYPEDEF_(0x8034000AL)")]
        public const uint ERROR_NDIS_MULTICAST_EXISTS = (uint)(0x8034000A);

        [NativeTypeName("#define ERROR_NDIS_MULTICAST_NOT_FOUND _NDIS_ERROR_TYPEDEF_(0x8034000BL)")]
        public const uint ERROR_NDIS_MULTICAST_NOT_FOUND = (uint)(0x8034000B);

        [NativeTypeName("#define ERROR_NDIS_REQUEST_ABORTED _NDIS_ERROR_TYPEDEF_(0x8034000CL)")]
        public const uint ERROR_NDIS_REQUEST_ABORTED = (uint)(0x8034000C);

        [NativeTypeName("#define ERROR_NDIS_RESET_IN_PROGRESS _NDIS_ERROR_TYPEDEF_(0x8034000DL)")]
        public const uint ERROR_NDIS_RESET_IN_PROGRESS = (uint)(0x8034000D);

        [NativeTypeName("#define ERROR_NDIS_NOT_SUPPORTED _NDIS_ERROR_TYPEDEF_(0x803400BBL)")]
        public const uint ERROR_NDIS_NOT_SUPPORTED = (uint)(0x803400BB);

        [NativeTypeName("#define ERROR_NDIS_INVALID_PACKET _NDIS_ERROR_TYPEDEF_(0x8034000FL)")]
        public const uint ERROR_NDIS_INVALID_PACKET = (uint)(0x8034000F);

        [NativeTypeName("#define ERROR_NDIS_ADAPTER_NOT_READY _NDIS_ERROR_TYPEDEF_(0x80340011L)")]
        public const uint ERROR_NDIS_ADAPTER_NOT_READY = (uint)(0x80340011);

        [NativeTypeName("#define ERROR_NDIS_INVALID_LENGTH _NDIS_ERROR_TYPEDEF_(0x80340014L)")]
        public const uint ERROR_NDIS_INVALID_LENGTH = (uint)(0x80340014);

        [NativeTypeName("#define ERROR_NDIS_INVALID_DATA _NDIS_ERROR_TYPEDEF_(0x80340015L)")]
        public const uint ERROR_NDIS_INVALID_DATA = (uint)(0x80340015);

        [NativeTypeName("#define ERROR_NDIS_BUFFER_TOO_SHORT _NDIS_ERROR_TYPEDEF_(0x80340016L)")]
        public const uint ERROR_NDIS_BUFFER_TOO_SHORT = (uint)(0x80340016);

        [NativeTypeName("#define ERROR_NDIS_INVALID_OID _NDIS_ERROR_TYPEDEF_(0x80340017L)")]
        public const uint ERROR_NDIS_INVALID_OID = (uint)(0x80340017);

        [NativeTypeName("#define ERROR_NDIS_ADAPTER_REMOVED _NDIS_ERROR_TYPEDEF_(0x80340018L)")]
        public const uint ERROR_NDIS_ADAPTER_REMOVED = (uint)(0x80340018);

        [NativeTypeName("#define ERROR_NDIS_UNSUPPORTED_MEDIA _NDIS_ERROR_TYPEDEF_(0x80340019L)")]
        public const uint ERROR_NDIS_UNSUPPORTED_MEDIA = (uint)(0x80340019);

        [NativeTypeName("#define ERROR_NDIS_GROUP_ADDRESS_IN_USE _NDIS_ERROR_TYPEDEF_(0x8034001AL)")]
        public const uint ERROR_NDIS_GROUP_ADDRESS_IN_USE = (uint)(0x8034001A);

        [NativeTypeName("#define ERROR_NDIS_FILE_NOT_FOUND _NDIS_ERROR_TYPEDEF_(0x8034001BL)")]
        public const uint ERROR_NDIS_FILE_NOT_FOUND = (uint)(0x8034001B);

        [NativeTypeName("#define ERROR_NDIS_ERROR_READING_FILE _NDIS_ERROR_TYPEDEF_(0x8034001CL)")]
        public const uint ERROR_NDIS_ERROR_READING_FILE = (uint)(0x8034001C);

        [NativeTypeName("#define ERROR_NDIS_ALREADY_MAPPED _NDIS_ERROR_TYPEDEF_(0x8034001DL)")]
        public const uint ERROR_NDIS_ALREADY_MAPPED = (uint)(0x8034001D);

        [NativeTypeName("#define ERROR_NDIS_RESOURCE_CONFLICT _NDIS_ERROR_TYPEDEF_(0x8034001EL)")]
        public const uint ERROR_NDIS_RESOURCE_CONFLICT = (uint)(0x8034001E);

        [NativeTypeName("#define ERROR_NDIS_MEDIA_DISCONNECTED _NDIS_ERROR_TYPEDEF_(0x8034001FL)")]
        public const uint ERROR_NDIS_MEDIA_DISCONNECTED = (uint)(0x8034001F);

        [NativeTypeName("#define ERROR_NDIS_INVALID_ADDRESS _NDIS_ERROR_TYPEDEF_(0x80340022L)")]
        public const uint ERROR_NDIS_INVALID_ADDRESS = (uint)(0x80340022);

        [NativeTypeName("#define ERROR_NDIS_INVALID_DEVICE_REQUEST _NDIS_ERROR_TYPEDEF_(0x80340010L)")]
        public const uint ERROR_NDIS_INVALID_DEVICE_REQUEST = (uint)(0x80340010);

        [NativeTypeName("#define ERROR_NDIS_PAUSED _NDIS_ERROR_TYPEDEF_(0x8034002AL)")]
        public const uint ERROR_NDIS_PAUSED = (uint)(0x8034002A);

        [NativeTypeName("#define ERROR_NDIS_INTERFACE_NOT_FOUND _NDIS_ERROR_TYPEDEF_(0x8034002BL)")]
        public const uint ERROR_NDIS_INTERFACE_NOT_FOUND = (uint)(0x8034002B);

        [NativeTypeName("#define ERROR_NDIS_UNSUPPORTED_REVISION _NDIS_ERROR_TYPEDEF_(0x8034002CL)")]
        public const uint ERROR_NDIS_UNSUPPORTED_REVISION = (uint)(0x8034002C);

        [NativeTypeName("#define ERROR_NDIS_INVALID_PORT _NDIS_ERROR_TYPEDEF_(0x8034002DL)")]
        public const uint ERROR_NDIS_INVALID_PORT = (uint)(0x8034002D);

        [NativeTypeName("#define ERROR_NDIS_INVALID_PORT_STATE _NDIS_ERROR_TYPEDEF_(0x8034002EL)")]
        public const uint ERROR_NDIS_INVALID_PORT_STATE = (uint)(0x8034002E);

        [NativeTypeName("#define ERROR_NDIS_LOW_POWER_STATE _NDIS_ERROR_TYPEDEF_(0x8034002FL)")]
        public const uint ERROR_NDIS_LOW_POWER_STATE = (uint)(0x8034002F);

        [NativeTypeName("#define ERROR_NDIS_REINIT_REQUIRED _NDIS_ERROR_TYPEDEF_(0x80340030L)")]
        public const uint ERROR_NDIS_REINIT_REQUIRED = (uint)(0x80340030);

        [NativeTypeName("#define ERROR_NDIS_NO_QUEUES _NDIS_ERROR_TYPEDEF_(0x80340031L)")]
        public const uint ERROR_NDIS_NO_QUEUES = (uint)(0x80340031);

        [NativeTypeName("#define ERROR_NDIS_DOT11_AUTO_CONFIG_ENABLED _NDIS_ERROR_TYPEDEF_(0x80342000L)")]
        public const uint ERROR_NDIS_DOT11_AUTO_CONFIG_ENABLED = (uint)(0x80342000);

        [NativeTypeName("#define ERROR_NDIS_DOT11_MEDIA_IN_USE _NDIS_ERROR_TYPEDEF_(0x80342001L)")]
        public const uint ERROR_NDIS_DOT11_MEDIA_IN_USE = (uint)(0x80342001);

        [NativeTypeName("#define ERROR_NDIS_DOT11_POWER_STATE_INVALID _NDIS_ERROR_TYPEDEF_(0x80342002L)")]
        public const uint ERROR_NDIS_DOT11_POWER_STATE_INVALID = (uint)(0x80342002);

        [NativeTypeName("#define ERROR_NDIS_PM_WOL_PATTERN_LIST_FULL _NDIS_ERROR_TYPEDEF_(0x80342003L)")]
        public const uint ERROR_NDIS_PM_WOL_PATTERN_LIST_FULL = (uint)(0x80342003);

        [NativeTypeName("#define ERROR_NDIS_PM_PROTOCOL_OFFLOAD_LIST_FULL _NDIS_ERROR_TYPEDEF_(0x80342004L)")]
        public const uint ERROR_NDIS_PM_PROTOCOL_OFFLOAD_LIST_FULL = (uint)(0x80342004);

        [NativeTypeName("#define ERROR_NDIS_DOT11_AP_CHANNEL_CURRENTLY_NOT_AVAILABLE _NDIS_ERROR_TYPEDEF_(0x80342005L)")]
        public const uint ERROR_NDIS_DOT11_AP_CHANNEL_CURRENTLY_NOT_AVAILABLE = (uint)(0x80342005);

        [NativeTypeName("#define ERROR_NDIS_DOT11_AP_BAND_CURRENTLY_NOT_AVAILABLE _NDIS_ERROR_TYPEDEF_(0x80342006L)")]
        public const uint ERROR_NDIS_DOT11_AP_BAND_CURRENTLY_NOT_AVAILABLE = (uint)(0x80342006);

        [NativeTypeName("#define ERROR_NDIS_DOT11_AP_CHANNEL_NOT_ALLOWED _NDIS_ERROR_TYPEDEF_(0x80342007L)")]
        public const uint ERROR_NDIS_DOT11_AP_CHANNEL_NOT_ALLOWED = (uint)(0x80342007);

        [NativeTypeName("#define ERROR_NDIS_DOT11_AP_BAND_NOT_ALLOWED _NDIS_ERROR_TYPEDEF_(0x80342008L)")]
        public const uint ERROR_NDIS_DOT11_AP_BAND_NOT_ALLOWED = (uint)(0x80342008);

        [NativeTypeName("#define ERROR_NDIS_INDICATION_REQUIRED _NDIS_ERROR_TYPEDEF_(0x00340001L)")]
        public const uint ERROR_NDIS_INDICATION_REQUIRED = (uint)(0x00340001);

        [NativeTypeName("#define ERROR_NDIS_OFFLOAD_POLICY _NDIS_ERROR_TYPEDEF_(0xC034100FL)")]
        public const uint ERROR_NDIS_OFFLOAD_POLICY = (uint)(0xC034100F);

        [NativeTypeName("#define ERROR_NDIS_OFFLOAD_CONNECTION_REJECTED _NDIS_ERROR_TYPEDEF_(0xC0341012L)")]
        public const uint ERROR_NDIS_OFFLOAD_CONNECTION_REJECTED = (uint)(0xC0341012);

        [NativeTypeName("#define ERROR_NDIS_OFFLOAD_PATH_REJECTED _NDIS_ERROR_TYPEDEF_(0xC0341013L)")]
        public const uint ERROR_NDIS_OFFLOAD_PATH_REJECTED = (uint)(0xC0341013);

        [NativeTypeName("#define ERROR_HV_INVALID_HYPERCALL_CODE _NDIS_ERROR_TYPEDEF_(0xC0350002L)")]
        public const uint ERROR_HV_INVALID_HYPERCALL_CODE = (uint)(0xC0350002);

        [NativeTypeName("#define ERROR_HV_INVALID_HYPERCALL_INPUT _NDIS_ERROR_TYPEDEF_(0xC0350003L)")]
        public const uint ERROR_HV_INVALID_HYPERCALL_INPUT = (uint)(0xC0350003);

        [NativeTypeName("#define ERROR_HV_INVALID_ALIGNMENT _NDIS_ERROR_TYPEDEF_(0xC0350004L)")]
        public const uint ERROR_HV_INVALID_ALIGNMENT = (uint)(0xC0350004);

        [NativeTypeName("#define ERROR_HV_INVALID_PARAMETER _NDIS_ERROR_TYPEDEF_(0xC0350005L)")]
        public const uint ERROR_HV_INVALID_PARAMETER = (uint)(0xC0350005);

        [NativeTypeName("#define ERROR_HV_ACCESS_DENIED _NDIS_ERROR_TYPEDEF_(0xC0350006L)")]
        public const uint ERROR_HV_ACCESS_DENIED = (uint)(0xC0350006);

        [NativeTypeName("#define ERROR_HV_INVALID_PARTITION_STATE _NDIS_ERROR_TYPEDEF_(0xC0350007L)")]
        public const uint ERROR_HV_INVALID_PARTITION_STATE = (uint)(0xC0350007);

        [NativeTypeName("#define ERROR_HV_OPERATION_DENIED _NDIS_ERROR_TYPEDEF_(0xC0350008L)")]
        public const uint ERROR_HV_OPERATION_DENIED = (uint)(0xC0350008);

        [NativeTypeName("#define ERROR_HV_UNKNOWN_PROPERTY _NDIS_ERROR_TYPEDEF_(0xC0350009L)")]
        public const uint ERROR_HV_UNKNOWN_PROPERTY = (uint)(0xC0350009);

        [NativeTypeName("#define ERROR_HV_PROPERTY_VALUE_OUT_OF_RANGE _NDIS_ERROR_TYPEDEF_(0xC035000AL)")]
        public const uint ERROR_HV_PROPERTY_VALUE_OUT_OF_RANGE = (uint)(0xC035000A);

        [NativeTypeName("#define ERROR_HV_INSUFFICIENT_MEMORY _NDIS_ERROR_TYPEDEF_(0xC035000BL)")]
        public const uint ERROR_HV_INSUFFICIENT_MEMORY = (uint)(0xC035000B);

        [NativeTypeName("#define ERROR_HV_PARTITION_TOO_DEEP _NDIS_ERROR_TYPEDEF_(0xC035000CL)")]
        public const uint ERROR_HV_PARTITION_TOO_DEEP = (uint)(0xC035000C);

        [NativeTypeName("#define ERROR_HV_INVALID_PARTITION_ID _NDIS_ERROR_TYPEDEF_(0xC035000DL)")]
        public const uint ERROR_HV_INVALID_PARTITION_ID = (uint)(0xC035000D);

        [NativeTypeName("#define ERROR_HV_INVALID_VP_INDEX _NDIS_ERROR_TYPEDEF_(0xC035000EL)")]
        public const uint ERROR_HV_INVALID_VP_INDEX = (uint)(0xC035000E);

        [NativeTypeName("#define ERROR_HV_INVALID_PORT_ID _NDIS_ERROR_TYPEDEF_(0xC0350011L)")]
        public const uint ERROR_HV_INVALID_PORT_ID = (uint)(0xC0350011);

        [NativeTypeName("#define ERROR_HV_INVALID_CONNECTION_ID _NDIS_ERROR_TYPEDEF_(0xC0350012L)")]
        public const uint ERROR_HV_INVALID_CONNECTION_ID = (uint)(0xC0350012);

        [NativeTypeName("#define ERROR_HV_INSUFFICIENT_BUFFERS _NDIS_ERROR_TYPEDEF_(0xC0350013L)")]
        public const uint ERROR_HV_INSUFFICIENT_BUFFERS = (uint)(0xC0350013);

        [NativeTypeName("#define ERROR_HV_NOT_ACKNOWLEDGED _NDIS_ERROR_TYPEDEF_(0xC0350014L)")]
        public const uint ERROR_HV_NOT_ACKNOWLEDGED = (uint)(0xC0350014);

        [NativeTypeName("#define ERROR_HV_INVALID_VP_STATE _NDIS_ERROR_TYPEDEF_(0xC0350015L)")]
        public const uint ERROR_HV_INVALID_VP_STATE = (uint)(0xC0350015);

        [NativeTypeName("#define ERROR_HV_ACKNOWLEDGED _NDIS_ERROR_TYPEDEF_(0xC0350016L)")]
        public const uint ERROR_HV_ACKNOWLEDGED = (uint)(0xC0350016);

        [NativeTypeName("#define ERROR_HV_INVALID_SAVE_RESTORE_STATE _NDIS_ERROR_TYPEDEF_(0xC0350017L)")]
        public const uint ERROR_HV_INVALID_SAVE_RESTORE_STATE = (uint)(0xC0350017);

        [NativeTypeName("#define ERROR_HV_INVALID_SYNIC_STATE _NDIS_ERROR_TYPEDEF_(0xC0350018L)")]
        public const uint ERROR_HV_INVALID_SYNIC_STATE = (uint)(0xC0350018);

        [NativeTypeName("#define ERROR_HV_OBJECT_IN_USE _NDIS_ERROR_TYPEDEF_(0xC0350019L)")]
        public const uint ERROR_HV_OBJECT_IN_USE = (uint)(0xC0350019);

        [NativeTypeName("#define ERROR_HV_INVALID_PROXIMITY_DOMAIN_INFO _NDIS_ERROR_TYPEDEF_(0xC035001AL)")]
        public const uint ERROR_HV_INVALID_PROXIMITY_DOMAIN_INFO = (uint)(0xC035001A);

        [NativeTypeName("#define ERROR_HV_NO_DATA _NDIS_ERROR_TYPEDEF_(0xC035001BL)")]
        public const uint ERROR_HV_NO_DATA = (uint)(0xC035001B);

        [NativeTypeName("#define ERROR_HV_INACTIVE _NDIS_ERROR_TYPEDEF_(0xC035001CL)")]
        public const uint ERROR_HV_INACTIVE = (uint)(0xC035001C);

        [NativeTypeName("#define ERROR_HV_NO_RESOURCES _NDIS_ERROR_TYPEDEF_(0xC035001DL)")]
        public const uint ERROR_HV_NO_RESOURCES = (uint)(0xC035001D);

        [NativeTypeName("#define ERROR_HV_FEATURE_UNAVAILABLE _NDIS_ERROR_TYPEDEF_(0xC035001EL)")]
        public const uint ERROR_HV_FEATURE_UNAVAILABLE = (uint)(0xC035001E);

        [NativeTypeName("#define ERROR_HV_INSUFFICIENT_BUFFER _NDIS_ERROR_TYPEDEF_(0xC0350033L)")]
        public const uint ERROR_HV_INSUFFICIENT_BUFFER = (uint)(0xC0350033);

        [NativeTypeName("#define ERROR_HV_INSUFFICIENT_DEVICE_DOMAINS _NDIS_ERROR_TYPEDEF_(0xC0350038L)")]
        public const uint ERROR_HV_INSUFFICIENT_DEVICE_DOMAINS = (uint)(0xC0350038);

        [NativeTypeName("#define ERROR_HV_CPUID_FEATURE_VALIDATION _NDIS_ERROR_TYPEDEF_(0xC035003CL)")]
        public const uint ERROR_HV_CPUID_FEATURE_VALIDATION = (uint)(0xC035003C);

        [NativeTypeName("#define ERROR_HV_CPUID_XSAVE_FEATURE_VALIDATION _NDIS_ERROR_TYPEDEF_(0xC035003DL)")]
        public const uint ERROR_HV_CPUID_XSAVE_FEATURE_VALIDATION = (uint)(0xC035003D);

        [NativeTypeName("#define ERROR_HV_PROCESSOR_STARTUP_TIMEOUT _NDIS_ERROR_TYPEDEF_(0xC035003EL)")]
        public const uint ERROR_HV_PROCESSOR_STARTUP_TIMEOUT = (uint)(0xC035003E);

        [NativeTypeName("#define ERROR_HV_SMX_ENABLED _NDIS_ERROR_TYPEDEF_(0xC035003FL)")]
        public const uint ERROR_HV_SMX_ENABLED = (uint)(0xC035003F);

        [NativeTypeName("#define ERROR_HV_INVALID_LP_INDEX _NDIS_ERROR_TYPEDEF_(0xC0350041L)")]
        public const uint ERROR_HV_INVALID_LP_INDEX = (uint)(0xC0350041);

        [NativeTypeName("#define ERROR_HV_INVALID_REGISTER_VALUE _NDIS_ERROR_TYPEDEF_(0xC0350050L)")]
        public const uint ERROR_HV_INVALID_REGISTER_VALUE = (uint)(0xC0350050);

        [NativeTypeName("#define ERROR_HV_INVALID_VTL_STATE _NDIS_ERROR_TYPEDEF_(0xC0350051L)")]
        public const uint ERROR_HV_INVALID_VTL_STATE = (uint)(0xC0350051);

        [NativeTypeName("#define ERROR_HV_NX_NOT_DETECTED _NDIS_ERROR_TYPEDEF_(0xC0350055L)")]
        public const uint ERROR_HV_NX_NOT_DETECTED = (uint)(0xC0350055);

        [NativeTypeName("#define ERROR_HV_INVALID_DEVICE_ID _NDIS_ERROR_TYPEDEF_(0xC0350057L)")]
        public const uint ERROR_HV_INVALID_DEVICE_ID = (uint)(0xC0350057);

        [NativeTypeName("#define ERROR_HV_INVALID_DEVICE_STATE _NDIS_ERROR_TYPEDEF_(0xC0350058L)")]
        public const uint ERROR_HV_INVALID_DEVICE_STATE = (uint)(0xC0350058);

        [NativeTypeName("#define ERROR_HV_PENDING_PAGE_REQUESTS _NDIS_ERROR_TYPEDEF_(0x00350059L)")]
        public const uint ERROR_HV_PENDING_PAGE_REQUESTS = (uint)(0x00350059);

        [NativeTypeName("#define ERROR_HV_PAGE_REQUEST_INVALID _NDIS_ERROR_TYPEDEF_(0xC0350060L)")]
        public const uint ERROR_HV_PAGE_REQUEST_INVALID = (uint)(0xC0350060);

        [NativeTypeName("#define ERROR_HV_INVALID_CPU_GROUP_ID _NDIS_ERROR_TYPEDEF_(0xC035006FL)")]
        public const uint ERROR_HV_INVALID_CPU_GROUP_ID = (uint)(0xC035006F);

        [NativeTypeName("#define ERROR_HV_INVALID_CPU_GROUP_STATE _NDIS_ERROR_TYPEDEF_(0xC0350070L)")]
        public const uint ERROR_HV_INVALID_CPU_GROUP_STATE = (uint)(0xC0350070);

        [NativeTypeName("#define ERROR_HV_OPERATION_FAILED _NDIS_ERROR_TYPEDEF_(0xC0350071L)")]
        public const uint ERROR_HV_OPERATION_FAILED = (uint)(0xC0350071);

        [NativeTypeName("#define ERROR_HV_NOT_ALLOWED_WITH_NESTED_VIRT_ACTIVE _NDIS_ERROR_TYPEDEF_(0xC0350072L)")]
        public const uint ERROR_HV_NOT_ALLOWED_WITH_NESTED_VIRT_ACTIVE = (uint)(0xC0350072);

        [NativeTypeName("#define ERROR_HV_INSUFFICIENT_ROOT_MEMORY _NDIS_ERROR_TYPEDEF_(0xC0350073L)")]
        public const uint ERROR_HV_INSUFFICIENT_ROOT_MEMORY = (uint)(0xC0350073);

        [NativeTypeName("#define ERROR_HV_EVENT_BUFFER_ALREADY_FREED _NDIS_ERROR_TYPEDEF_(0xC0350074L)")]
        public const uint ERROR_HV_EVENT_BUFFER_ALREADY_FREED = (uint)(0xC0350074);

        [NativeTypeName("#define ERROR_HV_INSUFFICIENT_CONTIGUOUS_MEMORY _NDIS_ERROR_TYPEDEF_(0xC0350075L)")]
        public const uint ERROR_HV_INSUFFICIENT_CONTIGUOUS_MEMORY = (uint)(0xC0350075);

        [NativeTypeName("#define ERROR_HV_NOT_PRESENT _NDIS_ERROR_TYPEDEF_(0xC0351000L)")]
        public const uint ERROR_HV_NOT_PRESENT = (uint)(0xC0351000);

        [NativeTypeName("#define ERROR_VID_DUPLICATE_HANDLER _NDIS_ERROR_TYPEDEF_(0xC0370001L)")]
        public const uint ERROR_VID_DUPLICATE_HANDLER = (uint)(0xC0370001);

        [NativeTypeName("#define ERROR_VID_TOO_MANY_HANDLERS _NDIS_ERROR_TYPEDEF_(0xC0370002L)")]
        public const uint ERROR_VID_TOO_MANY_HANDLERS = (uint)(0xC0370002);

        [NativeTypeName("#define ERROR_VID_QUEUE_FULL _NDIS_ERROR_TYPEDEF_(0xC0370003L)")]
        public const uint ERROR_VID_QUEUE_FULL = (uint)(0xC0370003);

        [NativeTypeName("#define ERROR_VID_HANDLER_NOT_PRESENT _NDIS_ERROR_TYPEDEF_(0xC0370004L)")]
        public const uint ERROR_VID_HANDLER_NOT_PRESENT = (uint)(0xC0370004);

        [NativeTypeName("#define ERROR_VID_INVALID_OBJECT_NAME _NDIS_ERROR_TYPEDEF_(0xC0370005L)")]
        public const uint ERROR_VID_INVALID_OBJECT_NAME = (uint)(0xC0370005);

        [NativeTypeName("#define ERROR_VID_PARTITION_NAME_TOO_LONG _NDIS_ERROR_TYPEDEF_(0xC0370006L)")]
        public const uint ERROR_VID_PARTITION_NAME_TOO_LONG = (uint)(0xC0370006);

        [NativeTypeName("#define ERROR_VID_MESSAGE_QUEUE_NAME_TOO_LONG _NDIS_ERROR_TYPEDEF_(0xC0370007L)")]
        public const uint ERROR_VID_MESSAGE_QUEUE_NAME_TOO_LONG = (uint)(0xC0370007);

        [NativeTypeName("#define ERROR_VID_PARTITION_ALREADY_EXISTS _NDIS_ERROR_TYPEDEF_(0xC0370008L)")]
        public const uint ERROR_VID_PARTITION_ALREADY_EXISTS = (uint)(0xC0370008);

        [NativeTypeName("#define ERROR_VID_PARTITION_DOES_NOT_EXIST _NDIS_ERROR_TYPEDEF_(0xC0370009L)")]
        public const uint ERROR_VID_PARTITION_DOES_NOT_EXIST = (uint)(0xC0370009);

        [NativeTypeName("#define ERROR_VID_PARTITION_NAME_NOT_FOUND _NDIS_ERROR_TYPEDEF_(0xC037000AL)")]
        public const uint ERROR_VID_PARTITION_NAME_NOT_FOUND = (uint)(0xC037000A);

        [NativeTypeName("#define ERROR_VID_MESSAGE_QUEUE_ALREADY_EXISTS _NDIS_ERROR_TYPEDEF_(0xC037000BL)")]
        public const uint ERROR_VID_MESSAGE_QUEUE_ALREADY_EXISTS = (uint)(0xC037000B);

        [NativeTypeName("#define ERROR_VID_EXCEEDED_MBP_ENTRY_MAP_LIMIT _NDIS_ERROR_TYPEDEF_(0xC037000CL)")]
        public const uint ERROR_VID_EXCEEDED_MBP_ENTRY_MAP_LIMIT = (uint)(0xC037000C);

        [NativeTypeName("#define ERROR_VID_MB_STILL_REFERENCED _NDIS_ERROR_TYPEDEF_(0xC037000DL)")]
        public const uint ERROR_VID_MB_STILL_REFERENCED = (uint)(0xC037000D);

        [NativeTypeName("#define ERROR_VID_CHILD_GPA_PAGE_SET_CORRUPTED _NDIS_ERROR_TYPEDEF_(0xC037000EL)")]
        public const uint ERROR_VID_CHILD_GPA_PAGE_SET_CORRUPTED = (uint)(0xC037000E);

        [NativeTypeName("#define ERROR_VID_INVALID_NUMA_SETTINGS _NDIS_ERROR_TYPEDEF_(0xC037000FL)")]
        public const uint ERROR_VID_INVALID_NUMA_SETTINGS = (uint)(0xC037000F);

        [NativeTypeName("#define ERROR_VID_INVALID_NUMA_NODE_INDEX _NDIS_ERROR_TYPEDEF_(0xC0370010L)")]
        public const uint ERROR_VID_INVALID_NUMA_NODE_INDEX = (uint)(0xC0370010);

        [NativeTypeName("#define ERROR_VID_NOTIFICATION_QUEUE_ALREADY_ASSOCIATED _NDIS_ERROR_TYPEDEF_(0xC0370011L)")]
        public const uint ERROR_VID_NOTIFICATION_QUEUE_ALREADY_ASSOCIATED = (uint)(0xC0370011);

        [NativeTypeName("#define ERROR_VID_INVALID_MEMORY_BLOCK_HANDLE _NDIS_ERROR_TYPEDEF_(0xC0370012L)")]
        public const uint ERROR_VID_INVALID_MEMORY_BLOCK_HANDLE = (uint)(0xC0370012);

        [NativeTypeName("#define ERROR_VID_PAGE_RANGE_OVERFLOW _NDIS_ERROR_TYPEDEF_(0xC0370013L)")]
        public const uint ERROR_VID_PAGE_RANGE_OVERFLOW = (uint)(0xC0370013);

        [NativeTypeName("#define ERROR_VID_INVALID_MESSAGE_QUEUE_HANDLE _NDIS_ERROR_TYPEDEF_(0xC0370014L)")]
        public const uint ERROR_VID_INVALID_MESSAGE_QUEUE_HANDLE = (uint)(0xC0370014);

        [NativeTypeName("#define ERROR_VID_INVALID_GPA_RANGE_HANDLE _NDIS_ERROR_TYPEDEF_(0xC0370015L)")]
        public const uint ERROR_VID_INVALID_GPA_RANGE_HANDLE = (uint)(0xC0370015);

        [NativeTypeName("#define ERROR_VID_NO_MEMORY_BLOCK_NOTIFICATION_QUEUE _NDIS_ERROR_TYPEDEF_(0xC0370016L)")]
        public const uint ERROR_VID_NO_MEMORY_BLOCK_NOTIFICATION_QUEUE = (uint)(0xC0370016);

        [NativeTypeName("#define ERROR_VID_MEMORY_BLOCK_LOCK_COUNT_EXCEEDED _NDIS_ERROR_TYPEDEF_(0xC0370017L)")]
        public const uint ERROR_VID_MEMORY_BLOCK_LOCK_COUNT_EXCEEDED = (uint)(0xC0370017);

        [NativeTypeName("#define ERROR_VID_INVALID_PPM_HANDLE _NDIS_ERROR_TYPEDEF_(0xC0370018L)")]
        public const uint ERROR_VID_INVALID_PPM_HANDLE = (uint)(0xC0370018);

        [NativeTypeName("#define ERROR_VID_MBPS_ARE_LOCKED _NDIS_ERROR_TYPEDEF_(0xC0370019L)")]
        public const uint ERROR_VID_MBPS_ARE_LOCKED = (uint)(0xC0370019);

        [NativeTypeName("#define ERROR_VID_MESSAGE_QUEUE_CLOSED _NDIS_ERROR_TYPEDEF_(0xC037001AL)")]
        public const uint ERROR_VID_MESSAGE_QUEUE_CLOSED = (uint)(0xC037001A);

        [NativeTypeName("#define ERROR_VID_VIRTUAL_PROCESSOR_LIMIT_EXCEEDED _NDIS_ERROR_TYPEDEF_(0xC037001BL)")]
        public const uint ERROR_VID_VIRTUAL_PROCESSOR_LIMIT_EXCEEDED = (uint)(0xC037001B);

        [NativeTypeName("#define ERROR_VID_STOP_PENDING _NDIS_ERROR_TYPEDEF_(0xC037001CL)")]
        public const uint ERROR_VID_STOP_PENDING = (uint)(0xC037001C);

        [NativeTypeName("#define ERROR_VID_INVALID_PROCESSOR_STATE _NDIS_ERROR_TYPEDEF_(0xC037001DL)")]
        public const uint ERROR_VID_INVALID_PROCESSOR_STATE = (uint)(0xC037001D);

        [NativeTypeName("#define ERROR_VID_EXCEEDED_KM_CONTEXT_COUNT_LIMIT _NDIS_ERROR_TYPEDEF_(0xC037001EL)")]
        public const uint ERROR_VID_EXCEEDED_KM_CONTEXT_COUNT_LIMIT = (uint)(0xC037001E);

        [NativeTypeName("#define ERROR_VID_KM_INTERFACE_ALREADY_INITIALIZED _NDIS_ERROR_TYPEDEF_(0xC037001FL)")]
        public const uint ERROR_VID_KM_INTERFACE_ALREADY_INITIALIZED = (uint)(0xC037001F);

        [NativeTypeName("#define ERROR_VID_MB_PROPERTY_ALREADY_SET_RESET _NDIS_ERROR_TYPEDEF_(0xC0370020L)")]
        public const uint ERROR_VID_MB_PROPERTY_ALREADY_SET_RESET = (uint)(0xC0370020);

        [NativeTypeName("#define ERROR_VID_MMIO_RANGE_DESTROYED _NDIS_ERROR_TYPEDEF_(0xC0370021L)")]
        public const uint ERROR_VID_MMIO_RANGE_DESTROYED = (uint)(0xC0370021);

        [NativeTypeName("#define ERROR_VID_INVALID_CHILD_GPA_PAGE_SET _NDIS_ERROR_TYPEDEF_(0xC0370022L)")]
        public const uint ERROR_VID_INVALID_CHILD_GPA_PAGE_SET = (uint)(0xC0370022);

        [NativeTypeName("#define ERROR_VID_RESERVE_PAGE_SET_IS_BEING_USED _NDIS_ERROR_TYPEDEF_(0xC0370023L)")]
        public const uint ERROR_VID_RESERVE_PAGE_SET_IS_BEING_USED = (uint)(0xC0370023);

        [NativeTypeName("#define ERROR_VID_RESERVE_PAGE_SET_TOO_SMALL _NDIS_ERROR_TYPEDEF_(0xC0370024L)")]
        public const uint ERROR_VID_RESERVE_PAGE_SET_TOO_SMALL = (uint)(0xC0370024);

        [NativeTypeName("#define ERROR_VID_MBP_ALREADY_LOCKED_USING_RESERVED_PAGE _NDIS_ERROR_TYPEDEF_(0xC0370025L)")]
        public const uint ERROR_VID_MBP_ALREADY_LOCKED_USING_RESERVED_PAGE = (uint)(0xC0370025);

        [NativeTypeName("#define ERROR_VID_MBP_COUNT_EXCEEDED_LIMIT _NDIS_ERROR_TYPEDEF_(0xC0370026L)")]
        public const uint ERROR_VID_MBP_COUNT_EXCEEDED_LIMIT = (uint)(0xC0370026);

        [NativeTypeName("#define ERROR_VID_SAVED_STATE_CORRUPT _NDIS_ERROR_TYPEDEF_(0xC0370027L)")]
        public const uint ERROR_VID_SAVED_STATE_CORRUPT = (uint)(0xC0370027);

        [NativeTypeName("#define ERROR_VID_SAVED_STATE_UNRECOGNIZED_ITEM _NDIS_ERROR_TYPEDEF_(0xC0370028L)")]
        public const uint ERROR_VID_SAVED_STATE_UNRECOGNIZED_ITEM = (uint)(0xC0370028);

        [NativeTypeName("#define ERROR_VID_SAVED_STATE_INCOMPATIBLE _NDIS_ERROR_TYPEDEF_(0xC0370029L)")]
        public const uint ERROR_VID_SAVED_STATE_INCOMPATIBLE = (uint)(0xC0370029);

        [NativeTypeName("#define ERROR_VID_VTL_ACCESS_DENIED _NDIS_ERROR_TYPEDEF_(0xC037002AL)")]
        public const uint ERROR_VID_VTL_ACCESS_DENIED = (uint)(0xC037002A);

        [NativeTypeName("#define ERROR_VMCOMPUTE_TERMINATED_DURING_START _NDIS_ERROR_TYPEDEF_(0xC0370100L)")]
        public const uint ERROR_VMCOMPUTE_TERMINATED_DURING_START = (uint)(0xC0370100);

        [NativeTypeName("#define ERROR_VMCOMPUTE_IMAGE_MISMATCH _NDIS_ERROR_TYPEDEF_(0xC0370101L)")]
        public const uint ERROR_VMCOMPUTE_IMAGE_MISMATCH = (uint)(0xC0370101);

        [NativeTypeName("#define ERROR_VMCOMPUTE_HYPERV_NOT_INSTALLED _NDIS_ERROR_TYPEDEF_(0xC0370102L)")]
        public const uint ERROR_VMCOMPUTE_HYPERV_NOT_INSTALLED = (uint)(0xC0370102);

        [NativeTypeName("#define ERROR_VMCOMPUTE_OPERATION_PENDING _NDIS_ERROR_TYPEDEF_(0xC0370103L)")]
        public const uint ERROR_VMCOMPUTE_OPERATION_PENDING = (uint)(0xC0370103);

        [NativeTypeName("#define ERROR_VMCOMPUTE_TOO_MANY_NOTIFICATIONS _NDIS_ERROR_TYPEDEF_(0xC0370104L)")]
        public const uint ERROR_VMCOMPUTE_TOO_MANY_NOTIFICATIONS = (uint)(0xC0370104);

        [NativeTypeName("#define ERROR_VMCOMPUTE_INVALID_STATE _NDIS_ERROR_TYPEDEF_(0xC0370105L)")]
        public const uint ERROR_VMCOMPUTE_INVALID_STATE = (uint)(0xC0370105);

        [NativeTypeName("#define ERROR_VMCOMPUTE_UNEXPECTED_EXIT _NDIS_ERROR_TYPEDEF_(0xC0370106L)")]
        public const uint ERROR_VMCOMPUTE_UNEXPECTED_EXIT = (uint)(0xC0370106);

        [NativeTypeName("#define ERROR_VMCOMPUTE_TERMINATED _NDIS_ERROR_TYPEDEF_(0xC0370107L)")]
        public const uint ERROR_VMCOMPUTE_TERMINATED = (uint)(0xC0370107);

        [NativeTypeName("#define ERROR_VMCOMPUTE_CONNECT_FAILED _NDIS_ERROR_TYPEDEF_(0xC0370108L)")]
        public const uint ERROR_VMCOMPUTE_CONNECT_FAILED = (uint)(0xC0370108);

        [NativeTypeName("#define ERROR_VMCOMPUTE_TIMEOUT _NDIS_ERROR_TYPEDEF_(0xC0370109L)")]
        public const uint ERROR_VMCOMPUTE_TIMEOUT = (uint)(0xC0370109);

        [NativeTypeName("#define ERROR_VMCOMPUTE_CONNECTION_CLOSED _NDIS_ERROR_TYPEDEF_(0xC037010AL)")]
        public const uint ERROR_VMCOMPUTE_CONNECTION_CLOSED = (uint)(0xC037010A);

        [NativeTypeName("#define ERROR_VMCOMPUTE_UNKNOWN_MESSAGE _NDIS_ERROR_TYPEDEF_(0xC037010BL)")]
        public const uint ERROR_VMCOMPUTE_UNKNOWN_MESSAGE = (uint)(0xC037010B);

        [NativeTypeName("#define ERROR_VMCOMPUTE_UNSUPPORTED_PROTOCOL_VERSION _NDIS_ERROR_TYPEDEF_(0xC037010CL)")]
        public const uint ERROR_VMCOMPUTE_UNSUPPORTED_PROTOCOL_VERSION = (uint)(0xC037010C);

        [NativeTypeName("#define ERROR_VMCOMPUTE_INVALID_JSON _NDIS_ERROR_TYPEDEF_(0xC037010DL)")]
        public const uint ERROR_VMCOMPUTE_INVALID_JSON = (uint)(0xC037010D);

        [NativeTypeName("#define ERROR_VMCOMPUTE_SYSTEM_NOT_FOUND _NDIS_ERROR_TYPEDEF_(0xC037010EL)")]
        public const uint ERROR_VMCOMPUTE_SYSTEM_NOT_FOUND = (uint)(0xC037010E);

        [NativeTypeName("#define ERROR_VMCOMPUTE_SYSTEM_ALREADY_EXISTS _NDIS_ERROR_TYPEDEF_(0xC037010FL)")]
        public const uint ERROR_VMCOMPUTE_SYSTEM_ALREADY_EXISTS = (uint)(0xC037010F);

        [NativeTypeName("#define ERROR_VMCOMPUTE_SYSTEM_ALREADY_STOPPED _NDIS_ERROR_TYPEDEF_(0xC0370110L)")]
        public const uint ERROR_VMCOMPUTE_SYSTEM_ALREADY_STOPPED = (uint)(0xC0370110);

        [NativeTypeName("#define ERROR_VMCOMPUTE_PROTOCOL_ERROR _NDIS_ERROR_TYPEDEF_(0xC0370111L)")]
        public const uint ERROR_VMCOMPUTE_PROTOCOL_ERROR = (uint)(0xC0370111);

        [NativeTypeName("#define ERROR_VMCOMPUTE_INVALID_LAYER _NDIS_ERROR_TYPEDEF_(0xC0370112L)")]
        public const uint ERROR_VMCOMPUTE_INVALID_LAYER = (uint)(0xC0370112);

        [NativeTypeName("#define ERROR_VMCOMPUTE_WINDOWS_INSIDER_REQUIRED _NDIS_ERROR_TYPEDEF_(0xC0370113L)")]
        public const uint ERROR_VMCOMPUTE_WINDOWS_INSIDER_REQUIRED = (uint)(0xC0370113);

        [NativeTypeName("#define HCS_E_TERMINATED_DURING_START _HRESULT_TYPEDEF_(0x80370100L)")]
        public const int HCS_E_TERMINATED_DURING_START = unchecked((int)(0x80370100));

        [NativeTypeName("#define HCS_E_IMAGE_MISMATCH _HRESULT_TYPEDEF_(0x80370101L)")]
        public const int HCS_E_IMAGE_MISMATCH = unchecked((int)(0x80370101));

        [NativeTypeName("#define HCS_E_HYPERV_NOT_INSTALLED _HRESULT_TYPEDEF_(0x80370102L)")]
        public const int HCS_E_HYPERV_NOT_INSTALLED = unchecked((int)(0x80370102));

        [NativeTypeName("#define HCS_E_INVALID_STATE _HRESULT_TYPEDEF_(0x80370105L)")]
        public const int HCS_E_INVALID_STATE = unchecked((int)(0x80370105));

        [NativeTypeName("#define HCS_E_UNEXPECTED_EXIT _HRESULT_TYPEDEF_(0x80370106L)")]
        public const int HCS_E_UNEXPECTED_EXIT = unchecked((int)(0x80370106));

        [NativeTypeName("#define HCS_E_TERMINATED _HRESULT_TYPEDEF_(0x80370107L)")]
        public const int HCS_E_TERMINATED = unchecked((int)(0x80370107));

        [NativeTypeName("#define HCS_E_CONNECT_FAILED _HRESULT_TYPEDEF_(0x80370108L)")]
        public const int HCS_E_CONNECT_FAILED = unchecked((int)(0x80370108));

        [NativeTypeName("#define HCS_E_CONNECTION_TIMEOUT _HRESULT_TYPEDEF_(0x80370109L)")]
        public const int HCS_E_CONNECTION_TIMEOUT = unchecked((int)(0x80370109));

        [NativeTypeName("#define HCS_E_CONNECTION_CLOSED _HRESULT_TYPEDEF_(0x8037010AL)")]
        public const int HCS_E_CONNECTION_CLOSED = unchecked((int)(0x8037010A));

        [NativeTypeName("#define HCS_E_UNKNOWN_MESSAGE _HRESULT_TYPEDEF_(0x8037010BL)")]
        public const int HCS_E_UNKNOWN_MESSAGE = unchecked((int)(0x8037010B));

        [NativeTypeName("#define HCS_E_UNSUPPORTED_PROTOCOL_VERSION _HRESULT_TYPEDEF_(0x8037010CL)")]
        public const int HCS_E_UNSUPPORTED_PROTOCOL_VERSION = unchecked((int)(0x8037010C));

        [NativeTypeName("#define HCS_E_INVALID_JSON _HRESULT_TYPEDEF_(0x8037010DL)")]
        public const int HCS_E_INVALID_JSON = unchecked((int)(0x8037010D));

        [NativeTypeName("#define HCS_E_SYSTEM_NOT_FOUND _HRESULT_TYPEDEF_(0x8037010EL)")]
        public const int HCS_E_SYSTEM_NOT_FOUND = unchecked((int)(0x8037010E));

        [NativeTypeName("#define HCS_E_SYSTEM_ALREADY_EXISTS _HRESULT_TYPEDEF_(0x8037010FL)")]
        public const int HCS_E_SYSTEM_ALREADY_EXISTS = unchecked((int)(0x8037010F));

        [NativeTypeName("#define HCS_E_SYSTEM_ALREADY_STOPPED _HRESULT_TYPEDEF_(0x80370110L)")]
        public const int HCS_E_SYSTEM_ALREADY_STOPPED = unchecked((int)(0x80370110));

        [NativeTypeName("#define HCS_E_PROTOCOL_ERROR _HRESULT_TYPEDEF_(0x80370111L)")]
        public const int HCS_E_PROTOCOL_ERROR = unchecked((int)(0x80370111));

        [NativeTypeName("#define HCS_E_INVALID_LAYER _HRESULT_TYPEDEF_(0x80370112L)")]
        public const int HCS_E_INVALID_LAYER = unchecked((int)(0x80370112));

        [NativeTypeName("#define HCS_E_WINDOWS_INSIDER_REQUIRED _HRESULT_TYPEDEF_(0x80370113L)")]
        public const int HCS_E_WINDOWS_INSIDER_REQUIRED = unchecked((int)(0x80370113));

        [NativeTypeName("#define HCS_E_SERVICE_NOT_AVAILABLE _HRESULT_TYPEDEF_(0x80370114L)")]
        public const int HCS_E_SERVICE_NOT_AVAILABLE = unchecked((int)(0x80370114));

        [NativeTypeName("#define HCS_E_OPERATION_NOT_STARTED _HRESULT_TYPEDEF_(0x80370115L)")]
        public const int HCS_E_OPERATION_NOT_STARTED = unchecked((int)(0x80370115));

        [NativeTypeName("#define HCS_E_OPERATION_ALREADY_STARTED _HRESULT_TYPEDEF_(0x80370116L)")]
        public const int HCS_E_OPERATION_ALREADY_STARTED = unchecked((int)(0x80370116));

        [NativeTypeName("#define HCS_E_OPERATION_PENDING _HRESULT_TYPEDEF_(0x80370117L)")]
        public const int HCS_E_OPERATION_PENDING = unchecked((int)(0x80370117));

        [NativeTypeName("#define HCS_E_OPERATION_TIMEOUT _HRESULT_TYPEDEF_(0x80370118L)")]
        public const int HCS_E_OPERATION_TIMEOUT = unchecked((int)(0x80370118));

        [NativeTypeName("#define HCS_E_OPERATION_SYSTEM_CALLBACK_ALREADY_SET _HRESULT_TYPEDEF_(0x80370119L)")]
        public const int HCS_E_OPERATION_SYSTEM_CALLBACK_ALREADY_SET = unchecked((int)(0x80370119));

        [NativeTypeName("#define HCS_E_OPERATION_RESULT_ALLOCATION_FAILED _HRESULT_TYPEDEF_(0x8037011AL)")]
        public const int HCS_E_OPERATION_RESULT_ALLOCATION_FAILED = unchecked((int)(0x8037011A));

        [NativeTypeName("#define HCS_E_ACCESS_DENIED _HRESULT_TYPEDEF_(0x8037011BL)")]
        public const int HCS_E_ACCESS_DENIED = unchecked((int)(0x8037011B));

        [NativeTypeName("#define HCS_E_GUEST_CRITICAL_ERROR _HRESULT_TYPEDEF_(0x8037011CL)")]
        public const int HCS_E_GUEST_CRITICAL_ERROR = unchecked((int)(0x8037011C));

        [NativeTypeName("#define HCS_E_PROCESS_INFO_NOT_AVAILABLE _HRESULT_TYPEDEF_(0x8037011DL)")]
        public const int HCS_E_PROCESS_INFO_NOT_AVAILABLE = unchecked((int)(0x8037011D));

        [NativeTypeName("#define HCS_E_SERVICE_DISCONNECT _HRESULT_TYPEDEF_(0x8037011EL)")]
        public const int HCS_E_SERVICE_DISCONNECT = unchecked((int)(0x8037011E));

        [NativeTypeName("#define HCS_E_PROCESS_ALREADY_STOPPED _HRESULT_TYPEDEF_(0x8037011FL)")]
        public const int HCS_E_PROCESS_ALREADY_STOPPED = unchecked((int)(0x8037011F));

        [NativeTypeName("#define ERROR_VNET_VIRTUAL_SWITCH_NAME_NOT_FOUND _NDIS_ERROR_TYPEDEF_(0xC0370200L)")]
        public const uint ERROR_VNET_VIRTUAL_SWITCH_NAME_NOT_FOUND = (uint)(0xC0370200);

        [NativeTypeName("#define ERROR_VID_REMOTE_NODE_PARENT_GPA_PAGES_USED _NDIS_ERROR_TYPEDEF_(0x80370001L)")]
        public const uint ERROR_VID_REMOTE_NODE_PARENT_GPA_PAGES_USED = (uint)(0x80370001);

        [NativeTypeName("#define WHV_E_UNKNOWN_CAPABILITY _HRESULT_TYPEDEF_(0x80370300L)")]
        public const int WHV_E_UNKNOWN_CAPABILITY = unchecked((int)(0x80370300));

        [NativeTypeName("#define WHV_E_INSUFFICIENT_BUFFER _HRESULT_TYPEDEF_(0x80370301L)")]
        public const int WHV_E_INSUFFICIENT_BUFFER = unchecked((int)(0x80370301));

        [NativeTypeName("#define WHV_E_UNKNOWN_PROPERTY _HRESULT_TYPEDEF_(0x80370302L)")]
        public const int WHV_E_UNKNOWN_PROPERTY = unchecked((int)(0x80370302));

        [NativeTypeName("#define WHV_E_UNSUPPORTED_HYPERVISOR_CONFIG _HRESULT_TYPEDEF_(0x80370303L)")]
        public const int WHV_E_UNSUPPORTED_HYPERVISOR_CONFIG = unchecked((int)(0x80370303));

        [NativeTypeName("#define WHV_E_INVALID_PARTITION_CONFIG _HRESULT_TYPEDEF_(0x80370304L)")]
        public const int WHV_E_INVALID_PARTITION_CONFIG = unchecked((int)(0x80370304));

        [NativeTypeName("#define WHV_E_GPA_RANGE_NOT_FOUND _HRESULT_TYPEDEF_(0x80370305L)")]
        public const int WHV_E_GPA_RANGE_NOT_FOUND = unchecked((int)(0x80370305));

        [NativeTypeName("#define WHV_E_VP_ALREADY_EXISTS _HRESULT_TYPEDEF_(0x80370306L)")]
        public const int WHV_E_VP_ALREADY_EXISTS = unchecked((int)(0x80370306));

        [NativeTypeName("#define WHV_E_VP_DOES_NOT_EXIST _HRESULT_TYPEDEF_(0x80370307L)")]
        public const int WHV_E_VP_DOES_NOT_EXIST = unchecked((int)(0x80370307));

        [NativeTypeName("#define WHV_E_INVALID_VP_STATE _HRESULT_TYPEDEF_(0x80370308L)")]
        public const int WHV_E_INVALID_VP_STATE = unchecked((int)(0x80370308));

        [NativeTypeName("#define WHV_E_INVALID_VP_REGISTER_NAME _HRESULT_TYPEDEF_(0x80370309L)")]
        public const int WHV_E_INVALID_VP_REGISTER_NAME = unchecked((int)(0x80370309));

        [NativeTypeName("#define WHV_E_UNSUPPORTED_PROCESSOR_CONFIG _HRESULT_TYPEDEF_(0x80370310L)")]
        public const int WHV_E_UNSUPPORTED_PROCESSOR_CONFIG = unchecked((int)(0x80370310));

        [NativeTypeName("#define ERROR_VSMB_SAVED_STATE_FILE_NOT_FOUND _NDIS_ERROR_TYPEDEF_(0xC0370400L)")]
        public const uint ERROR_VSMB_SAVED_STATE_FILE_NOT_FOUND = (uint)(0xC0370400);

        [NativeTypeName("#define ERROR_VSMB_SAVED_STATE_CORRUPT _NDIS_ERROR_TYPEDEF_(0xC0370401L)")]
        public const uint ERROR_VSMB_SAVED_STATE_CORRUPT = (uint)(0xC0370401);

        [NativeTypeName("#define VM_SAVED_STATE_DUMP_E_PARTITION_STATE_NOT_FOUND _HRESULT_TYPEDEF_(0xC0370500L)")]
        public const int VM_SAVED_STATE_DUMP_E_PARTITION_STATE_NOT_FOUND = unchecked((int)(0xC0370500));

        [NativeTypeName("#define VM_SAVED_STATE_DUMP_E_GUEST_MEMORY_NOT_FOUND _HRESULT_TYPEDEF_(0xC0370501L)")]
        public const int VM_SAVED_STATE_DUMP_E_GUEST_MEMORY_NOT_FOUND = unchecked((int)(0xC0370501));

        [NativeTypeName("#define VM_SAVED_STATE_DUMP_E_NO_VP_FOUND_IN_PARTITION_STATE _HRESULT_TYPEDEF_(0xC0370502L)")]
        public const int VM_SAVED_STATE_DUMP_E_NO_VP_FOUND_IN_PARTITION_STATE = unchecked((int)(0xC0370502));

        [NativeTypeName("#define VM_SAVED_STATE_DUMP_E_NESTED_VIRTUALIZATION_NOT_SUPPORTED _HRESULT_TYPEDEF_(0xC0370503L)")]
        public const int VM_SAVED_STATE_DUMP_E_NESTED_VIRTUALIZATION_NOT_SUPPORTED = unchecked((int)(0xC0370503));

        [NativeTypeName("#define VM_SAVED_STATE_DUMP_E_WINDOWS_KERNEL_IMAGE_NOT_FOUND _HRESULT_TYPEDEF_(0xC0370504L)")]
        public const int VM_SAVED_STATE_DUMP_E_WINDOWS_KERNEL_IMAGE_NOT_FOUND = unchecked((int)(0xC0370504));

        [NativeTypeName("#define VM_SAVED_STATE_DUMP_E_PXE_NOT_PRESENT _HRESULT_TYPEDEF_(0xC0370505L)")]
        public const int VM_SAVED_STATE_DUMP_E_PXE_NOT_PRESENT = unchecked((int)(0xC0370505));

        [NativeTypeName("#define VM_SAVED_STATE_DUMP_E_PDPTE_NOT_PRESENT _HRESULT_TYPEDEF_(0xC0370506L)")]
        public const int VM_SAVED_STATE_DUMP_E_PDPTE_NOT_PRESENT = unchecked((int)(0xC0370506));

        [NativeTypeName("#define VM_SAVED_STATE_DUMP_E_PDE_NOT_PRESENT _HRESULT_TYPEDEF_(0xC0370507L)")]
        public const int VM_SAVED_STATE_DUMP_E_PDE_NOT_PRESENT = unchecked((int)(0xC0370507));

        [NativeTypeName("#define VM_SAVED_STATE_DUMP_E_PTE_NOT_PRESENT _HRESULT_TYPEDEF_(0xC0370508L)")]
        public const int VM_SAVED_STATE_DUMP_E_PTE_NOT_PRESENT = unchecked((int)(0xC0370508));

        [NativeTypeName("#define ERROR_VOLMGR_INCOMPLETE_REGENERATION _NDIS_ERROR_TYPEDEF_(0x80380001L)")]
        public const uint ERROR_VOLMGR_INCOMPLETE_REGENERATION = (uint)(0x80380001);

        [NativeTypeName("#define ERROR_VOLMGR_INCOMPLETE_DISK_MIGRATION _NDIS_ERROR_TYPEDEF_(0x80380002L)")]
        public const uint ERROR_VOLMGR_INCOMPLETE_DISK_MIGRATION = (uint)(0x80380002);

        [NativeTypeName("#define ERROR_VOLMGR_DATABASE_FULL _NDIS_ERROR_TYPEDEF_(0xC0380001L)")]
        public const uint ERROR_VOLMGR_DATABASE_FULL = (uint)(0xC0380001);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_CONFIGURATION_CORRUPTED _NDIS_ERROR_TYPEDEF_(0xC0380002L)")]
        public const uint ERROR_VOLMGR_DISK_CONFIGURATION_CORRUPTED = (uint)(0xC0380002);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_CONFIGURATION_NOT_IN_SYNC _NDIS_ERROR_TYPEDEF_(0xC0380003L)")]
        public const uint ERROR_VOLMGR_DISK_CONFIGURATION_NOT_IN_SYNC = (uint)(0xC0380003);

        [NativeTypeName("#define ERROR_VOLMGR_PACK_CONFIG_UPDATE_FAILED _NDIS_ERROR_TYPEDEF_(0xC0380004L)")]
        public const uint ERROR_VOLMGR_PACK_CONFIG_UPDATE_FAILED = (uint)(0xC0380004);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_CONTAINS_NON_SIMPLE_VOLUME _NDIS_ERROR_TYPEDEF_(0xC0380005L)")]
        public const uint ERROR_VOLMGR_DISK_CONTAINS_NON_SIMPLE_VOLUME = (uint)(0xC0380005);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_DUPLICATE _NDIS_ERROR_TYPEDEF_(0xC0380006L)")]
        public const uint ERROR_VOLMGR_DISK_DUPLICATE = (uint)(0xC0380006);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_DYNAMIC _NDIS_ERROR_TYPEDEF_(0xC0380007L)")]
        public const uint ERROR_VOLMGR_DISK_DYNAMIC = (uint)(0xC0380007);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_ID_INVALID _NDIS_ERROR_TYPEDEF_(0xC0380008L)")]
        public const uint ERROR_VOLMGR_DISK_ID_INVALID = (uint)(0xC0380008);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_INVALID _NDIS_ERROR_TYPEDEF_(0xC0380009L)")]
        public const uint ERROR_VOLMGR_DISK_INVALID = (uint)(0xC0380009);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_LAST_VOTER _NDIS_ERROR_TYPEDEF_(0xC038000AL)")]
        public const uint ERROR_VOLMGR_DISK_LAST_VOTER = (uint)(0xC038000A);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_LAYOUT_INVALID _NDIS_ERROR_TYPEDEF_(0xC038000BL)")]
        public const uint ERROR_VOLMGR_DISK_LAYOUT_INVALID = (uint)(0xC038000B);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_LAYOUT_NON_BASIC_BETWEEN_BASIC_PARTITIONS _NDIS_ERROR_TYPEDEF_(0xC038000CL)")]
        public const uint ERROR_VOLMGR_DISK_LAYOUT_NON_BASIC_BETWEEN_BASIC_PARTITIONS = (uint)(0xC038000C);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_LAYOUT_NOT_CYLINDER_ALIGNED _NDIS_ERROR_TYPEDEF_(0xC038000DL)")]
        public const uint ERROR_VOLMGR_DISK_LAYOUT_NOT_CYLINDER_ALIGNED = (uint)(0xC038000D);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_LAYOUT_PARTITIONS_TOO_SMALL _NDIS_ERROR_TYPEDEF_(0xC038000EL)")]
        public const uint ERROR_VOLMGR_DISK_LAYOUT_PARTITIONS_TOO_SMALL = (uint)(0xC038000E);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_LAYOUT_PRIMARY_BETWEEN_LOGICAL_PARTITIONS _NDIS_ERROR_TYPEDEF_(0xC038000FL)")]
        public const uint ERROR_VOLMGR_DISK_LAYOUT_PRIMARY_BETWEEN_LOGICAL_PARTITIONS = (uint)(0xC038000F);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_LAYOUT_TOO_MANY_PARTITIONS _NDIS_ERROR_TYPEDEF_(0xC0380010L)")]
        public const uint ERROR_VOLMGR_DISK_LAYOUT_TOO_MANY_PARTITIONS = (uint)(0xC0380010);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_MISSING _NDIS_ERROR_TYPEDEF_(0xC0380011L)")]
        public const uint ERROR_VOLMGR_DISK_MISSING = (uint)(0xC0380011);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_NOT_EMPTY _NDIS_ERROR_TYPEDEF_(0xC0380012L)")]
        public const uint ERROR_VOLMGR_DISK_NOT_EMPTY = (uint)(0xC0380012);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_NOT_ENOUGH_SPACE _NDIS_ERROR_TYPEDEF_(0xC0380013L)")]
        public const uint ERROR_VOLMGR_DISK_NOT_ENOUGH_SPACE = (uint)(0xC0380013);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_REVECTORING_FAILED _NDIS_ERROR_TYPEDEF_(0xC0380014L)")]
        public const uint ERROR_VOLMGR_DISK_REVECTORING_FAILED = (uint)(0xC0380014);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_SECTOR_SIZE_INVALID _NDIS_ERROR_TYPEDEF_(0xC0380015L)")]
        public const uint ERROR_VOLMGR_DISK_SECTOR_SIZE_INVALID = (uint)(0xC0380015);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_SET_NOT_CONTAINED _NDIS_ERROR_TYPEDEF_(0xC0380016L)")]
        public const uint ERROR_VOLMGR_DISK_SET_NOT_CONTAINED = (uint)(0xC0380016);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_USED_BY_MULTIPLE_MEMBERS _NDIS_ERROR_TYPEDEF_(0xC0380017L)")]
        public const uint ERROR_VOLMGR_DISK_USED_BY_MULTIPLE_MEMBERS = (uint)(0xC0380017);

        [NativeTypeName("#define ERROR_VOLMGR_DISK_USED_BY_MULTIPLE_PLEXES _NDIS_ERROR_TYPEDEF_(0xC0380018L)")]
        public const uint ERROR_VOLMGR_DISK_USED_BY_MULTIPLE_PLEXES = (uint)(0xC0380018);

        [NativeTypeName("#define ERROR_VOLMGR_DYNAMIC_DISK_NOT_SUPPORTED _NDIS_ERROR_TYPEDEF_(0xC0380019L)")]
        public const uint ERROR_VOLMGR_DYNAMIC_DISK_NOT_SUPPORTED = (uint)(0xC0380019);

        [NativeTypeName("#define ERROR_VOLMGR_EXTENT_ALREADY_USED _NDIS_ERROR_TYPEDEF_(0xC038001AL)")]
        public const uint ERROR_VOLMGR_EXTENT_ALREADY_USED = (uint)(0xC038001A);

        [NativeTypeName("#define ERROR_VOLMGR_EXTENT_NOT_CONTIGUOUS _NDIS_ERROR_TYPEDEF_(0xC038001BL)")]
        public const uint ERROR_VOLMGR_EXTENT_NOT_CONTIGUOUS = (uint)(0xC038001B);

        [NativeTypeName("#define ERROR_VOLMGR_EXTENT_NOT_IN_PUBLIC_REGION _NDIS_ERROR_TYPEDEF_(0xC038001CL)")]
        public const uint ERROR_VOLMGR_EXTENT_NOT_IN_PUBLIC_REGION = (uint)(0xC038001C);

        [NativeTypeName("#define ERROR_VOLMGR_EXTENT_NOT_SECTOR_ALIGNED _NDIS_ERROR_TYPEDEF_(0xC038001DL)")]
        public const uint ERROR_VOLMGR_EXTENT_NOT_SECTOR_ALIGNED = (uint)(0xC038001D);

        [NativeTypeName("#define ERROR_VOLMGR_EXTENT_OVERLAPS_EBR_PARTITION _NDIS_ERROR_TYPEDEF_(0xC038001EL)")]
        public const uint ERROR_VOLMGR_EXTENT_OVERLAPS_EBR_PARTITION = (uint)(0xC038001E);

        [NativeTypeName("#define ERROR_VOLMGR_EXTENT_VOLUME_LENGTHS_DO_NOT_MATCH _NDIS_ERROR_TYPEDEF_(0xC038001FL)")]
        public const uint ERROR_VOLMGR_EXTENT_VOLUME_LENGTHS_DO_NOT_MATCH = (uint)(0xC038001F);

        [NativeTypeName("#define ERROR_VOLMGR_FAULT_TOLERANT_NOT_SUPPORTED _NDIS_ERROR_TYPEDEF_(0xC0380020L)")]
        public const uint ERROR_VOLMGR_FAULT_TOLERANT_NOT_SUPPORTED = (uint)(0xC0380020);

        [NativeTypeName("#define ERROR_VOLMGR_INTERLEAVE_LENGTH_INVALID _NDIS_ERROR_TYPEDEF_(0xC0380021L)")]
        public const uint ERROR_VOLMGR_INTERLEAVE_LENGTH_INVALID = (uint)(0xC0380021);

        [NativeTypeName("#define ERROR_VOLMGR_MAXIMUM_REGISTERED_USERS _NDIS_ERROR_TYPEDEF_(0xC0380022L)")]
        public const uint ERROR_VOLMGR_MAXIMUM_REGISTERED_USERS = (uint)(0xC0380022);

        [NativeTypeName("#define ERROR_VOLMGR_MEMBER_IN_SYNC _NDIS_ERROR_TYPEDEF_(0xC0380023L)")]
        public const uint ERROR_VOLMGR_MEMBER_IN_SYNC = (uint)(0xC0380023);

        [NativeTypeName("#define ERROR_VOLMGR_MEMBER_INDEX_DUPLICATE _NDIS_ERROR_TYPEDEF_(0xC0380024L)")]
        public const uint ERROR_VOLMGR_MEMBER_INDEX_DUPLICATE = (uint)(0xC0380024);

        [NativeTypeName("#define ERROR_VOLMGR_MEMBER_INDEX_INVALID _NDIS_ERROR_TYPEDEF_(0xC0380025L)")]
        public const uint ERROR_VOLMGR_MEMBER_INDEX_INVALID = (uint)(0xC0380025);

        [NativeTypeName("#define ERROR_VOLMGR_MEMBER_MISSING _NDIS_ERROR_TYPEDEF_(0xC0380026L)")]
        public const uint ERROR_VOLMGR_MEMBER_MISSING = (uint)(0xC0380026);

        [NativeTypeName("#define ERROR_VOLMGR_MEMBER_NOT_DETACHED _NDIS_ERROR_TYPEDEF_(0xC0380027L)")]
        public const uint ERROR_VOLMGR_MEMBER_NOT_DETACHED = (uint)(0xC0380027);

        [NativeTypeName("#define ERROR_VOLMGR_MEMBER_REGENERATING _NDIS_ERROR_TYPEDEF_(0xC0380028L)")]
        public const uint ERROR_VOLMGR_MEMBER_REGENERATING = (uint)(0xC0380028);

        [NativeTypeName("#define ERROR_VOLMGR_ALL_DISKS_FAILED _NDIS_ERROR_TYPEDEF_(0xC0380029L)")]
        public const uint ERROR_VOLMGR_ALL_DISKS_FAILED = (uint)(0xC0380029);

        [NativeTypeName("#define ERROR_VOLMGR_NO_REGISTERED_USERS _NDIS_ERROR_TYPEDEF_(0xC038002AL)")]
        public const uint ERROR_VOLMGR_NO_REGISTERED_USERS = (uint)(0xC038002A);

        [NativeTypeName("#define ERROR_VOLMGR_NO_SUCH_USER _NDIS_ERROR_TYPEDEF_(0xC038002BL)")]
        public const uint ERROR_VOLMGR_NO_SUCH_USER = (uint)(0xC038002B);

        [NativeTypeName("#define ERROR_VOLMGR_NOTIFICATION_RESET _NDIS_ERROR_TYPEDEF_(0xC038002CL)")]
        public const uint ERROR_VOLMGR_NOTIFICATION_RESET = (uint)(0xC038002C);

        [NativeTypeName("#define ERROR_VOLMGR_NUMBER_OF_MEMBERS_INVALID _NDIS_ERROR_TYPEDEF_(0xC038002DL)")]
        public const uint ERROR_VOLMGR_NUMBER_OF_MEMBERS_INVALID = (uint)(0xC038002D);

        [NativeTypeName("#define ERROR_VOLMGR_NUMBER_OF_PLEXES_INVALID _NDIS_ERROR_TYPEDEF_(0xC038002EL)")]
        public const uint ERROR_VOLMGR_NUMBER_OF_PLEXES_INVALID = (uint)(0xC038002E);

        [NativeTypeName("#define ERROR_VOLMGR_PACK_DUPLICATE _NDIS_ERROR_TYPEDEF_(0xC038002FL)")]
        public const uint ERROR_VOLMGR_PACK_DUPLICATE = (uint)(0xC038002F);

        [NativeTypeName("#define ERROR_VOLMGR_PACK_ID_INVALID _NDIS_ERROR_TYPEDEF_(0xC0380030L)")]
        public const uint ERROR_VOLMGR_PACK_ID_INVALID = (uint)(0xC0380030);

        [NativeTypeName("#define ERROR_VOLMGR_PACK_INVALID _NDIS_ERROR_TYPEDEF_(0xC0380031L)")]
        public const uint ERROR_VOLMGR_PACK_INVALID = (uint)(0xC0380031);

        [NativeTypeName("#define ERROR_VOLMGR_PACK_NAME_INVALID _NDIS_ERROR_TYPEDEF_(0xC0380032L)")]
        public const uint ERROR_VOLMGR_PACK_NAME_INVALID = (uint)(0xC0380032);

        [NativeTypeName("#define ERROR_VOLMGR_PACK_OFFLINE _NDIS_ERROR_TYPEDEF_(0xC0380033L)")]
        public const uint ERROR_VOLMGR_PACK_OFFLINE = (uint)(0xC0380033);

        [NativeTypeName("#define ERROR_VOLMGR_PACK_HAS_QUORUM _NDIS_ERROR_TYPEDEF_(0xC0380034L)")]
        public const uint ERROR_VOLMGR_PACK_HAS_QUORUM = (uint)(0xC0380034);

        [NativeTypeName("#define ERROR_VOLMGR_PACK_WITHOUT_QUORUM _NDIS_ERROR_TYPEDEF_(0xC0380035L)")]
        public const uint ERROR_VOLMGR_PACK_WITHOUT_QUORUM = (uint)(0xC0380035);

        [NativeTypeName("#define ERROR_VOLMGR_PARTITION_STYLE_INVALID _NDIS_ERROR_TYPEDEF_(0xC0380036L)")]
        public const uint ERROR_VOLMGR_PARTITION_STYLE_INVALID = (uint)(0xC0380036);

        [NativeTypeName("#define ERROR_VOLMGR_PARTITION_UPDATE_FAILED _NDIS_ERROR_TYPEDEF_(0xC0380037L)")]
        public const uint ERROR_VOLMGR_PARTITION_UPDATE_FAILED = (uint)(0xC0380037);

        [NativeTypeName("#define ERROR_VOLMGR_PLEX_IN_SYNC _NDIS_ERROR_TYPEDEF_(0xC0380038L)")]
        public const uint ERROR_VOLMGR_PLEX_IN_SYNC = (uint)(0xC0380038);

        [NativeTypeName("#define ERROR_VOLMGR_PLEX_INDEX_DUPLICATE _NDIS_ERROR_TYPEDEF_(0xC0380039L)")]
        public const uint ERROR_VOLMGR_PLEX_INDEX_DUPLICATE = (uint)(0xC0380039);

        [NativeTypeName("#define ERROR_VOLMGR_PLEX_INDEX_INVALID _NDIS_ERROR_TYPEDEF_(0xC038003AL)")]
        public const uint ERROR_VOLMGR_PLEX_INDEX_INVALID = (uint)(0xC038003A);

        [NativeTypeName("#define ERROR_VOLMGR_PLEX_LAST_ACTIVE _NDIS_ERROR_TYPEDEF_(0xC038003BL)")]
        public const uint ERROR_VOLMGR_PLEX_LAST_ACTIVE = (uint)(0xC038003B);

        [NativeTypeName("#define ERROR_VOLMGR_PLEX_MISSING _NDIS_ERROR_TYPEDEF_(0xC038003CL)")]
        public const uint ERROR_VOLMGR_PLEX_MISSING = (uint)(0xC038003C);

        [NativeTypeName("#define ERROR_VOLMGR_PLEX_REGENERATING _NDIS_ERROR_TYPEDEF_(0xC038003DL)")]
        public const uint ERROR_VOLMGR_PLEX_REGENERATING = (uint)(0xC038003D);

        [NativeTypeName("#define ERROR_VOLMGR_PLEX_TYPE_INVALID _NDIS_ERROR_TYPEDEF_(0xC038003EL)")]
        public const uint ERROR_VOLMGR_PLEX_TYPE_INVALID = (uint)(0xC038003E);

        [NativeTypeName("#define ERROR_VOLMGR_PLEX_NOT_RAID5 _NDIS_ERROR_TYPEDEF_(0xC038003FL)")]
        public const uint ERROR_VOLMGR_PLEX_NOT_RAID5 = (uint)(0xC038003F);

        [NativeTypeName("#define ERROR_VOLMGR_PLEX_NOT_SIMPLE _NDIS_ERROR_TYPEDEF_(0xC0380040L)")]
        public const uint ERROR_VOLMGR_PLEX_NOT_SIMPLE = (uint)(0xC0380040);

        [NativeTypeName("#define ERROR_VOLMGR_STRUCTURE_SIZE_INVALID _NDIS_ERROR_TYPEDEF_(0xC0380041L)")]
        public const uint ERROR_VOLMGR_STRUCTURE_SIZE_INVALID = (uint)(0xC0380041);

        [NativeTypeName("#define ERROR_VOLMGR_TOO_MANY_NOTIFICATION_REQUESTS _NDIS_ERROR_TYPEDEF_(0xC0380042L)")]
        public const uint ERROR_VOLMGR_TOO_MANY_NOTIFICATION_REQUESTS = (uint)(0xC0380042);

        [NativeTypeName("#define ERROR_VOLMGR_TRANSACTION_IN_PROGRESS _NDIS_ERROR_TYPEDEF_(0xC0380043L)")]
        public const uint ERROR_VOLMGR_TRANSACTION_IN_PROGRESS = (uint)(0xC0380043);

        [NativeTypeName("#define ERROR_VOLMGR_UNEXPECTED_DISK_LAYOUT_CHANGE _NDIS_ERROR_TYPEDEF_(0xC0380044L)")]
        public const uint ERROR_VOLMGR_UNEXPECTED_DISK_LAYOUT_CHANGE = (uint)(0xC0380044);

        [NativeTypeName("#define ERROR_VOLMGR_VOLUME_CONTAINS_MISSING_DISK _NDIS_ERROR_TYPEDEF_(0xC0380045L)")]
        public const uint ERROR_VOLMGR_VOLUME_CONTAINS_MISSING_DISK = (uint)(0xC0380045);

        [NativeTypeName("#define ERROR_VOLMGR_VOLUME_ID_INVALID _NDIS_ERROR_TYPEDEF_(0xC0380046L)")]
        public const uint ERROR_VOLMGR_VOLUME_ID_INVALID = (uint)(0xC0380046);

        [NativeTypeName("#define ERROR_VOLMGR_VOLUME_LENGTH_INVALID _NDIS_ERROR_TYPEDEF_(0xC0380047L)")]
        public const uint ERROR_VOLMGR_VOLUME_LENGTH_INVALID = (uint)(0xC0380047);

        [NativeTypeName("#define ERROR_VOLMGR_VOLUME_LENGTH_NOT_SECTOR_SIZE_MULTIPLE _NDIS_ERROR_TYPEDEF_(0xC0380048L)")]
        public const uint ERROR_VOLMGR_VOLUME_LENGTH_NOT_SECTOR_SIZE_MULTIPLE = (uint)(0xC0380048);

        [NativeTypeName("#define ERROR_VOLMGR_VOLUME_NOT_MIRRORED _NDIS_ERROR_TYPEDEF_(0xC0380049L)")]
        public const uint ERROR_VOLMGR_VOLUME_NOT_MIRRORED = (uint)(0xC0380049);

        [NativeTypeName("#define ERROR_VOLMGR_VOLUME_NOT_RETAINED _NDIS_ERROR_TYPEDEF_(0xC038004AL)")]
        public const uint ERROR_VOLMGR_VOLUME_NOT_RETAINED = (uint)(0xC038004A);

        [NativeTypeName("#define ERROR_VOLMGR_VOLUME_OFFLINE _NDIS_ERROR_TYPEDEF_(0xC038004BL)")]
        public const uint ERROR_VOLMGR_VOLUME_OFFLINE = (uint)(0xC038004B);

        [NativeTypeName("#define ERROR_VOLMGR_VOLUME_RETAINED _NDIS_ERROR_TYPEDEF_(0xC038004CL)")]
        public const uint ERROR_VOLMGR_VOLUME_RETAINED = (uint)(0xC038004C);

        [NativeTypeName("#define ERROR_VOLMGR_NUMBER_OF_EXTENTS_INVALID _NDIS_ERROR_TYPEDEF_(0xC038004DL)")]
        public const uint ERROR_VOLMGR_NUMBER_OF_EXTENTS_INVALID = (uint)(0xC038004D);

        [NativeTypeName("#define ERROR_VOLMGR_DIFFERENT_SECTOR_SIZE _NDIS_ERROR_TYPEDEF_(0xC038004EL)")]
        public const uint ERROR_VOLMGR_DIFFERENT_SECTOR_SIZE = (uint)(0xC038004E);

        [NativeTypeName("#define ERROR_VOLMGR_BAD_BOOT_DISK _NDIS_ERROR_TYPEDEF_(0xC038004FL)")]
        public const uint ERROR_VOLMGR_BAD_BOOT_DISK = (uint)(0xC038004F);

        [NativeTypeName("#define ERROR_VOLMGR_PACK_CONFIG_OFFLINE _NDIS_ERROR_TYPEDEF_(0xC0380050L)")]
        public const uint ERROR_VOLMGR_PACK_CONFIG_OFFLINE = (uint)(0xC0380050);

        [NativeTypeName("#define ERROR_VOLMGR_PACK_CONFIG_ONLINE _NDIS_ERROR_TYPEDEF_(0xC0380051L)")]
        public const uint ERROR_VOLMGR_PACK_CONFIG_ONLINE = (uint)(0xC0380051);

        [NativeTypeName("#define ERROR_VOLMGR_NOT_PRIMARY_PACK _NDIS_ERROR_TYPEDEF_(0xC0380052L)")]
        public const uint ERROR_VOLMGR_NOT_PRIMARY_PACK = (uint)(0xC0380052);

        [NativeTypeName("#define ERROR_VOLMGR_PACK_LOG_UPDATE_FAILED _NDIS_ERROR_TYPEDEF_(0xC0380053L)")]
        public const uint ERROR_VOLMGR_PACK_LOG_UPDATE_FAILED = (uint)(0xC0380053);

        [NativeTypeName("#define ERROR_VOLMGR_NUMBER_OF_DISKS_IN_PLEX_INVALID _NDIS_ERROR_TYPEDEF_(0xC0380054L)")]
        public const uint ERROR_VOLMGR_NUMBER_OF_DISKS_IN_PLEX_INVALID = (uint)(0xC0380054);

        [NativeTypeName("#define ERROR_VOLMGR_NUMBER_OF_DISKS_IN_MEMBER_INVALID _NDIS_ERROR_TYPEDEF_(0xC0380055L)")]
        public const uint ERROR_VOLMGR_NUMBER_OF_DISKS_IN_MEMBER_INVALID = (uint)(0xC0380055);

        [NativeTypeName("#define ERROR_VOLMGR_VOLUME_MIRRORED _NDIS_ERROR_TYPEDEF_(0xC0380056L)")]
        public const uint ERROR_VOLMGR_VOLUME_MIRRORED = (uint)(0xC0380056);

        [NativeTypeName("#define ERROR_VOLMGR_PLEX_NOT_SIMPLE_SPANNED _NDIS_ERROR_TYPEDEF_(0xC0380057L)")]
        public const uint ERROR_VOLMGR_PLEX_NOT_SIMPLE_SPANNED = (uint)(0xC0380057);

        [NativeTypeName("#define ERROR_VOLMGR_NO_VALID_LOG_COPIES _NDIS_ERROR_TYPEDEF_(0xC0380058L)")]
        public const uint ERROR_VOLMGR_NO_VALID_LOG_COPIES = (uint)(0xC0380058);

        [NativeTypeName("#define ERROR_VOLMGR_PRIMARY_PACK_PRESENT _NDIS_ERROR_TYPEDEF_(0xC0380059L)")]
        public const uint ERROR_VOLMGR_PRIMARY_PACK_PRESENT = (uint)(0xC0380059);

        [NativeTypeName("#define ERROR_VOLMGR_NUMBER_OF_DISKS_INVALID _NDIS_ERROR_TYPEDEF_(0xC038005AL)")]
        public const uint ERROR_VOLMGR_NUMBER_OF_DISKS_INVALID = (uint)(0xC038005A);

        [NativeTypeName("#define ERROR_VOLMGR_MIRROR_NOT_SUPPORTED _NDIS_ERROR_TYPEDEF_(0xC038005BL)")]
        public const uint ERROR_VOLMGR_MIRROR_NOT_SUPPORTED = (uint)(0xC038005B);

        [NativeTypeName("#define ERROR_VOLMGR_RAID5_NOT_SUPPORTED _NDIS_ERROR_TYPEDEF_(0xC038005CL)")]
        public const uint ERROR_VOLMGR_RAID5_NOT_SUPPORTED = (uint)(0xC038005C);

        [NativeTypeName("#define ERROR_BCD_NOT_ALL_ENTRIES_IMPORTED _NDIS_ERROR_TYPEDEF_(0x80390001L)")]
        public const uint ERROR_BCD_NOT_ALL_ENTRIES_IMPORTED = (uint)(0x80390001);

        [NativeTypeName("#define ERROR_BCD_TOO_MANY_ELEMENTS _NDIS_ERROR_TYPEDEF_(0xC0390002L)")]
        public const uint ERROR_BCD_TOO_MANY_ELEMENTS = (uint)(0xC0390002);

        [NativeTypeName("#define ERROR_BCD_NOT_ALL_ENTRIES_SYNCHRONIZED _NDIS_ERROR_TYPEDEF_(0x80390003L)")]
        public const uint ERROR_BCD_NOT_ALL_ENTRIES_SYNCHRONIZED = (uint)(0x80390003);

        [NativeTypeName("#define ERROR_VHD_DRIVE_FOOTER_MISSING _NDIS_ERROR_TYPEDEF_(0xC03A0001L)")]
        public const uint ERROR_VHD_DRIVE_FOOTER_MISSING = (uint)(0xC03A0001);

        [NativeTypeName("#define ERROR_VHD_DRIVE_FOOTER_CHECKSUM_MISMATCH _NDIS_ERROR_TYPEDEF_(0xC03A0002L)")]
        public const uint ERROR_VHD_DRIVE_FOOTER_CHECKSUM_MISMATCH = (uint)(0xC03A0002);

        [NativeTypeName("#define ERROR_VHD_DRIVE_FOOTER_CORRUPT _NDIS_ERROR_TYPEDEF_(0xC03A0003L)")]
        public const uint ERROR_VHD_DRIVE_FOOTER_CORRUPT = (uint)(0xC03A0003);

        [NativeTypeName("#define ERROR_VHD_FORMAT_UNKNOWN _NDIS_ERROR_TYPEDEF_(0xC03A0004L)")]
        public const uint ERROR_VHD_FORMAT_UNKNOWN = (uint)(0xC03A0004);

        [NativeTypeName("#define ERROR_VHD_FORMAT_UNSUPPORTED_VERSION _NDIS_ERROR_TYPEDEF_(0xC03A0005L)")]
        public const uint ERROR_VHD_FORMAT_UNSUPPORTED_VERSION = (uint)(0xC03A0005);

        [NativeTypeName("#define ERROR_VHD_SPARSE_HEADER_CHECKSUM_MISMATCH _NDIS_ERROR_TYPEDEF_(0xC03A0006L)")]
        public const uint ERROR_VHD_SPARSE_HEADER_CHECKSUM_MISMATCH = (uint)(0xC03A0006);

        [NativeTypeName("#define ERROR_VHD_SPARSE_HEADER_UNSUPPORTED_VERSION _NDIS_ERROR_TYPEDEF_(0xC03A0007L)")]
        public const uint ERROR_VHD_SPARSE_HEADER_UNSUPPORTED_VERSION = (uint)(0xC03A0007);

        [NativeTypeName("#define ERROR_VHD_SPARSE_HEADER_CORRUPT _NDIS_ERROR_TYPEDEF_(0xC03A0008L)")]
        public const uint ERROR_VHD_SPARSE_HEADER_CORRUPT = (uint)(0xC03A0008);

        [NativeTypeName("#define ERROR_VHD_BLOCK_ALLOCATION_FAILURE _NDIS_ERROR_TYPEDEF_(0xC03A0009L)")]
        public const uint ERROR_VHD_BLOCK_ALLOCATION_FAILURE = (uint)(0xC03A0009);

        [NativeTypeName("#define ERROR_VHD_BLOCK_ALLOCATION_TABLE_CORRUPT _NDIS_ERROR_TYPEDEF_(0xC03A000AL)")]
        public const uint ERROR_VHD_BLOCK_ALLOCATION_TABLE_CORRUPT = (uint)(0xC03A000A);

        [NativeTypeName("#define ERROR_VHD_INVALID_BLOCK_SIZE _NDIS_ERROR_TYPEDEF_(0xC03A000BL)")]
        public const uint ERROR_VHD_INVALID_BLOCK_SIZE = (uint)(0xC03A000B);

        [NativeTypeName("#define ERROR_VHD_BITMAP_MISMATCH _NDIS_ERROR_TYPEDEF_(0xC03A000CL)")]
        public const uint ERROR_VHD_BITMAP_MISMATCH = (uint)(0xC03A000C);

        [NativeTypeName("#define ERROR_VHD_PARENT_VHD_NOT_FOUND _NDIS_ERROR_TYPEDEF_(0xC03A000DL)")]
        public const uint ERROR_VHD_PARENT_VHD_NOT_FOUND = (uint)(0xC03A000D);

        [NativeTypeName("#define ERROR_VHD_CHILD_PARENT_ID_MISMATCH _NDIS_ERROR_TYPEDEF_(0xC03A000EL)")]
        public const uint ERROR_VHD_CHILD_PARENT_ID_MISMATCH = (uint)(0xC03A000E);

        [NativeTypeName("#define ERROR_VHD_CHILD_PARENT_TIMESTAMP_MISMATCH _NDIS_ERROR_TYPEDEF_(0xC03A000FL)")]
        public const uint ERROR_VHD_CHILD_PARENT_TIMESTAMP_MISMATCH = (uint)(0xC03A000F);

        [NativeTypeName("#define ERROR_VHD_METADATA_READ_FAILURE _NDIS_ERROR_TYPEDEF_(0xC03A0010L)")]
        public const uint ERROR_VHD_METADATA_READ_FAILURE = (uint)(0xC03A0010);

        [NativeTypeName("#define ERROR_VHD_METADATA_WRITE_FAILURE _NDIS_ERROR_TYPEDEF_(0xC03A0011L)")]
        public const uint ERROR_VHD_METADATA_WRITE_FAILURE = (uint)(0xC03A0011);

        [NativeTypeName("#define ERROR_VHD_INVALID_SIZE _NDIS_ERROR_TYPEDEF_(0xC03A0012L)")]
        public const uint ERROR_VHD_INVALID_SIZE = (uint)(0xC03A0012);

        [NativeTypeName("#define ERROR_VHD_INVALID_FILE_SIZE _NDIS_ERROR_TYPEDEF_(0xC03A0013L)")]
        public const uint ERROR_VHD_INVALID_FILE_SIZE = (uint)(0xC03A0013);

        [NativeTypeName("#define ERROR_VIRTDISK_PROVIDER_NOT_FOUND _NDIS_ERROR_TYPEDEF_(0xC03A0014L)")]
        public const uint ERROR_VIRTDISK_PROVIDER_NOT_FOUND = (uint)(0xC03A0014);

        [NativeTypeName("#define ERROR_VIRTDISK_NOT_VIRTUAL_DISK _NDIS_ERROR_TYPEDEF_(0xC03A0015L)")]
        public const uint ERROR_VIRTDISK_NOT_VIRTUAL_DISK = (uint)(0xC03A0015);

        [NativeTypeName("#define ERROR_VHD_PARENT_VHD_ACCESS_DENIED _NDIS_ERROR_TYPEDEF_(0xC03A0016L)")]
        public const uint ERROR_VHD_PARENT_VHD_ACCESS_DENIED = (uint)(0xC03A0016);

        [NativeTypeName("#define ERROR_VHD_CHILD_PARENT_SIZE_MISMATCH _NDIS_ERROR_TYPEDEF_(0xC03A0017L)")]
        public const uint ERROR_VHD_CHILD_PARENT_SIZE_MISMATCH = (uint)(0xC03A0017);

        [NativeTypeName("#define ERROR_VHD_DIFFERENCING_CHAIN_CYCLE_DETECTED _NDIS_ERROR_TYPEDEF_(0xC03A0018L)")]
        public const uint ERROR_VHD_DIFFERENCING_CHAIN_CYCLE_DETECTED = (uint)(0xC03A0018);

        [NativeTypeName("#define ERROR_VHD_DIFFERENCING_CHAIN_ERROR_IN_PARENT _NDIS_ERROR_TYPEDEF_(0xC03A0019L)")]
        public const uint ERROR_VHD_DIFFERENCING_CHAIN_ERROR_IN_PARENT = (uint)(0xC03A0019);

        [NativeTypeName("#define ERROR_VIRTUAL_DISK_LIMITATION _NDIS_ERROR_TYPEDEF_(0xC03A001AL)")]
        public const uint ERROR_VIRTUAL_DISK_LIMITATION = (uint)(0xC03A001A);

        [NativeTypeName("#define ERROR_VHD_INVALID_TYPE _NDIS_ERROR_TYPEDEF_(0xC03A001BL)")]
        public const uint ERROR_VHD_INVALID_TYPE = (uint)(0xC03A001B);

        [NativeTypeName("#define ERROR_VHD_INVALID_STATE _NDIS_ERROR_TYPEDEF_(0xC03A001CL)")]
        public const uint ERROR_VHD_INVALID_STATE = (uint)(0xC03A001C);

        [NativeTypeName("#define ERROR_VIRTDISK_UNSUPPORTED_DISK_SECTOR_SIZE _NDIS_ERROR_TYPEDEF_(0xC03A001DL)")]
        public const uint ERROR_VIRTDISK_UNSUPPORTED_DISK_SECTOR_SIZE = (uint)(0xC03A001D);

        [NativeTypeName("#define ERROR_VIRTDISK_DISK_ALREADY_OWNED _NDIS_ERROR_TYPEDEF_(0xC03A001EL)")]
        public const uint ERROR_VIRTDISK_DISK_ALREADY_OWNED = (uint)(0xC03A001E);

        [NativeTypeName("#define ERROR_VIRTDISK_DISK_ONLINE_AND_WRITABLE _NDIS_ERROR_TYPEDEF_(0xC03A001FL)")]
        public const uint ERROR_VIRTDISK_DISK_ONLINE_AND_WRITABLE = (uint)(0xC03A001F);

        [NativeTypeName("#define ERROR_CTLOG_TRACKING_NOT_INITIALIZED _NDIS_ERROR_TYPEDEF_(0xC03A0020L)")]
        public const uint ERROR_CTLOG_TRACKING_NOT_INITIALIZED = (uint)(0xC03A0020);

        [NativeTypeName("#define ERROR_CTLOG_LOGFILE_SIZE_EXCEEDED_MAXSIZE _NDIS_ERROR_TYPEDEF_(0xC03A0021L)")]
        public const uint ERROR_CTLOG_LOGFILE_SIZE_EXCEEDED_MAXSIZE = (uint)(0xC03A0021);

        [NativeTypeName("#define ERROR_CTLOG_VHD_CHANGED_OFFLINE _NDIS_ERROR_TYPEDEF_(0xC03A0022L)")]
        public const uint ERROR_CTLOG_VHD_CHANGED_OFFLINE = (uint)(0xC03A0022);

        [NativeTypeName("#define ERROR_CTLOG_INVALID_TRACKING_STATE _NDIS_ERROR_TYPEDEF_(0xC03A0023L)")]
        public const uint ERROR_CTLOG_INVALID_TRACKING_STATE = (uint)(0xC03A0023);

        [NativeTypeName("#define ERROR_CTLOG_INCONSISTENT_TRACKING_FILE _NDIS_ERROR_TYPEDEF_(0xC03A0024L)")]
        public const uint ERROR_CTLOG_INCONSISTENT_TRACKING_FILE = (uint)(0xC03A0024);

        [NativeTypeName("#define ERROR_VHD_RESIZE_WOULD_TRUNCATE_DATA _NDIS_ERROR_TYPEDEF_(0xC03A0025L)")]
        public const uint ERROR_VHD_RESIZE_WOULD_TRUNCATE_DATA = (uint)(0xC03A0025);

        [NativeTypeName("#define ERROR_VHD_COULD_NOT_COMPUTE_MINIMUM_VIRTUAL_SIZE _NDIS_ERROR_TYPEDEF_(0xC03A0026L)")]
        public const uint ERROR_VHD_COULD_NOT_COMPUTE_MINIMUM_VIRTUAL_SIZE = (uint)(0xC03A0026);

        [NativeTypeName("#define ERROR_VHD_ALREADY_AT_OR_BELOW_MINIMUM_VIRTUAL_SIZE _NDIS_ERROR_TYPEDEF_(0xC03A0027L)")]
        public const uint ERROR_VHD_ALREADY_AT_OR_BELOW_MINIMUM_VIRTUAL_SIZE = (uint)(0xC03A0027);

        [NativeTypeName("#define ERROR_VHD_METADATA_FULL _NDIS_ERROR_TYPEDEF_(0xC03A0028L)")]
        public const uint ERROR_VHD_METADATA_FULL = (uint)(0xC03A0028);

        [NativeTypeName("#define ERROR_VHD_INVALID_CHANGE_TRACKING_ID _NDIS_ERROR_TYPEDEF_(0xC03A0029L)")]
        public const uint ERROR_VHD_INVALID_CHANGE_TRACKING_ID = (uint)(0xC03A0029);

        [NativeTypeName("#define ERROR_VHD_CHANGE_TRACKING_DISABLED _NDIS_ERROR_TYPEDEF_(0xC03A002AL)")]
        public const uint ERROR_VHD_CHANGE_TRACKING_DISABLED = (uint)(0xC03A002A);

        [NativeTypeName("#define ERROR_VHD_MISSING_CHANGE_TRACKING_INFORMATION _NDIS_ERROR_TYPEDEF_(0xC03A0030L)")]
        public const uint ERROR_VHD_MISSING_CHANGE_TRACKING_INFORMATION = (uint)(0xC03A0030);

        [NativeTypeName("#define ERROR_QUERY_STORAGE_ERROR _NDIS_ERROR_TYPEDEF_(0x803A0001L)")]
        public const uint ERROR_QUERY_STORAGE_ERROR = (uint)(0x803A0001);

        [NativeTypeName("#define HCN_E_NETWORK_NOT_FOUND _HRESULT_TYPEDEF_(0x803B0001L)")]
        public const int HCN_E_NETWORK_NOT_FOUND = unchecked((int)(0x803B0001));

        [NativeTypeName("#define HCN_E_ENDPOINT_NOT_FOUND _HRESULT_TYPEDEF_(0x803B0002L)")]
        public const int HCN_E_ENDPOINT_NOT_FOUND = unchecked((int)(0x803B0002));

        [NativeTypeName("#define HCN_E_LAYER_NOT_FOUND _HRESULT_TYPEDEF_(0x803B0003L)")]
        public const int HCN_E_LAYER_NOT_FOUND = unchecked((int)(0x803B0003));

        [NativeTypeName("#define HCN_E_SWITCH_NOT_FOUND _HRESULT_TYPEDEF_(0x803B0004L)")]
        public const int HCN_E_SWITCH_NOT_FOUND = unchecked((int)(0x803B0004));

        [NativeTypeName("#define HCN_E_SUBNET_NOT_FOUND _HRESULT_TYPEDEF_(0x803B0005L)")]
        public const int HCN_E_SUBNET_NOT_FOUND = unchecked((int)(0x803B0005));

        [NativeTypeName("#define HCN_E_ADAPTER_NOT_FOUND _HRESULT_TYPEDEF_(0x803B0006L)")]
        public const int HCN_E_ADAPTER_NOT_FOUND = unchecked((int)(0x803B0006));

        [NativeTypeName("#define HCN_E_PORT_NOT_FOUND _HRESULT_TYPEDEF_(0x803B0007L)")]
        public const int HCN_E_PORT_NOT_FOUND = unchecked((int)(0x803B0007));

        [NativeTypeName("#define HCN_E_POLICY_NOT_FOUND _HRESULT_TYPEDEF_(0x803B0008L)")]
        public const int HCN_E_POLICY_NOT_FOUND = unchecked((int)(0x803B0008));

        [NativeTypeName("#define HCN_E_VFP_PORTSETTING_NOT_FOUND _HRESULT_TYPEDEF_(0x803B0009L)")]
        public const int HCN_E_VFP_PORTSETTING_NOT_FOUND = unchecked((int)(0x803B0009));

        [NativeTypeName("#define HCN_E_INVALID_NETWORK _HRESULT_TYPEDEF_(0x803B000AL)")]
        public const int HCN_E_INVALID_NETWORK = unchecked((int)(0x803B000A));

        [NativeTypeName("#define HCN_E_INVALID_NETWORK_TYPE _HRESULT_TYPEDEF_(0x803B000BL)")]
        public const int HCN_E_INVALID_NETWORK_TYPE = unchecked((int)(0x803B000B));

        [NativeTypeName("#define HCN_E_INVALID_ENDPOINT _HRESULT_TYPEDEF_(0x803B000CL)")]
        public const int HCN_E_INVALID_ENDPOINT = unchecked((int)(0x803B000C));

        [NativeTypeName("#define HCN_E_INVALID_POLICY _HRESULT_TYPEDEF_(0x803B000DL)")]
        public const int HCN_E_INVALID_POLICY = unchecked((int)(0x803B000D));

        [NativeTypeName("#define HCN_E_INVALID_POLICY_TYPE _HRESULT_TYPEDEF_(0x803B000EL)")]
        public const int HCN_E_INVALID_POLICY_TYPE = unchecked((int)(0x803B000E));

        [NativeTypeName("#define HCN_E_INVALID_REMOTE_ENDPOINT_OPERATION _HRESULT_TYPEDEF_(0x803B000FL)")]
        public const int HCN_E_INVALID_REMOTE_ENDPOINT_OPERATION = unchecked((int)(0x803B000F));

        [NativeTypeName("#define HCN_E_NETWORK_ALREADY_EXISTS _HRESULT_TYPEDEF_(0x803B0010L)")]
        public const int HCN_E_NETWORK_ALREADY_EXISTS = unchecked((int)(0x803B0010));

        [NativeTypeName("#define HCN_E_LAYER_ALREADY_EXISTS _HRESULT_TYPEDEF_(0x803B0011L)")]
        public const int HCN_E_LAYER_ALREADY_EXISTS = unchecked((int)(0x803B0011));

        [NativeTypeName("#define HCN_E_POLICY_ALREADY_EXISTS _HRESULT_TYPEDEF_(0x803B0012L)")]
        public const int HCN_E_POLICY_ALREADY_EXISTS = unchecked((int)(0x803B0012));

        [NativeTypeName("#define HCN_E_PORT_ALREADY_EXISTS _HRESULT_TYPEDEF_(0x803B0013L)")]
        public const int HCN_E_PORT_ALREADY_EXISTS = unchecked((int)(0x803B0013));

        [NativeTypeName("#define HCN_E_ENDPOINT_ALREADY_ATTACHED _HRESULT_TYPEDEF_(0x803B0014L)")]
        public const int HCN_E_ENDPOINT_ALREADY_ATTACHED = unchecked((int)(0x803B0014));

        [NativeTypeName("#define HCN_E_REQUEST_UNSUPPORTED _HRESULT_TYPEDEF_(0x803B0015L)")]
        public const int HCN_E_REQUEST_UNSUPPORTED = unchecked((int)(0x803B0015));

        [NativeTypeName("#define HCN_E_MAPPING_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x803B0016L)")]
        public const int HCN_E_MAPPING_NOT_SUPPORTED = unchecked((int)(0x803B0016));

        [NativeTypeName("#define HCN_E_DEGRADED_OPERATION _HRESULT_TYPEDEF_(0x803B0017L)")]
        public const int HCN_E_DEGRADED_OPERATION = unchecked((int)(0x803B0017));

        [NativeTypeName("#define HCN_E_SHARED_SWITCH_MODIFICATION _HRESULT_TYPEDEF_(0x803B0018L)")]
        public const int HCN_E_SHARED_SWITCH_MODIFICATION = unchecked((int)(0x803B0018));

        [NativeTypeName("#define HCN_E_GUID_CONVERSION_FAILURE _HRESULT_TYPEDEF_(0x803B0019L)")]
        public const int HCN_E_GUID_CONVERSION_FAILURE = unchecked((int)(0x803B0019));

        [NativeTypeName("#define HCN_E_REGKEY_FAILURE _HRESULT_TYPEDEF_(0x803B001AL)")]
        public const int HCN_E_REGKEY_FAILURE = unchecked((int)(0x803B001A));

        [NativeTypeName("#define HCN_E_INVALID_JSON _HRESULT_TYPEDEF_(0x803B001BL)")]
        public const int HCN_E_INVALID_JSON = unchecked((int)(0x803B001B));

        [NativeTypeName("#define HCN_E_INVALID_JSON_REFERENCE _HRESULT_TYPEDEF_(0x803B001CL)")]
        public const int HCN_E_INVALID_JSON_REFERENCE = unchecked((int)(0x803B001C));

        [NativeTypeName("#define HCN_E_ENDPOINT_SHARING_DISABLED _HRESULT_TYPEDEF_(0x803B001DL)")]
        public const int HCN_E_ENDPOINT_SHARING_DISABLED = unchecked((int)(0x803B001D));

        [NativeTypeName("#define HCN_E_INVALID_IP _HRESULT_TYPEDEF_(0x803B001EL)")]
        public const int HCN_E_INVALID_IP = unchecked((int)(0x803B001E));

        [NativeTypeName("#define HCN_E_SWITCH_EXTENSION_NOT_FOUND _HRESULT_TYPEDEF_(0x803B001FL)")]
        public const int HCN_E_SWITCH_EXTENSION_NOT_FOUND = unchecked((int)(0x803B001F));

        [NativeTypeName("#define HCN_E_MANAGER_STOPPED _HRESULT_TYPEDEF_(0x803B0020L)")]
        public const int HCN_E_MANAGER_STOPPED = unchecked((int)(0x803B0020));

        [NativeTypeName("#define GCN_E_MODULE_NOT_FOUND _HRESULT_TYPEDEF_(0x803B0021L)")]
        public const int GCN_E_MODULE_NOT_FOUND = unchecked((int)(0x803B0021));

        [NativeTypeName("#define GCN_E_NO_REQUEST_HANDLERS _HRESULT_TYPEDEF_(0x803B0022L)")]
        public const int GCN_E_NO_REQUEST_HANDLERS = unchecked((int)(0x803B0022));

        [NativeTypeName("#define GCN_E_REQUEST_UNSUPPORTED _HRESULT_TYPEDEF_(0x803B0023L)")]
        public const int GCN_E_REQUEST_UNSUPPORTED = unchecked((int)(0x803B0023));

        [NativeTypeName("#define GCN_E_RUNTIMEKEYS_FAILED _HRESULT_TYPEDEF_(0x803B0024L)")]
        public const int GCN_E_RUNTIMEKEYS_FAILED = unchecked((int)(0x803B0024));

        [NativeTypeName("#define GCN_E_NETADAPTER_TIMEOUT _HRESULT_TYPEDEF_(0x803B0025L)")]
        public const int GCN_E_NETADAPTER_TIMEOUT = unchecked((int)(0x803B0025));

        [NativeTypeName("#define GCN_E_NETADAPTER_NOT_FOUND _HRESULT_TYPEDEF_(0x803B0026L)")]
        public const int GCN_E_NETADAPTER_NOT_FOUND = unchecked((int)(0x803B0026));

        [NativeTypeName("#define GCN_E_NETCOMPARTMENT_NOT_FOUND _HRESULT_TYPEDEF_(0x803B0027L)")]
        public const int GCN_E_NETCOMPARTMENT_NOT_FOUND = unchecked((int)(0x803B0027));

        [NativeTypeName("#define GCN_E_NETINTERFACE_NOT_FOUND _HRESULT_TYPEDEF_(0x803B0028L)")]
        public const int GCN_E_NETINTERFACE_NOT_FOUND = unchecked((int)(0x803B0028));

        [NativeTypeName("#define GCN_E_DEFAULTNAMESPACE_EXISTS _HRESULT_TYPEDEF_(0x803B0029L)")]
        public const int GCN_E_DEFAULTNAMESPACE_EXISTS = unchecked((int)(0x803B0029));

        [NativeTypeName("#define HCN_E_ICS_DISABLED _HRESULT_TYPEDEF_(0x803B002AL)")]
        public const int HCN_E_ICS_DISABLED = unchecked((int)(0x803B002A));

        [NativeTypeName("#define HCN_E_ENDPOINT_NAMESPACE_ALREADY_EXISTS _HRESULT_TYPEDEF_(0x803B002BL)")]
        public const int HCN_E_ENDPOINT_NAMESPACE_ALREADY_EXISTS = unchecked((int)(0x803B002B));

        [NativeTypeName("#define HCN_E_ENTITY_HAS_REFERENCES _HRESULT_TYPEDEF_(0x803B002CL)")]
        public const int HCN_E_ENTITY_HAS_REFERENCES = unchecked((int)(0x803B002C));

        [NativeTypeName("#define HCN_E_INVALID_INTERNAL_PORT _HRESULT_TYPEDEF_(0x803B002DL)")]
        public const int HCN_E_INVALID_INTERNAL_PORT = unchecked((int)(0x803B002D));

        [NativeTypeName("#define HCN_E_NAMESPACE_ATTACH_FAILED _HRESULT_TYPEDEF_(0x803B002EL)")]
        public const int HCN_E_NAMESPACE_ATTACH_FAILED = unchecked((int)(0x803B002E));

        [NativeTypeName("#define HCN_E_ADDR_INVALID_OR_RESERVED _HRESULT_TYPEDEF_(0x803B002FL)")]
        public const int HCN_E_ADDR_INVALID_OR_RESERVED = unchecked((int)(0x803B002F));

        [NativeTypeName("#define HCN_E_INVALID_PREFIX _HRESULT_TYPEDEF_(0x803B0030L)")]
        public const int HCN_E_INVALID_PREFIX = unchecked((int)(0x803B0030));

        [NativeTypeName("#define HCN_E_OBJECT_USED_AFTER_UNLOAD _HRESULT_TYPEDEF_(0x803B0031L)")]
        public const int HCN_E_OBJECT_USED_AFTER_UNLOAD = unchecked((int)(0x803B0031));

        [NativeTypeName("#define HCN_E_INVALID_SUBNET _HRESULT_TYPEDEF_(0x803B0032L)")]
        public const int HCN_E_INVALID_SUBNET = unchecked((int)(0x803B0032));

        [NativeTypeName("#define HCN_E_INVALID_IP_SUBNET _HRESULT_TYPEDEF_(0x803B0033L)")]
        public const int HCN_E_INVALID_IP_SUBNET = unchecked((int)(0x803B0033));

        [NativeTypeName("#define HCN_E_ENDPOINT_NOT_ATTACHED _HRESULT_TYPEDEF_(0x803B0034L)")]
        public const int HCN_E_ENDPOINT_NOT_ATTACHED = unchecked((int)(0x803B0034));

        [NativeTypeName("#define HCN_E_ENDPOINT_NOT_LOCAL _HRESULT_TYPEDEF_(0x803B0035L)")]
        public const int HCN_E_ENDPOINT_NOT_LOCAL = unchecked((int)(0x803B0035));

        [NativeTypeName("#define HCN_INTERFACEPARAMETERS_ALREADY_APPLIED _HRESULT_TYPEDEF_(0x803B0036L)")]
        public const int HCN_INTERFACEPARAMETERS_ALREADY_APPLIED = unchecked((int)(0x803B0036));

        [NativeTypeName("#define SDIAG_E_CANCELLED _NDIS_ERROR_TYPEDEF_(0x803C0100L)")]
        public const uint SDIAG_E_CANCELLED = (uint)(0x803C0100);

        [NativeTypeName("#define SDIAG_E_SCRIPT _NDIS_ERROR_TYPEDEF_(0x803C0101L)")]
        public const uint SDIAG_E_SCRIPT = (uint)(0x803C0101);

        [NativeTypeName("#define SDIAG_E_POWERSHELL _NDIS_ERROR_TYPEDEF_(0x803C0102L)")]
        public const uint SDIAG_E_POWERSHELL = (uint)(0x803C0102);

        [NativeTypeName("#define SDIAG_E_MANAGEDHOST _NDIS_ERROR_TYPEDEF_(0x803C0103L)")]
        public const uint SDIAG_E_MANAGEDHOST = (uint)(0x803C0103);

        [NativeTypeName("#define SDIAG_E_NOVERIFIER _NDIS_ERROR_TYPEDEF_(0x803C0104L)")]
        public const uint SDIAG_E_NOVERIFIER = (uint)(0x803C0104);

        [NativeTypeName("#define SDIAG_S_CANNOTRUN _NDIS_ERROR_TYPEDEF_(0x003C0105L)")]
        public const uint SDIAG_S_CANNOTRUN = (uint)(0x003C0105);

        [NativeTypeName("#define SDIAG_E_DISABLED _NDIS_ERROR_TYPEDEF_(0x803C0106L)")]
        public const uint SDIAG_E_DISABLED = (uint)(0x803C0106);

        [NativeTypeName("#define SDIAG_E_TRUST _NDIS_ERROR_TYPEDEF_(0x803C0107L)")]
        public const uint SDIAG_E_TRUST = (uint)(0x803C0107);

        [NativeTypeName("#define SDIAG_E_CANNOTRUN _NDIS_ERROR_TYPEDEF_(0x803C0108L)")]
        public const uint SDIAG_E_CANNOTRUN = (uint)(0x803C0108);

        [NativeTypeName("#define SDIAG_E_VERSION _NDIS_ERROR_TYPEDEF_(0x803C0109L)")]
        public const uint SDIAG_E_VERSION = (uint)(0x803C0109);

        [NativeTypeName("#define SDIAG_E_RESOURCE _NDIS_ERROR_TYPEDEF_(0x803C010AL)")]
        public const uint SDIAG_E_RESOURCE = (uint)(0x803C010A);

        [NativeTypeName("#define SDIAG_E_ROOTCAUSE _NDIS_ERROR_TYPEDEF_(0x803C010BL)")]
        public const uint SDIAG_E_ROOTCAUSE = (uint)(0x803C010B);

        [NativeTypeName("#define WPN_E_CHANNEL_CLOSED _HRESULT_TYPEDEF_(0x803E0100L)")]
        public const int WPN_E_CHANNEL_CLOSED = unchecked((int)(0x803E0100));

        [NativeTypeName("#define WPN_E_CHANNEL_REQUEST_NOT_COMPLETE _HRESULT_TYPEDEF_(0x803E0101L)")]
        public const int WPN_E_CHANNEL_REQUEST_NOT_COMPLETE = unchecked((int)(0x803E0101));

        [NativeTypeName("#define WPN_E_INVALID_APP _HRESULT_TYPEDEF_(0x803E0102L)")]
        public const int WPN_E_INVALID_APP = unchecked((int)(0x803E0102));

        [NativeTypeName("#define WPN_E_OUTSTANDING_CHANNEL_REQUEST _HRESULT_TYPEDEF_(0x803E0103L)")]
        public const int WPN_E_OUTSTANDING_CHANNEL_REQUEST = unchecked((int)(0x803E0103));

        [NativeTypeName("#define WPN_E_DUPLICATE_CHANNEL _HRESULT_TYPEDEF_(0x803E0104L)")]
        public const int WPN_E_DUPLICATE_CHANNEL = unchecked((int)(0x803E0104));

        [NativeTypeName("#define WPN_E_PLATFORM_UNAVAILABLE _HRESULT_TYPEDEF_(0x803E0105L)")]
        public const int WPN_E_PLATFORM_UNAVAILABLE = unchecked((int)(0x803E0105));

        [NativeTypeName("#define WPN_E_NOTIFICATION_POSTED _HRESULT_TYPEDEF_(0x803E0106L)")]
        public const int WPN_E_NOTIFICATION_POSTED = unchecked((int)(0x803E0106));

        [NativeTypeName("#define WPN_E_NOTIFICATION_HIDDEN _HRESULT_TYPEDEF_(0x803E0107L)")]
        public const int WPN_E_NOTIFICATION_HIDDEN = unchecked((int)(0x803E0107));

        [NativeTypeName("#define WPN_E_NOTIFICATION_NOT_POSTED _HRESULT_TYPEDEF_(0x803E0108L)")]
        public const int WPN_E_NOTIFICATION_NOT_POSTED = unchecked((int)(0x803E0108));

        [NativeTypeName("#define WPN_E_CLOUD_DISABLED _HRESULT_TYPEDEF_(0x803E0109L)")]
        public const int WPN_E_CLOUD_DISABLED = unchecked((int)(0x803E0109));

        [NativeTypeName("#define WPN_E_CLOUD_INCAPABLE _HRESULT_TYPEDEF_(0x803E0110L)")]
        public const int WPN_E_CLOUD_INCAPABLE = unchecked((int)(0x803E0110));

        [NativeTypeName("#define WPN_E_CLOUD_AUTH_UNAVAILABLE _HRESULT_TYPEDEF_(0x803E011AL)")]
        public const int WPN_E_CLOUD_AUTH_UNAVAILABLE = unchecked((int)(0x803E011A));

        [NativeTypeName("#define WPN_E_CLOUD_SERVICE_UNAVAILABLE _HRESULT_TYPEDEF_(0x803E011BL)")]
        public const int WPN_E_CLOUD_SERVICE_UNAVAILABLE = unchecked((int)(0x803E011B));

        [NativeTypeName("#define WPN_E_FAILED_LOCK_SCREEN_UPDATE_INTIALIZATION _HRESULT_TYPEDEF_(0x803E011CL)")]
        public const int WPN_E_FAILED_LOCK_SCREEN_UPDATE_INTIALIZATION = unchecked((int)(0x803E011C));

        [NativeTypeName("#define WPN_E_NOTIFICATION_DISABLED _HRESULT_TYPEDEF_(0x803E0111L)")]
        public const int WPN_E_NOTIFICATION_DISABLED = unchecked((int)(0x803E0111));

        [NativeTypeName("#define WPN_E_NOTIFICATION_INCAPABLE _HRESULT_TYPEDEF_(0x803E0112L)")]
        public const int WPN_E_NOTIFICATION_INCAPABLE = unchecked((int)(0x803E0112));

        [NativeTypeName("#define WPN_E_INTERNET_INCAPABLE _HRESULT_TYPEDEF_(0x803E0113L)")]
        public const int WPN_E_INTERNET_INCAPABLE = unchecked((int)(0x803E0113));

        [NativeTypeName("#define WPN_E_NOTIFICATION_TYPE_DISABLED _HRESULT_TYPEDEF_(0x803E0114L)")]
        public const int WPN_E_NOTIFICATION_TYPE_DISABLED = unchecked((int)(0x803E0114));

        [NativeTypeName("#define WPN_E_NOTIFICATION_SIZE _HRESULT_TYPEDEF_(0x803E0115L)")]
        public const int WPN_E_NOTIFICATION_SIZE = unchecked((int)(0x803E0115));

        [NativeTypeName("#define WPN_E_TAG_SIZE _HRESULT_TYPEDEF_(0x803E0116L)")]
        public const int WPN_E_TAG_SIZE = unchecked((int)(0x803E0116));

        [NativeTypeName("#define WPN_E_ACCESS_DENIED _HRESULT_TYPEDEF_(0x803E0117L)")]
        public const int WPN_E_ACCESS_DENIED = unchecked((int)(0x803E0117));

        [NativeTypeName("#define WPN_E_DUPLICATE_REGISTRATION _HRESULT_TYPEDEF_(0x803E0118L)")]
        public const int WPN_E_DUPLICATE_REGISTRATION = unchecked((int)(0x803E0118));

        [NativeTypeName("#define WPN_E_PUSH_NOTIFICATION_INCAPABLE _HRESULT_TYPEDEF_(0x803E0119L)")]
        public const int WPN_E_PUSH_NOTIFICATION_INCAPABLE = unchecked((int)(0x803E0119));

        [NativeTypeName("#define WPN_E_DEV_ID_SIZE _HRESULT_TYPEDEF_(0x803E0120L)")]
        public const int WPN_E_DEV_ID_SIZE = unchecked((int)(0x803E0120));

        [NativeTypeName("#define WPN_E_TAG_ALPHANUMERIC _HRESULT_TYPEDEF_(0x803E012AL)")]
        public const int WPN_E_TAG_ALPHANUMERIC = unchecked((int)(0x803E012A));

        [NativeTypeName("#define WPN_E_INVALID_HTTP_STATUS_CODE _HRESULT_TYPEDEF_(0x803E012BL)")]
        public const int WPN_E_INVALID_HTTP_STATUS_CODE = unchecked((int)(0x803E012B));

        [NativeTypeName("#define WPN_E_OUT_OF_SESSION _HRESULT_TYPEDEF_(0x803E0200L)")]
        public const int WPN_E_OUT_OF_SESSION = unchecked((int)(0x803E0200));

        [NativeTypeName("#define WPN_E_POWER_SAVE _HRESULT_TYPEDEF_(0x803E0201L)")]
        public const int WPN_E_POWER_SAVE = unchecked((int)(0x803E0201));

        [NativeTypeName("#define WPN_E_IMAGE_NOT_FOUND_IN_CACHE _HRESULT_TYPEDEF_(0x803E0202L)")]
        public const int WPN_E_IMAGE_NOT_FOUND_IN_CACHE = unchecked((int)(0x803E0202));

        [NativeTypeName("#define WPN_E_ALL_URL_NOT_COMPLETED _HRESULT_TYPEDEF_(0x803E0203L)")]
        public const int WPN_E_ALL_URL_NOT_COMPLETED = unchecked((int)(0x803E0203));

        [NativeTypeName("#define WPN_E_INVALID_CLOUD_IMAGE _HRESULT_TYPEDEF_(0x803E0204L)")]
        public const int WPN_E_INVALID_CLOUD_IMAGE = unchecked((int)(0x803E0204));

        [NativeTypeName("#define WPN_E_NOTIFICATION_ID_MATCHED _HRESULT_TYPEDEF_(0x803E0205L)")]
        public const int WPN_E_NOTIFICATION_ID_MATCHED = unchecked((int)(0x803E0205));

        [NativeTypeName("#define WPN_E_CALLBACK_ALREADY_REGISTERED _HRESULT_TYPEDEF_(0x803E0206L)")]
        public const int WPN_E_CALLBACK_ALREADY_REGISTERED = unchecked((int)(0x803E0206));

        [NativeTypeName("#define WPN_E_TOAST_NOTIFICATION_DROPPED _HRESULT_TYPEDEF_(0x803E0207L)")]
        public const int WPN_E_TOAST_NOTIFICATION_DROPPED = unchecked((int)(0x803E0207));

        [NativeTypeName("#define WPN_E_STORAGE_LOCKED _HRESULT_TYPEDEF_(0x803E0208L)")]
        public const int WPN_E_STORAGE_LOCKED = unchecked((int)(0x803E0208));

        [NativeTypeName("#define WPN_E_GROUP_SIZE _HRESULT_TYPEDEF_(0x803E0209L)")]
        public const int WPN_E_GROUP_SIZE = unchecked((int)(0x803E0209));

        [NativeTypeName("#define WPN_E_GROUP_ALPHANUMERIC _HRESULT_TYPEDEF_(0x803E020AL)")]
        public const int WPN_E_GROUP_ALPHANUMERIC = unchecked((int)(0x803E020A));

        [NativeTypeName("#define WPN_E_CLOUD_DISABLED_FOR_APP _HRESULT_TYPEDEF_(0x803E020BL)")]
        public const int WPN_E_CLOUD_DISABLED_FOR_APP = unchecked((int)(0x803E020B));

        [NativeTypeName("#define E_MBN_CONTEXT_NOT_ACTIVATED _HRESULT_TYPEDEF_(0x80548201L)")]
        public const int E_MBN_CONTEXT_NOT_ACTIVATED = unchecked((int)(0x80548201));

        [NativeTypeName("#define E_MBN_BAD_SIM _HRESULT_TYPEDEF_(0x80548202L)")]
        public const int E_MBN_BAD_SIM = unchecked((int)(0x80548202));

        [NativeTypeName("#define E_MBN_DATA_CLASS_NOT_AVAILABLE _HRESULT_TYPEDEF_(0x80548203L)")]
        public const int E_MBN_DATA_CLASS_NOT_AVAILABLE = unchecked((int)(0x80548203));

        [NativeTypeName("#define E_MBN_INVALID_ACCESS_STRING _HRESULT_TYPEDEF_(0x80548204L)")]
        public const int E_MBN_INVALID_ACCESS_STRING = unchecked((int)(0x80548204));

        [NativeTypeName("#define E_MBN_MAX_ACTIVATED_CONTEXTS _HRESULT_TYPEDEF_(0x80548205L)")]
        public const int E_MBN_MAX_ACTIVATED_CONTEXTS = unchecked((int)(0x80548205));

        [NativeTypeName("#define E_MBN_PACKET_SVC_DETACHED _HRESULT_TYPEDEF_(0x80548206L)")]
        public const int E_MBN_PACKET_SVC_DETACHED = unchecked((int)(0x80548206));

        [NativeTypeName("#define E_MBN_PROVIDER_NOT_VISIBLE _HRESULT_TYPEDEF_(0x80548207L)")]
        public const int E_MBN_PROVIDER_NOT_VISIBLE = unchecked((int)(0x80548207));

        [NativeTypeName("#define E_MBN_RADIO_POWER_OFF _HRESULT_TYPEDEF_(0x80548208L)")]
        public const int E_MBN_RADIO_POWER_OFF = unchecked((int)(0x80548208));

        [NativeTypeName("#define E_MBN_SERVICE_NOT_ACTIVATED _HRESULT_TYPEDEF_(0x80548209L)")]
        public const int E_MBN_SERVICE_NOT_ACTIVATED = unchecked((int)(0x80548209));

        [NativeTypeName("#define E_MBN_SIM_NOT_INSERTED _HRESULT_TYPEDEF_(0x8054820AL)")]
        public const int E_MBN_SIM_NOT_INSERTED = unchecked((int)(0x8054820A));

        [NativeTypeName("#define E_MBN_VOICE_CALL_IN_PROGRESS _HRESULT_TYPEDEF_(0x8054820BL)")]
        public const int E_MBN_VOICE_CALL_IN_PROGRESS = unchecked((int)(0x8054820B));

        [NativeTypeName("#define E_MBN_INVALID_CACHE _HRESULT_TYPEDEF_(0x8054820CL)")]
        public const int E_MBN_INVALID_CACHE = unchecked((int)(0x8054820C));

        [NativeTypeName("#define E_MBN_NOT_REGISTERED _HRESULT_TYPEDEF_(0x8054820DL)")]
        public const int E_MBN_NOT_REGISTERED = unchecked((int)(0x8054820D));

        [NativeTypeName("#define E_MBN_PROVIDERS_NOT_FOUND _HRESULT_TYPEDEF_(0x8054820EL)")]
        public const int E_MBN_PROVIDERS_NOT_FOUND = unchecked((int)(0x8054820E));

        [NativeTypeName("#define E_MBN_PIN_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x8054820FL)")]
        public const int E_MBN_PIN_NOT_SUPPORTED = unchecked((int)(0x8054820F));

        [NativeTypeName("#define E_MBN_PIN_REQUIRED _HRESULT_TYPEDEF_(0x80548210L)")]
        public const int E_MBN_PIN_REQUIRED = unchecked((int)(0x80548210));

        [NativeTypeName("#define E_MBN_PIN_DISABLED _HRESULT_TYPEDEF_(0x80548211L)")]
        public const int E_MBN_PIN_DISABLED = unchecked((int)(0x80548211));

        [NativeTypeName("#define E_MBN_FAILURE _HRESULT_TYPEDEF_(0x80548212L)")]
        public const int E_MBN_FAILURE = unchecked((int)(0x80548212));

        [NativeTypeName("#define E_MBN_INVALID_PROFILE _HRESULT_TYPEDEF_(0x80548218L)")]
        public const int E_MBN_INVALID_PROFILE = unchecked((int)(0x80548218));

        [NativeTypeName("#define E_MBN_DEFAULT_PROFILE_EXIST _HRESULT_TYPEDEF_(0x80548219L)")]
        public const int E_MBN_DEFAULT_PROFILE_EXIST = unchecked((int)(0x80548219));

        [NativeTypeName("#define E_MBN_SMS_ENCODING_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80548220L)")]
        public const int E_MBN_SMS_ENCODING_NOT_SUPPORTED = unchecked((int)(0x80548220));

        [NativeTypeName("#define E_MBN_SMS_FILTER_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80548221L)")]
        public const int E_MBN_SMS_FILTER_NOT_SUPPORTED = unchecked((int)(0x80548221));

        [NativeTypeName("#define E_MBN_SMS_INVALID_MEMORY_INDEX _HRESULT_TYPEDEF_(0x80548222L)")]
        public const int E_MBN_SMS_INVALID_MEMORY_INDEX = unchecked((int)(0x80548222));

        [NativeTypeName("#define E_MBN_SMS_LANG_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80548223L)")]
        public const int E_MBN_SMS_LANG_NOT_SUPPORTED = unchecked((int)(0x80548223));

        [NativeTypeName("#define E_MBN_SMS_MEMORY_FAILURE _HRESULT_TYPEDEF_(0x80548224L)")]
        public const int E_MBN_SMS_MEMORY_FAILURE = unchecked((int)(0x80548224));

        [NativeTypeName("#define E_MBN_SMS_NETWORK_TIMEOUT _HRESULT_TYPEDEF_(0x80548225L)")]
        public const int E_MBN_SMS_NETWORK_TIMEOUT = unchecked((int)(0x80548225));

        [NativeTypeName("#define E_MBN_SMS_UNKNOWN_SMSC_ADDRESS _HRESULT_TYPEDEF_(0x80548226L)")]
        public const int E_MBN_SMS_UNKNOWN_SMSC_ADDRESS = unchecked((int)(0x80548226));

        [NativeTypeName("#define E_MBN_SMS_FORMAT_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80548227L)")]
        public const int E_MBN_SMS_FORMAT_NOT_SUPPORTED = unchecked((int)(0x80548227));

        [NativeTypeName("#define E_MBN_SMS_OPERATION_NOT_ALLOWED _HRESULT_TYPEDEF_(0x80548228L)")]
        public const int E_MBN_SMS_OPERATION_NOT_ALLOWED = unchecked((int)(0x80548228));

        [NativeTypeName("#define E_MBN_SMS_MEMORY_FULL _HRESULT_TYPEDEF_(0x80548229L)")]
        public const int E_MBN_SMS_MEMORY_FULL = unchecked((int)(0x80548229));

        [NativeTypeName("#define PEER_E_IPV6_NOT_INSTALLED _HRESULT_TYPEDEF_(0x80630001L)")]
        public const int PEER_E_IPV6_NOT_INSTALLED = unchecked((int)(0x80630001));

        [NativeTypeName("#define PEER_E_NOT_INITIALIZED _HRESULT_TYPEDEF_(0x80630002L)")]
        public const int PEER_E_NOT_INITIALIZED = unchecked((int)(0x80630002));

        [NativeTypeName("#define PEER_E_CANNOT_START_SERVICE _HRESULT_TYPEDEF_(0x80630003L)")]
        public const int PEER_E_CANNOT_START_SERVICE = unchecked((int)(0x80630003));

        [NativeTypeName("#define PEER_E_NOT_LICENSED _HRESULT_TYPEDEF_(0x80630004L)")]
        public const int PEER_E_NOT_LICENSED = unchecked((int)(0x80630004));

        [NativeTypeName("#define PEER_E_INVALID_GRAPH _HRESULT_TYPEDEF_(0x80630010L)")]
        public const int PEER_E_INVALID_GRAPH = unchecked((int)(0x80630010));

        [NativeTypeName("#define PEER_E_DBNAME_CHANGED _HRESULT_TYPEDEF_(0x80630011L)")]
        public const int PEER_E_DBNAME_CHANGED = unchecked((int)(0x80630011));

        [NativeTypeName("#define PEER_E_DUPLICATE_GRAPH _HRESULT_TYPEDEF_(0x80630012L)")]
        public const int PEER_E_DUPLICATE_GRAPH = unchecked((int)(0x80630012));

        [NativeTypeName("#define PEER_E_GRAPH_NOT_READY _HRESULT_TYPEDEF_(0x80630013L)")]
        public const int PEER_E_GRAPH_NOT_READY = unchecked((int)(0x80630013));

        [NativeTypeName("#define PEER_E_GRAPH_SHUTTING_DOWN _HRESULT_TYPEDEF_(0x80630014L)")]
        public const int PEER_E_GRAPH_SHUTTING_DOWN = unchecked((int)(0x80630014));

        [NativeTypeName("#define PEER_E_GRAPH_IN_USE _HRESULT_TYPEDEF_(0x80630015L)")]
        public const int PEER_E_GRAPH_IN_USE = unchecked((int)(0x80630015));

        [NativeTypeName("#define PEER_E_INVALID_DATABASE _HRESULT_TYPEDEF_(0x80630016L)")]
        public const int PEER_E_INVALID_DATABASE = unchecked((int)(0x80630016));

        [NativeTypeName("#define PEER_E_TOO_MANY_ATTRIBUTES _HRESULT_TYPEDEF_(0x80630017L)")]
        public const int PEER_E_TOO_MANY_ATTRIBUTES = unchecked((int)(0x80630017));

        [NativeTypeName("#define PEER_E_CONNECTION_NOT_FOUND _HRESULT_TYPEDEF_(0x80630103L)")]
        public const int PEER_E_CONNECTION_NOT_FOUND = unchecked((int)(0x80630103));

        [NativeTypeName("#define PEER_E_CONNECT_SELF _HRESULT_TYPEDEF_(0x80630106L)")]
        public const int PEER_E_CONNECT_SELF = unchecked((int)(0x80630106));

        [NativeTypeName("#define PEER_E_ALREADY_LISTENING _HRESULT_TYPEDEF_(0x80630107L)")]
        public const int PEER_E_ALREADY_LISTENING = unchecked((int)(0x80630107));

        [NativeTypeName("#define PEER_E_NODE_NOT_FOUND _HRESULT_TYPEDEF_(0x80630108L)")]
        public const int PEER_E_NODE_NOT_FOUND = unchecked((int)(0x80630108));

        [NativeTypeName("#define PEER_E_CONNECTION_FAILED _HRESULT_TYPEDEF_(0x80630109L)")]
        public const int PEER_E_CONNECTION_FAILED = unchecked((int)(0x80630109));

        [NativeTypeName("#define PEER_E_CONNECTION_NOT_AUTHENTICATED _HRESULT_TYPEDEF_(0x8063010AL)")]
        public const int PEER_E_CONNECTION_NOT_AUTHENTICATED = unchecked((int)(0x8063010A));

        [NativeTypeName("#define PEER_E_CONNECTION_REFUSED _HRESULT_TYPEDEF_(0x8063010BL)")]
        public const int PEER_E_CONNECTION_REFUSED = unchecked((int)(0x8063010B));

        [NativeTypeName("#define PEER_E_CLASSIFIER_TOO_LONG _HRESULT_TYPEDEF_(0x80630201L)")]
        public const int PEER_E_CLASSIFIER_TOO_LONG = unchecked((int)(0x80630201));

        [NativeTypeName("#define PEER_E_TOO_MANY_IDENTITIES _HRESULT_TYPEDEF_(0x80630202L)")]
        public const int PEER_E_TOO_MANY_IDENTITIES = unchecked((int)(0x80630202));

        [NativeTypeName("#define PEER_E_NO_KEY_ACCESS _HRESULT_TYPEDEF_(0x80630203L)")]
        public const int PEER_E_NO_KEY_ACCESS = unchecked((int)(0x80630203));

        [NativeTypeName("#define PEER_E_GROUPS_EXIST _HRESULT_TYPEDEF_(0x80630204L)")]
        public const int PEER_E_GROUPS_EXIST = unchecked((int)(0x80630204));

        [NativeTypeName("#define PEER_E_RECORD_NOT_FOUND _HRESULT_TYPEDEF_(0x80630301L)")]
        public const int PEER_E_RECORD_NOT_FOUND = unchecked((int)(0x80630301));

        [NativeTypeName("#define PEER_E_DATABASE_ACCESSDENIED _HRESULT_TYPEDEF_(0x80630302L)")]
        public const int PEER_E_DATABASE_ACCESSDENIED = unchecked((int)(0x80630302));

        [NativeTypeName("#define PEER_E_DBINITIALIZATION_FAILED _HRESULT_TYPEDEF_(0x80630303L)")]
        public const int PEER_E_DBINITIALIZATION_FAILED = unchecked((int)(0x80630303));

        [NativeTypeName("#define PEER_E_MAX_RECORD_SIZE_EXCEEDED _HRESULT_TYPEDEF_(0x80630304L)")]
        public const int PEER_E_MAX_RECORD_SIZE_EXCEEDED = unchecked((int)(0x80630304));

        [NativeTypeName("#define PEER_E_DATABASE_ALREADY_PRESENT _HRESULT_TYPEDEF_(0x80630305L)")]
        public const int PEER_E_DATABASE_ALREADY_PRESENT = unchecked((int)(0x80630305));

        [NativeTypeName("#define PEER_E_DATABASE_NOT_PRESENT _HRESULT_TYPEDEF_(0x80630306L)")]
        public const int PEER_E_DATABASE_NOT_PRESENT = unchecked((int)(0x80630306));

        [NativeTypeName("#define PEER_E_IDENTITY_NOT_FOUND _HRESULT_TYPEDEF_(0x80630401L)")]
        public const int PEER_E_IDENTITY_NOT_FOUND = unchecked((int)(0x80630401));

        [NativeTypeName("#define PEER_E_EVENT_HANDLE_NOT_FOUND _HRESULT_TYPEDEF_(0x80630501L)")]
        public const int PEER_E_EVENT_HANDLE_NOT_FOUND = unchecked((int)(0x80630501));

        [NativeTypeName("#define PEER_E_INVALID_SEARCH _HRESULT_TYPEDEF_(0x80630601L)")]
        public const int PEER_E_INVALID_SEARCH = unchecked((int)(0x80630601));

        [NativeTypeName("#define PEER_E_INVALID_ATTRIBUTES _HRESULT_TYPEDEF_(0x80630602L)")]
        public const int PEER_E_INVALID_ATTRIBUTES = unchecked((int)(0x80630602));

        [NativeTypeName("#define PEER_E_INVITATION_NOT_TRUSTED _HRESULT_TYPEDEF_(0x80630701L)")]
        public const int PEER_E_INVITATION_NOT_TRUSTED = unchecked((int)(0x80630701));

        [NativeTypeName("#define PEER_E_CHAIN_TOO_LONG _HRESULT_TYPEDEF_(0x80630703L)")]
        public const int PEER_E_CHAIN_TOO_LONG = unchecked((int)(0x80630703));

        [NativeTypeName("#define PEER_E_INVALID_TIME_PERIOD _HRESULT_TYPEDEF_(0x80630705L)")]
        public const int PEER_E_INVALID_TIME_PERIOD = unchecked((int)(0x80630705));

        [NativeTypeName("#define PEER_E_CIRCULAR_CHAIN_DETECTED _HRESULT_TYPEDEF_(0x80630706L)")]
        public const int PEER_E_CIRCULAR_CHAIN_DETECTED = unchecked((int)(0x80630706));

        [NativeTypeName("#define PEER_E_CERT_STORE_CORRUPTED _HRESULT_TYPEDEF_(0x80630801L)")]
        public const int PEER_E_CERT_STORE_CORRUPTED = unchecked((int)(0x80630801));

        [NativeTypeName("#define PEER_E_NO_CLOUD _HRESULT_TYPEDEF_(0x80631001L)")]
        public const int PEER_E_NO_CLOUD = unchecked((int)(0x80631001));

        [NativeTypeName("#define PEER_E_CLOUD_NAME_AMBIGUOUS _HRESULT_TYPEDEF_(0x80631005L)")]
        public const int PEER_E_CLOUD_NAME_AMBIGUOUS = unchecked((int)(0x80631005));

        [NativeTypeName("#define PEER_E_INVALID_RECORD _HRESULT_TYPEDEF_(0x80632010L)")]
        public const int PEER_E_INVALID_RECORD = unchecked((int)(0x80632010));

        [NativeTypeName("#define PEER_E_NOT_AUTHORIZED _HRESULT_TYPEDEF_(0x80632020L)")]
        public const int PEER_E_NOT_AUTHORIZED = unchecked((int)(0x80632020));

        [NativeTypeName("#define PEER_E_PASSWORD_DOES_NOT_MEET_POLICY _HRESULT_TYPEDEF_(0x80632021L)")]
        public const int PEER_E_PASSWORD_DOES_NOT_MEET_POLICY = unchecked((int)(0x80632021));

        [NativeTypeName("#define PEER_E_DEFERRED_VALIDATION _HRESULT_TYPEDEF_(0x80632030L)")]
        public const int PEER_E_DEFERRED_VALIDATION = unchecked((int)(0x80632030));

        [NativeTypeName("#define PEER_E_INVALID_GROUP_PROPERTIES _HRESULT_TYPEDEF_(0x80632040L)")]
        public const int PEER_E_INVALID_GROUP_PROPERTIES = unchecked((int)(0x80632040));

        [NativeTypeName("#define PEER_E_INVALID_PEER_NAME _HRESULT_TYPEDEF_(0x80632050L)")]
        public const int PEER_E_INVALID_PEER_NAME = unchecked((int)(0x80632050));

        [NativeTypeName("#define PEER_E_INVALID_CLASSIFIER _HRESULT_TYPEDEF_(0x80632060L)")]
        public const int PEER_E_INVALID_CLASSIFIER = unchecked((int)(0x80632060));

        [NativeTypeName("#define PEER_E_INVALID_FRIENDLY_NAME _HRESULT_TYPEDEF_(0x80632070L)")]
        public const int PEER_E_INVALID_FRIENDLY_NAME = unchecked((int)(0x80632070));

        [NativeTypeName("#define PEER_E_INVALID_ROLE_PROPERTY _HRESULT_TYPEDEF_(0x80632071L)")]
        public const int PEER_E_INVALID_ROLE_PROPERTY = unchecked((int)(0x80632071));

        [NativeTypeName("#define PEER_E_INVALID_CLASSIFIER_PROPERTY _HRESULT_TYPEDEF_(0x80632072L)")]
        public const int PEER_E_INVALID_CLASSIFIER_PROPERTY = unchecked((int)(0x80632072));

        [NativeTypeName("#define PEER_E_INVALID_RECORD_EXPIRATION _HRESULT_TYPEDEF_(0x80632080L)")]
        public const int PEER_E_INVALID_RECORD_EXPIRATION = unchecked((int)(0x80632080));

        [NativeTypeName("#define PEER_E_INVALID_CREDENTIAL_INFO _HRESULT_TYPEDEF_(0x80632081L)")]
        public const int PEER_E_INVALID_CREDENTIAL_INFO = unchecked((int)(0x80632081));

        [NativeTypeName("#define PEER_E_INVALID_CREDENTIAL _HRESULT_TYPEDEF_(0x80632082L)")]
        public const int PEER_E_INVALID_CREDENTIAL = unchecked((int)(0x80632082));

        [NativeTypeName("#define PEER_E_INVALID_RECORD_SIZE _HRESULT_TYPEDEF_(0x80632083L)")]
        public const int PEER_E_INVALID_RECORD_SIZE = unchecked((int)(0x80632083));

        [NativeTypeName("#define PEER_E_UNSUPPORTED_VERSION _HRESULT_TYPEDEF_(0x80632090L)")]
        public const int PEER_E_UNSUPPORTED_VERSION = unchecked((int)(0x80632090));

        [NativeTypeName("#define PEER_E_GROUP_NOT_READY _HRESULT_TYPEDEF_(0x80632091L)")]
        public const int PEER_E_GROUP_NOT_READY = unchecked((int)(0x80632091));

        [NativeTypeName("#define PEER_E_GROUP_IN_USE _HRESULT_TYPEDEF_(0x80632092L)")]
        public const int PEER_E_GROUP_IN_USE = unchecked((int)(0x80632092));

        [NativeTypeName("#define PEER_E_INVALID_GROUP _HRESULT_TYPEDEF_(0x80632093L)")]
        public const int PEER_E_INVALID_GROUP = unchecked((int)(0x80632093));

        [NativeTypeName("#define PEER_E_NO_MEMBERS_FOUND _HRESULT_TYPEDEF_(0x80632094L)")]
        public const int PEER_E_NO_MEMBERS_FOUND = unchecked((int)(0x80632094));

        [NativeTypeName("#define PEER_E_NO_MEMBER_CONNECTIONS _HRESULT_TYPEDEF_(0x80632095L)")]
        public const int PEER_E_NO_MEMBER_CONNECTIONS = unchecked((int)(0x80632095));

        [NativeTypeName("#define PEER_E_UNABLE_TO_LISTEN _HRESULT_TYPEDEF_(0x80632096L)")]
        public const int PEER_E_UNABLE_TO_LISTEN = unchecked((int)(0x80632096));

        [NativeTypeName("#define PEER_E_IDENTITY_DELETED _HRESULT_TYPEDEF_(0x806320A0L)")]
        public const int PEER_E_IDENTITY_DELETED = unchecked((int)(0x806320A0));

        [NativeTypeName("#define PEER_E_SERVICE_NOT_AVAILABLE _HRESULT_TYPEDEF_(0x806320A1L)")]
        public const int PEER_E_SERVICE_NOT_AVAILABLE = unchecked((int)(0x806320A1));

        [NativeTypeName("#define PEER_E_CONTACT_NOT_FOUND _HRESULT_TYPEDEF_(0x80636001L)")]
        public const int PEER_E_CONTACT_NOT_FOUND = unchecked((int)(0x80636001));

        [NativeTypeName("#define PEER_S_GRAPH_DATA_CREATED _HRESULT_TYPEDEF_(0x00630001L)")]
        public const int PEER_S_GRAPH_DATA_CREATED = ((int)(0x00630001));

        [NativeTypeName("#define PEER_S_NO_EVENT_DATA _HRESULT_TYPEDEF_(0x00630002L)")]
        public const int PEER_S_NO_EVENT_DATA = ((int)(0x00630002));

        [NativeTypeName("#define PEER_S_ALREADY_CONNECTED _HRESULT_TYPEDEF_(0x00632000L)")]
        public const int PEER_S_ALREADY_CONNECTED = ((int)(0x00632000));

        [NativeTypeName("#define PEER_S_SUBSCRIPTION_EXISTS _HRESULT_TYPEDEF_(0x00636000L)")]
        public const int PEER_S_SUBSCRIPTION_EXISTS = ((int)(0x00636000));

        [NativeTypeName("#define PEER_S_NO_CONNECTIVITY _HRESULT_TYPEDEF_(0x00630005L)")]
        public const int PEER_S_NO_CONNECTIVITY = ((int)(0x00630005));

        [NativeTypeName("#define PEER_S_ALREADY_A_MEMBER _HRESULT_TYPEDEF_(0x00630006L)")]
        public const int PEER_S_ALREADY_A_MEMBER = ((int)(0x00630006));

        [NativeTypeName("#define PEER_E_CANNOT_CONVERT_PEER_NAME _HRESULT_TYPEDEF_(0x80634001L)")]
        public const int PEER_E_CANNOT_CONVERT_PEER_NAME = unchecked((int)(0x80634001));

        [NativeTypeName("#define PEER_E_INVALID_PEER_HOST_NAME _HRESULT_TYPEDEF_(0x80634002L)")]
        public const int PEER_E_INVALID_PEER_HOST_NAME = unchecked((int)(0x80634002));

        [NativeTypeName("#define PEER_E_NO_MORE _HRESULT_TYPEDEF_(0x80634003L)")]
        public const int PEER_E_NO_MORE = unchecked((int)(0x80634003));

        [NativeTypeName("#define PEER_E_PNRP_DUPLICATE_PEER_NAME _HRESULT_TYPEDEF_(0x80634005L)")]
        public const int PEER_E_PNRP_DUPLICATE_PEER_NAME = unchecked((int)(0x80634005));

        [NativeTypeName("#define PEER_E_INVITE_CANCELLED _HRESULT_TYPEDEF_(0x80637000L)")]
        public const int PEER_E_INVITE_CANCELLED = unchecked((int)(0x80637000));

        [NativeTypeName("#define PEER_E_INVITE_RESPONSE_NOT_AVAILABLE _HRESULT_TYPEDEF_(0x80637001L)")]
        public const int PEER_E_INVITE_RESPONSE_NOT_AVAILABLE = unchecked((int)(0x80637001));

        [NativeTypeName("#define PEER_E_NOT_SIGNED_IN _HRESULT_TYPEDEF_(0x80637003L)")]
        public const int PEER_E_NOT_SIGNED_IN = unchecked((int)(0x80637003));

        [NativeTypeName("#define PEER_E_PRIVACY_DECLINED _HRESULT_TYPEDEF_(0x80637004L)")]
        public const int PEER_E_PRIVACY_DECLINED = unchecked((int)(0x80637004));

        [NativeTypeName("#define PEER_E_TIMEOUT _HRESULT_TYPEDEF_(0x80637005L)")]
        public const int PEER_E_TIMEOUT = unchecked((int)(0x80637005));

        [NativeTypeName("#define PEER_E_INVALID_ADDRESS _HRESULT_TYPEDEF_(0x80637007L)")]
        public const int PEER_E_INVALID_ADDRESS = unchecked((int)(0x80637007));

        [NativeTypeName("#define PEER_E_FW_EXCEPTION_DISABLED _HRESULT_TYPEDEF_(0x80637008L)")]
        public const int PEER_E_FW_EXCEPTION_DISABLED = unchecked((int)(0x80637008));

        [NativeTypeName("#define PEER_E_FW_BLOCKED_BY_POLICY _HRESULT_TYPEDEF_(0x80637009L)")]
        public const int PEER_E_FW_BLOCKED_BY_POLICY = unchecked((int)(0x80637009));

        [NativeTypeName("#define PEER_E_FW_BLOCKED_BY_SHIELDS_UP _HRESULT_TYPEDEF_(0x8063700AL)")]
        public const int PEER_E_FW_BLOCKED_BY_SHIELDS_UP = unchecked((int)(0x8063700A));

        [NativeTypeName("#define PEER_E_FW_DECLINED _HRESULT_TYPEDEF_(0x8063700BL)")]
        public const int PEER_E_FW_DECLINED = unchecked((int)(0x8063700B));

        [NativeTypeName("#define UI_E_CREATE_FAILED _HRESULT_TYPEDEF_(0x802A0001L)")]
        public const int UI_E_CREATE_FAILED = unchecked((int)(0x802A0001));

        [NativeTypeName("#define UI_E_SHUTDOWN_CALLED _HRESULT_TYPEDEF_(0x802A0002L)")]
        public const int UI_E_SHUTDOWN_CALLED = unchecked((int)(0x802A0002));

        [NativeTypeName("#define UI_E_ILLEGAL_REENTRANCY _HRESULT_TYPEDEF_(0x802A0003L)")]
        public const int UI_E_ILLEGAL_REENTRANCY = unchecked((int)(0x802A0003));

        [NativeTypeName("#define UI_E_OBJECT_SEALED _HRESULT_TYPEDEF_(0x802A0004L)")]
        public const int UI_E_OBJECT_SEALED = unchecked((int)(0x802A0004));

        [NativeTypeName("#define UI_E_VALUE_NOT_SET _HRESULT_TYPEDEF_(0x802A0005L)")]
        public const int UI_E_VALUE_NOT_SET = unchecked((int)(0x802A0005));

        [NativeTypeName("#define UI_E_VALUE_NOT_DETERMINED _HRESULT_TYPEDEF_(0x802A0006L)")]
        public const int UI_E_VALUE_NOT_DETERMINED = unchecked((int)(0x802A0006));

        [NativeTypeName("#define UI_E_INVALID_OUTPUT _HRESULT_TYPEDEF_(0x802A0007L)")]
        public const int UI_E_INVALID_OUTPUT = unchecked((int)(0x802A0007));

        [NativeTypeName("#define UI_E_BOOLEAN_EXPECTED _HRESULT_TYPEDEF_(0x802A0008L)")]
        public const int UI_E_BOOLEAN_EXPECTED = unchecked((int)(0x802A0008));

        [NativeTypeName("#define UI_E_DIFFERENT_OWNER _HRESULT_TYPEDEF_(0x802A0009L)")]
        public const int UI_E_DIFFERENT_OWNER = unchecked((int)(0x802A0009));

        [NativeTypeName("#define UI_E_AMBIGUOUS_MATCH _HRESULT_TYPEDEF_(0x802A000AL)")]
        public const int UI_E_AMBIGUOUS_MATCH = unchecked((int)(0x802A000A));

        [NativeTypeName("#define UI_E_FP_OVERFLOW _HRESULT_TYPEDEF_(0x802A000BL)")]
        public const int UI_E_FP_OVERFLOW = unchecked((int)(0x802A000B));

        [NativeTypeName("#define UI_E_WRONG_THREAD _HRESULT_TYPEDEF_(0x802A000CL)")]
        public const int UI_E_WRONG_THREAD = unchecked((int)(0x802A000C));

        [NativeTypeName("#define UI_E_STORYBOARD_ACTIVE _HRESULT_TYPEDEF_(0x802A0101L)")]
        public const int UI_E_STORYBOARD_ACTIVE = unchecked((int)(0x802A0101));

        [NativeTypeName("#define UI_E_STORYBOARD_NOT_PLAYING _HRESULT_TYPEDEF_(0x802A0102L)")]
        public const int UI_E_STORYBOARD_NOT_PLAYING = unchecked((int)(0x802A0102));

        [NativeTypeName("#define UI_E_START_KEYFRAME_AFTER_END _HRESULT_TYPEDEF_(0x802A0103L)")]
        public const int UI_E_START_KEYFRAME_AFTER_END = unchecked((int)(0x802A0103));

        [NativeTypeName("#define UI_E_END_KEYFRAME_NOT_DETERMINED _HRESULT_TYPEDEF_(0x802A0104L)")]
        public const int UI_E_END_KEYFRAME_NOT_DETERMINED = unchecked((int)(0x802A0104));

        [NativeTypeName("#define UI_E_LOOPS_OVERLAP _HRESULT_TYPEDEF_(0x802A0105L)")]
        public const int UI_E_LOOPS_OVERLAP = unchecked((int)(0x802A0105));

        [NativeTypeName("#define UI_E_TRANSITION_ALREADY_USED _HRESULT_TYPEDEF_(0x802A0106L)")]
        public const int UI_E_TRANSITION_ALREADY_USED = unchecked((int)(0x802A0106));

        [NativeTypeName("#define UI_E_TRANSITION_NOT_IN_STORYBOARD _HRESULT_TYPEDEF_(0x802A0107L)")]
        public const int UI_E_TRANSITION_NOT_IN_STORYBOARD = unchecked((int)(0x802A0107));

        [NativeTypeName("#define UI_E_TRANSITION_ECLIPSED _HRESULT_TYPEDEF_(0x802A0108L)")]
        public const int UI_E_TRANSITION_ECLIPSED = unchecked((int)(0x802A0108));

        [NativeTypeName("#define UI_E_TIME_BEFORE_LAST_UPDATE _HRESULT_TYPEDEF_(0x802A0109L)")]
        public const int UI_E_TIME_BEFORE_LAST_UPDATE = unchecked((int)(0x802A0109));

        [NativeTypeName("#define UI_E_TIMER_CLIENT_ALREADY_CONNECTED _HRESULT_TYPEDEF_(0x802A010AL)")]
        public const int UI_E_TIMER_CLIENT_ALREADY_CONNECTED = unchecked((int)(0x802A010A));

        [NativeTypeName("#define UI_E_INVALID_DIMENSION _HRESULT_TYPEDEF_(0x802A010BL)")]
        public const int UI_E_INVALID_DIMENSION = unchecked((int)(0x802A010B));

        [NativeTypeName("#define UI_E_PRIMITIVE_OUT_OF_BOUNDS _HRESULT_TYPEDEF_(0x802A010CL)")]
        public const int UI_E_PRIMITIVE_OUT_OF_BOUNDS = unchecked((int)(0x802A010C));

        [NativeTypeName("#define UI_E_WINDOW_CLOSED _HRESULT_TYPEDEF_(0x802A0201L)")]
        public const int UI_E_WINDOW_CLOSED = unchecked((int)(0x802A0201));

        [NativeTypeName("#define E_BLUETOOTH_ATT_INVALID_HANDLE _HRESULT_TYPEDEF_(0x80650001L)")]
        public const int E_BLUETOOTH_ATT_INVALID_HANDLE = unchecked((int)(0x80650001));

        [NativeTypeName("#define E_BLUETOOTH_ATT_READ_NOT_PERMITTED _HRESULT_TYPEDEF_(0x80650002L)")]
        public const int E_BLUETOOTH_ATT_READ_NOT_PERMITTED = unchecked((int)(0x80650002));

        [NativeTypeName("#define E_BLUETOOTH_ATT_WRITE_NOT_PERMITTED _HRESULT_TYPEDEF_(0x80650003L)")]
        public const int E_BLUETOOTH_ATT_WRITE_NOT_PERMITTED = unchecked((int)(0x80650003));

        [NativeTypeName("#define E_BLUETOOTH_ATT_INVALID_PDU _HRESULT_TYPEDEF_(0x80650004L)")]
        public const int E_BLUETOOTH_ATT_INVALID_PDU = unchecked((int)(0x80650004));

        [NativeTypeName("#define E_BLUETOOTH_ATT_INSUFFICIENT_AUTHENTICATION _HRESULT_TYPEDEF_(0x80650005L)")]
        public const int E_BLUETOOTH_ATT_INSUFFICIENT_AUTHENTICATION = unchecked((int)(0x80650005));

        [NativeTypeName("#define E_BLUETOOTH_ATT_REQUEST_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80650006L)")]
        public const int E_BLUETOOTH_ATT_REQUEST_NOT_SUPPORTED = unchecked((int)(0x80650006));

        [NativeTypeName("#define E_BLUETOOTH_ATT_INVALID_OFFSET _HRESULT_TYPEDEF_(0x80650007L)")]
        public const int E_BLUETOOTH_ATT_INVALID_OFFSET = unchecked((int)(0x80650007));

        [NativeTypeName("#define E_BLUETOOTH_ATT_INSUFFICIENT_AUTHORIZATION _HRESULT_TYPEDEF_(0x80650008L)")]
        public const int E_BLUETOOTH_ATT_INSUFFICIENT_AUTHORIZATION = unchecked((int)(0x80650008));

        [NativeTypeName("#define E_BLUETOOTH_ATT_PREPARE_QUEUE_FULL _HRESULT_TYPEDEF_(0x80650009L)")]
        public const int E_BLUETOOTH_ATT_PREPARE_QUEUE_FULL = unchecked((int)(0x80650009));

        [NativeTypeName("#define E_BLUETOOTH_ATT_ATTRIBUTE_NOT_FOUND _HRESULT_TYPEDEF_(0x8065000AL)")]
        public const int E_BLUETOOTH_ATT_ATTRIBUTE_NOT_FOUND = unchecked((int)(0x8065000A));

        [NativeTypeName("#define E_BLUETOOTH_ATT_ATTRIBUTE_NOT_LONG _HRESULT_TYPEDEF_(0x8065000BL)")]
        public const int E_BLUETOOTH_ATT_ATTRIBUTE_NOT_LONG = unchecked((int)(0x8065000B));

        [NativeTypeName("#define E_BLUETOOTH_ATT_INSUFFICIENT_ENCRYPTION_KEY_SIZE _HRESULT_TYPEDEF_(0x8065000CL)")]
        public const int E_BLUETOOTH_ATT_INSUFFICIENT_ENCRYPTION_KEY_SIZE = unchecked((int)(0x8065000C));

        [NativeTypeName("#define E_BLUETOOTH_ATT_INVALID_ATTRIBUTE_VALUE_LENGTH _HRESULT_TYPEDEF_(0x8065000DL)")]
        public const int E_BLUETOOTH_ATT_INVALID_ATTRIBUTE_VALUE_LENGTH = unchecked((int)(0x8065000D));

        [NativeTypeName("#define E_BLUETOOTH_ATT_UNLIKELY _HRESULT_TYPEDEF_(0x8065000EL)")]
        public const int E_BLUETOOTH_ATT_UNLIKELY = unchecked((int)(0x8065000E));

        [NativeTypeName("#define E_BLUETOOTH_ATT_INSUFFICIENT_ENCRYPTION _HRESULT_TYPEDEF_(0x8065000FL)")]
        public const int E_BLUETOOTH_ATT_INSUFFICIENT_ENCRYPTION = unchecked((int)(0x8065000F));

        [NativeTypeName("#define E_BLUETOOTH_ATT_UNSUPPORTED_GROUP_TYPE _HRESULT_TYPEDEF_(0x80650010L)")]
        public const int E_BLUETOOTH_ATT_UNSUPPORTED_GROUP_TYPE = unchecked((int)(0x80650010));

        [NativeTypeName("#define E_BLUETOOTH_ATT_INSUFFICIENT_RESOURCES _HRESULT_TYPEDEF_(0x80650011L)")]
        public const int E_BLUETOOTH_ATT_INSUFFICIENT_RESOURCES = unchecked((int)(0x80650011));

        [NativeTypeName("#define E_BLUETOOTH_ATT_UNKNOWN_ERROR _HRESULT_TYPEDEF_(0x80651000L)")]
        public const int E_BLUETOOTH_ATT_UNKNOWN_ERROR = unchecked((int)(0x80651000));

        [NativeTypeName("#define E_AUDIO_ENGINE_NODE_NOT_FOUND _HRESULT_TYPEDEF_(0x80660001L)")]
        public const int E_AUDIO_ENGINE_NODE_NOT_FOUND = unchecked((int)(0x80660001));

        [NativeTypeName("#define E_HDAUDIO_EMPTY_CONNECTION_LIST _HRESULT_TYPEDEF_(0x80660002L)")]
        public const int E_HDAUDIO_EMPTY_CONNECTION_LIST = unchecked((int)(0x80660002));

        [NativeTypeName("#define E_HDAUDIO_CONNECTION_LIST_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80660003L)")]
        public const int E_HDAUDIO_CONNECTION_LIST_NOT_SUPPORTED = unchecked((int)(0x80660003));

        [NativeTypeName("#define E_HDAUDIO_NO_LOGICAL_DEVICES_CREATED _HRESULT_TYPEDEF_(0x80660004L)")]
        public const int E_HDAUDIO_NO_LOGICAL_DEVICES_CREATED = unchecked((int)(0x80660004));

        [NativeTypeName("#define E_HDAUDIO_NULL_LINKED_LIST_ENTRY _HRESULT_TYPEDEF_(0x80660005L)")]
        public const int E_HDAUDIO_NULL_LINKED_LIST_ENTRY = unchecked((int)(0x80660005));

        [NativeTypeName("#define STATEREPOSITORY_E_CONCURRENCY_LOCKING_FAILURE _HRESULT_TYPEDEF_(0x80670001L)")]
        public const int STATEREPOSITORY_E_CONCURRENCY_LOCKING_FAILURE = unchecked((int)(0x80670001));

        [NativeTypeName("#define STATEREPOSITORY_E_STATEMENT_INPROGRESS _HRESULT_TYPEDEF_(0x80670002L)")]
        public const int STATEREPOSITORY_E_STATEMENT_INPROGRESS = unchecked((int)(0x80670002));

        [NativeTypeName("#define STATEREPOSITORY_E_CONFIGURATION_INVALID _HRESULT_TYPEDEF_(0x80670003L)")]
        public const int STATEREPOSITORY_E_CONFIGURATION_INVALID = unchecked((int)(0x80670003));

        [NativeTypeName("#define STATEREPOSITORY_E_UNKNOWN_SCHEMA_VERSION _HRESULT_TYPEDEF_(0x80670004L)")]
        public const int STATEREPOSITORY_E_UNKNOWN_SCHEMA_VERSION = unchecked((int)(0x80670004));

        [NativeTypeName("#define STATEREPOSITORY_ERROR_DICTIONARY_CORRUPTED _HRESULT_TYPEDEF_(0x80670005L)")]
        public const int STATEREPOSITORY_ERROR_DICTIONARY_CORRUPTED = unchecked((int)(0x80670005));

        [NativeTypeName("#define STATEREPOSITORY_E_BLOCKED _HRESULT_TYPEDEF_(0x80670006L)")]
        public const int STATEREPOSITORY_E_BLOCKED = unchecked((int)(0x80670006));

        [NativeTypeName("#define STATEREPOSITORY_E_BUSY_RETRY _HRESULT_TYPEDEF_(0x80670007L)")]
        public const int STATEREPOSITORY_E_BUSY_RETRY = unchecked((int)(0x80670007));

        [NativeTypeName("#define STATEREPOSITORY_E_BUSY_RECOVERY_RETRY _HRESULT_TYPEDEF_(0x80670008L)")]
        public const int STATEREPOSITORY_E_BUSY_RECOVERY_RETRY = unchecked((int)(0x80670008));

        [NativeTypeName("#define STATEREPOSITORY_E_LOCKED_RETRY _HRESULT_TYPEDEF_(0x80670009L)")]
        public const int STATEREPOSITORY_E_LOCKED_RETRY = unchecked((int)(0x80670009));

        [NativeTypeName("#define STATEREPOSITORY_E_LOCKED_SHAREDCACHE_RETRY _HRESULT_TYPEDEF_(0x8067000AL)")]
        public const int STATEREPOSITORY_E_LOCKED_SHAREDCACHE_RETRY = unchecked((int)(0x8067000A));

        [NativeTypeName("#define STATEREPOSITORY_E_TRANSACTION_REQUIRED _HRESULT_TYPEDEF_(0x8067000BL)")]
        public const int STATEREPOSITORY_E_TRANSACTION_REQUIRED = unchecked((int)(0x8067000B));

        [NativeTypeName("#define STATEREPOSITORY_E_BUSY_TIMEOUT_EXCEEDED _HRESULT_TYPEDEF_(0x8067000CL)")]
        public const int STATEREPOSITORY_E_BUSY_TIMEOUT_EXCEEDED = unchecked((int)(0x8067000C));

        [NativeTypeName("#define STATEREPOSITORY_E_BUSY_RECOVERY_TIMEOUT_EXCEEDED _HRESULT_TYPEDEF_(0x8067000DL)")]
        public const int STATEREPOSITORY_E_BUSY_RECOVERY_TIMEOUT_EXCEEDED = unchecked((int)(0x8067000D));

        [NativeTypeName("#define STATEREPOSITORY_E_LOCKED_TIMEOUT_EXCEEDED _HRESULT_TYPEDEF_(0x8067000EL)")]
        public const int STATEREPOSITORY_E_LOCKED_TIMEOUT_EXCEEDED = unchecked((int)(0x8067000E));

        [NativeTypeName("#define STATEREPOSITORY_E_LOCKED_SHAREDCACHE_TIMEOUT_EXCEEDED _HRESULT_TYPEDEF_(0x8067000FL)")]
        public const int STATEREPOSITORY_E_LOCKED_SHAREDCACHE_TIMEOUT_EXCEEDED = unchecked((int)(0x8067000F));

        [NativeTypeName("#define STATEREPOSITORY_E_SERVICE_STOP_IN_PROGRESS _HRESULT_TYPEDEF_(0x80670010L)")]
        public const int STATEREPOSITORY_E_SERVICE_STOP_IN_PROGRESS = unchecked((int)(0x80670010));

        [NativeTypeName("#define STATEREPOSTORY_E_NESTED_TRANSACTION_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80670011L)")]
        public const int STATEREPOSTORY_E_NESTED_TRANSACTION_NOT_SUPPORTED = unchecked((int)(0x80670011));

        [NativeTypeName("#define STATEREPOSITORY_ERROR_CACHE_CORRUPTED _HRESULT_TYPEDEF_(0x80670012L)")]
        public const int STATEREPOSITORY_ERROR_CACHE_CORRUPTED = unchecked((int)(0x80670012));

        [NativeTypeName("#define STATEREPOSITORY_TRANSACTION_CALLER_ID_CHANGED _HRESULT_TYPEDEF_(0x00670013L)")]
        public const int STATEREPOSITORY_TRANSACTION_CALLER_ID_CHANGED = ((int)(0x00670013));

        [NativeTypeName("#define STATEREPOSITORY_TRANSACTION_IN_PROGRESS _HRESULT_TYPEDEF_(0x00670014L)")]
        public const int STATEREPOSITORY_TRANSACTION_IN_PROGRESS = ((int)(0x00670014));

        [NativeTypeName("#define ERROR_SPACES_POOL_WAS_DELETED _HRESULT_TYPEDEF_(0x00E70001L)")]
        public const int ERROR_SPACES_POOL_WAS_DELETED = ((int)(0x00E70001));

        [NativeTypeName("#define ERROR_SPACES_FAULT_DOMAIN_TYPE_INVALID _HRESULT_TYPEDEF_(0x80E70001L)")]
        public const int ERROR_SPACES_FAULT_DOMAIN_TYPE_INVALID = unchecked((int)(0x80E70001));

        [NativeTypeName("#define ERROR_SPACES_INTERNAL_ERROR _HRESULT_TYPEDEF_(0x80E70002L)")]
        public const int ERROR_SPACES_INTERNAL_ERROR = unchecked((int)(0x80E70002));

        [NativeTypeName("#define ERROR_SPACES_RESILIENCY_TYPE_INVALID _HRESULT_TYPEDEF_(0x80E70003L)")]
        public const int ERROR_SPACES_RESILIENCY_TYPE_INVALID = unchecked((int)(0x80E70003));

        [NativeTypeName("#define ERROR_SPACES_DRIVE_SECTOR_SIZE_INVALID _HRESULT_TYPEDEF_(0x80E70004L)")]
        public const int ERROR_SPACES_DRIVE_SECTOR_SIZE_INVALID = unchecked((int)(0x80E70004));

        [NativeTypeName("#define ERROR_SPACES_DRIVE_REDUNDANCY_INVALID _HRESULT_TYPEDEF_(0x80E70006L)")]
        public const int ERROR_SPACES_DRIVE_REDUNDANCY_INVALID = unchecked((int)(0x80E70006));

        [NativeTypeName("#define ERROR_SPACES_NUMBER_OF_DATA_COPIES_INVALID _HRESULT_TYPEDEF_(0x80E70007L)")]
        public const int ERROR_SPACES_NUMBER_OF_DATA_COPIES_INVALID = unchecked((int)(0x80E70007));

        [NativeTypeName("#define ERROR_SPACES_PARITY_LAYOUT_INVALID _HRESULT_TYPEDEF_(0x80E70008L)")]
        public const int ERROR_SPACES_PARITY_LAYOUT_INVALID = unchecked((int)(0x80E70008));

        [NativeTypeName("#define ERROR_SPACES_INTERLEAVE_LENGTH_INVALID _HRESULT_TYPEDEF_(0x80E70009L)")]
        public const int ERROR_SPACES_INTERLEAVE_LENGTH_INVALID = unchecked((int)(0x80E70009));

        [NativeTypeName("#define ERROR_SPACES_NUMBER_OF_COLUMNS_INVALID _HRESULT_TYPEDEF_(0x80E7000AL)")]
        public const int ERROR_SPACES_NUMBER_OF_COLUMNS_INVALID = unchecked((int)(0x80E7000A));

        [NativeTypeName("#define ERROR_SPACES_NOT_ENOUGH_DRIVES _HRESULT_TYPEDEF_(0x80E7000BL)")]
        public const int ERROR_SPACES_NOT_ENOUGH_DRIVES = unchecked((int)(0x80E7000B));

        [NativeTypeName("#define ERROR_SPACES_EXTENDED_ERROR _HRESULT_TYPEDEF_(0x80E7000CL)")]
        public const int ERROR_SPACES_EXTENDED_ERROR = unchecked((int)(0x80E7000C));

        [NativeTypeName("#define ERROR_SPACES_PROVISIONING_TYPE_INVALID _HRESULT_TYPEDEF_(0x80E7000DL)")]
        public const int ERROR_SPACES_PROVISIONING_TYPE_INVALID = unchecked((int)(0x80E7000D));

        [NativeTypeName("#define ERROR_SPACES_ALLOCATION_SIZE_INVALID _HRESULT_TYPEDEF_(0x80E7000EL)")]
        public const int ERROR_SPACES_ALLOCATION_SIZE_INVALID = unchecked((int)(0x80E7000E));

        [NativeTypeName("#define ERROR_SPACES_ENCLOSURE_AWARE_INVALID _HRESULT_TYPEDEF_(0x80E7000FL)")]
        public const int ERROR_SPACES_ENCLOSURE_AWARE_INVALID = unchecked((int)(0x80E7000F));

        [NativeTypeName("#define ERROR_SPACES_WRITE_CACHE_SIZE_INVALID _HRESULT_TYPEDEF_(0x80E70010L)")]
        public const int ERROR_SPACES_WRITE_CACHE_SIZE_INVALID = unchecked((int)(0x80E70010));

        [NativeTypeName("#define ERROR_SPACES_NUMBER_OF_GROUPS_INVALID _HRESULT_TYPEDEF_(0x80E70011L)")]
        public const int ERROR_SPACES_NUMBER_OF_GROUPS_INVALID = unchecked((int)(0x80E70011));

        [NativeTypeName("#define ERROR_SPACES_DRIVE_OPERATIONAL_STATE_INVALID _HRESULT_TYPEDEF_(0x80E70012L)")]
        public const int ERROR_SPACES_DRIVE_OPERATIONAL_STATE_INVALID = unchecked((int)(0x80E70012));

        [NativeTypeName("#define ERROR_SPACES_ENTRY_INCOMPLETE _HRESULT_TYPEDEF_(0x80E70013L)")]
        public const int ERROR_SPACES_ENTRY_INCOMPLETE = unchecked((int)(0x80E70013));

        [NativeTypeName("#define ERROR_SPACES_ENTRY_INVALID _HRESULT_TYPEDEF_(0x80E70014L)")]
        public const int ERROR_SPACES_ENTRY_INVALID = unchecked((int)(0x80E70014));

        [NativeTypeName("#define ERROR_VOLSNAP_BOOTFILE_NOT_VALID _HRESULT_TYPEDEF_(0x80820001L)")]
        public const int ERROR_VOLSNAP_BOOTFILE_NOT_VALID = unchecked((int)(0x80820001));

        [NativeTypeName("#define ERROR_VOLSNAP_ACTIVATION_TIMEOUT _HRESULT_TYPEDEF_(0x80820002L)")]
        public const int ERROR_VOLSNAP_ACTIVATION_TIMEOUT = unchecked((int)(0x80820002));

        [NativeTypeName("#define ERROR_TIERING_NOT_SUPPORTED_ON_VOLUME _HRESULT_TYPEDEF_(0x80830001L)")]
        public const int ERROR_TIERING_NOT_SUPPORTED_ON_VOLUME = unchecked((int)(0x80830001));

        [NativeTypeName("#define ERROR_TIERING_VOLUME_DISMOUNT_IN_PROGRESS _HRESULT_TYPEDEF_(0x80830002L)")]
        public const int ERROR_TIERING_VOLUME_DISMOUNT_IN_PROGRESS = unchecked((int)(0x80830002));

        [NativeTypeName("#define ERROR_TIERING_STORAGE_TIER_NOT_FOUND _HRESULT_TYPEDEF_(0x80830003L)")]
        public const int ERROR_TIERING_STORAGE_TIER_NOT_FOUND = unchecked((int)(0x80830003));

        [NativeTypeName("#define ERROR_TIERING_INVALID_FILE_ID _HRESULT_TYPEDEF_(0x80830004L)")]
        public const int ERROR_TIERING_INVALID_FILE_ID = unchecked((int)(0x80830004));

        [NativeTypeName("#define ERROR_TIERING_WRONG_CLUSTER_NODE _HRESULT_TYPEDEF_(0x80830005L)")]
        public const int ERROR_TIERING_WRONG_CLUSTER_NODE = unchecked((int)(0x80830005));

        [NativeTypeName("#define ERROR_TIERING_ALREADY_PROCESSING _HRESULT_TYPEDEF_(0x80830006L)")]
        public const int ERROR_TIERING_ALREADY_PROCESSING = unchecked((int)(0x80830006));

        [NativeTypeName("#define ERROR_TIERING_CANNOT_PIN_OBJECT _HRESULT_TYPEDEF_(0x80830007L)")]
        public const int ERROR_TIERING_CANNOT_PIN_OBJECT = unchecked((int)(0x80830007));

        [NativeTypeName("#define ERROR_TIERING_FILE_IS_NOT_PINNED _HRESULT_TYPEDEF_(0x80830008L)")]
        public const int ERROR_TIERING_FILE_IS_NOT_PINNED = unchecked((int)(0x80830008));

        [NativeTypeName("#define ERROR_NOT_A_TIERED_VOLUME _HRESULT_TYPEDEF_(0x80830009L)")]
        public const int ERROR_NOT_A_TIERED_VOLUME = unchecked((int)(0x80830009));

        [NativeTypeName("#define ERROR_ATTRIBUTE_NOT_PRESENT _HRESULT_TYPEDEF_(0x8083000AL)")]
        public const int ERROR_ATTRIBUTE_NOT_PRESENT = unchecked((int)(0x8083000A));

        [NativeTypeName("#define ERROR_SECCORE_INVALID_COMMAND _HRESULT_TYPEDEF_(0xC0E80000L)")]
        public const int ERROR_SECCORE_INVALID_COMMAND = unchecked((int)(0xC0E80000));

        [NativeTypeName("#define ERROR_NO_APPLICABLE_APP_LICENSES_FOUND _HRESULT_TYPEDEF_(0xC0EA0001L)")]
        public const int ERROR_NO_APPLICABLE_APP_LICENSES_FOUND = unchecked((int)(0xC0EA0001));

        [NativeTypeName("#define ERROR_CLIP_LICENSE_NOT_FOUND _HRESULT_TYPEDEF_(0xC0EA0002L)")]
        public const int ERROR_CLIP_LICENSE_NOT_FOUND = unchecked((int)(0xC0EA0002));

        [NativeTypeName("#define ERROR_CLIP_DEVICE_LICENSE_MISSING _HRESULT_TYPEDEF_(0xC0EA0003L)")]
        public const int ERROR_CLIP_DEVICE_LICENSE_MISSING = unchecked((int)(0xC0EA0003));

        [NativeTypeName("#define ERROR_CLIP_LICENSE_INVALID_SIGNATURE _HRESULT_TYPEDEF_(0xC0EA0004L)")]
        public const int ERROR_CLIP_LICENSE_INVALID_SIGNATURE = unchecked((int)(0xC0EA0004));

        [NativeTypeName("#define ERROR_CLIP_KEYHOLDER_LICENSE_MISSING_OR_INVALID _HRESULT_TYPEDEF_(0xC0EA0005L)")]
        public const int ERROR_CLIP_KEYHOLDER_LICENSE_MISSING_OR_INVALID = unchecked((int)(0xC0EA0005));

        [NativeTypeName("#define ERROR_CLIP_LICENSE_EXPIRED _HRESULT_TYPEDEF_(0xC0EA0006L)")]
        public const int ERROR_CLIP_LICENSE_EXPIRED = unchecked((int)(0xC0EA0006));

        [NativeTypeName("#define ERROR_CLIP_LICENSE_SIGNED_BY_UNKNOWN_SOURCE _HRESULT_TYPEDEF_(0xC0EA0007L)")]
        public const int ERROR_CLIP_LICENSE_SIGNED_BY_UNKNOWN_SOURCE = unchecked((int)(0xC0EA0007));

        [NativeTypeName("#define ERROR_CLIP_LICENSE_NOT_SIGNED _HRESULT_TYPEDEF_(0xC0EA0008L)")]
        public const int ERROR_CLIP_LICENSE_NOT_SIGNED = unchecked((int)(0xC0EA0008));

        [NativeTypeName("#define ERROR_CLIP_LICENSE_HARDWARE_ID_OUT_OF_TOLERANCE _HRESULT_TYPEDEF_(0xC0EA0009L)")]
        public const int ERROR_CLIP_LICENSE_HARDWARE_ID_OUT_OF_TOLERANCE = unchecked((int)(0xC0EA0009));

        [NativeTypeName("#define ERROR_CLIP_LICENSE_DEVICE_ID_MISMATCH _HRESULT_TYPEDEF_(0xC0EA000AL)")]
        public const int ERROR_CLIP_LICENSE_DEVICE_ID_MISMATCH = unchecked((int)(0xC0EA000A));

        [NativeTypeName("#define DXGI_STATUS_OCCLUDED _HRESULT_TYPEDEF_(0x087A0001L)")]
        public const int DXGI_STATUS_OCCLUDED = ((int)(0x087A0001));

        [NativeTypeName("#define DXGI_STATUS_CLIPPED _HRESULT_TYPEDEF_(0x087A0002L)")]
        public const int DXGI_STATUS_CLIPPED = ((int)(0x087A0002));

        [NativeTypeName("#define DXGI_STATUS_NO_REDIRECTION _HRESULT_TYPEDEF_(0x087A0004L)")]
        public const int DXGI_STATUS_NO_REDIRECTION = ((int)(0x087A0004));

        [NativeTypeName("#define DXGI_STATUS_NO_DESKTOP_ACCESS _HRESULT_TYPEDEF_(0x087A0005L)")]
        public const int DXGI_STATUS_NO_DESKTOP_ACCESS = ((int)(0x087A0005));

        [NativeTypeName("#define DXGI_STATUS_GRAPHICS_VIDPN_SOURCE_IN_USE _HRESULT_TYPEDEF_(0x087A0006L)")]
        public const int DXGI_STATUS_GRAPHICS_VIDPN_SOURCE_IN_USE = ((int)(0x087A0006));

        [NativeTypeName("#define DXGI_STATUS_MODE_CHANGED _HRESULT_TYPEDEF_(0x087A0007L)")]
        public const int DXGI_STATUS_MODE_CHANGED = ((int)(0x087A0007));

        [NativeTypeName("#define DXGI_STATUS_MODE_CHANGE_IN_PROGRESS _HRESULT_TYPEDEF_(0x087A0008L)")]
        public const int DXGI_STATUS_MODE_CHANGE_IN_PROGRESS = ((int)(0x087A0008));

        [NativeTypeName("#define DXGI_ERROR_INVALID_CALL _HRESULT_TYPEDEF_(0x887A0001L)")]
        public const int DXGI_ERROR_INVALID_CALL = unchecked((int)(0x887A0001));

        [NativeTypeName("#define DXGI_ERROR_NOT_FOUND _HRESULT_TYPEDEF_(0x887A0002L)")]
        public const int DXGI_ERROR_NOT_FOUND = unchecked((int)(0x887A0002));

        [NativeTypeName("#define DXGI_ERROR_MORE_DATA _HRESULT_TYPEDEF_(0x887A0003L)")]
        public const int DXGI_ERROR_MORE_DATA = unchecked((int)(0x887A0003));

        [NativeTypeName("#define DXGI_ERROR_UNSUPPORTED _HRESULT_TYPEDEF_(0x887A0004L)")]
        public const int DXGI_ERROR_UNSUPPORTED = unchecked((int)(0x887A0004));

        [NativeTypeName("#define DXGI_ERROR_DEVICE_REMOVED _HRESULT_TYPEDEF_(0x887A0005L)")]
        public const int DXGI_ERROR_DEVICE_REMOVED = unchecked((int)(0x887A0005));

        [NativeTypeName("#define DXGI_ERROR_DEVICE_HUNG _HRESULT_TYPEDEF_(0x887A0006L)")]
        public const int DXGI_ERROR_DEVICE_HUNG = unchecked((int)(0x887A0006));

        [NativeTypeName("#define DXGI_ERROR_DEVICE_RESET _HRESULT_TYPEDEF_(0x887A0007L)")]
        public const int DXGI_ERROR_DEVICE_RESET = unchecked((int)(0x887A0007));

        [NativeTypeName("#define DXGI_ERROR_WAS_STILL_DRAWING _HRESULT_TYPEDEF_(0x887A000AL)")]
        public const int DXGI_ERROR_WAS_STILL_DRAWING = unchecked((int)(0x887A000A));

        [NativeTypeName("#define DXGI_ERROR_FRAME_STATISTICS_DISJOINT _HRESULT_TYPEDEF_(0x887A000BL)")]
        public const int DXGI_ERROR_FRAME_STATISTICS_DISJOINT = unchecked((int)(0x887A000B));

        [NativeTypeName("#define DXGI_ERROR_GRAPHICS_VIDPN_SOURCE_IN_USE _HRESULT_TYPEDEF_(0x887A000CL)")]
        public const int DXGI_ERROR_GRAPHICS_VIDPN_SOURCE_IN_USE = unchecked((int)(0x887A000C));

        [NativeTypeName("#define DXGI_ERROR_DRIVER_INTERNAL_ERROR _HRESULT_TYPEDEF_(0x887A0020L)")]
        public const int DXGI_ERROR_DRIVER_INTERNAL_ERROR = unchecked((int)(0x887A0020));

        [NativeTypeName("#define DXGI_ERROR_NONEXCLUSIVE _HRESULT_TYPEDEF_(0x887A0021L)")]
        public const int DXGI_ERROR_NONEXCLUSIVE = unchecked((int)(0x887A0021));

        [NativeTypeName("#define DXGI_ERROR_NOT_CURRENTLY_AVAILABLE _HRESULT_TYPEDEF_(0x887A0022L)")]
        public const int DXGI_ERROR_NOT_CURRENTLY_AVAILABLE = unchecked((int)(0x887A0022));

        [NativeTypeName("#define DXGI_ERROR_REMOTE_CLIENT_DISCONNECTED _HRESULT_TYPEDEF_(0x887A0023L)")]
        public const int DXGI_ERROR_REMOTE_CLIENT_DISCONNECTED = unchecked((int)(0x887A0023));

        [NativeTypeName("#define DXGI_ERROR_REMOTE_OUTOFMEMORY _HRESULT_TYPEDEF_(0x887A0024L)")]
        public const int DXGI_ERROR_REMOTE_OUTOFMEMORY = unchecked((int)(0x887A0024));

        [NativeTypeName("#define DXGI_ERROR_ACCESS_LOST _HRESULT_TYPEDEF_(0x887A0026L)")]
        public const int DXGI_ERROR_ACCESS_LOST = unchecked((int)(0x887A0026));

        [NativeTypeName("#define DXGI_ERROR_WAIT_TIMEOUT _HRESULT_TYPEDEF_(0x887A0027L)")]
        public const int DXGI_ERROR_WAIT_TIMEOUT = unchecked((int)(0x887A0027));

        [NativeTypeName("#define DXGI_ERROR_SESSION_DISCONNECTED _HRESULT_TYPEDEF_(0x887A0028L)")]
        public const int DXGI_ERROR_SESSION_DISCONNECTED = unchecked((int)(0x887A0028));

        [NativeTypeName("#define DXGI_ERROR_RESTRICT_TO_OUTPUT_STALE _HRESULT_TYPEDEF_(0x887A0029L)")]
        public const int DXGI_ERROR_RESTRICT_TO_OUTPUT_STALE = unchecked((int)(0x887A0029));

        [NativeTypeName("#define DXGI_ERROR_CANNOT_PROTECT_CONTENT _HRESULT_TYPEDEF_(0x887A002AL)")]
        public const int DXGI_ERROR_CANNOT_PROTECT_CONTENT = unchecked((int)(0x887A002A));

        [NativeTypeName("#define DXGI_ERROR_ACCESS_DENIED _HRESULT_TYPEDEF_(0x887A002BL)")]
        public const int DXGI_ERROR_ACCESS_DENIED = unchecked((int)(0x887A002B));

        [NativeTypeName("#define DXGI_ERROR_NAME_ALREADY_EXISTS _HRESULT_TYPEDEF_(0x887A002CL)")]
        public const int DXGI_ERROR_NAME_ALREADY_EXISTS = unchecked((int)(0x887A002C));

        [NativeTypeName("#define DXGI_ERROR_SDK_COMPONENT_MISSING _HRESULT_TYPEDEF_(0x887A002DL)")]
        public const int DXGI_ERROR_SDK_COMPONENT_MISSING = unchecked((int)(0x887A002D));

        [NativeTypeName("#define DXGI_ERROR_NOT_CURRENT _HRESULT_TYPEDEF_(0x887A002EL)")]
        public const int DXGI_ERROR_NOT_CURRENT = unchecked((int)(0x887A002E));

        [NativeTypeName("#define DXGI_ERROR_HW_PROTECTION_OUTOFMEMORY _HRESULT_TYPEDEF_(0x887A0030L)")]
        public const int DXGI_ERROR_HW_PROTECTION_OUTOFMEMORY = unchecked((int)(0x887A0030));

        [NativeTypeName("#define DXGI_ERROR_DYNAMIC_CODE_POLICY_VIOLATION _HRESULT_TYPEDEF_(0x887A0031L)")]
        public const int DXGI_ERROR_DYNAMIC_CODE_POLICY_VIOLATION = unchecked((int)(0x887A0031));

        [NativeTypeName("#define DXGI_ERROR_NON_COMPOSITED_UI _HRESULT_TYPEDEF_(0x887A0032L)")]
        public const int DXGI_ERROR_NON_COMPOSITED_UI = unchecked((int)(0x887A0032));

        [NativeTypeName("#define DXCORE_ERROR_EVENT_NOT_UNREGISTERED _HRESULT_TYPEDEF_(0x88800001L)")]
        public const int DXCORE_ERROR_EVENT_NOT_UNREGISTERED = unchecked((int)(0x88800001));

        [NativeTypeName("#define DXGI_STATUS_UNOCCLUDED _HRESULT_TYPEDEF_(0x087A0009L)")]
        public const int DXGI_STATUS_UNOCCLUDED = ((int)(0x087A0009));

        [NativeTypeName("#define DXGI_STATUS_DDA_WAS_STILL_DRAWING _HRESULT_TYPEDEF_(0x087A000AL)")]
        public const int DXGI_STATUS_DDA_WAS_STILL_DRAWING = ((int)(0x087A000A));

        [NativeTypeName("#define DXGI_ERROR_MODE_CHANGE_IN_PROGRESS _HRESULT_TYPEDEF_(0x887A0025L)")]
        public const int DXGI_ERROR_MODE_CHANGE_IN_PROGRESS = unchecked((int)(0x887A0025));

        [NativeTypeName("#define DXGI_STATUS_PRESENT_REQUIRED _HRESULT_TYPEDEF_(0x087A002FL)")]
        public const int DXGI_STATUS_PRESENT_REQUIRED = ((int)(0x087A002F));

        [NativeTypeName("#define DXGI_ERROR_CACHE_CORRUPT _HRESULT_TYPEDEF_(0x887A0033L)")]
        public const int DXGI_ERROR_CACHE_CORRUPT = unchecked((int)(0x887A0033));

        [NativeTypeName("#define DXGI_ERROR_CACHE_FULL _HRESULT_TYPEDEF_(0x887A0034L)")]
        public const int DXGI_ERROR_CACHE_FULL = unchecked((int)(0x887A0034));

        [NativeTypeName("#define DXGI_ERROR_CACHE_HASH_COLLISION _HRESULT_TYPEDEF_(0x887A0035L)")]
        public const int DXGI_ERROR_CACHE_HASH_COLLISION = unchecked((int)(0x887A0035));

        [NativeTypeName("#define DXGI_ERROR_ALREADY_EXISTS _HRESULT_TYPEDEF_(0x887A0036L)")]
        public const int DXGI_ERROR_ALREADY_EXISTS = unchecked((int)(0x887A0036));

        [NativeTypeName("#define DXGI_DDI_ERR_WASSTILLDRAWING _HRESULT_TYPEDEF_(0x887B0001L)")]
        public const int DXGI_DDI_ERR_WASSTILLDRAWING = unchecked((int)(0x887B0001));

        [NativeTypeName("#define DXGI_DDI_ERR_UNSUPPORTED _HRESULT_TYPEDEF_(0x887B0002L)")]
        public const int DXGI_DDI_ERR_UNSUPPORTED = unchecked((int)(0x887B0002));

        [NativeTypeName("#define DXGI_DDI_ERR_NONEXCLUSIVE _HRESULT_TYPEDEF_(0x887B0003L)")]
        public const int DXGI_DDI_ERR_NONEXCLUSIVE = unchecked((int)(0x887B0003));

        [NativeTypeName("#define D3D10_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS _HRESULT_TYPEDEF_(0x88790001L)")]
        public const int D3D10_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS = unchecked((int)(0x88790001));

        [NativeTypeName("#define D3D10_ERROR_FILE_NOT_FOUND _HRESULT_TYPEDEF_(0x88790002L)")]
        public const int D3D10_ERROR_FILE_NOT_FOUND = unchecked((int)(0x88790002));

        [NativeTypeName("#define D3D11_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS _HRESULT_TYPEDEF_(0x887C0001L)")]
        public const int D3D11_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS = unchecked((int)(0x887C0001));

        [NativeTypeName("#define D3D11_ERROR_FILE_NOT_FOUND _HRESULT_TYPEDEF_(0x887C0002L)")]
        public const int D3D11_ERROR_FILE_NOT_FOUND = unchecked((int)(0x887C0002));

        [NativeTypeName("#define D3D11_ERROR_TOO_MANY_UNIQUE_VIEW_OBJECTS _HRESULT_TYPEDEF_(0x887C0003L)")]
        public const int D3D11_ERROR_TOO_MANY_UNIQUE_VIEW_OBJECTS = unchecked((int)(0x887C0003));

        [NativeTypeName("#define D3D11_ERROR_DEFERRED_CONTEXT_MAP_WITHOUT_INITIAL_DISCARD _HRESULT_TYPEDEF_(0x887C0004L)")]
        public const int D3D11_ERROR_DEFERRED_CONTEXT_MAP_WITHOUT_INITIAL_DISCARD = unchecked((int)(0x887C0004));

        [NativeTypeName("#define D3D12_ERROR_ADAPTER_NOT_FOUND _HRESULT_TYPEDEF_(0x887E0001L)")]
        public const int D3D12_ERROR_ADAPTER_NOT_FOUND = unchecked((int)(0x887E0001));

        [NativeTypeName("#define D3D12_ERROR_DRIVER_VERSION_MISMATCH _HRESULT_TYPEDEF_(0x887E0002L)")]
        public const int D3D12_ERROR_DRIVER_VERSION_MISMATCH = unchecked((int)(0x887E0002));

        [NativeTypeName("#define D2DERR_WRONG_STATE _HRESULT_TYPEDEF_(0x88990001L)")]
        public const int D2DERR_WRONG_STATE = unchecked((int)(0x88990001));

        [NativeTypeName("#define D2DERR_NOT_INITIALIZED _HRESULT_TYPEDEF_(0x88990002L)")]
        public const int D2DERR_NOT_INITIALIZED = unchecked((int)(0x88990002));

        [NativeTypeName("#define D2DERR_UNSUPPORTED_OPERATION _HRESULT_TYPEDEF_(0x88990003L)")]
        public const int D2DERR_UNSUPPORTED_OPERATION = unchecked((int)(0x88990003));

        [NativeTypeName("#define D2DERR_SCANNER_FAILED _HRESULT_TYPEDEF_(0x88990004L)")]
        public const int D2DERR_SCANNER_FAILED = unchecked((int)(0x88990004));

        [NativeTypeName("#define D2DERR_SCREEN_ACCESS_DENIED _HRESULT_TYPEDEF_(0x88990005L)")]
        public const int D2DERR_SCREEN_ACCESS_DENIED = unchecked((int)(0x88990005));

        [NativeTypeName("#define D2DERR_DISPLAY_STATE_INVALID _HRESULT_TYPEDEF_(0x88990006L)")]
        public const int D2DERR_DISPLAY_STATE_INVALID = unchecked((int)(0x88990006));

        [NativeTypeName("#define D2DERR_ZERO_VECTOR _HRESULT_TYPEDEF_(0x88990007L)")]
        public const int D2DERR_ZERO_VECTOR = unchecked((int)(0x88990007));

        [NativeTypeName("#define D2DERR_INTERNAL_ERROR _HRESULT_TYPEDEF_(0x88990008L)")]
        public const int D2DERR_INTERNAL_ERROR = unchecked((int)(0x88990008));

        [NativeTypeName("#define D2DERR_DISPLAY_FORMAT_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x88990009L)")]
        public const int D2DERR_DISPLAY_FORMAT_NOT_SUPPORTED = unchecked((int)(0x88990009));

        [NativeTypeName("#define D2DERR_INVALID_CALL _HRESULT_TYPEDEF_(0x8899000AL)")]
        public const int D2DERR_INVALID_CALL = unchecked((int)(0x8899000A));

        [NativeTypeName("#define D2DERR_NO_HARDWARE_DEVICE _HRESULT_TYPEDEF_(0x8899000BL)")]
        public const int D2DERR_NO_HARDWARE_DEVICE = unchecked((int)(0x8899000B));

        [NativeTypeName("#define D2DERR_RECREATE_TARGET _HRESULT_TYPEDEF_(0x8899000CL)")]
        public const int D2DERR_RECREATE_TARGET = unchecked((int)(0x8899000C));

        [NativeTypeName("#define D2DERR_TOO_MANY_SHADER_ELEMENTS _HRESULT_TYPEDEF_(0x8899000DL)")]
        public const int D2DERR_TOO_MANY_SHADER_ELEMENTS = unchecked((int)(0x8899000D));

        [NativeTypeName("#define D2DERR_SHADER_COMPILE_FAILED _HRESULT_TYPEDEF_(0x8899000EL)")]
        public const int D2DERR_SHADER_COMPILE_FAILED = unchecked((int)(0x8899000E));

        [NativeTypeName("#define D2DERR_MAX_TEXTURE_SIZE_EXCEEDED _HRESULT_TYPEDEF_(0x8899000FL)")]
        public const int D2DERR_MAX_TEXTURE_SIZE_EXCEEDED = unchecked((int)(0x8899000F));

        [NativeTypeName("#define D2DERR_UNSUPPORTED_VERSION _HRESULT_TYPEDEF_(0x88990010L)")]
        public const int D2DERR_UNSUPPORTED_VERSION = unchecked((int)(0x88990010));

        [NativeTypeName("#define D2DERR_BAD_NUMBER _HRESULT_TYPEDEF_(0x88990011L)")]
        public const int D2DERR_BAD_NUMBER = unchecked((int)(0x88990011));

        [NativeTypeName("#define D2DERR_WRONG_FACTORY _HRESULT_TYPEDEF_(0x88990012L)")]
        public const int D2DERR_WRONG_FACTORY = unchecked((int)(0x88990012));

        [NativeTypeName("#define D2DERR_LAYER_ALREADY_IN_USE _HRESULT_TYPEDEF_(0x88990013L)")]
        public const int D2DERR_LAYER_ALREADY_IN_USE = unchecked((int)(0x88990013));

        [NativeTypeName("#define D2DERR_POP_CALL_DID_NOT_MATCH_PUSH _HRESULT_TYPEDEF_(0x88990014L)")]
        public const int D2DERR_POP_CALL_DID_NOT_MATCH_PUSH = unchecked((int)(0x88990014));

        [NativeTypeName("#define D2DERR_WRONG_RESOURCE_DOMAIN _HRESULT_TYPEDEF_(0x88990015L)")]
        public const int D2DERR_WRONG_RESOURCE_DOMAIN = unchecked((int)(0x88990015));

        [NativeTypeName("#define D2DERR_PUSH_POP_UNBALANCED _HRESULT_TYPEDEF_(0x88990016L)")]
        public const int D2DERR_PUSH_POP_UNBALANCED = unchecked((int)(0x88990016));

        [NativeTypeName("#define D2DERR_RENDER_TARGET_HAS_LAYER_OR_CLIPRECT _HRESULT_TYPEDEF_(0x88990017L)")]
        public const int D2DERR_RENDER_TARGET_HAS_LAYER_OR_CLIPRECT = unchecked((int)(0x88990017));

        [NativeTypeName("#define D2DERR_INCOMPATIBLE_BRUSH_TYPES _HRESULT_TYPEDEF_(0x88990018L)")]
        public const int D2DERR_INCOMPATIBLE_BRUSH_TYPES = unchecked((int)(0x88990018));

        [NativeTypeName("#define D2DERR_WIN32_ERROR _HRESULT_TYPEDEF_(0x88990019L)")]
        public const int D2DERR_WIN32_ERROR = unchecked((int)(0x88990019));

        [NativeTypeName("#define D2DERR_TARGET_NOT_GDI_COMPATIBLE _HRESULT_TYPEDEF_(0x8899001AL)")]
        public const int D2DERR_TARGET_NOT_GDI_COMPATIBLE = unchecked((int)(0x8899001A));

        [NativeTypeName("#define D2DERR_TEXT_EFFECT_IS_WRONG_TYPE _HRESULT_TYPEDEF_(0x8899001BL)")]
        public const int D2DERR_TEXT_EFFECT_IS_WRONG_TYPE = unchecked((int)(0x8899001B));

        [NativeTypeName("#define D2DERR_TEXT_RENDERER_NOT_RELEASED _HRESULT_TYPEDEF_(0x8899001CL)")]
        public const int D2DERR_TEXT_RENDERER_NOT_RELEASED = unchecked((int)(0x8899001C));

        [NativeTypeName("#define D2DERR_EXCEEDS_MAX_BITMAP_SIZE _HRESULT_TYPEDEF_(0x8899001DL)")]
        public const int D2DERR_EXCEEDS_MAX_BITMAP_SIZE = unchecked((int)(0x8899001D));

        [NativeTypeName("#define D2DERR_INVALID_GRAPH_CONFIGURATION _HRESULT_TYPEDEF_(0x8899001EL)")]
        public const int D2DERR_INVALID_GRAPH_CONFIGURATION = unchecked((int)(0x8899001E));

        [NativeTypeName("#define D2DERR_INVALID_INTERNAL_GRAPH_CONFIGURATION _HRESULT_TYPEDEF_(0x8899001FL)")]
        public const int D2DERR_INVALID_INTERNAL_GRAPH_CONFIGURATION = unchecked((int)(0x8899001F));

        [NativeTypeName("#define D2DERR_CYCLIC_GRAPH _HRESULT_TYPEDEF_(0x88990020L)")]
        public const int D2DERR_CYCLIC_GRAPH = unchecked((int)(0x88990020));

        [NativeTypeName("#define D2DERR_BITMAP_CANNOT_DRAW _HRESULT_TYPEDEF_(0x88990021L)")]
        public const int D2DERR_BITMAP_CANNOT_DRAW = unchecked((int)(0x88990021));

        [NativeTypeName("#define D2DERR_OUTSTANDING_BITMAP_REFERENCES _HRESULT_TYPEDEF_(0x88990022L)")]
        public const int D2DERR_OUTSTANDING_BITMAP_REFERENCES = unchecked((int)(0x88990022));

        [NativeTypeName("#define D2DERR_ORIGINAL_TARGET_NOT_BOUND _HRESULT_TYPEDEF_(0x88990023L)")]
        public const int D2DERR_ORIGINAL_TARGET_NOT_BOUND = unchecked((int)(0x88990023));

        [NativeTypeName("#define D2DERR_INVALID_TARGET _HRESULT_TYPEDEF_(0x88990024L)")]
        public const int D2DERR_INVALID_TARGET = unchecked((int)(0x88990024));

        [NativeTypeName("#define D2DERR_BITMAP_BOUND_AS_TARGET _HRESULT_TYPEDEF_(0x88990025L)")]
        public const int D2DERR_BITMAP_BOUND_AS_TARGET = unchecked((int)(0x88990025));

        [NativeTypeName("#define D2DERR_INSUFFICIENT_DEVICE_CAPABILITIES _HRESULT_TYPEDEF_(0x88990026L)")]
        public const int D2DERR_INSUFFICIENT_DEVICE_CAPABILITIES = unchecked((int)(0x88990026));

        [NativeTypeName("#define D2DERR_INTERMEDIATE_TOO_LARGE _HRESULT_TYPEDEF_(0x88990027L)")]
        public const int D2DERR_INTERMEDIATE_TOO_LARGE = unchecked((int)(0x88990027));

        [NativeTypeName("#define D2DERR_EFFECT_IS_NOT_REGISTERED _HRESULT_TYPEDEF_(0x88990028L)")]
        public const int D2DERR_EFFECT_IS_NOT_REGISTERED = unchecked((int)(0x88990028));

        [NativeTypeName("#define D2DERR_INVALID_PROPERTY _HRESULT_TYPEDEF_(0x88990029L)")]
        public const int D2DERR_INVALID_PROPERTY = unchecked((int)(0x88990029));

        [NativeTypeName("#define D2DERR_NO_SUBPROPERTIES _HRESULT_TYPEDEF_(0x8899002AL)")]
        public const int D2DERR_NO_SUBPROPERTIES = unchecked((int)(0x8899002A));

        [NativeTypeName("#define D2DERR_PRINT_JOB_CLOSED _HRESULT_TYPEDEF_(0x8899002BL)")]
        public const int D2DERR_PRINT_JOB_CLOSED = unchecked((int)(0x8899002B));

        [NativeTypeName("#define D2DERR_PRINT_FORMAT_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x8899002CL)")]
        public const int D2DERR_PRINT_FORMAT_NOT_SUPPORTED = unchecked((int)(0x8899002C));

        [NativeTypeName("#define D2DERR_TOO_MANY_TRANSFORM_INPUTS _HRESULT_TYPEDEF_(0x8899002DL)")]
        public const int D2DERR_TOO_MANY_TRANSFORM_INPUTS = unchecked((int)(0x8899002D));

        [NativeTypeName("#define D2DERR_INVALID_GLYPH_IMAGE _HRESULT_TYPEDEF_(0x8899002EL)")]
        public const int D2DERR_INVALID_GLYPH_IMAGE = unchecked((int)(0x8899002E));

        [NativeTypeName("#define DWRITE_E_FILEFORMAT _HRESULT_TYPEDEF_(0x88985000L)")]
        public const int DWRITE_E_FILEFORMAT = unchecked((int)(0x88985000));

        [NativeTypeName("#define DWRITE_E_UNEXPECTED _HRESULT_TYPEDEF_(0x88985001L)")]
        public const int DWRITE_E_UNEXPECTED = unchecked((int)(0x88985001));

        [NativeTypeName("#define DWRITE_E_NOFONT _HRESULT_TYPEDEF_(0x88985002L)")]
        public const int DWRITE_E_NOFONT = unchecked((int)(0x88985002));

        [NativeTypeName("#define DWRITE_E_FILENOTFOUND _HRESULT_TYPEDEF_(0x88985003L)")]
        public const int DWRITE_E_FILENOTFOUND = unchecked((int)(0x88985003));

        [NativeTypeName("#define DWRITE_E_FILEACCESS _HRESULT_TYPEDEF_(0x88985004L)")]
        public const int DWRITE_E_FILEACCESS = unchecked((int)(0x88985004));

        [NativeTypeName("#define DWRITE_E_FONTCOLLECTIONOBSOLETE _HRESULT_TYPEDEF_(0x88985005L)")]
        public const int DWRITE_E_FONTCOLLECTIONOBSOLETE = unchecked((int)(0x88985005));

        [NativeTypeName("#define DWRITE_E_ALREADYREGISTERED _HRESULT_TYPEDEF_(0x88985006L)")]
        public const int DWRITE_E_ALREADYREGISTERED = unchecked((int)(0x88985006));

        [NativeTypeName("#define DWRITE_E_CACHEFORMAT _HRESULT_TYPEDEF_(0x88985007L)")]
        public const int DWRITE_E_CACHEFORMAT = unchecked((int)(0x88985007));

        [NativeTypeName("#define DWRITE_E_CACHEVERSION _HRESULT_TYPEDEF_(0x88985008L)")]
        public const int DWRITE_E_CACHEVERSION = unchecked((int)(0x88985008));

        [NativeTypeName("#define DWRITE_E_UNSUPPORTEDOPERATION _HRESULT_TYPEDEF_(0x88985009L)")]
        public const int DWRITE_E_UNSUPPORTEDOPERATION = unchecked((int)(0x88985009));

        [NativeTypeName("#define DWRITE_E_TEXTRENDERERINCOMPATIBLE _HRESULT_TYPEDEF_(0x8898500AL)")]
        public const int DWRITE_E_TEXTRENDERERINCOMPATIBLE = unchecked((int)(0x8898500A));

        [NativeTypeName("#define DWRITE_E_FLOWDIRECTIONCONFLICTS _HRESULT_TYPEDEF_(0x8898500BL)")]
        public const int DWRITE_E_FLOWDIRECTIONCONFLICTS = unchecked((int)(0x8898500B));

        [NativeTypeName("#define DWRITE_E_NOCOLOR _HRESULT_TYPEDEF_(0x8898500CL)")]
        public const int DWRITE_E_NOCOLOR = unchecked((int)(0x8898500C));

        [NativeTypeName("#define DWRITE_E_REMOTEFONT _HRESULT_TYPEDEF_(0x8898500DL)")]
        public const int DWRITE_E_REMOTEFONT = unchecked((int)(0x8898500D));

        [NativeTypeName("#define DWRITE_E_DOWNLOADCANCELLED _HRESULT_TYPEDEF_(0x8898500EL)")]
        public const int DWRITE_E_DOWNLOADCANCELLED = unchecked((int)(0x8898500E));

        [NativeTypeName("#define DWRITE_E_DOWNLOADFAILED _HRESULT_TYPEDEF_(0x8898500FL)")]
        public const int DWRITE_E_DOWNLOADFAILED = unchecked((int)(0x8898500F));

        [NativeTypeName("#define DWRITE_E_TOOMANYDOWNLOADS _HRESULT_TYPEDEF_(0x88985010L)")]
        public const int DWRITE_E_TOOMANYDOWNLOADS = unchecked((int)(0x88985010));
#endif

        [NativeTypeName("#define WINCODEC_ERR_WRONGSTATE _HRESULT_TYPEDEF_(0x88982F04L)")]
        public const int WINCODEC_ERR_WRONGSTATE = unchecked((int)(0x88982F04));

        [NativeTypeName("#define WINCODEC_ERR_VALUEOUTOFRANGE _HRESULT_TYPEDEF_(0x88982F05L)")]
        public const int WINCODEC_ERR_VALUEOUTOFRANGE = unchecked((int)(0x88982F05));

        [NativeTypeName("#define WINCODEC_ERR_UNKNOWNIMAGEFORMAT _HRESULT_TYPEDEF_(0x88982F07L)")]
        public const int WINCODEC_ERR_UNKNOWNIMAGEFORMAT = unchecked((int)(0x88982F07));

        [NativeTypeName("#define WINCODEC_ERR_UNSUPPORTEDVERSION _HRESULT_TYPEDEF_(0x88982F0BL)")]
        public const int WINCODEC_ERR_UNSUPPORTEDVERSION = unchecked((int)(0x88982F0B));

        [NativeTypeName("#define WINCODEC_ERR_NOTINITIALIZED _HRESULT_TYPEDEF_(0x88982F0CL)")]
        public const int WINCODEC_ERR_NOTINITIALIZED = unchecked((int)(0x88982F0C));

        [NativeTypeName("#define WINCODEC_ERR_ALREADYLOCKED _HRESULT_TYPEDEF_(0x88982F0DL)")]
        public const int WINCODEC_ERR_ALREADYLOCKED = unchecked((int)(0x88982F0D));

        [NativeTypeName("#define WINCODEC_ERR_PROPERTYNOTFOUND _HRESULT_TYPEDEF_(0x88982F40L)")]
        public const int WINCODEC_ERR_PROPERTYNOTFOUND = unchecked((int)(0x88982F40));

        [NativeTypeName("#define WINCODEC_ERR_PROPERTYNOTSUPPORTED _HRESULT_TYPEDEF_(0x88982F41L)")]
        public const int WINCODEC_ERR_PROPERTYNOTSUPPORTED = unchecked((int)(0x88982F41));

        [NativeTypeName("#define WINCODEC_ERR_PROPERTYSIZE _HRESULT_TYPEDEF_(0x88982F42L)")]
        public const int WINCODEC_ERR_PROPERTYSIZE = unchecked((int)(0x88982F42));

        [NativeTypeName("#define WINCODEC_ERR_CODECPRESENT _HRESULT_TYPEDEF_(0x88982F43L)")]
        public const int WINCODEC_ERR_CODECPRESENT = unchecked((int)(0x88982F43));

        [NativeTypeName("#define WINCODEC_ERR_CODECNOTHUMBNAIL _HRESULT_TYPEDEF_(0x88982F44L)")]
        public const int WINCODEC_ERR_CODECNOTHUMBNAIL = unchecked((int)(0x88982F44));

        [NativeTypeName("#define WINCODEC_ERR_PALETTEUNAVAILABLE _HRESULT_TYPEDEF_(0x88982F45L)")]
        public const int WINCODEC_ERR_PALETTEUNAVAILABLE = unchecked((int)(0x88982F45));

        [NativeTypeName("#define WINCODEC_ERR_CODECTOOMANYSCANLINES _HRESULT_TYPEDEF_(0x88982F46L)")]
        public const int WINCODEC_ERR_CODECTOOMANYSCANLINES = unchecked((int)(0x88982F46));

        [NativeTypeName("#define WINCODEC_ERR_INTERNALERROR _HRESULT_TYPEDEF_(0x88982F48L)")]
        public const int WINCODEC_ERR_INTERNALERROR = unchecked((int)(0x88982F48));

        [NativeTypeName("#define WINCODEC_ERR_SOURCERECTDOESNOTMATCHDIMENSIONS _HRESULT_TYPEDEF_(0x88982F49L)")]
        public const int WINCODEC_ERR_SOURCERECTDOESNOTMATCHDIMENSIONS = unchecked((int)(0x88982F49));

        [NativeTypeName("#define WINCODEC_ERR_COMPONENTNOTFOUND _HRESULT_TYPEDEF_(0x88982F50L)")]
        public const int WINCODEC_ERR_COMPONENTNOTFOUND = unchecked((int)(0x88982F50));

        [NativeTypeName("#define WINCODEC_ERR_IMAGESIZEOUTOFRANGE _HRESULT_TYPEDEF_(0x88982F51L)")]
        public const int WINCODEC_ERR_IMAGESIZEOUTOFRANGE = unchecked((int)(0x88982F51));

        [NativeTypeName("#define WINCODEC_ERR_TOOMUCHMETADATA _HRESULT_TYPEDEF_(0x88982F52L)")]
        public const int WINCODEC_ERR_TOOMUCHMETADATA = unchecked((int)(0x88982F52));

        [NativeTypeName("#define WINCODEC_ERR_BADIMAGE _HRESULT_TYPEDEF_(0x88982F60L)")]
        public const int WINCODEC_ERR_BADIMAGE = unchecked((int)(0x88982F60));

        [NativeTypeName("#define WINCODEC_ERR_BADHEADER _HRESULT_TYPEDEF_(0x88982F61L)")]
        public const int WINCODEC_ERR_BADHEADER = unchecked((int)(0x88982F61));

        [NativeTypeName("#define WINCODEC_ERR_FRAMEMISSING _HRESULT_TYPEDEF_(0x88982F62L)")]
        public const int WINCODEC_ERR_FRAMEMISSING = unchecked((int)(0x88982F62));

        [NativeTypeName("#define WINCODEC_ERR_BADMETADATAHEADER _HRESULT_TYPEDEF_(0x88982F63L)")]
        public const int WINCODEC_ERR_BADMETADATAHEADER = unchecked((int)(0x88982F63));

        [NativeTypeName("#define WINCODEC_ERR_BADSTREAMDATA _HRESULT_TYPEDEF_(0x88982F70L)")]
        public const int WINCODEC_ERR_BADSTREAMDATA = unchecked((int)(0x88982F70));

        [NativeTypeName("#define WINCODEC_ERR_STREAMWRITE _HRESULT_TYPEDEF_(0x88982F71L)")]
        public const int WINCODEC_ERR_STREAMWRITE = unchecked((int)(0x88982F71));

        [NativeTypeName("#define WINCODEC_ERR_STREAMREAD _HRESULT_TYPEDEF_(0x88982F72L)")]
        public const int WINCODEC_ERR_STREAMREAD = unchecked((int)(0x88982F72));

        [NativeTypeName("#define WINCODEC_ERR_STREAMNOTAVAILABLE _HRESULT_TYPEDEF_(0x88982F73L)")]
        public const int WINCODEC_ERR_STREAMNOTAVAILABLE = unchecked((int)(0x88982F73));

        [NativeTypeName("#define WINCODEC_ERR_UNSUPPORTEDPIXELFORMAT _HRESULT_TYPEDEF_(0x88982F80L)")]
        public const int WINCODEC_ERR_UNSUPPORTEDPIXELFORMAT = unchecked((int)(0x88982F80));

        [NativeTypeName("#define WINCODEC_ERR_UNSUPPORTEDOPERATION _HRESULT_TYPEDEF_(0x88982F81L)")]
        public const int WINCODEC_ERR_UNSUPPORTEDOPERATION = unchecked((int)(0x88982F81));

        [NativeTypeName("#define WINCODEC_ERR_INVALIDREGISTRATION _HRESULT_TYPEDEF_(0x88982F8AL)")]
        public const int WINCODEC_ERR_INVALIDREGISTRATION = unchecked((int)(0x88982F8A));

        [NativeTypeName("#define WINCODEC_ERR_COMPONENTINITIALIZEFAILURE _HRESULT_TYPEDEF_(0x88982F8BL)")]
        public const int WINCODEC_ERR_COMPONENTINITIALIZEFAILURE = unchecked((int)(0x88982F8B));

        [NativeTypeName("#define WINCODEC_ERR_INSUFFICIENTBUFFER _HRESULT_TYPEDEF_(0x88982F8CL)")]
        public const int WINCODEC_ERR_INSUFFICIENTBUFFER = unchecked((int)(0x88982F8C));

        [NativeTypeName("#define WINCODEC_ERR_DUPLICATEMETADATAPRESENT _HRESULT_TYPEDEF_(0x88982F8DL)")]
        public const int WINCODEC_ERR_DUPLICATEMETADATAPRESENT = unchecked((int)(0x88982F8D));

        [NativeTypeName("#define WINCODEC_ERR_PROPERTYUNEXPECTEDTYPE _HRESULT_TYPEDEF_(0x88982F8EL)")]
        public const int WINCODEC_ERR_PROPERTYUNEXPECTEDTYPE = unchecked((int)(0x88982F8E));

        [NativeTypeName("#define WINCODEC_ERR_UNEXPECTEDSIZE _HRESULT_TYPEDEF_(0x88982F8FL)")]
        public const int WINCODEC_ERR_UNEXPECTEDSIZE = unchecked((int)(0x88982F8F));

        [NativeTypeName("#define WINCODEC_ERR_INVALIDQUERYREQUEST _HRESULT_TYPEDEF_(0x88982F90L)")]
        public const int WINCODEC_ERR_INVALIDQUERYREQUEST = unchecked((int)(0x88982F90));

        [NativeTypeName("#define WINCODEC_ERR_UNEXPECTEDMETADATATYPE _HRESULT_TYPEDEF_(0x88982F91L)")]
        public const int WINCODEC_ERR_UNEXPECTEDMETADATATYPE = unchecked((int)(0x88982F91));

        [NativeTypeName("#define WINCODEC_ERR_REQUESTONLYVALIDATMETADATAROOT _HRESULT_TYPEDEF_(0x88982F92L)")]
        public const int WINCODEC_ERR_REQUESTONLYVALIDATMETADATAROOT = unchecked((int)(0x88982F92));

        [NativeTypeName("#define WINCODEC_ERR_INVALIDQUERYCHARACTER _HRESULT_TYPEDEF_(0x88982F93L)")]
        public const int WINCODEC_ERR_INVALIDQUERYCHARACTER = unchecked((int)(0x88982F93));

        [NativeTypeName("#define WINCODEC_ERR_WIN32ERROR _HRESULT_TYPEDEF_(0x88982F94L)")]
        public const int WINCODEC_ERR_WIN32ERROR = unchecked((int)(0x88982F94));

        [NativeTypeName("#define WINCODEC_ERR_INVALIDPROGRESSIVELEVEL _HRESULT_TYPEDEF_(0x88982F95L)")]
        public const int WINCODEC_ERR_INVALIDPROGRESSIVELEVEL = unchecked((int)(0x88982F95));

        [NativeTypeName("#define WINCODEC_ERR_INVALIDJPEGSCANINDEX _HRESULT_TYPEDEF_(0x88982F96L)")]
        public const int WINCODEC_ERR_INVALIDJPEGSCANINDEX = unchecked((int)(0x88982F96));

#if false
        [NativeTypeName("#define MILERR_OBJECTBUSY _HRESULT_TYPEDEF_(0x88980001L)")]
        public const int MILERR_OBJECTBUSY = unchecked((int)(0x88980001));

        [NativeTypeName("#define MILERR_INSUFFICIENTBUFFER _HRESULT_TYPEDEF_(0x88980002L)")]
        public const int MILERR_INSUFFICIENTBUFFER = unchecked((int)(0x88980002));

        [NativeTypeName("#define MILERR_WIN32ERROR _HRESULT_TYPEDEF_(0x88980003L)")]
        public const int MILERR_WIN32ERROR = unchecked((int)(0x88980003));

        [NativeTypeName("#define MILERR_SCANNER_FAILED _HRESULT_TYPEDEF_(0x88980004L)")]
        public const int MILERR_SCANNER_FAILED = unchecked((int)(0x88980004));

        [NativeTypeName("#define MILERR_SCREENACCESSDENIED _HRESULT_TYPEDEF_(0x88980005L)")]
        public const int MILERR_SCREENACCESSDENIED = unchecked((int)(0x88980005));

        [NativeTypeName("#define MILERR_DISPLAYSTATEINVALID _HRESULT_TYPEDEF_(0x88980006L)")]
        public const int MILERR_DISPLAYSTATEINVALID = unchecked((int)(0x88980006));

        [NativeTypeName("#define MILERR_NONINVERTIBLEMATRIX _HRESULT_TYPEDEF_(0x88980007L)")]
        public const int MILERR_NONINVERTIBLEMATRIX = unchecked((int)(0x88980007));

        [NativeTypeName("#define MILERR_ZEROVECTOR _HRESULT_TYPEDEF_(0x88980008L)")]
        public const int MILERR_ZEROVECTOR = unchecked((int)(0x88980008));

        [NativeTypeName("#define MILERR_TERMINATED _HRESULT_TYPEDEF_(0x88980009L)")]
        public const int MILERR_TERMINATED = unchecked((int)(0x88980009));

        [NativeTypeName("#define MILERR_BADNUMBER _HRESULT_TYPEDEF_(0x8898000AL)")]
        public const int MILERR_BADNUMBER = unchecked((int)(0x8898000A));

        [NativeTypeName("#define MILERR_INTERNALERROR _HRESULT_TYPEDEF_(0x88980080L)")]
        public const int MILERR_INTERNALERROR = unchecked((int)(0x88980080));

        [NativeTypeName("#define MILERR_DISPLAYFORMATNOTSUPPORTED _HRESULT_TYPEDEF_(0x88980084L)")]
        public const int MILERR_DISPLAYFORMATNOTSUPPORTED = unchecked((int)(0x88980084));

        [NativeTypeName("#define MILERR_INVALIDCALL _HRESULT_TYPEDEF_(0x88980085L)")]
        public const int MILERR_INVALIDCALL = unchecked((int)(0x88980085));

        [NativeTypeName("#define MILERR_ALREADYLOCKED _HRESULT_TYPEDEF_(0x88980086L)")]
        public const int MILERR_ALREADYLOCKED = unchecked((int)(0x88980086));

        [NativeTypeName("#define MILERR_NOTLOCKED _HRESULT_TYPEDEF_(0x88980087L)")]
        public const int MILERR_NOTLOCKED = unchecked((int)(0x88980087));

        [NativeTypeName("#define MILERR_DEVICECANNOTRENDERTEXT _HRESULT_TYPEDEF_(0x88980088L)")]
        public const int MILERR_DEVICECANNOTRENDERTEXT = unchecked((int)(0x88980088));

        [NativeTypeName("#define MILERR_GLYPHBITMAPMISSED _HRESULT_TYPEDEF_(0x88980089L)")]
        public const int MILERR_GLYPHBITMAPMISSED = unchecked((int)(0x88980089));

        [NativeTypeName("#define MILERR_MALFORMEDGLYPHCACHE _HRESULT_TYPEDEF_(0x8898008AL)")]
        public const int MILERR_MALFORMEDGLYPHCACHE = unchecked((int)(0x8898008A));

        [NativeTypeName("#define MILERR_GENERIC_IGNORE _HRESULT_TYPEDEF_(0x8898008BL)")]
        public const int MILERR_GENERIC_IGNORE = unchecked((int)(0x8898008B));

        [NativeTypeName("#define MILERR_MALFORMED_GUIDELINE_DATA _HRESULT_TYPEDEF_(0x8898008CL)")]
        public const int MILERR_MALFORMED_GUIDELINE_DATA = unchecked((int)(0x8898008C));

        [NativeTypeName("#define MILERR_NO_HARDWARE_DEVICE _HRESULT_TYPEDEF_(0x8898008DL)")]
        public const int MILERR_NO_HARDWARE_DEVICE = unchecked((int)(0x8898008D));

        [NativeTypeName("#define MILERR_NEED_RECREATE_AND_PRESENT _HRESULT_TYPEDEF_(0x8898008EL)")]
        public const int MILERR_NEED_RECREATE_AND_PRESENT = unchecked((int)(0x8898008E));

        [NativeTypeName("#define MILERR_ALREADY_INITIALIZED _HRESULT_TYPEDEF_(0x8898008FL)")]
        public const int MILERR_ALREADY_INITIALIZED = unchecked((int)(0x8898008F));

        [NativeTypeName("#define MILERR_MISMATCHED_SIZE _HRESULT_TYPEDEF_(0x88980090L)")]
        public const int MILERR_MISMATCHED_SIZE = unchecked((int)(0x88980090));

        [NativeTypeName("#define MILERR_NO_REDIRECTION_SURFACE_AVAILABLE _HRESULT_TYPEDEF_(0x88980091L)")]
        public const int MILERR_NO_REDIRECTION_SURFACE_AVAILABLE = unchecked((int)(0x88980091));

        [NativeTypeName("#define MILERR_REMOTING_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x88980092L)")]
        public const int MILERR_REMOTING_NOT_SUPPORTED = unchecked((int)(0x88980092));

        [NativeTypeName("#define MILERR_QUEUED_PRESENT_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x88980093L)")]
        public const int MILERR_QUEUED_PRESENT_NOT_SUPPORTED = unchecked((int)(0x88980093));

        [NativeTypeName("#define MILERR_NOT_QUEUING_PRESENTS _HRESULT_TYPEDEF_(0x88980094L)")]
        public const int MILERR_NOT_QUEUING_PRESENTS = unchecked((int)(0x88980094));

        [NativeTypeName("#define MILERR_NO_REDIRECTION_SURFACE_RETRY_LATER _HRESULT_TYPEDEF_(0x88980095L)")]
        public const int MILERR_NO_REDIRECTION_SURFACE_RETRY_LATER = unchecked((int)(0x88980095));

        [NativeTypeName("#define MILERR_TOOMANYSHADERELEMNTS _HRESULT_TYPEDEF_(0x88980096L)")]
        public const int MILERR_TOOMANYSHADERELEMNTS = unchecked((int)(0x88980096));

        [NativeTypeName("#define MILERR_MROW_READLOCK_FAILED _HRESULT_TYPEDEF_(0x88980097L)")]
        public const int MILERR_MROW_READLOCK_FAILED = unchecked((int)(0x88980097));

        [NativeTypeName("#define MILERR_MROW_UPDATE_FAILED _HRESULT_TYPEDEF_(0x88980098L)")]
        public const int MILERR_MROW_UPDATE_FAILED = unchecked((int)(0x88980098));

        [NativeTypeName("#define MILERR_SHADER_COMPILE_FAILED _HRESULT_TYPEDEF_(0x88980099L)")]
        public const int MILERR_SHADER_COMPILE_FAILED = unchecked((int)(0x88980099));

        [NativeTypeName("#define MILERR_MAX_TEXTURE_SIZE_EXCEEDED _HRESULT_TYPEDEF_(0x8898009AL)")]
        public const int MILERR_MAX_TEXTURE_SIZE_EXCEEDED = unchecked((int)(0x8898009A));

        [NativeTypeName("#define MILERR_QPC_TIME_WENT_BACKWARD _HRESULT_TYPEDEF_(0x8898009BL)")]
        public const int MILERR_QPC_TIME_WENT_BACKWARD = unchecked((int)(0x8898009B));

        [NativeTypeName("#define MILERR_DXGI_ENUMERATION_OUT_OF_SYNC _HRESULT_TYPEDEF_(0x8898009DL)")]
        public const int MILERR_DXGI_ENUMERATION_OUT_OF_SYNC = unchecked((int)(0x8898009D));

        [NativeTypeName("#define MILERR_ADAPTER_NOT_FOUND _HRESULT_TYPEDEF_(0x8898009EL)")]
        public const int MILERR_ADAPTER_NOT_FOUND = unchecked((int)(0x8898009E));

        [NativeTypeName("#define MILERR_COLORSPACE_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x8898009FL)")]
        public const int MILERR_COLORSPACE_NOT_SUPPORTED = unchecked((int)(0x8898009F));

        [NativeTypeName("#define MILERR_PREFILTER_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x889800A0L)")]
        public const int MILERR_PREFILTER_NOT_SUPPORTED = unchecked((int)(0x889800A0));

        [NativeTypeName("#define MILERR_DISPLAYID_ACCESS_DENIED _HRESULT_TYPEDEF_(0x889800A1L)")]
        public const int MILERR_DISPLAYID_ACCESS_DENIED = unchecked((int)(0x889800A1));

        [NativeTypeName("#define UCEERR_INVALIDPACKETHEADER _HRESULT_TYPEDEF_(0x88980400L)")]
        public const int UCEERR_INVALIDPACKETHEADER = unchecked((int)(0x88980400));

        [NativeTypeName("#define UCEERR_UNKNOWNPACKET _HRESULT_TYPEDEF_(0x88980401L)")]
        public const int UCEERR_UNKNOWNPACKET = unchecked((int)(0x88980401));

        [NativeTypeName("#define UCEERR_ILLEGALPACKET _HRESULT_TYPEDEF_(0x88980402L)")]
        public const int UCEERR_ILLEGALPACKET = unchecked((int)(0x88980402));

        [NativeTypeName("#define UCEERR_MALFORMEDPACKET _HRESULT_TYPEDEF_(0x88980403L)")]
        public const int UCEERR_MALFORMEDPACKET = unchecked((int)(0x88980403));

        [NativeTypeName("#define UCEERR_ILLEGALHANDLE _HRESULT_TYPEDEF_(0x88980404L)")]
        public const int UCEERR_ILLEGALHANDLE = unchecked((int)(0x88980404));

        [NativeTypeName("#define UCEERR_HANDLELOOKUPFAILED _HRESULT_TYPEDEF_(0x88980405L)")]
        public const int UCEERR_HANDLELOOKUPFAILED = unchecked((int)(0x88980405));

        [NativeTypeName("#define UCEERR_RENDERTHREADFAILURE _HRESULT_TYPEDEF_(0x88980406L)")]
        public const int UCEERR_RENDERTHREADFAILURE = unchecked((int)(0x88980406));

        [NativeTypeName("#define UCEERR_CTXSTACKFRSTTARGETNULL _HRESULT_TYPEDEF_(0x88980407L)")]
        public const int UCEERR_CTXSTACKFRSTTARGETNULL = unchecked((int)(0x88980407));

        [NativeTypeName("#define UCEERR_CONNECTIONIDLOOKUPFAILED _HRESULT_TYPEDEF_(0x88980408L)")]
        public const int UCEERR_CONNECTIONIDLOOKUPFAILED = unchecked((int)(0x88980408));

        [NativeTypeName("#define UCEERR_BLOCKSFULL _HRESULT_TYPEDEF_(0x88980409L)")]
        public const int UCEERR_BLOCKSFULL = unchecked((int)(0x88980409));

        [NativeTypeName("#define UCEERR_MEMORYFAILURE _HRESULT_TYPEDEF_(0x8898040AL)")]
        public const int UCEERR_MEMORYFAILURE = unchecked((int)(0x8898040A));

        [NativeTypeName("#define UCEERR_PACKETRECORDOUTOFRANGE _HRESULT_TYPEDEF_(0x8898040BL)")]
        public const int UCEERR_PACKETRECORDOUTOFRANGE = unchecked((int)(0x8898040B));

        [NativeTypeName("#define UCEERR_ILLEGALRECORDTYPE _HRESULT_TYPEDEF_(0x8898040CL)")]
        public const int UCEERR_ILLEGALRECORDTYPE = unchecked((int)(0x8898040C));

        [NativeTypeName("#define UCEERR_OUTOFHANDLES _HRESULT_TYPEDEF_(0x8898040DL)")]
        public const int UCEERR_OUTOFHANDLES = unchecked((int)(0x8898040D));

        [NativeTypeName("#define UCEERR_UNCHANGABLE_UPDATE_ATTEMPTED _HRESULT_TYPEDEF_(0x8898040EL)")]
        public const int UCEERR_UNCHANGABLE_UPDATE_ATTEMPTED = unchecked((int)(0x8898040E));

        [NativeTypeName("#define UCEERR_NO_MULTIPLE_WORKER_THREADS _HRESULT_TYPEDEF_(0x8898040FL)")]
        public const int UCEERR_NO_MULTIPLE_WORKER_THREADS = unchecked((int)(0x8898040F));

        [NativeTypeName("#define UCEERR_REMOTINGNOTSUPPORTED _HRESULT_TYPEDEF_(0x88980410L)")]
        public const int UCEERR_REMOTINGNOTSUPPORTED = unchecked((int)(0x88980410));

        [NativeTypeName("#define UCEERR_MISSINGENDCOMMAND _HRESULT_TYPEDEF_(0x88980411L)")]
        public const int UCEERR_MISSINGENDCOMMAND = unchecked((int)(0x88980411));

        [NativeTypeName("#define UCEERR_MISSINGBEGINCOMMAND _HRESULT_TYPEDEF_(0x88980412L)")]
        public const int UCEERR_MISSINGBEGINCOMMAND = unchecked((int)(0x88980412));

        [NativeTypeName("#define UCEERR_CHANNELSYNCTIMEDOUT _HRESULT_TYPEDEF_(0x88980413L)")]
        public const int UCEERR_CHANNELSYNCTIMEDOUT = unchecked((int)(0x88980413));

        [NativeTypeName("#define UCEERR_CHANNELSYNCABANDONED _HRESULT_TYPEDEF_(0x88980414L)")]
        public const int UCEERR_CHANNELSYNCABANDONED = unchecked((int)(0x88980414));

        [NativeTypeName("#define UCEERR_UNSUPPORTEDTRANSPORTVERSION _HRESULT_TYPEDEF_(0x88980415L)")]
        public const int UCEERR_UNSUPPORTEDTRANSPORTVERSION = unchecked((int)(0x88980415));

        [NativeTypeName("#define UCEERR_TRANSPORTUNAVAILABLE _HRESULT_TYPEDEF_(0x88980416L)")]
        public const int UCEERR_TRANSPORTUNAVAILABLE = unchecked((int)(0x88980416));

        [NativeTypeName("#define UCEERR_FEEDBACK_UNSUPPORTED _HRESULT_TYPEDEF_(0x88980417L)")]
        public const int UCEERR_FEEDBACK_UNSUPPORTED = unchecked((int)(0x88980417));

        [NativeTypeName("#define UCEERR_COMMANDTRANSPORTDENIED _HRESULT_TYPEDEF_(0x88980418L)")]
        public const int UCEERR_COMMANDTRANSPORTDENIED = unchecked((int)(0x88980418));

        [NativeTypeName("#define UCEERR_GRAPHICSSTREAMUNAVAILABLE _HRESULT_TYPEDEF_(0x88980419L)")]
        public const int UCEERR_GRAPHICSSTREAMUNAVAILABLE = unchecked((int)(0x88980419));

        [NativeTypeName("#define UCEERR_GRAPHICSSTREAMALREADYOPEN _HRESULT_TYPEDEF_(0x88980420L)")]
        public const int UCEERR_GRAPHICSSTREAMALREADYOPEN = unchecked((int)(0x88980420));

        [NativeTypeName("#define UCEERR_TRANSPORTDISCONNECTED _HRESULT_TYPEDEF_(0x88980421L)")]
        public const int UCEERR_TRANSPORTDISCONNECTED = unchecked((int)(0x88980421));

        [NativeTypeName("#define UCEERR_TRANSPORTOVERLOADED _HRESULT_TYPEDEF_(0x88980422L)")]
        public const int UCEERR_TRANSPORTOVERLOADED = unchecked((int)(0x88980422));

        [NativeTypeName("#define UCEERR_PARTITION_ZOMBIED _HRESULT_TYPEDEF_(0x88980423L)")]
        public const int UCEERR_PARTITION_ZOMBIED = unchecked((int)(0x88980423));

        [NativeTypeName("#define MILAVERR_NOCLOCK _HRESULT_TYPEDEF_(0x88980500L)")]
        public const int MILAVERR_NOCLOCK = unchecked((int)(0x88980500));

        [NativeTypeName("#define MILAVERR_NOMEDIATYPE _HRESULT_TYPEDEF_(0x88980501L)")]
        public const int MILAVERR_NOMEDIATYPE = unchecked((int)(0x88980501));

        [NativeTypeName("#define MILAVERR_NOVIDEOMIXER _HRESULT_TYPEDEF_(0x88980502L)")]
        public const int MILAVERR_NOVIDEOMIXER = unchecked((int)(0x88980502));

        [NativeTypeName("#define MILAVERR_NOVIDEOPRESENTER _HRESULT_TYPEDEF_(0x88980503L)")]
        public const int MILAVERR_NOVIDEOPRESENTER = unchecked((int)(0x88980503));

        [NativeTypeName("#define MILAVERR_NOREADYFRAMES _HRESULT_TYPEDEF_(0x88980504L)")]
        public const int MILAVERR_NOREADYFRAMES = unchecked((int)(0x88980504));

        [NativeTypeName("#define MILAVERR_MODULENOTLOADED _HRESULT_TYPEDEF_(0x88980505L)")]
        public const int MILAVERR_MODULENOTLOADED = unchecked((int)(0x88980505));

        [NativeTypeName("#define MILAVERR_WMPFACTORYNOTREGISTERED _HRESULT_TYPEDEF_(0x88980506L)")]
        public const int MILAVERR_WMPFACTORYNOTREGISTERED = unchecked((int)(0x88980506));

        [NativeTypeName("#define MILAVERR_INVALIDWMPVERSION _HRESULT_TYPEDEF_(0x88980507L)")]
        public const int MILAVERR_INVALIDWMPVERSION = unchecked((int)(0x88980507));

        [NativeTypeName("#define MILAVERR_INSUFFICIENTVIDEORESOURCES _HRESULT_TYPEDEF_(0x88980508L)")]
        public const int MILAVERR_INSUFFICIENTVIDEORESOURCES = unchecked((int)(0x88980508));

        [NativeTypeName("#define MILAVERR_VIDEOACCELERATIONNOTAVAILABLE _HRESULT_TYPEDEF_(0x88980509L)")]
        public const int MILAVERR_VIDEOACCELERATIONNOTAVAILABLE = unchecked((int)(0x88980509));

        [NativeTypeName("#define MILAVERR_REQUESTEDTEXTURETOOBIG _HRESULT_TYPEDEF_(0x8898050AL)")]
        public const int MILAVERR_REQUESTEDTEXTURETOOBIG = unchecked((int)(0x8898050A));

        [NativeTypeName("#define MILAVERR_SEEKFAILED _HRESULT_TYPEDEF_(0x8898050BL)")]
        public const int MILAVERR_SEEKFAILED = unchecked((int)(0x8898050B));

        [NativeTypeName("#define MILAVERR_UNEXPECTEDWMPFAILURE _HRESULT_TYPEDEF_(0x8898050CL)")]
        public const int MILAVERR_UNEXPECTEDWMPFAILURE = unchecked((int)(0x8898050C));

        [NativeTypeName("#define MILAVERR_MEDIAPLAYERCLOSED _HRESULT_TYPEDEF_(0x8898050DL)")]
        public const int MILAVERR_MEDIAPLAYERCLOSED = unchecked((int)(0x8898050D));

        [NativeTypeName("#define MILAVERR_UNKNOWNHARDWAREERROR _HRESULT_TYPEDEF_(0x8898050EL)")]
        public const int MILAVERR_UNKNOWNHARDWAREERROR = unchecked((int)(0x8898050E));

        [NativeTypeName("#define MILEFFECTSERR_UNKNOWNPROPERTY _HRESULT_TYPEDEF_(0x8898060EL)")]
        public const int MILEFFECTSERR_UNKNOWNPROPERTY = unchecked((int)(0x8898060E));

        [NativeTypeName("#define MILEFFECTSERR_EFFECTNOTPARTOFGROUP _HRESULT_TYPEDEF_(0x8898060FL)")]
        public const int MILEFFECTSERR_EFFECTNOTPARTOFGROUP = unchecked((int)(0x8898060F));

        [NativeTypeName("#define MILEFFECTSERR_NOINPUTSOURCEATTACHED _HRESULT_TYPEDEF_(0x88980610L)")]
        public const int MILEFFECTSERR_NOINPUTSOURCEATTACHED = unchecked((int)(0x88980610));

        [NativeTypeName("#define MILEFFECTSERR_CONNECTORNOTCONNECTED _HRESULT_TYPEDEF_(0x88980611L)")]
        public const int MILEFFECTSERR_CONNECTORNOTCONNECTED = unchecked((int)(0x88980611));

        [NativeTypeName("#define MILEFFECTSERR_CONNECTORNOTASSOCIATEDWITHEFFECT _HRESULT_TYPEDEF_(0x88980612L)")]
        public const int MILEFFECTSERR_CONNECTORNOTASSOCIATEDWITHEFFECT = unchecked((int)(0x88980612));

        [NativeTypeName("#define MILEFFECTSERR_RESERVED _HRESULT_TYPEDEF_(0x88980613L)")]
        public const int MILEFFECTSERR_RESERVED = unchecked((int)(0x88980613));

        [NativeTypeName("#define MILEFFECTSERR_CYCLEDETECTED _HRESULT_TYPEDEF_(0x88980614L)")]
        public const int MILEFFECTSERR_CYCLEDETECTED = unchecked((int)(0x88980614));

        [NativeTypeName("#define MILEFFECTSERR_EFFECTINMORETHANONEGRAPH _HRESULT_TYPEDEF_(0x88980615L)")]
        public const int MILEFFECTSERR_EFFECTINMORETHANONEGRAPH = unchecked((int)(0x88980615));

        [NativeTypeName("#define MILEFFECTSERR_EFFECTALREADYINAGRAPH _HRESULT_TYPEDEF_(0x88980616L)")]
        public const int MILEFFECTSERR_EFFECTALREADYINAGRAPH = unchecked((int)(0x88980616));

        [NativeTypeName("#define MILEFFECTSERR_EFFECTHASNOCHILDREN _HRESULT_TYPEDEF_(0x88980617L)")]
        public const int MILEFFECTSERR_EFFECTHASNOCHILDREN = unchecked((int)(0x88980617));

        [NativeTypeName("#define MILEFFECTSERR_ALREADYATTACHEDTOLISTENER _HRESULT_TYPEDEF_(0x88980618L)")]
        public const int MILEFFECTSERR_ALREADYATTACHEDTOLISTENER = unchecked((int)(0x88980618));

        [NativeTypeName("#define MILEFFECTSERR_NOTAFFINETRANSFORM _HRESULT_TYPEDEF_(0x88980619L)")]
        public const int MILEFFECTSERR_NOTAFFINETRANSFORM = unchecked((int)(0x88980619));

        [NativeTypeName("#define MILEFFECTSERR_EMPTYBOUNDS _HRESULT_TYPEDEF_(0x8898061AL)")]
        public const int MILEFFECTSERR_EMPTYBOUNDS = unchecked((int)(0x8898061A));

        [NativeTypeName("#define MILEFFECTSERR_OUTPUTSIZETOOLARGE _HRESULT_TYPEDEF_(0x8898061BL)")]
        public const int MILEFFECTSERR_OUTPUTSIZETOOLARGE = unchecked((int)(0x8898061B));

        [NativeTypeName("#define DWMERR_STATE_TRANSITION_FAILED _HRESULT_TYPEDEF_(0x88980700L)")]
        public const int DWMERR_STATE_TRANSITION_FAILED = unchecked((int)(0x88980700));

        [NativeTypeName("#define DWMERR_THEME_FAILED _HRESULT_TYPEDEF_(0x88980701L)")]
        public const int DWMERR_THEME_FAILED = unchecked((int)(0x88980701));

        [NativeTypeName("#define DWMERR_CATASTROPHIC_FAILURE _HRESULT_TYPEDEF_(0x88980702L)")]
        public const int DWMERR_CATASTROPHIC_FAILURE = unchecked((int)(0x88980702));

        [NativeTypeName("#define DCOMPOSITION_ERROR_WINDOW_ALREADY_COMPOSED _HRESULT_TYPEDEF_(0x88980800L)")]
        public const int DCOMPOSITION_ERROR_WINDOW_ALREADY_COMPOSED = unchecked((int)(0x88980800));

        [NativeTypeName("#define DCOMPOSITION_ERROR_SURFACE_BEING_RENDERED _HRESULT_TYPEDEF_(0x88980801L)")]
        public const int DCOMPOSITION_ERROR_SURFACE_BEING_RENDERED = unchecked((int)(0x88980801));

        [NativeTypeName("#define DCOMPOSITION_ERROR_SURFACE_NOT_BEING_RENDERED _HRESULT_TYPEDEF_(0x88980802L)")]
        public const int DCOMPOSITION_ERROR_SURFACE_NOT_BEING_RENDERED = unchecked((int)(0x88980802));

        [NativeTypeName("#define ONL_E_INVALID_AUTHENTICATION_TARGET _HRESULT_TYPEDEF_(0x80860001L)")]
        public const int ONL_E_INVALID_AUTHENTICATION_TARGET = unchecked((int)(0x80860001));

        [NativeTypeName("#define ONL_E_ACCESS_DENIED_BY_TOU _HRESULT_TYPEDEF_(0x80860002L)")]
        public const int ONL_E_ACCESS_DENIED_BY_TOU = unchecked((int)(0x80860002));

        [NativeTypeName("#define ONL_E_INVALID_APPLICATION _HRESULT_TYPEDEF_(0x80860003L)")]
        public const int ONL_E_INVALID_APPLICATION = unchecked((int)(0x80860003));

        [NativeTypeName("#define ONL_E_PASSWORD_UPDATE_REQUIRED _HRESULT_TYPEDEF_(0x80860004L)")]
        public const int ONL_E_PASSWORD_UPDATE_REQUIRED = unchecked((int)(0x80860004));

        [NativeTypeName("#define ONL_E_ACCOUNT_UPDATE_REQUIRED _HRESULT_TYPEDEF_(0x80860005L)")]
        public const int ONL_E_ACCOUNT_UPDATE_REQUIRED = unchecked((int)(0x80860005));

        [NativeTypeName("#define ONL_E_FORCESIGNIN _HRESULT_TYPEDEF_(0x80860006L)")]
        public const int ONL_E_FORCESIGNIN = unchecked((int)(0x80860006));

        [NativeTypeName("#define ONL_E_ACCOUNT_LOCKED _HRESULT_TYPEDEF_(0x80860007L)")]
        public const int ONL_E_ACCOUNT_LOCKED = unchecked((int)(0x80860007));

        [NativeTypeName("#define ONL_E_PARENTAL_CONSENT_REQUIRED _HRESULT_TYPEDEF_(0x80860008L)")]
        public const int ONL_E_PARENTAL_CONSENT_REQUIRED = unchecked((int)(0x80860008));

        [NativeTypeName("#define ONL_E_EMAIL_VERIFICATION_REQUIRED _HRESULT_TYPEDEF_(0x80860009L)")]
        public const int ONL_E_EMAIL_VERIFICATION_REQUIRED = unchecked((int)(0x80860009));

        [NativeTypeName("#define ONL_E_ACCOUNT_SUSPENDED_COMPROIMISE _HRESULT_TYPEDEF_(0x8086000AL)")]
        public const int ONL_E_ACCOUNT_SUSPENDED_COMPROIMISE = unchecked((int)(0x8086000A));

        [NativeTypeName("#define ONL_E_ACCOUNT_SUSPENDED_ABUSE _HRESULT_TYPEDEF_(0x8086000BL)")]
        public const int ONL_E_ACCOUNT_SUSPENDED_ABUSE = unchecked((int)(0x8086000B));

        [NativeTypeName("#define ONL_E_ACTION_REQUIRED _HRESULT_TYPEDEF_(0x8086000CL)")]
        public const int ONL_E_ACTION_REQUIRED = unchecked((int)(0x8086000C));

        [NativeTypeName("#define ONL_CONNECTION_COUNT_LIMIT _HRESULT_TYPEDEF_(0x8086000DL)")]
        public const int ONL_CONNECTION_COUNT_LIMIT = unchecked((int)(0x8086000D));

        [NativeTypeName("#define ONL_E_CONNECTED_ACCOUNT_CAN_NOT_SIGNOUT _HRESULT_TYPEDEF_(0x8086000EL)")]
        public const int ONL_E_CONNECTED_ACCOUNT_CAN_NOT_SIGNOUT = unchecked((int)(0x8086000E));

        [NativeTypeName("#define ONL_E_USER_AUTHENTICATION_REQUIRED _HRESULT_TYPEDEF_(0x8086000FL)")]
        public const int ONL_E_USER_AUTHENTICATION_REQUIRED = unchecked((int)(0x8086000F));

        [NativeTypeName("#define ONL_E_REQUEST_THROTTLED _HRESULT_TYPEDEF_(0x80860010L)")]
        public const int ONL_E_REQUEST_THROTTLED = unchecked((int)(0x80860010));

        [NativeTypeName("#define FA_E_MAX_PERSISTED_ITEMS_REACHED _HRESULT_TYPEDEF_(0x80270220L)")]
        public const int FA_E_MAX_PERSISTED_ITEMS_REACHED = unchecked((int)(0x80270220));

        [NativeTypeName("#define FA_E_HOMEGROUP_NOT_AVAILABLE _HRESULT_TYPEDEF_(0x80270222L)")]
        public const int FA_E_HOMEGROUP_NOT_AVAILABLE = unchecked((int)(0x80270222));

        [NativeTypeName("#define E_MONITOR_RESOLUTION_TOO_LOW _HRESULT_TYPEDEF_(0x80270250L)")]
        public const int E_MONITOR_RESOLUTION_TOO_LOW = unchecked((int)(0x80270250));

        [NativeTypeName("#define E_ELEVATED_ACTIVATION_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80270251L)")]
        public const int E_ELEVATED_ACTIVATION_NOT_SUPPORTED = unchecked((int)(0x80270251));

        [NativeTypeName("#define E_UAC_DISABLED _HRESULT_TYPEDEF_(0x80270252L)")]
        public const int E_UAC_DISABLED = unchecked((int)(0x80270252));

        [NativeTypeName("#define E_FULL_ADMIN_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80270253L)")]
        public const int E_FULL_ADMIN_NOT_SUPPORTED = unchecked((int)(0x80270253));

        [NativeTypeName("#define E_APPLICATION_NOT_REGISTERED _HRESULT_TYPEDEF_(0x80270254L)")]
        public const int E_APPLICATION_NOT_REGISTERED = unchecked((int)(0x80270254));

        [NativeTypeName("#define E_MULTIPLE_EXTENSIONS_FOR_APPLICATION _HRESULT_TYPEDEF_(0x80270255L)")]
        public const int E_MULTIPLE_EXTENSIONS_FOR_APPLICATION = unchecked((int)(0x80270255));

        [NativeTypeName("#define E_MULTIPLE_PACKAGES_FOR_FAMILY _HRESULT_TYPEDEF_(0x80270256L)")]
        public const int E_MULTIPLE_PACKAGES_FOR_FAMILY = unchecked((int)(0x80270256));

        [NativeTypeName("#define E_APPLICATION_MANAGER_NOT_RUNNING _HRESULT_TYPEDEF_(0x80270257L)")]
        public const int E_APPLICATION_MANAGER_NOT_RUNNING = unchecked((int)(0x80270257));

        [NativeTypeName("#define S_STORE_LAUNCHED_FOR_REMEDIATION _HRESULT_TYPEDEF_(0x00270258L)")]
        public const int S_STORE_LAUNCHED_FOR_REMEDIATION = ((int)(0x00270258));

        [NativeTypeName("#define S_APPLICATION_ACTIVATION_ERROR_HANDLED_BY_DIALOG _HRESULT_TYPEDEF_(0x00270259L)")]
        public const int S_APPLICATION_ACTIVATION_ERROR_HANDLED_BY_DIALOG = ((int)(0x00270259));

        [NativeTypeName("#define E_APPLICATION_ACTIVATION_TIMED_OUT _HRESULT_TYPEDEF_(0x8027025AL)")]
        public const int E_APPLICATION_ACTIVATION_TIMED_OUT = unchecked((int)(0x8027025A));

        [NativeTypeName("#define E_APPLICATION_ACTIVATION_EXEC_FAILURE _HRESULT_TYPEDEF_(0x8027025BL)")]
        public const int E_APPLICATION_ACTIVATION_EXEC_FAILURE = unchecked((int)(0x8027025B));

        [NativeTypeName("#define E_APPLICATION_TEMPORARY_LICENSE_ERROR _HRESULT_TYPEDEF_(0x8027025CL)")]
        public const int E_APPLICATION_TEMPORARY_LICENSE_ERROR = unchecked((int)(0x8027025C));

        [NativeTypeName("#define E_APPLICATION_TRIAL_LICENSE_EXPIRED _HRESULT_TYPEDEF_(0x8027025DL)")]
        public const int E_APPLICATION_TRIAL_LICENSE_EXPIRED = unchecked((int)(0x8027025D));

        [NativeTypeName("#define E_SKYDRIVE_ROOT_TARGET_FILE_SYSTEM_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80270260L)")]
        public const int E_SKYDRIVE_ROOT_TARGET_FILE_SYSTEM_NOT_SUPPORTED = unchecked((int)(0x80270260));

        [NativeTypeName("#define E_SKYDRIVE_ROOT_TARGET_OVERLAP _HRESULT_TYPEDEF_(0x80270261L)")]
        public const int E_SKYDRIVE_ROOT_TARGET_OVERLAP = unchecked((int)(0x80270261));

        [NativeTypeName("#define E_SKYDRIVE_ROOT_TARGET_CANNOT_INDEX _HRESULT_TYPEDEF_(0x80270262L)")]
        public const int E_SKYDRIVE_ROOT_TARGET_CANNOT_INDEX = unchecked((int)(0x80270262));

        [NativeTypeName("#define E_SKYDRIVE_FILE_NOT_UPLOADED _HRESULT_TYPEDEF_(0x80270263L)")]
        public const int E_SKYDRIVE_FILE_NOT_UPLOADED = unchecked((int)(0x80270263));

        [NativeTypeName("#define E_SKYDRIVE_UPDATE_AVAILABILITY_FAIL _HRESULT_TYPEDEF_(0x80270264L)")]
        public const int E_SKYDRIVE_UPDATE_AVAILABILITY_FAIL = unchecked((int)(0x80270264));

        [NativeTypeName("#define E_SKYDRIVE_ROOT_TARGET_VOLUME_ROOT_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x80270265L)")]
        public const int E_SKYDRIVE_ROOT_TARGET_VOLUME_ROOT_NOT_SUPPORTED = unchecked((int)(0x80270265));

        [NativeTypeName("#define E_SYNCENGINE_FILE_SIZE_OVER_LIMIT _HRESULT_TYPEDEF_(0x8802B001L)")]
        public const int E_SYNCENGINE_FILE_SIZE_OVER_LIMIT = unchecked((int)(0x8802B001));

        [NativeTypeName("#define E_SYNCENGINE_FILE_SIZE_EXCEEDS_REMAINING_QUOTA _HRESULT_TYPEDEF_(0x8802B002L)")]
        public const int E_SYNCENGINE_FILE_SIZE_EXCEEDS_REMAINING_QUOTA = unchecked((int)(0x8802B002));

        [NativeTypeName("#define E_SYNCENGINE_UNSUPPORTED_FILE_NAME _HRESULT_TYPEDEF_(0x8802B003L)")]
        public const int E_SYNCENGINE_UNSUPPORTED_FILE_NAME = unchecked((int)(0x8802B003));

        [NativeTypeName("#define E_SYNCENGINE_FOLDER_ITEM_COUNT_LIMIT_EXCEEDED _HRESULT_TYPEDEF_(0x8802B004L)")]
        public const int E_SYNCENGINE_FOLDER_ITEM_COUNT_LIMIT_EXCEEDED = unchecked((int)(0x8802B004));

        [NativeTypeName("#define E_SYNCENGINE_FILE_SYNC_PARTNER_ERROR _HRESULT_TYPEDEF_(0x8802B005L)")]
        public const int E_SYNCENGINE_FILE_SYNC_PARTNER_ERROR = unchecked((int)(0x8802B005));

        [NativeTypeName("#define E_SYNCENGINE_SYNC_PAUSED_BY_SERVICE _HRESULT_TYPEDEF_(0x8802B006L)")]
        public const int E_SYNCENGINE_SYNC_PAUSED_BY_SERVICE = unchecked((int)(0x8802B006));

        [NativeTypeName("#define E_SYNCENGINE_FILE_IDENTIFIER_UNKNOWN _HRESULT_TYPEDEF_(0x8802C002L)")]
        public const int E_SYNCENGINE_FILE_IDENTIFIER_UNKNOWN = unchecked((int)(0x8802C002));

        [NativeTypeName("#define E_SYNCENGINE_SERVICE_AUTHENTICATION_FAILED _HRESULT_TYPEDEF_(0x8802C003L)")]
        public const int E_SYNCENGINE_SERVICE_AUTHENTICATION_FAILED = unchecked((int)(0x8802C003));

        [NativeTypeName("#define E_SYNCENGINE_UNKNOWN_SERVICE_ERROR _HRESULT_TYPEDEF_(0x8802C004L)")]
        public const int E_SYNCENGINE_UNKNOWN_SERVICE_ERROR = unchecked((int)(0x8802C004));

        [NativeTypeName("#define E_SYNCENGINE_SERVICE_RETURNED_UNEXPECTED_SIZE _HRESULT_TYPEDEF_(0x8802C005L)")]
        public const int E_SYNCENGINE_SERVICE_RETURNED_UNEXPECTED_SIZE = unchecked((int)(0x8802C005));

        [NativeTypeName("#define E_SYNCENGINE_REQUEST_BLOCKED_BY_SERVICE _HRESULT_TYPEDEF_(0x8802C006L)")]
        public const int E_SYNCENGINE_REQUEST_BLOCKED_BY_SERVICE = unchecked((int)(0x8802C006));

        [NativeTypeName("#define E_SYNCENGINE_REQUEST_BLOCKED_DUE_TO_CLIENT_ERROR _HRESULT_TYPEDEF_(0x8802C007L)")]
        public const int E_SYNCENGINE_REQUEST_BLOCKED_DUE_TO_CLIENT_ERROR = unchecked((int)(0x8802C007));

        [NativeTypeName("#define E_SYNCENGINE_FOLDER_INACCESSIBLE _HRESULT_TYPEDEF_(0x8802D001L)")]
        public const int E_SYNCENGINE_FOLDER_INACCESSIBLE = unchecked((int)(0x8802D001));

        [NativeTypeName("#define E_SYNCENGINE_UNSUPPORTED_FOLDER_NAME _HRESULT_TYPEDEF_(0x8802D002L)")]
        public const int E_SYNCENGINE_UNSUPPORTED_FOLDER_NAME = unchecked((int)(0x8802D002));

        [NativeTypeName("#define E_SYNCENGINE_UNSUPPORTED_MARKET _HRESULT_TYPEDEF_(0x8802D003L)")]
        public const int E_SYNCENGINE_UNSUPPORTED_MARKET = unchecked((int)(0x8802D003));

        [NativeTypeName("#define E_SYNCENGINE_PATH_LENGTH_LIMIT_EXCEEDED _HRESULT_TYPEDEF_(0x8802D004L)")]
        public const int E_SYNCENGINE_PATH_LENGTH_LIMIT_EXCEEDED = unchecked((int)(0x8802D004));

        [NativeTypeName("#define E_SYNCENGINE_REMOTE_PATH_LENGTH_LIMIT_EXCEEDED _HRESULT_TYPEDEF_(0x8802D005L)")]
        public const int E_SYNCENGINE_REMOTE_PATH_LENGTH_LIMIT_EXCEEDED = unchecked((int)(0x8802D005));

        [NativeTypeName("#define E_SYNCENGINE_CLIENT_UPDATE_NEEDED _HRESULT_TYPEDEF_(0x8802D006L)")]
        public const int E_SYNCENGINE_CLIENT_UPDATE_NEEDED = unchecked((int)(0x8802D006));

        [NativeTypeName("#define E_SYNCENGINE_PROXY_AUTHENTICATION_REQUIRED _HRESULT_TYPEDEF_(0x8802D007L)")]
        public const int E_SYNCENGINE_PROXY_AUTHENTICATION_REQUIRED = unchecked((int)(0x8802D007));

        [NativeTypeName("#define E_SYNCENGINE_STORAGE_SERVICE_PROVISIONING_FAILED _HRESULT_TYPEDEF_(0x8802D008L)")]
        public const int E_SYNCENGINE_STORAGE_SERVICE_PROVISIONING_FAILED = unchecked((int)(0x8802D008));

        [NativeTypeName("#define E_SYNCENGINE_UNSUPPORTED_REPARSE_POINT _HRESULT_TYPEDEF_(0x8802D009L)")]
        public const int E_SYNCENGINE_UNSUPPORTED_REPARSE_POINT = unchecked((int)(0x8802D009));

        [NativeTypeName("#define E_SYNCENGINE_STORAGE_SERVICE_BLOCKED _HRESULT_TYPEDEF_(0x8802D00AL)")]
        public const int E_SYNCENGINE_STORAGE_SERVICE_BLOCKED = unchecked((int)(0x8802D00A));

        [NativeTypeName("#define E_SYNCENGINE_FOLDER_IN_REDIRECTION _HRESULT_TYPEDEF_(0x8802D00BL)")]
        public const int E_SYNCENGINE_FOLDER_IN_REDIRECTION = unchecked((int)(0x8802D00B));

        [NativeTypeName("#define EAS_E_POLICY_NOT_MANAGED_BY_OS _HRESULT_TYPEDEF_(0x80550001L)")]
        public const int EAS_E_POLICY_NOT_MANAGED_BY_OS = unchecked((int)(0x80550001));

        [NativeTypeName("#define EAS_E_POLICY_COMPLIANT_WITH_ACTIONS _HRESULT_TYPEDEF_(0x80550002L)")]
        public const int EAS_E_POLICY_COMPLIANT_WITH_ACTIONS = unchecked((int)(0x80550002));

        [NativeTypeName("#define EAS_E_REQUESTED_POLICY_NOT_ENFORCEABLE _HRESULT_TYPEDEF_(0x80550003L)")]
        public const int EAS_E_REQUESTED_POLICY_NOT_ENFORCEABLE = unchecked((int)(0x80550003));

        [NativeTypeName("#define EAS_E_CURRENT_USER_HAS_BLANK_PASSWORD _HRESULT_TYPEDEF_(0x80550004L)")]
        public const int EAS_E_CURRENT_USER_HAS_BLANK_PASSWORD = unchecked((int)(0x80550004));

        [NativeTypeName("#define EAS_E_REQUESTED_POLICY_PASSWORD_EXPIRATION_INCOMPATIBLE _HRESULT_TYPEDEF_(0x80550005L)")]
        public const int EAS_E_REQUESTED_POLICY_PASSWORD_EXPIRATION_INCOMPATIBLE = unchecked((int)(0x80550005));

        [NativeTypeName("#define EAS_E_USER_CANNOT_CHANGE_PASSWORD _HRESULT_TYPEDEF_(0x80550006L)")]
        public const int EAS_E_USER_CANNOT_CHANGE_PASSWORD = unchecked((int)(0x80550006));

        [NativeTypeName("#define EAS_E_ADMINS_HAVE_BLANK_PASSWORD _HRESULT_TYPEDEF_(0x80550007L)")]
        public const int EAS_E_ADMINS_HAVE_BLANK_PASSWORD = unchecked((int)(0x80550007));

        [NativeTypeName("#define EAS_E_ADMINS_CANNOT_CHANGE_PASSWORD _HRESULT_TYPEDEF_(0x80550008L)")]
        public const int EAS_E_ADMINS_CANNOT_CHANGE_PASSWORD = unchecked((int)(0x80550008));

        [NativeTypeName("#define EAS_E_LOCAL_CONTROLLED_USERS_CANNOT_CHANGE_PASSWORD _HRESULT_TYPEDEF_(0x80550009L)")]
        public const int EAS_E_LOCAL_CONTROLLED_USERS_CANNOT_CHANGE_PASSWORD = unchecked((int)(0x80550009));

        [NativeTypeName("#define EAS_E_PASSWORD_POLICY_NOT_ENFORCEABLE_FOR_CONNECTED_ADMINS _HRESULT_TYPEDEF_(0x8055000AL)")]
        public const int EAS_E_PASSWORD_POLICY_NOT_ENFORCEABLE_FOR_CONNECTED_ADMINS = unchecked((int)(0x8055000A));

        [NativeTypeName("#define EAS_E_CONNECTED_ADMINS_NEED_TO_CHANGE_PASSWORD _HRESULT_TYPEDEF_(0x8055000BL)")]
        public const int EAS_E_CONNECTED_ADMINS_NEED_TO_CHANGE_PASSWORD = unchecked((int)(0x8055000B));

        [NativeTypeName("#define EAS_E_PASSWORD_POLICY_NOT_ENFORCEABLE_FOR_CURRENT_CONNECTED_USER _HRESULT_TYPEDEF_(0x8055000CL)")]
        public const int EAS_E_PASSWORD_POLICY_NOT_ENFORCEABLE_FOR_CURRENT_CONNECTED_USER = unchecked((int)(0x8055000C));

        [NativeTypeName("#define EAS_E_CURRENT_CONNECTED_USER_NEED_TO_CHANGE_PASSWORD _HRESULT_TYPEDEF_(0x8055000DL)")]
        public const int EAS_E_CURRENT_CONNECTED_USER_NEED_TO_CHANGE_PASSWORD = unchecked((int)(0x8055000D));

        [NativeTypeName("#define WEB_E_UNSUPPORTED_FORMAT _HRESULT_TYPEDEF_(0x83750001L)")]
        public const int WEB_E_UNSUPPORTED_FORMAT = unchecked((int)(0x83750001));

        [NativeTypeName("#define WEB_E_INVALID_XML _HRESULT_TYPEDEF_(0x83750002L)")]
        public const int WEB_E_INVALID_XML = unchecked((int)(0x83750002));

        [NativeTypeName("#define WEB_E_MISSING_REQUIRED_ELEMENT _HRESULT_TYPEDEF_(0x83750003L)")]
        public const int WEB_E_MISSING_REQUIRED_ELEMENT = unchecked((int)(0x83750003));

        [NativeTypeName("#define WEB_E_MISSING_REQUIRED_ATTRIBUTE _HRESULT_TYPEDEF_(0x83750004L)")]
        public const int WEB_E_MISSING_REQUIRED_ATTRIBUTE = unchecked((int)(0x83750004));

        [NativeTypeName("#define WEB_E_UNEXPECTED_CONTENT _HRESULT_TYPEDEF_(0x83750005L)")]
        public const int WEB_E_UNEXPECTED_CONTENT = unchecked((int)(0x83750005));

        [NativeTypeName("#define WEB_E_RESOURCE_TOO_LARGE _HRESULT_TYPEDEF_(0x83750006L)")]
        public const int WEB_E_RESOURCE_TOO_LARGE = unchecked((int)(0x83750006));

        [NativeTypeName("#define WEB_E_INVALID_JSON_STRING _HRESULT_TYPEDEF_(0x83750007L)")]
        public const int WEB_E_INVALID_JSON_STRING = unchecked((int)(0x83750007));

        [NativeTypeName("#define WEB_E_INVALID_JSON_NUMBER _HRESULT_TYPEDEF_(0x83750008L)")]
        public const int WEB_E_INVALID_JSON_NUMBER = unchecked((int)(0x83750008));

        [NativeTypeName("#define WEB_E_JSON_VALUE_NOT_FOUND _HRESULT_TYPEDEF_(0x83750009L)")]
        public const int WEB_E_JSON_VALUE_NOT_FOUND = unchecked((int)(0x83750009));

        [NativeTypeName("#define HTTP_E_STATUS_UNEXPECTED _HRESULT_TYPEDEF_(0x80190001L)")]
        public const int HTTP_E_STATUS_UNEXPECTED = unchecked((int)(0x80190001));

        [NativeTypeName("#define HTTP_E_STATUS_UNEXPECTED_REDIRECTION _HRESULT_TYPEDEF_(0x80190003L)")]
        public const int HTTP_E_STATUS_UNEXPECTED_REDIRECTION = unchecked((int)(0x80190003));

        [NativeTypeName("#define HTTP_E_STATUS_UNEXPECTED_CLIENT_ERROR _HRESULT_TYPEDEF_(0x80190004L)")]
        public const int HTTP_E_STATUS_UNEXPECTED_CLIENT_ERROR = unchecked((int)(0x80190004));

        [NativeTypeName("#define HTTP_E_STATUS_UNEXPECTED_SERVER_ERROR _HRESULT_TYPEDEF_(0x80190005L)")]
        public const int HTTP_E_STATUS_UNEXPECTED_SERVER_ERROR = unchecked((int)(0x80190005));

        [NativeTypeName("#define HTTP_E_STATUS_AMBIGUOUS _HRESULT_TYPEDEF_(0x8019012CL)")]
        public const int HTTP_E_STATUS_AMBIGUOUS = unchecked((int)(0x8019012C));

        [NativeTypeName("#define HTTP_E_STATUS_MOVED _HRESULT_TYPEDEF_(0x8019012DL)")]
        public const int HTTP_E_STATUS_MOVED = unchecked((int)(0x8019012D));

        [NativeTypeName("#define HTTP_E_STATUS_REDIRECT _HRESULT_TYPEDEF_(0x8019012EL)")]
        public const int HTTP_E_STATUS_REDIRECT = unchecked((int)(0x8019012E));

        [NativeTypeName("#define HTTP_E_STATUS_REDIRECT_METHOD _HRESULT_TYPEDEF_(0x8019012FL)")]
        public const int HTTP_E_STATUS_REDIRECT_METHOD = unchecked((int)(0x8019012F));

        [NativeTypeName("#define HTTP_E_STATUS_NOT_MODIFIED _HRESULT_TYPEDEF_(0x80190130L)")]
        public const int HTTP_E_STATUS_NOT_MODIFIED = unchecked((int)(0x80190130));

        [NativeTypeName("#define HTTP_E_STATUS_USE_PROXY _HRESULT_TYPEDEF_(0x80190131L)")]
        public const int HTTP_E_STATUS_USE_PROXY = unchecked((int)(0x80190131));

        [NativeTypeName("#define HTTP_E_STATUS_REDIRECT_KEEP_VERB _HRESULT_TYPEDEF_(0x80190133L)")]
        public const int HTTP_E_STATUS_REDIRECT_KEEP_VERB = unchecked((int)(0x80190133));

        [NativeTypeName("#define HTTP_E_STATUS_BAD_REQUEST _HRESULT_TYPEDEF_(0x80190190L)")]
        public const int HTTP_E_STATUS_BAD_REQUEST = unchecked((int)(0x80190190));

        [NativeTypeName("#define HTTP_E_STATUS_DENIED _HRESULT_TYPEDEF_(0x80190191L)")]
        public const int HTTP_E_STATUS_DENIED = unchecked((int)(0x80190191));

        [NativeTypeName("#define HTTP_E_STATUS_PAYMENT_REQ _HRESULT_TYPEDEF_(0x80190192L)")]
        public const int HTTP_E_STATUS_PAYMENT_REQ = unchecked((int)(0x80190192));

        [NativeTypeName("#define HTTP_E_STATUS_FORBIDDEN _HRESULT_TYPEDEF_(0x80190193L)")]
        public const int HTTP_E_STATUS_FORBIDDEN = unchecked((int)(0x80190193));

        [NativeTypeName("#define HTTP_E_STATUS_NOT_FOUND _HRESULT_TYPEDEF_(0x80190194L)")]
        public const int HTTP_E_STATUS_NOT_FOUND = unchecked((int)(0x80190194));

        [NativeTypeName("#define HTTP_E_STATUS_BAD_METHOD _HRESULT_TYPEDEF_(0x80190195L)")]
        public const int HTTP_E_STATUS_BAD_METHOD = unchecked((int)(0x80190195));

        [NativeTypeName("#define HTTP_E_STATUS_NONE_ACCEPTABLE _HRESULT_TYPEDEF_(0x80190196L)")]
        public const int HTTP_E_STATUS_NONE_ACCEPTABLE = unchecked((int)(0x80190196));

        [NativeTypeName("#define HTTP_E_STATUS_PROXY_AUTH_REQ _HRESULT_TYPEDEF_(0x80190197L)")]
        public const int HTTP_E_STATUS_PROXY_AUTH_REQ = unchecked((int)(0x80190197));

        [NativeTypeName("#define HTTP_E_STATUS_REQUEST_TIMEOUT _HRESULT_TYPEDEF_(0x80190198L)")]
        public const int HTTP_E_STATUS_REQUEST_TIMEOUT = unchecked((int)(0x80190198));

        [NativeTypeName("#define HTTP_E_STATUS_CONFLICT _HRESULT_TYPEDEF_(0x80190199L)")]
        public const int HTTP_E_STATUS_CONFLICT = unchecked((int)(0x80190199));

        [NativeTypeName("#define HTTP_E_STATUS_GONE _HRESULT_TYPEDEF_(0x8019019AL)")]
        public const int HTTP_E_STATUS_GONE = unchecked((int)(0x8019019A));

        [NativeTypeName("#define HTTP_E_STATUS_LENGTH_REQUIRED _HRESULT_TYPEDEF_(0x8019019BL)")]
        public const int HTTP_E_STATUS_LENGTH_REQUIRED = unchecked((int)(0x8019019B));

        [NativeTypeName("#define HTTP_E_STATUS_PRECOND_FAILED _HRESULT_TYPEDEF_(0x8019019CL)")]
        public const int HTTP_E_STATUS_PRECOND_FAILED = unchecked((int)(0x8019019C));

        [NativeTypeName("#define HTTP_E_STATUS_REQUEST_TOO_LARGE _HRESULT_TYPEDEF_(0x8019019DL)")]
        public const int HTTP_E_STATUS_REQUEST_TOO_LARGE = unchecked((int)(0x8019019D));

        [NativeTypeName("#define HTTP_E_STATUS_URI_TOO_LONG _HRESULT_TYPEDEF_(0x8019019EL)")]
        public const int HTTP_E_STATUS_URI_TOO_LONG = unchecked((int)(0x8019019E));

        [NativeTypeName("#define HTTP_E_STATUS_UNSUPPORTED_MEDIA _HRESULT_TYPEDEF_(0x8019019FL)")]
        public const int HTTP_E_STATUS_UNSUPPORTED_MEDIA = unchecked((int)(0x8019019F));

        [NativeTypeName("#define HTTP_E_STATUS_RANGE_NOT_SATISFIABLE _HRESULT_TYPEDEF_(0x801901A0L)")]
        public const int HTTP_E_STATUS_RANGE_NOT_SATISFIABLE = unchecked((int)(0x801901A0));

        [NativeTypeName("#define HTTP_E_STATUS_EXPECTATION_FAILED _HRESULT_TYPEDEF_(0x801901A1L)")]
        public const int HTTP_E_STATUS_EXPECTATION_FAILED = unchecked((int)(0x801901A1));

        [NativeTypeName("#define HTTP_E_STATUS_SERVER_ERROR _HRESULT_TYPEDEF_(0x801901F4L)")]
        public const int HTTP_E_STATUS_SERVER_ERROR = unchecked((int)(0x801901F4));

        [NativeTypeName("#define HTTP_E_STATUS_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x801901F5L)")]
        public const int HTTP_E_STATUS_NOT_SUPPORTED = unchecked((int)(0x801901F5));

        [NativeTypeName("#define HTTP_E_STATUS_BAD_GATEWAY _HRESULT_TYPEDEF_(0x801901F6L)")]
        public const int HTTP_E_STATUS_BAD_GATEWAY = unchecked((int)(0x801901F6));

        [NativeTypeName("#define HTTP_E_STATUS_SERVICE_UNAVAIL _HRESULT_TYPEDEF_(0x801901F7L)")]
        public const int HTTP_E_STATUS_SERVICE_UNAVAIL = unchecked((int)(0x801901F7));

        [NativeTypeName("#define HTTP_E_STATUS_GATEWAY_TIMEOUT _HRESULT_TYPEDEF_(0x801901F8L)")]
        public const int HTTP_E_STATUS_GATEWAY_TIMEOUT = unchecked((int)(0x801901F8));

        [NativeTypeName("#define HTTP_E_STATUS_VERSION_NOT_SUP _HRESULT_TYPEDEF_(0x801901F9L)")]
        public const int HTTP_E_STATUS_VERSION_NOT_SUP = unchecked((int)(0x801901F9));

        [NativeTypeName("#define E_INVALID_PROTOCOL_OPERATION _HRESULT_TYPEDEF_(0x83760001L)")]
        public const int E_INVALID_PROTOCOL_OPERATION = unchecked((int)(0x83760001));

        [NativeTypeName("#define E_INVALID_PROTOCOL_FORMAT _HRESULT_TYPEDEF_(0x83760002L)")]
        public const int E_INVALID_PROTOCOL_FORMAT = unchecked((int)(0x83760002));

        [NativeTypeName("#define E_PROTOCOL_EXTENSIONS_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x83760003L)")]
        public const int E_PROTOCOL_EXTENSIONS_NOT_SUPPORTED = unchecked((int)(0x83760003));

        [NativeTypeName("#define E_SUBPROTOCOL_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x83760004L)")]
        public const int E_SUBPROTOCOL_NOT_SUPPORTED = unchecked((int)(0x83760004));

        [NativeTypeName("#define E_PROTOCOL_VERSION_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x83760005L)")]
        public const int E_PROTOCOL_VERSION_NOT_SUPPORTED = unchecked((int)(0x83760005));

        [NativeTypeName("#define INPUT_E_OUT_OF_ORDER _HRESULT_TYPEDEF_(0x80400000L)")]
        public const int INPUT_E_OUT_OF_ORDER = unchecked((int)(0x80400000));

        [NativeTypeName("#define INPUT_E_REENTRANCY _HRESULT_TYPEDEF_(0x80400001L)")]
        public const int INPUT_E_REENTRANCY = unchecked((int)(0x80400001));

        [NativeTypeName("#define INPUT_E_MULTIMODAL _HRESULT_TYPEDEF_(0x80400002L)")]
        public const int INPUT_E_MULTIMODAL = unchecked((int)(0x80400002));

        [NativeTypeName("#define INPUT_E_PACKET _HRESULT_TYPEDEF_(0x80400003L)")]
        public const int INPUT_E_PACKET = unchecked((int)(0x80400003));

        [NativeTypeName("#define INPUT_E_FRAME _HRESULT_TYPEDEF_(0x80400004L)")]
        public const int INPUT_E_FRAME = unchecked((int)(0x80400004));

        [NativeTypeName("#define INPUT_E_HISTORY _HRESULT_TYPEDEF_(0x80400005L)")]
        public const int INPUT_E_HISTORY = unchecked((int)(0x80400005));

        [NativeTypeName("#define INPUT_E_DEVICE_INFO _HRESULT_TYPEDEF_(0x80400006L)")]
        public const int INPUT_E_DEVICE_INFO = unchecked((int)(0x80400006));

        [NativeTypeName("#define INPUT_E_TRANSFORM _HRESULT_TYPEDEF_(0x80400007L)")]
        public const int INPUT_E_TRANSFORM = unchecked((int)(0x80400007));

        [NativeTypeName("#define INPUT_E_DEVICE_PROPERTY _HRESULT_TYPEDEF_(0x80400008L)")]
        public const int INPUT_E_DEVICE_PROPERTY = unchecked((int)(0x80400008));

        [NativeTypeName("#define ERROR_DBG_CREATE_PROCESS_FAILURE_LOCKDOWN _HRESULT_TYPEDEF_(0x80B00001L)")]
        public const int ERROR_DBG_CREATE_PROCESS_FAILURE_LOCKDOWN = unchecked((int)(0x80B00001));

        [NativeTypeName("#define ERROR_DBG_ATTACH_PROCESS_FAILURE_LOCKDOWN _HRESULT_TYPEDEF_(0x80B00002L)")]
        public const int ERROR_DBG_ATTACH_PROCESS_FAILURE_LOCKDOWN = unchecked((int)(0x80B00002));

        [NativeTypeName("#define ERROR_DBG_CONNECT_SERVER_FAILURE_LOCKDOWN _HRESULT_TYPEDEF_(0x80B00003L)")]
        public const int ERROR_DBG_CONNECT_SERVER_FAILURE_LOCKDOWN = unchecked((int)(0x80B00003));

        [NativeTypeName("#define ERROR_DBG_START_SERVER_FAILURE_LOCKDOWN _HRESULT_TYPEDEF_(0x80B00004L)")]
        public const int ERROR_DBG_START_SERVER_FAILURE_LOCKDOWN = unchecked((int)(0x80B00004));

        [NativeTypeName("#define ERROR_IO_PREEMPTED _HRESULT_TYPEDEF_(0x89010001L)")]
        public const int ERROR_IO_PREEMPTED = unchecked((int)(0x89010001));

        [NativeTypeName("#define JSCRIPT_E_CANTEXECUTE _HRESULT_TYPEDEF_(0x89020001L)")]
        public const int JSCRIPT_E_CANTEXECUTE = unchecked((int)(0x89020001));

        [NativeTypeName("#define WEP_E_NOT_PROVISIONED_ON_ALL_VOLUMES _HRESULT_TYPEDEF_(0x88010001L)")]
        public const int WEP_E_NOT_PROVISIONED_ON_ALL_VOLUMES = unchecked((int)(0x88010001));

        [NativeTypeName("#define WEP_E_FIXED_DATA_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x88010002L)")]
        public const int WEP_E_FIXED_DATA_NOT_SUPPORTED = unchecked((int)(0x88010002));

        [NativeTypeName("#define WEP_E_HARDWARE_NOT_COMPLIANT _HRESULT_TYPEDEF_(0x88010003L)")]
        public const int WEP_E_HARDWARE_NOT_COMPLIANT = unchecked((int)(0x88010003));

        [NativeTypeName("#define WEP_E_LOCK_NOT_CONFIGURED _HRESULT_TYPEDEF_(0x88010004L)")]
        public const int WEP_E_LOCK_NOT_CONFIGURED = unchecked((int)(0x88010004));

        [NativeTypeName("#define WEP_E_PROTECTION_SUSPENDED _HRESULT_TYPEDEF_(0x88010005L)")]
        public const int WEP_E_PROTECTION_SUSPENDED = unchecked((int)(0x88010005));

        [NativeTypeName("#define WEP_E_NO_LICENSE _HRESULT_TYPEDEF_(0x88010006L)")]
        public const int WEP_E_NO_LICENSE = unchecked((int)(0x88010006));

        [NativeTypeName("#define WEP_E_OS_NOT_PROTECTED _HRESULT_TYPEDEF_(0x88010007L)")]
        public const int WEP_E_OS_NOT_PROTECTED = unchecked((int)(0x88010007));

        [NativeTypeName("#define WEP_E_UNEXPECTED_FAIL _HRESULT_TYPEDEF_(0x88010008L)")]
        public const int WEP_E_UNEXPECTED_FAIL = unchecked((int)(0x88010008));

        [NativeTypeName("#define WEP_E_BUFFER_TOO_LARGE _HRESULT_TYPEDEF_(0x88010009L)")]
        public const int WEP_E_BUFFER_TOO_LARGE = unchecked((int)(0x88010009));

        [NativeTypeName("#define ERROR_SVHDX_ERROR_STORED _HRESULT_TYPEDEF_(0xC05C0000L)")]
        public const int ERROR_SVHDX_ERROR_STORED = unchecked((int)(0xC05C0000));

        [NativeTypeName("#define ERROR_SVHDX_ERROR_NOT_AVAILABLE _HRESULT_TYPEDEF_(0xC05CFF00L)")]
        public const int ERROR_SVHDX_ERROR_NOT_AVAILABLE = unchecked((int)(0xC05CFF00));

        [NativeTypeName("#define ERROR_SVHDX_UNIT_ATTENTION_AVAILABLE _HRESULT_TYPEDEF_(0xC05CFF01L)")]
        public const int ERROR_SVHDX_UNIT_ATTENTION_AVAILABLE = unchecked((int)(0xC05CFF01));

        [NativeTypeName("#define ERROR_SVHDX_UNIT_ATTENTION_CAPACITY_DATA_CHANGED _HRESULT_TYPEDEF_(0xC05CFF02L)")]
        public const int ERROR_SVHDX_UNIT_ATTENTION_CAPACITY_DATA_CHANGED = unchecked((int)(0xC05CFF02));

        [NativeTypeName("#define ERROR_SVHDX_UNIT_ATTENTION_RESERVATIONS_PREEMPTED _HRESULT_TYPEDEF_(0xC05CFF03L)")]
        public const int ERROR_SVHDX_UNIT_ATTENTION_RESERVATIONS_PREEMPTED = unchecked((int)(0xC05CFF03));

        [NativeTypeName("#define ERROR_SVHDX_UNIT_ATTENTION_RESERVATIONS_RELEASED _HRESULT_TYPEDEF_(0xC05CFF04L)")]
        public const int ERROR_SVHDX_UNIT_ATTENTION_RESERVATIONS_RELEASED = unchecked((int)(0xC05CFF04));

        [NativeTypeName("#define ERROR_SVHDX_UNIT_ATTENTION_REGISTRATIONS_PREEMPTED _HRESULT_TYPEDEF_(0xC05CFF05L)")]
        public const int ERROR_SVHDX_UNIT_ATTENTION_REGISTRATIONS_PREEMPTED = unchecked((int)(0xC05CFF05));

        [NativeTypeName("#define ERROR_SVHDX_UNIT_ATTENTION_OPERATING_DEFINITION_CHANGED _HRESULT_TYPEDEF_(0xC05CFF06L)")]
        public const int ERROR_SVHDX_UNIT_ATTENTION_OPERATING_DEFINITION_CHANGED = unchecked((int)(0xC05CFF06));

        [NativeTypeName("#define ERROR_SVHDX_RESERVATION_CONFLICT _HRESULT_TYPEDEF_(0xC05CFF07L)")]
        public const int ERROR_SVHDX_RESERVATION_CONFLICT = unchecked((int)(0xC05CFF07));

        [NativeTypeName("#define ERROR_SVHDX_WRONG_FILE_TYPE _HRESULT_TYPEDEF_(0xC05CFF08L)")]
        public const int ERROR_SVHDX_WRONG_FILE_TYPE = unchecked((int)(0xC05CFF08));

        [NativeTypeName("#define ERROR_SVHDX_VERSION_MISMATCH _HRESULT_TYPEDEF_(0xC05CFF09L)")]
        public const int ERROR_SVHDX_VERSION_MISMATCH = unchecked((int)(0xC05CFF09));

        [NativeTypeName("#define ERROR_VHD_SHARED _HRESULT_TYPEDEF_(0xC05CFF0AL)")]
        public const int ERROR_VHD_SHARED = unchecked((int)(0xC05CFF0A));

        [NativeTypeName("#define ERROR_SVHDX_NO_INITIATOR _HRESULT_TYPEDEF_(0xC05CFF0BL)")]
        public const int ERROR_SVHDX_NO_INITIATOR = unchecked((int)(0xC05CFF0B));

        [NativeTypeName("#define ERROR_VHDSET_BACKING_STORAGE_NOT_FOUND _HRESULT_TYPEDEF_(0xC05CFF0CL)")]
        public const int ERROR_VHDSET_BACKING_STORAGE_NOT_FOUND = unchecked((int)(0xC05CFF0C));

        [NativeTypeName("#define ERROR_SMB_NO_PREAUTH_INTEGRITY_HASH_OVERLAP _HRESULT_TYPEDEF_(0xC05D0000L)")]
        public const int ERROR_SMB_NO_PREAUTH_INTEGRITY_HASH_OVERLAP = unchecked((int)(0xC05D0000));

        [NativeTypeName("#define ERROR_SMB_BAD_CLUSTER_DIALECT _HRESULT_TYPEDEF_(0xC05D0001L)")]
        public const int ERROR_SMB_BAD_CLUSTER_DIALECT = unchecked((int)(0xC05D0001));

        [NativeTypeName("#define WININET_E_OUT_OF_HANDLES _HRESULT_TYPEDEF_(0x80072EE1L)")]
        public const int WININET_E_OUT_OF_HANDLES = unchecked((int)(0x80072EE1));

        [NativeTypeName("#define WININET_E_TIMEOUT _HRESULT_TYPEDEF_(0x80072EE2L)")]
        public const int WININET_E_TIMEOUT = unchecked((int)(0x80072EE2));

        [NativeTypeName("#define WININET_E_EXTENDED_ERROR _HRESULT_TYPEDEF_(0x80072EE3L)")]
        public const int WININET_E_EXTENDED_ERROR = unchecked((int)(0x80072EE3));

        [NativeTypeName("#define WININET_E_INTERNAL_ERROR _HRESULT_TYPEDEF_(0x80072EE4L)")]
        public const int WININET_E_INTERNAL_ERROR = unchecked((int)(0x80072EE4));

        [NativeTypeName("#define WININET_E_INVALID_URL _HRESULT_TYPEDEF_(0x80072EE5L)")]
        public const int WININET_E_INVALID_URL = unchecked((int)(0x80072EE5));

        [NativeTypeName("#define WININET_E_UNRECOGNIZED_SCHEME _HRESULT_TYPEDEF_(0x80072EE6L)")]
        public const int WININET_E_UNRECOGNIZED_SCHEME = unchecked((int)(0x80072EE6));

        [NativeTypeName("#define WININET_E_NAME_NOT_RESOLVED _HRESULT_TYPEDEF_(0x80072EE7L)")]
        public const int WININET_E_NAME_NOT_RESOLVED = unchecked((int)(0x80072EE7));

        [NativeTypeName("#define WININET_E_PROTOCOL_NOT_FOUND _HRESULT_TYPEDEF_(0x80072EE8L)")]
        public const int WININET_E_PROTOCOL_NOT_FOUND = unchecked((int)(0x80072EE8));

        [NativeTypeName("#define WININET_E_INVALID_OPTION _HRESULT_TYPEDEF_(0x80072EE9L)")]
        public const int WININET_E_INVALID_OPTION = unchecked((int)(0x80072EE9));

        [NativeTypeName("#define WININET_E_BAD_OPTION_LENGTH _HRESULT_TYPEDEF_(0x80072EEAL)")]
        public const int WININET_E_BAD_OPTION_LENGTH = unchecked((int)(0x80072EEA));

        [NativeTypeName("#define WININET_E_OPTION_NOT_SETTABLE _HRESULT_TYPEDEF_(0x80072EEBL)")]
        public const int WININET_E_OPTION_NOT_SETTABLE = unchecked((int)(0x80072EEB));

        [NativeTypeName("#define WININET_E_SHUTDOWN _HRESULT_TYPEDEF_(0x80072EECL)")]
        public const int WININET_E_SHUTDOWN = unchecked((int)(0x80072EEC));

        [NativeTypeName("#define WININET_E_INCORRECT_USER_NAME _HRESULT_TYPEDEF_(0x80072EEDL)")]
        public const int WININET_E_INCORRECT_USER_NAME = unchecked((int)(0x80072EED));

        [NativeTypeName("#define WININET_E_INCORRECT_PASSWORD _HRESULT_TYPEDEF_(0x80072EEEL)")]
        public const int WININET_E_INCORRECT_PASSWORD = unchecked((int)(0x80072EEE));

        [NativeTypeName("#define WININET_E_LOGIN_FAILURE _HRESULT_TYPEDEF_(0x80072EEFL)")]
        public const int WININET_E_LOGIN_FAILURE = unchecked((int)(0x80072EEF));

        [NativeTypeName("#define WININET_E_INVALID_OPERATION _HRESULT_TYPEDEF_(0x80072EF0L)")]
        public const int WININET_E_INVALID_OPERATION = unchecked((int)(0x80072EF0));

        [NativeTypeName("#define WININET_E_OPERATION_CANCELLED _HRESULT_TYPEDEF_(0x80072EF1L)")]
        public const int WININET_E_OPERATION_CANCELLED = unchecked((int)(0x80072EF1));

        [NativeTypeName("#define WININET_E_INCORRECT_HANDLE_TYPE _HRESULT_TYPEDEF_(0x80072EF2L)")]
        public const int WININET_E_INCORRECT_HANDLE_TYPE = unchecked((int)(0x80072EF2));

        [NativeTypeName("#define WININET_E_INCORRECT_HANDLE_STATE _HRESULT_TYPEDEF_(0x80072EF3L)")]
        public const int WININET_E_INCORRECT_HANDLE_STATE = unchecked((int)(0x80072EF3));

        [NativeTypeName("#define WININET_E_NOT_PROXY_REQUEST _HRESULT_TYPEDEF_(0x80072EF4L)")]
        public const int WININET_E_NOT_PROXY_REQUEST = unchecked((int)(0x80072EF4));

        [NativeTypeName("#define WININET_E_REGISTRY_VALUE_NOT_FOUND _HRESULT_TYPEDEF_(0x80072EF5L)")]
        public const int WININET_E_REGISTRY_VALUE_NOT_FOUND = unchecked((int)(0x80072EF5));

        [NativeTypeName("#define WININET_E_BAD_REGISTRY_PARAMETER _HRESULT_TYPEDEF_(0x80072EF6L)")]
        public const int WININET_E_BAD_REGISTRY_PARAMETER = unchecked((int)(0x80072EF6));

        [NativeTypeName("#define WININET_E_NO_DIRECT_ACCESS _HRESULT_TYPEDEF_(0x80072EF7L)")]
        public const int WININET_E_NO_DIRECT_ACCESS = unchecked((int)(0x80072EF7));

        [NativeTypeName("#define WININET_E_NO_CONTEXT _HRESULT_TYPEDEF_(0x80072EF8L)")]
        public const int WININET_E_NO_CONTEXT = unchecked((int)(0x80072EF8));

        [NativeTypeName("#define WININET_E_NO_CALLBACK _HRESULT_TYPEDEF_(0x80072EF9L)")]
        public const int WININET_E_NO_CALLBACK = unchecked((int)(0x80072EF9));

        [NativeTypeName("#define WININET_E_REQUEST_PENDING _HRESULT_TYPEDEF_(0x80072EFAL)")]
        public const int WININET_E_REQUEST_PENDING = unchecked((int)(0x80072EFA));

        [NativeTypeName("#define WININET_E_INCORRECT_FORMAT _HRESULT_TYPEDEF_(0x80072EFBL)")]
        public const int WININET_E_INCORRECT_FORMAT = unchecked((int)(0x80072EFB));

        [NativeTypeName("#define WININET_E_ITEM_NOT_FOUND _HRESULT_TYPEDEF_(0x80072EFCL)")]
        public const int WININET_E_ITEM_NOT_FOUND = unchecked((int)(0x80072EFC));

        [NativeTypeName("#define WININET_E_CANNOT_CONNECT _HRESULT_TYPEDEF_(0x80072EFDL)")]
        public const int WININET_E_CANNOT_CONNECT = unchecked((int)(0x80072EFD));

        [NativeTypeName("#define WININET_E_CONNECTION_ABORTED _HRESULT_TYPEDEF_(0x80072EFEL)")]
        public const int WININET_E_CONNECTION_ABORTED = unchecked((int)(0x80072EFE));

        [NativeTypeName("#define WININET_E_CONNECTION_RESET _HRESULT_TYPEDEF_(0x80072EFFL)")]
        public const int WININET_E_CONNECTION_RESET = unchecked((int)(0x80072EFF));

        [NativeTypeName("#define WININET_E_FORCE_RETRY _HRESULT_TYPEDEF_(0x80072F00L)")]
        public const int WININET_E_FORCE_RETRY = unchecked((int)(0x80072F00));

        [NativeTypeName("#define WININET_E_INVALID_PROXY_REQUEST _HRESULT_TYPEDEF_(0x80072F01L)")]
        public const int WININET_E_INVALID_PROXY_REQUEST = unchecked((int)(0x80072F01));

        [NativeTypeName("#define WININET_E_NEED_UI _HRESULT_TYPEDEF_(0x80072F02L)")]
        public const int WININET_E_NEED_UI = unchecked((int)(0x80072F02));

        [NativeTypeName("#define WININET_E_HANDLE_EXISTS _HRESULT_TYPEDEF_(0x80072F04L)")]
        public const int WININET_E_HANDLE_EXISTS = unchecked((int)(0x80072F04));

        [NativeTypeName("#define WININET_E_SEC_CERT_DATE_INVALID _HRESULT_TYPEDEF_(0x80072F05L)")]
        public const int WININET_E_SEC_CERT_DATE_INVALID = unchecked((int)(0x80072F05));

        [NativeTypeName("#define WININET_E_SEC_CERT_CN_INVALID _HRESULT_TYPEDEF_(0x80072F06L)")]
        public const int WININET_E_SEC_CERT_CN_INVALID = unchecked((int)(0x80072F06));

        [NativeTypeName("#define WININET_E_HTTP_TO_HTTPS_ON_REDIR _HRESULT_TYPEDEF_(0x80072F07L)")]
        public const int WININET_E_HTTP_TO_HTTPS_ON_REDIR = unchecked((int)(0x80072F07));

        [NativeTypeName("#define WININET_E_HTTPS_TO_HTTP_ON_REDIR _HRESULT_TYPEDEF_(0x80072F08L)")]
        public const int WININET_E_HTTPS_TO_HTTP_ON_REDIR = unchecked((int)(0x80072F08));

        [NativeTypeName("#define WININET_E_MIXED_SECURITY _HRESULT_TYPEDEF_(0x80072F09L)")]
        public const int WININET_E_MIXED_SECURITY = unchecked((int)(0x80072F09));

        [NativeTypeName("#define WININET_E_CHG_POST_IS_NON_SECURE _HRESULT_TYPEDEF_(0x80072F0AL)")]
        public const int WININET_E_CHG_POST_IS_NON_SECURE = unchecked((int)(0x80072F0A));

        [NativeTypeName("#define WININET_E_POST_IS_NON_SECURE _HRESULT_TYPEDEF_(0x80072F0BL)")]
        public const int WININET_E_POST_IS_NON_SECURE = unchecked((int)(0x80072F0B));

        [NativeTypeName("#define WININET_E_CLIENT_AUTH_CERT_NEEDED _HRESULT_TYPEDEF_(0x80072F0CL)")]
        public const int WININET_E_CLIENT_AUTH_CERT_NEEDED = unchecked((int)(0x80072F0C));

        [NativeTypeName("#define WININET_E_INVALID_CA _HRESULT_TYPEDEF_(0x80072F0DL)")]
        public const int WININET_E_INVALID_CA = unchecked((int)(0x80072F0D));

        [NativeTypeName("#define WININET_E_CLIENT_AUTH_NOT_SETUP _HRESULT_TYPEDEF_(0x80072F0EL)")]
        public const int WININET_E_CLIENT_AUTH_NOT_SETUP = unchecked((int)(0x80072F0E));

        [NativeTypeName("#define WININET_E_ASYNC_THREAD_FAILED _HRESULT_TYPEDEF_(0x80072F0FL)")]
        public const int WININET_E_ASYNC_THREAD_FAILED = unchecked((int)(0x80072F0F));

        [NativeTypeName("#define WININET_E_REDIRECT_SCHEME_CHANGE _HRESULT_TYPEDEF_(0x80072F10L)")]
        public const int WININET_E_REDIRECT_SCHEME_CHANGE = unchecked((int)(0x80072F10));

        [NativeTypeName("#define WININET_E_DIALOG_PENDING _HRESULT_TYPEDEF_(0x80072F11L)")]
        public const int WININET_E_DIALOG_PENDING = unchecked((int)(0x80072F11));

        [NativeTypeName("#define WININET_E_RETRY_DIALOG _HRESULT_TYPEDEF_(0x80072F12L)")]
        public const int WININET_E_RETRY_DIALOG = unchecked((int)(0x80072F12));

        [NativeTypeName("#define WININET_E_NO_NEW_CONTAINERS _HRESULT_TYPEDEF_(0x80072F13L)")]
        public const int WININET_E_NO_NEW_CONTAINERS = unchecked((int)(0x80072F13));

        [NativeTypeName("#define WININET_E_HTTPS_HTTP_SUBMIT_REDIR _HRESULT_TYPEDEF_(0x80072F14L)")]
        public const int WININET_E_HTTPS_HTTP_SUBMIT_REDIR = unchecked((int)(0x80072F14));

        [NativeTypeName("#define WININET_E_SEC_CERT_ERRORS _HRESULT_TYPEDEF_(0x80072F17L)")]
        public const int WININET_E_SEC_CERT_ERRORS = unchecked((int)(0x80072F17));

        [NativeTypeName("#define WININET_E_SEC_CERT_REV_FAILED _HRESULT_TYPEDEF_(0x80072F19L)")]
        public const int WININET_E_SEC_CERT_REV_FAILED = unchecked((int)(0x80072F19));

        [NativeTypeName("#define WININET_E_HEADER_NOT_FOUND _HRESULT_TYPEDEF_(0x80072F76L)")]
        public const int WININET_E_HEADER_NOT_FOUND = unchecked((int)(0x80072F76));

        [NativeTypeName("#define WININET_E_DOWNLEVEL_SERVER _HRESULT_TYPEDEF_(0x80072F77L)")]
        public const int WININET_E_DOWNLEVEL_SERVER = unchecked((int)(0x80072F77));

        [NativeTypeName("#define WININET_E_INVALID_SERVER_RESPONSE _HRESULT_TYPEDEF_(0x80072F78L)")]
        public const int WININET_E_INVALID_SERVER_RESPONSE = unchecked((int)(0x80072F78));

        [NativeTypeName("#define WININET_E_INVALID_HEADER _HRESULT_TYPEDEF_(0x80072F79L)")]
        public const int WININET_E_INVALID_HEADER = unchecked((int)(0x80072F79));

        [NativeTypeName("#define WININET_E_INVALID_QUERY_REQUEST _HRESULT_TYPEDEF_(0x80072F7AL)")]
        public const int WININET_E_INVALID_QUERY_REQUEST = unchecked((int)(0x80072F7A));

        [NativeTypeName("#define WININET_E_HEADER_ALREADY_EXISTS _HRESULT_TYPEDEF_(0x80072F7BL)")]
        public const int WININET_E_HEADER_ALREADY_EXISTS = unchecked((int)(0x80072F7B));

        [NativeTypeName("#define WININET_E_REDIRECT_FAILED _HRESULT_TYPEDEF_(0x80072F7CL)")]
        public const int WININET_E_REDIRECT_FAILED = unchecked((int)(0x80072F7C));

        [NativeTypeName("#define WININET_E_SECURITY_CHANNEL_ERROR _HRESULT_TYPEDEF_(0x80072F7DL)")]
        public const int WININET_E_SECURITY_CHANNEL_ERROR = unchecked((int)(0x80072F7D));

        [NativeTypeName("#define WININET_E_UNABLE_TO_CACHE_FILE _HRESULT_TYPEDEF_(0x80072F7EL)")]
        public const int WININET_E_UNABLE_TO_CACHE_FILE = unchecked((int)(0x80072F7E));

        [NativeTypeName("#define WININET_E_TCPIP_NOT_INSTALLED _HRESULT_TYPEDEF_(0x80072F7FL)")]
        public const int WININET_E_TCPIP_NOT_INSTALLED = unchecked((int)(0x80072F7F));

        [NativeTypeName("#define WININET_E_DISCONNECTED _HRESULT_TYPEDEF_(0x80072F83L)")]
        public const int WININET_E_DISCONNECTED = unchecked((int)(0x80072F83));

        [NativeTypeName("#define WININET_E_SERVER_UNREACHABLE _HRESULT_TYPEDEF_(0x80072F84L)")]
        public const int WININET_E_SERVER_UNREACHABLE = unchecked((int)(0x80072F84));

        [NativeTypeName("#define WININET_E_PROXY_SERVER_UNREACHABLE _HRESULT_TYPEDEF_(0x80072F85L)")]
        public const int WININET_E_PROXY_SERVER_UNREACHABLE = unchecked((int)(0x80072F85));

        [NativeTypeName("#define WININET_E_BAD_AUTO_PROXY_SCRIPT _HRESULT_TYPEDEF_(0x80072F86L)")]
        public const int WININET_E_BAD_AUTO_PROXY_SCRIPT = unchecked((int)(0x80072F86));

        [NativeTypeName("#define WININET_E_UNABLE_TO_DOWNLOAD_SCRIPT _HRESULT_TYPEDEF_(0x80072F87L)")]
        public const int WININET_E_UNABLE_TO_DOWNLOAD_SCRIPT = unchecked((int)(0x80072F87));

        [NativeTypeName("#define WININET_E_SEC_INVALID_CERT _HRESULT_TYPEDEF_(0x80072F89L)")]
        public const int WININET_E_SEC_INVALID_CERT = unchecked((int)(0x80072F89));

        [NativeTypeName("#define WININET_E_SEC_CERT_REVOKED _HRESULT_TYPEDEF_(0x80072F8AL)")]
        public const int WININET_E_SEC_CERT_REVOKED = unchecked((int)(0x80072F8A));

        [NativeTypeName("#define WININET_E_FAILED_DUETOSECURITYCHECK _HRESULT_TYPEDEF_(0x80072F8BL)")]
        public const int WININET_E_FAILED_DUETOSECURITYCHECK = unchecked((int)(0x80072F8B));

        [NativeTypeName("#define WININET_E_NOT_INITIALIZED _HRESULT_TYPEDEF_(0x80072F8CL)")]
        public const int WININET_E_NOT_INITIALIZED = unchecked((int)(0x80072F8C));

        [NativeTypeName("#define WININET_E_LOGIN_FAILURE_DISPLAY_ENTITY_BODY _HRESULT_TYPEDEF_(0x80072F8EL)")]
        public const int WININET_E_LOGIN_FAILURE_DISPLAY_ENTITY_BODY = unchecked((int)(0x80072F8E));

        [NativeTypeName("#define WININET_E_DECODING_FAILED _HRESULT_TYPEDEF_(0x80072F8FL)")]
        public const int WININET_E_DECODING_FAILED = unchecked((int)(0x80072F8F));

        [NativeTypeName("#define WININET_E_NOT_REDIRECTED _HRESULT_TYPEDEF_(0x80072F80L)")]
        public const int WININET_E_NOT_REDIRECTED = unchecked((int)(0x80072F80));

        [NativeTypeName("#define WININET_E_COOKIE_NEEDS_CONFIRMATION _HRESULT_TYPEDEF_(0x80072F81L)")]
        public const int WININET_E_COOKIE_NEEDS_CONFIRMATION = unchecked((int)(0x80072F81));

        [NativeTypeName("#define WININET_E_COOKIE_DECLINED _HRESULT_TYPEDEF_(0x80072F82L)")]
        public const int WININET_E_COOKIE_DECLINED = unchecked((int)(0x80072F82));

        [NativeTypeName("#define WININET_E_REDIRECT_NEEDS_CONFIRMATION _HRESULT_TYPEDEF_(0x80072F88L)")]
        public const int WININET_E_REDIRECT_NEEDS_CONFIRMATION = unchecked((int)(0x80072F88));

        [NativeTypeName("#define SQLITE_E_ERROR _HRESULT_TYPEDEF_(0x87AF0001L)")]
        public const int SQLITE_E_ERROR = unchecked((int)(0x87AF0001));

        [NativeTypeName("#define SQLITE_E_INTERNAL _HRESULT_TYPEDEF_(0x87AF0002L)")]
        public const int SQLITE_E_INTERNAL = unchecked((int)(0x87AF0002));

        [NativeTypeName("#define SQLITE_E_PERM _HRESULT_TYPEDEF_(0x87AF0003L)")]
        public const int SQLITE_E_PERM = unchecked((int)(0x87AF0003));

        [NativeTypeName("#define SQLITE_E_ABORT _HRESULT_TYPEDEF_(0x87AF0004L)")]
        public const int SQLITE_E_ABORT = unchecked((int)(0x87AF0004));

        [NativeTypeName("#define SQLITE_E_BUSY _HRESULT_TYPEDEF_(0x87AF0005L)")]
        public const int SQLITE_E_BUSY = unchecked((int)(0x87AF0005));

        [NativeTypeName("#define SQLITE_E_LOCKED _HRESULT_TYPEDEF_(0x87AF0006L)")]
        public const int SQLITE_E_LOCKED = unchecked((int)(0x87AF0006));

        [NativeTypeName("#define SQLITE_E_NOMEM _HRESULT_TYPEDEF_(0x87AF0007L)")]
        public const int SQLITE_E_NOMEM = unchecked((int)(0x87AF0007));

        [NativeTypeName("#define SQLITE_E_READONLY _HRESULT_TYPEDEF_(0x87AF0008L)")]
        public const int SQLITE_E_READONLY = unchecked((int)(0x87AF0008));

        [NativeTypeName("#define SQLITE_E_INTERRUPT _HRESULT_TYPEDEF_(0x87AF0009L)")]
        public const int SQLITE_E_INTERRUPT = unchecked((int)(0x87AF0009));

        [NativeTypeName("#define SQLITE_E_IOERR _HRESULT_TYPEDEF_(0x87AF000AL)")]
        public const int SQLITE_E_IOERR = unchecked((int)(0x87AF000A));

        [NativeTypeName("#define SQLITE_E_CORRUPT _HRESULT_TYPEDEF_(0x87AF000BL)")]
        public const int SQLITE_E_CORRUPT = unchecked((int)(0x87AF000B));

        [NativeTypeName("#define SQLITE_E_NOTFOUND _HRESULT_TYPEDEF_(0x87AF000CL)")]
        public const int SQLITE_E_NOTFOUND = unchecked((int)(0x87AF000C));

        [NativeTypeName("#define SQLITE_E_FULL _HRESULT_TYPEDEF_(0x87AF000DL)")]
        public const int SQLITE_E_FULL = unchecked((int)(0x87AF000D));

        [NativeTypeName("#define SQLITE_E_CANTOPEN _HRESULT_TYPEDEF_(0x87AF000EL)")]
        public const int SQLITE_E_CANTOPEN = unchecked((int)(0x87AF000E));

        [NativeTypeName("#define SQLITE_E_PROTOCOL _HRESULT_TYPEDEF_(0x87AF000FL)")]
        public const int SQLITE_E_PROTOCOL = unchecked((int)(0x87AF000F));

        [NativeTypeName("#define SQLITE_E_EMPTY _HRESULT_TYPEDEF_(0x87AF0010L)")]
        public const int SQLITE_E_EMPTY = unchecked((int)(0x87AF0010));

        [NativeTypeName("#define SQLITE_E_SCHEMA _HRESULT_TYPEDEF_(0x87AF0011L)")]
        public const int SQLITE_E_SCHEMA = unchecked((int)(0x87AF0011));

        [NativeTypeName("#define SQLITE_E_TOOBIG _HRESULT_TYPEDEF_(0x87AF0012L)")]
        public const int SQLITE_E_TOOBIG = unchecked((int)(0x87AF0012));

        [NativeTypeName("#define SQLITE_E_CONSTRAINT _HRESULT_TYPEDEF_(0x87AF0013L)")]
        public const int SQLITE_E_CONSTRAINT = unchecked((int)(0x87AF0013));

        [NativeTypeName("#define SQLITE_E_MISMATCH _HRESULT_TYPEDEF_(0x87AF0014L)")]
        public const int SQLITE_E_MISMATCH = unchecked((int)(0x87AF0014));

        [NativeTypeName("#define SQLITE_E_MISUSE _HRESULT_TYPEDEF_(0x87AF0015L)")]
        public const int SQLITE_E_MISUSE = unchecked((int)(0x87AF0015));

        [NativeTypeName("#define SQLITE_E_NOLFS _HRESULT_TYPEDEF_(0x87AF0016L)")]
        public const int SQLITE_E_NOLFS = unchecked((int)(0x87AF0016));

        [NativeTypeName("#define SQLITE_E_AUTH _HRESULT_TYPEDEF_(0x87AF0017L)")]
        public const int SQLITE_E_AUTH = unchecked((int)(0x87AF0017));

        [NativeTypeName("#define SQLITE_E_FORMAT _HRESULT_TYPEDEF_(0x87AF0018L)")]
        public const int SQLITE_E_FORMAT = unchecked((int)(0x87AF0018));

        [NativeTypeName("#define SQLITE_E_RANGE _HRESULT_TYPEDEF_(0x87AF0019L)")]
        public const int SQLITE_E_RANGE = unchecked((int)(0x87AF0019));

        [NativeTypeName("#define SQLITE_E_NOTADB _HRESULT_TYPEDEF_(0x87AF001AL)")]
        public const int SQLITE_E_NOTADB = unchecked((int)(0x87AF001A));

        [NativeTypeName("#define SQLITE_E_NOTICE _HRESULT_TYPEDEF_(0x87AF001BL)")]
        public const int SQLITE_E_NOTICE = unchecked((int)(0x87AF001B));

        [NativeTypeName("#define SQLITE_E_WARNING _HRESULT_TYPEDEF_(0x87AF001CL)")]
        public const int SQLITE_E_WARNING = unchecked((int)(0x87AF001C));

        [NativeTypeName("#define SQLITE_E_ROW _HRESULT_TYPEDEF_(0x87AF0064L)")]
        public const int SQLITE_E_ROW = unchecked((int)(0x87AF0064));

        [NativeTypeName("#define SQLITE_E_DONE _HRESULT_TYPEDEF_(0x87AF0065L)")]
        public const int SQLITE_E_DONE = unchecked((int)(0x87AF0065));

        [NativeTypeName("#define SQLITE_E_IOERR_READ _HRESULT_TYPEDEF_(0x87AF010AL)")]
        public const int SQLITE_E_IOERR_READ = unchecked((int)(0x87AF010A));

        [NativeTypeName("#define SQLITE_E_IOERR_SHORT_READ _HRESULT_TYPEDEF_(0x87AF020AL)")]
        public const int SQLITE_E_IOERR_SHORT_READ = unchecked((int)(0x87AF020A));

        [NativeTypeName("#define SQLITE_E_IOERR_WRITE _HRESULT_TYPEDEF_(0x87AF030AL)")]
        public const int SQLITE_E_IOERR_WRITE = unchecked((int)(0x87AF030A));

        [NativeTypeName("#define SQLITE_E_IOERR_FSYNC _HRESULT_TYPEDEF_(0x87AF040AL)")]
        public const int SQLITE_E_IOERR_FSYNC = unchecked((int)(0x87AF040A));

        [NativeTypeName("#define SQLITE_E_IOERR_DIR_FSYNC _HRESULT_TYPEDEF_(0x87AF050AL)")]
        public const int SQLITE_E_IOERR_DIR_FSYNC = unchecked((int)(0x87AF050A));

        [NativeTypeName("#define SQLITE_E_IOERR_TRUNCATE _HRESULT_TYPEDEF_(0x87AF060AL)")]
        public const int SQLITE_E_IOERR_TRUNCATE = unchecked((int)(0x87AF060A));

        [NativeTypeName("#define SQLITE_E_IOERR_FSTAT _HRESULT_TYPEDEF_(0x87AF070AL)")]
        public const int SQLITE_E_IOERR_FSTAT = unchecked((int)(0x87AF070A));

        [NativeTypeName("#define SQLITE_E_IOERR_UNLOCK _HRESULT_TYPEDEF_(0x87AF080AL)")]
        public const int SQLITE_E_IOERR_UNLOCK = unchecked((int)(0x87AF080A));

        [NativeTypeName("#define SQLITE_E_IOERR_RDLOCK _HRESULT_TYPEDEF_(0x87AF090AL)")]
        public const int SQLITE_E_IOERR_RDLOCK = unchecked((int)(0x87AF090A));

        [NativeTypeName("#define SQLITE_E_IOERR_DELETE _HRESULT_TYPEDEF_(0x87AF0A0AL)")]
        public const int SQLITE_E_IOERR_DELETE = unchecked((int)(0x87AF0A0A));

        [NativeTypeName("#define SQLITE_E_IOERR_BLOCKED _HRESULT_TYPEDEF_(0x87AF0B0AL)")]
        public const int SQLITE_E_IOERR_BLOCKED = unchecked((int)(0x87AF0B0A));

        [NativeTypeName("#define SQLITE_E_IOERR_NOMEM _HRESULT_TYPEDEF_(0x87AF0C0AL)")]
        public const int SQLITE_E_IOERR_NOMEM = unchecked((int)(0x87AF0C0A));

        [NativeTypeName("#define SQLITE_E_IOERR_ACCESS _HRESULT_TYPEDEF_(0x87AF0D0AL)")]
        public const int SQLITE_E_IOERR_ACCESS = unchecked((int)(0x87AF0D0A));

        [NativeTypeName("#define SQLITE_E_IOERR_CHECKRESERVEDLOCK _HRESULT_TYPEDEF_(0x87AF0E0AL)")]
        public const int SQLITE_E_IOERR_CHECKRESERVEDLOCK = unchecked((int)(0x87AF0E0A));

        [NativeTypeName("#define SQLITE_E_IOERR_LOCK _HRESULT_TYPEDEF_(0x87AF0F0AL)")]
        public const int SQLITE_E_IOERR_LOCK = unchecked((int)(0x87AF0F0A));

        [NativeTypeName("#define SQLITE_E_IOERR_CLOSE _HRESULT_TYPEDEF_(0x87AF100AL)")]
        public const int SQLITE_E_IOERR_CLOSE = unchecked((int)(0x87AF100A));

        [NativeTypeName("#define SQLITE_E_IOERR_DIR_CLOSE _HRESULT_TYPEDEF_(0x87AF110AL)")]
        public const int SQLITE_E_IOERR_DIR_CLOSE = unchecked((int)(0x87AF110A));

        [NativeTypeName("#define SQLITE_E_IOERR_SHMOPEN _HRESULT_TYPEDEF_(0x87AF120AL)")]
        public const int SQLITE_E_IOERR_SHMOPEN = unchecked((int)(0x87AF120A));

        [NativeTypeName("#define SQLITE_E_IOERR_SHMSIZE _HRESULT_TYPEDEF_(0x87AF130AL)")]
        public const int SQLITE_E_IOERR_SHMSIZE = unchecked((int)(0x87AF130A));

        [NativeTypeName("#define SQLITE_E_IOERR_SHMLOCK _HRESULT_TYPEDEF_(0x87AF140AL)")]
        public const int SQLITE_E_IOERR_SHMLOCK = unchecked((int)(0x87AF140A));

        [NativeTypeName("#define SQLITE_E_IOERR_SHMMAP _HRESULT_TYPEDEF_(0x87AF150AL)")]
        public const int SQLITE_E_IOERR_SHMMAP = unchecked((int)(0x87AF150A));

        [NativeTypeName("#define SQLITE_E_IOERR_SEEK _HRESULT_TYPEDEF_(0x87AF160AL)")]
        public const int SQLITE_E_IOERR_SEEK = unchecked((int)(0x87AF160A));

        [NativeTypeName("#define SQLITE_E_IOERR_DELETE_NOENT _HRESULT_TYPEDEF_(0x87AF170AL)")]
        public const int SQLITE_E_IOERR_DELETE_NOENT = unchecked((int)(0x87AF170A));

        [NativeTypeName("#define SQLITE_E_IOERR_MMAP _HRESULT_TYPEDEF_(0x87AF180AL)")]
        public const int SQLITE_E_IOERR_MMAP = unchecked((int)(0x87AF180A));

        [NativeTypeName("#define SQLITE_E_IOERR_GETTEMPPATH _HRESULT_TYPEDEF_(0x87AF190AL)")]
        public const int SQLITE_E_IOERR_GETTEMPPATH = unchecked((int)(0x87AF190A));

        [NativeTypeName("#define SQLITE_E_IOERR_CONVPATH _HRESULT_TYPEDEF_(0x87AF1A0AL)")]
        public const int SQLITE_E_IOERR_CONVPATH = unchecked((int)(0x87AF1A0A));

        [NativeTypeName("#define SQLITE_E_IOERR_VNODE _HRESULT_TYPEDEF_(0x87AF1A02L)")]
        public const int SQLITE_E_IOERR_VNODE = unchecked((int)(0x87AF1A02));

        [NativeTypeName("#define SQLITE_E_IOERR_AUTH _HRESULT_TYPEDEF_(0x87AF1A03L)")]
        public const int SQLITE_E_IOERR_AUTH = unchecked((int)(0x87AF1A03));

        [NativeTypeName("#define SQLITE_E_LOCKED_SHAREDCACHE _HRESULT_TYPEDEF_(0x87AF0106L)")]
        public const int SQLITE_E_LOCKED_SHAREDCACHE = unchecked((int)(0x87AF0106));

        [NativeTypeName("#define SQLITE_E_BUSY_RECOVERY _HRESULT_TYPEDEF_(0x87AF0105L)")]
        public const int SQLITE_E_BUSY_RECOVERY = unchecked((int)(0x87AF0105));

        [NativeTypeName("#define SQLITE_E_BUSY_SNAPSHOT _HRESULT_TYPEDEF_(0x87AF0205L)")]
        public const int SQLITE_E_BUSY_SNAPSHOT = unchecked((int)(0x87AF0205));

        [NativeTypeName("#define SQLITE_E_CANTOPEN_NOTEMPDIR _HRESULT_TYPEDEF_(0x87AF010EL)")]
        public const int SQLITE_E_CANTOPEN_NOTEMPDIR = unchecked((int)(0x87AF010E));

        [NativeTypeName("#define SQLITE_E_CANTOPEN_ISDIR _HRESULT_TYPEDEF_(0x87AF020EL)")]
        public const int SQLITE_E_CANTOPEN_ISDIR = unchecked((int)(0x87AF020E));

        [NativeTypeName("#define SQLITE_E_CANTOPEN_FULLPATH _HRESULT_TYPEDEF_(0x87AF030EL)")]
        public const int SQLITE_E_CANTOPEN_FULLPATH = unchecked((int)(0x87AF030E));

        [NativeTypeName("#define SQLITE_E_CANTOPEN_CONVPATH _HRESULT_TYPEDEF_(0x87AF040EL)")]
        public const int SQLITE_E_CANTOPEN_CONVPATH = unchecked((int)(0x87AF040E));

        [NativeTypeName("#define SQLITE_E_CORRUPT_VTAB _HRESULT_TYPEDEF_(0x87AF010BL)")]
        public const int SQLITE_E_CORRUPT_VTAB = unchecked((int)(0x87AF010B));

        [NativeTypeName("#define SQLITE_E_READONLY_RECOVERY _HRESULT_TYPEDEF_(0x87AF0108L)")]
        public const int SQLITE_E_READONLY_RECOVERY = unchecked((int)(0x87AF0108));

        [NativeTypeName("#define SQLITE_E_READONLY_CANTLOCK _HRESULT_TYPEDEF_(0x87AF0208L)")]
        public const int SQLITE_E_READONLY_CANTLOCK = unchecked((int)(0x87AF0208));

        [NativeTypeName("#define SQLITE_E_READONLY_ROLLBACK _HRESULT_TYPEDEF_(0x87AF0308L)")]
        public const int SQLITE_E_READONLY_ROLLBACK = unchecked((int)(0x87AF0308));

        [NativeTypeName("#define SQLITE_E_READONLY_DBMOVED _HRESULT_TYPEDEF_(0x87AF0408L)")]
        public const int SQLITE_E_READONLY_DBMOVED = unchecked((int)(0x87AF0408));

        [NativeTypeName("#define SQLITE_E_ABORT_ROLLBACK _HRESULT_TYPEDEF_(0x87AF0204L)")]
        public const int SQLITE_E_ABORT_ROLLBACK = unchecked((int)(0x87AF0204));

        [NativeTypeName("#define SQLITE_E_CONSTRAINT_CHECK _HRESULT_TYPEDEF_(0x87AF0113L)")]
        public const int SQLITE_E_CONSTRAINT_CHECK = unchecked((int)(0x87AF0113));

        [NativeTypeName("#define SQLITE_E_CONSTRAINT_COMMITHOOK _HRESULT_TYPEDEF_(0x87AF0213L)")]
        public const int SQLITE_E_CONSTRAINT_COMMITHOOK = unchecked((int)(0x87AF0213));

        [NativeTypeName("#define SQLITE_E_CONSTRAINT_FOREIGNKEY _HRESULT_TYPEDEF_(0x87AF0313L)")]
        public const int SQLITE_E_CONSTRAINT_FOREIGNKEY = unchecked((int)(0x87AF0313));

        [NativeTypeName("#define SQLITE_E_CONSTRAINT_FUNCTION _HRESULT_TYPEDEF_(0x87AF0413L)")]
        public const int SQLITE_E_CONSTRAINT_FUNCTION = unchecked((int)(0x87AF0413));

        [NativeTypeName("#define SQLITE_E_CONSTRAINT_NOTNULL _HRESULT_TYPEDEF_(0x87AF0513L)")]
        public const int SQLITE_E_CONSTRAINT_NOTNULL = unchecked((int)(0x87AF0513));

        [NativeTypeName("#define SQLITE_E_CONSTRAINT_PRIMARYKEY _HRESULT_TYPEDEF_(0x87AF0613L)")]
        public const int SQLITE_E_CONSTRAINT_PRIMARYKEY = unchecked((int)(0x87AF0613));

        [NativeTypeName("#define SQLITE_E_CONSTRAINT_TRIGGER _HRESULT_TYPEDEF_(0x87AF0713L)")]
        public const int SQLITE_E_CONSTRAINT_TRIGGER = unchecked((int)(0x87AF0713));

        [NativeTypeName("#define SQLITE_E_CONSTRAINT_UNIQUE _HRESULT_TYPEDEF_(0x87AF0813L)")]
        public const int SQLITE_E_CONSTRAINT_UNIQUE = unchecked((int)(0x87AF0813));

        [NativeTypeName("#define SQLITE_E_CONSTRAINT_VTAB _HRESULT_TYPEDEF_(0x87AF0913L)")]
        public const int SQLITE_E_CONSTRAINT_VTAB = unchecked((int)(0x87AF0913));

        [NativeTypeName("#define SQLITE_E_CONSTRAINT_ROWID _HRESULT_TYPEDEF_(0x87AF0A13L)")]
        public const int SQLITE_E_CONSTRAINT_ROWID = unchecked((int)(0x87AF0A13));

        [NativeTypeName("#define SQLITE_E_NOTICE_RECOVER_WAL _HRESULT_TYPEDEF_(0x87AF011BL)")]
        public const int SQLITE_E_NOTICE_RECOVER_WAL = unchecked((int)(0x87AF011B));

        [NativeTypeName("#define SQLITE_E_NOTICE_RECOVER_ROLLBACK _HRESULT_TYPEDEF_(0x87AF021BL)")]
        public const int SQLITE_E_NOTICE_RECOVER_ROLLBACK = unchecked((int)(0x87AF021B));

        [NativeTypeName("#define SQLITE_E_WARNING_AUTOINDEX _HRESULT_TYPEDEF_(0x87AF011CL)")]
        public const int SQLITE_E_WARNING_AUTOINDEX = unchecked((int)(0x87AF011C));

        [NativeTypeName("#define UTC_E_TOGGLE_TRACE_STARTED _HRESULT_TYPEDEF_(0x87C51001L)")]
        public const int UTC_E_TOGGLE_TRACE_STARTED = unchecked((int)(0x87C51001));

        [NativeTypeName("#define UTC_E_ALTERNATIVE_TRACE_CANNOT_PREEMPT _HRESULT_TYPEDEF_(0x87C51002L)")]
        public const int UTC_E_ALTERNATIVE_TRACE_CANNOT_PREEMPT = unchecked((int)(0x87C51002));

        [NativeTypeName("#define UTC_E_AOT_NOT_RUNNING _HRESULT_TYPEDEF_(0x87C51003L)")]
        public const int UTC_E_AOT_NOT_RUNNING = unchecked((int)(0x87C51003));

        [NativeTypeName("#define UTC_E_SCRIPT_TYPE_INVALID _HRESULT_TYPEDEF_(0x87C51004L)")]
        public const int UTC_E_SCRIPT_TYPE_INVALID = unchecked((int)(0x87C51004));

        [NativeTypeName("#define UTC_E_SCENARIODEF_NOT_FOUND _HRESULT_TYPEDEF_(0x87C51005L)")]
        public const int UTC_E_SCENARIODEF_NOT_FOUND = unchecked((int)(0x87C51005));

        [NativeTypeName("#define UTC_E_TRACEPROFILE_NOT_FOUND _HRESULT_TYPEDEF_(0x87C51006L)")]
        public const int UTC_E_TRACEPROFILE_NOT_FOUND = unchecked((int)(0x87C51006));

        [NativeTypeName("#define UTC_E_FORWARDER_ALREADY_ENABLED _HRESULT_TYPEDEF_(0x87C51007L)")]
        public const int UTC_E_FORWARDER_ALREADY_ENABLED = unchecked((int)(0x87C51007));

        [NativeTypeName("#define UTC_E_FORWARDER_ALREADY_DISABLED _HRESULT_TYPEDEF_(0x87C51008L)")]
        public const int UTC_E_FORWARDER_ALREADY_DISABLED = unchecked((int)(0x87C51008));

        [NativeTypeName("#define UTC_E_EVENTLOG_ENTRY_MALFORMED _HRESULT_TYPEDEF_(0x87C51009L)")]
        public const int UTC_E_EVENTLOG_ENTRY_MALFORMED = unchecked((int)(0x87C51009));

        [NativeTypeName("#define UTC_E_DIAGRULES_SCHEMAVERSION_MISMATCH _HRESULT_TYPEDEF_(0x87C5100AL)")]
        public const int UTC_E_DIAGRULES_SCHEMAVERSION_MISMATCH = unchecked((int)(0x87C5100A));

        [NativeTypeName("#define UTC_E_SCRIPT_TERMINATED _HRESULT_TYPEDEF_(0x87C5100BL)")]
        public const int UTC_E_SCRIPT_TERMINATED = unchecked((int)(0x87C5100B));

        [NativeTypeName("#define UTC_E_INVALID_CUSTOM_FILTER _HRESULT_TYPEDEF_(0x87C5100CL)")]
        public const int UTC_E_INVALID_CUSTOM_FILTER = unchecked((int)(0x87C5100C));

        [NativeTypeName("#define UTC_E_TRACE_NOT_RUNNING _HRESULT_TYPEDEF_(0x87C5100DL)")]
        public const int UTC_E_TRACE_NOT_RUNNING = unchecked((int)(0x87C5100D));

        [NativeTypeName("#define UTC_E_REESCALATED_TOO_QUICKLY _HRESULT_TYPEDEF_(0x87C5100EL)")]
        public const int UTC_E_REESCALATED_TOO_QUICKLY = unchecked((int)(0x87C5100E));

        [NativeTypeName("#define UTC_E_ESCALATION_ALREADY_RUNNING _HRESULT_TYPEDEF_(0x87C5100FL)")]
        public const int UTC_E_ESCALATION_ALREADY_RUNNING = unchecked((int)(0x87C5100F));

        [NativeTypeName("#define UTC_E_PERFTRACK_ALREADY_TRACING _HRESULT_TYPEDEF_(0x87C51010L)")]
        public const int UTC_E_PERFTRACK_ALREADY_TRACING = unchecked((int)(0x87C51010));

        [NativeTypeName("#define UTC_E_REACHED_MAX_ESCALATIONS _HRESULT_TYPEDEF_(0x87C51011L)")]
        public const int UTC_E_REACHED_MAX_ESCALATIONS = unchecked((int)(0x87C51011));

        [NativeTypeName("#define UTC_E_FORWARDER_PRODUCER_MISMATCH _HRESULT_TYPEDEF_(0x87C51012L)")]
        public const int UTC_E_FORWARDER_PRODUCER_MISMATCH = unchecked((int)(0x87C51012));

        [NativeTypeName("#define UTC_E_INTENTIONAL_SCRIPT_FAILURE _HRESULT_TYPEDEF_(0x87C51013L)")]
        public const int UTC_E_INTENTIONAL_SCRIPT_FAILURE = unchecked((int)(0x87C51013));

        [NativeTypeName("#define UTC_E_SQM_INIT_FAILED _HRESULT_TYPEDEF_(0x87C51014L)")]
        public const int UTC_E_SQM_INIT_FAILED = unchecked((int)(0x87C51014));

        [NativeTypeName("#define UTC_E_NO_WER_LOGGER_SUPPORTED _HRESULT_TYPEDEF_(0x87C51015L)")]
        public const int UTC_E_NO_WER_LOGGER_SUPPORTED = unchecked((int)(0x87C51015));

        [NativeTypeName("#define UTC_E_TRACERS_DONT_EXIST _HRESULT_TYPEDEF_(0x87C51016L)")]
        public const int UTC_E_TRACERS_DONT_EXIST = unchecked((int)(0x87C51016));

        [NativeTypeName("#define UTC_E_WINRT_INIT_FAILED _HRESULT_TYPEDEF_(0x87C51017L)")]
        public const int UTC_E_WINRT_INIT_FAILED = unchecked((int)(0x87C51017));

        [NativeTypeName("#define UTC_E_SCENARIODEF_SCHEMAVERSION_MISMATCH _HRESULT_TYPEDEF_(0x87C51018L)")]
        public const int UTC_E_SCENARIODEF_SCHEMAVERSION_MISMATCH = unchecked((int)(0x87C51018));

        [NativeTypeName("#define UTC_E_INVALID_FILTER _HRESULT_TYPEDEF_(0x87C51019L)")]
        public const int UTC_E_INVALID_FILTER = unchecked((int)(0x87C51019));

        [NativeTypeName("#define UTC_E_EXE_TERMINATED _HRESULT_TYPEDEF_(0x87C5101AL)")]
        public const int UTC_E_EXE_TERMINATED = unchecked((int)(0x87C5101A));

        [NativeTypeName("#define UTC_E_ESCALATION_NOT_AUTHORIZED _HRESULT_TYPEDEF_(0x87C5101BL)")]
        public const int UTC_E_ESCALATION_NOT_AUTHORIZED = unchecked((int)(0x87C5101B));

        [NativeTypeName("#define UTC_E_SETUP_NOT_AUTHORIZED _HRESULT_TYPEDEF_(0x87C5101CL)")]
        public const int UTC_E_SETUP_NOT_AUTHORIZED = unchecked((int)(0x87C5101C));

        [NativeTypeName("#define UTC_E_CHILD_PROCESS_FAILED _HRESULT_TYPEDEF_(0x87C5101DL)")]
        public const int UTC_E_CHILD_PROCESS_FAILED = unchecked((int)(0x87C5101D));

        [NativeTypeName("#define UTC_E_COMMAND_LINE_NOT_AUTHORIZED _HRESULT_TYPEDEF_(0x87C5101EL)")]
        public const int UTC_E_COMMAND_LINE_NOT_AUTHORIZED = unchecked((int)(0x87C5101E));

        [NativeTypeName("#define UTC_E_CANNOT_LOAD_SCENARIO_EDITOR_XML _HRESULT_TYPEDEF_(0x87C5101FL)")]
        public const int UTC_E_CANNOT_LOAD_SCENARIO_EDITOR_XML = unchecked((int)(0x87C5101F));

        [NativeTypeName("#define UTC_E_ESCALATION_TIMED_OUT _HRESULT_TYPEDEF_(0x87C51020L)")]
        public const int UTC_E_ESCALATION_TIMED_OUT = unchecked((int)(0x87C51020));

        [NativeTypeName("#define UTC_E_SETUP_TIMED_OUT _HRESULT_TYPEDEF_(0x87C51021L)")]
        public const int UTC_E_SETUP_TIMED_OUT = unchecked((int)(0x87C51021));

        [NativeTypeName("#define UTC_E_TRIGGER_MISMATCH _HRESULT_TYPEDEF_(0x87C51022L)")]
        public const int UTC_E_TRIGGER_MISMATCH = unchecked((int)(0x87C51022));

        [NativeTypeName("#define UTC_E_TRIGGER_NOT_FOUND _HRESULT_TYPEDEF_(0x87C51023L)")]
        public const int UTC_E_TRIGGER_NOT_FOUND = unchecked((int)(0x87C51023));

        [NativeTypeName("#define UTC_E_SIF_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x87C51024L)")]
        public const int UTC_E_SIF_NOT_SUPPORTED = unchecked((int)(0x87C51024));

        [NativeTypeName("#define UTC_E_DELAY_TERMINATED _HRESULT_TYPEDEF_(0x87C51025L)")]
        public const int UTC_E_DELAY_TERMINATED = unchecked((int)(0x87C51025));

        [NativeTypeName("#define UTC_E_DEVICE_TICKET_ERROR _HRESULT_TYPEDEF_(0x87C51026L)")]
        public const int UTC_E_DEVICE_TICKET_ERROR = unchecked((int)(0x87C51026));

        [NativeTypeName("#define UTC_E_TRACE_BUFFER_LIMIT_EXCEEDED _HRESULT_TYPEDEF_(0x87C51027L)")]
        public const int UTC_E_TRACE_BUFFER_LIMIT_EXCEEDED = unchecked((int)(0x87C51027));

        [NativeTypeName("#define UTC_E_API_RESULT_UNAVAILABLE _HRESULT_TYPEDEF_(0x87C51028L)")]
        public const int UTC_E_API_RESULT_UNAVAILABLE = unchecked((int)(0x87C51028));

        [NativeTypeName("#define UTC_E_RPC_TIMEOUT _HRESULT_TYPEDEF_(0x87C51029L)")]
        public const int UTC_E_RPC_TIMEOUT = unchecked((int)(0x87C51029));

        [NativeTypeName("#define UTC_E_RPC_WAIT_FAILED _HRESULT_TYPEDEF_(0x87C5102AL)")]
        public const int UTC_E_RPC_WAIT_FAILED = unchecked((int)(0x87C5102A));

        [NativeTypeName("#define UTC_E_API_BUSY _HRESULT_TYPEDEF_(0x87C5102BL)")]
        public const int UTC_E_API_BUSY = unchecked((int)(0x87C5102B));

        [NativeTypeName("#define UTC_E_TRACE_MIN_DURATION_REQUIREMENT_NOT_MET _HRESULT_TYPEDEF_(0x87C5102CL)")]
        public const int UTC_E_TRACE_MIN_DURATION_REQUIREMENT_NOT_MET = unchecked((int)(0x87C5102C));

        [NativeTypeName("#define UTC_E_EXCLUSIVITY_NOT_AVAILABLE _HRESULT_TYPEDEF_(0x87C5102DL)")]
        public const int UTC_E_EXCLUSIVITY_NOT_AVAILABLE = unchecked((int)(0x87C5102D));

        [NativeTypeName("#define UTC_E_GETFILE_FILE_PATH_NOT_APPROVED _HRESULT_TYPEDEF_(0x87C5102EL)")]
        public const int UTC_E_GETFILE_FILE_PATH_NOT_APPROVED = unchecked((int)(0x87C5102E));

        [NativeTypeName("#define UTC_E_ESCALATION_DIRECTORY_ALREADY_EXISTS _HRESULT_TYPEDEF_(0x87C5102FL)")]
        public const int UTC_E_ESCALATION_DIRECTORY_ALREADY_EXISTS = unchecked((int)(0x87C5102F));

        [NativeTypeName("#define UTC_E_TIME_TRIGGER_ON_START_INVALID _HRESULT_TYPEDEF_(0x87C51030L)")]
        public const int UTC_E_TIME_TRIGGER_ON_START_INVALID = unchecked((int)(0x87C51030));

        [NativeTypeName("#define UTC_E_TIME_TRIGGER_ONLY_VALID_ON_SINGLE_TRANSITION _HRESULT_TYPEDEF_(0x87C51031L)")]
        public const int UTC_E_TIME_TRIGGER_ONLY_VALID_ON_SINGLE_TRANSITION = unchecked((int)(0x87C51031));

        [NativeTypeName("#define UTC_E_TIME_TRIGGER_INVALID_TIME_RANGE _HRESULT_TYPEDEF_(0x87C51032L)")]
        public const int UTC_E_TIME_TRIGGER_INVALID_TIME_RANGE = unchecked((int)(0x87C51032));

        [NativeTypeName("#define UTC_E_MULTIPLE_TIME_TRIGGER_ON_SINGLE_STATE _HRESULT_TYPEDEF_(0x87C51033L)")]
        public const int UTC_E_MULTIPLE_TIME_TRIGGER_ON_SINGLE_STATE = unchecked((int)(0x87C51033));

        [NativeTypeName("#define UTC_E_BINARY_MISSING _HRESULT_TYPEDEF_(0x87C51034L)")]
        public const int UTC_E_BINARY_MISSING = unchecked((int)(0x87C51034));

        [NativeTypeName("#define UTC_E_FAILED_TO_RESOLVE_CONTAINER_ID _HRESULT_TYPEDEF_(0x87C51036L)")]
        public const int UTC_E_FAILED_TO_RESOLVE_CONTAINER_ID = unchecked((int)(0x87C51036));

        [NativeTypeName("#define UTC_E_UNABLE_TO_RESOLVE_SESSION _HRESULT_TYPEDEF_(0x87C51037L)")]
        public const int UTC_E_UNABLE_TO_RESOLVE_SESSION = unchecked((int)(0x87C51037));

        [NativeTypeName("#define UTC_E_THROTTLED _HRESULT_TYPEDEF_(0x87C51038L)")]
        public const int UTC_E_THROTTLED = unchecked((int)(0x87C51038));

        [NativeTypeName("#define UTC_E_UNAPPROVED_SCRIPT _HRESULT_TYPEDEF_(0x87C51039L)")]
        public const int UTC_E_UNAPPROVED_SCRIPT = unchecked((int)(0x87C51039));

        [NativeTypeName("#define UTC_E_SCRIPT_MISSING _HRESULT_TYPEDEF_(0x87C5103AL)")]
        public const int UTC_E_SCRIPT_MISSING = unchecked((int)(0x87C5103A));

        [NativeTypeName("#define UTC_E_SCENARIO_THROTTLED _HRESULT_TYPEDEF_(0x87C5103BL)")]
        public const int UTC_E_SCENARIO_THROTTLED = unchecked((int)(0x87C5103B));

        [NativeTypeName("#define UTC_E_API_NOT_SUPPORTED _HRESULT_TYPEDEF_(0x87C5103CL)")]
        public const int UTC_E_API_NOT_SUPPORTED = unchecked((int)(0x87C5103C));

        [NativeTypeName("#define UTC_E_GETFILE_EXTERNAL_PATH_NOT_APPROVED _HRESULT_TYPEDEF_(0x87C5103DL)")]
        public const int UTC_E_GETFILE_EXTERNAL_PATH_NOT_APPROVED = unchecked((int)(0x87C5103D));

        [NativeTypeName("#define UTC_E_TRY_GET_SCENARIO_TIMEOUT_EXCEEDED _HRESULT_TYPEDEF_(0x87C5103EL)")]
        public const int UTC_E_TRY_GET_SCENARIO_TIMEOUT_EXCEEDED = unchecked((int)(0x87C5103E));

        [NativeTypeName("#define UTC_E_CERT_REV_FAILED _HRESULT_TYPEDEF_(0x87C5103FL)")]
        public const int UTC_E_CERT_REV_FAILED = unchecked((int)(0x87C5103F));

        [NativeTypeName("#define UTC_E_FAILED_TO_START_NDISCAP _HRESULT_TYPEDEF_(0x87C51040L)")]
        public const int UTC_E_FAILED_TO_START_NDISCAP = unchecked((int)(0x87C51040));

        [NativeTypeName("#define UTC_E_KERNELDUMP_LIMIT_REACHED _HRESULT_TYPEDEF_(0x87C51041L)")]
        public const int UTC_E_KERNELDUMP_LIMIT_REACHED = unchecked((int)(0x87C51041));

        [NativeTypeName("#define UTC_E_MISSING_AGGREGATE_EVENT_TAG _HRESULT_TYPEDEF_(0x87C51042L)")]
        public const int UTC_E_MISSING_AGGREGATE_EVENT_TAG = unchecked((int)(0x87C51042));

        [NativeTypeName("#define UTC_E_INVALID_AGGREGATION_STRUCT _HRESULT_TYPEDEF_(0x87C51043L)")]
        public const int UTC_E_INVALID_AGGREGATION_STRUCT = unchecked((int)(0x87C51043));

        [NativeTypeName("#define UTC_E_ACTION_NOT_SUPPORTED_IN_DESTINATION _HRESULT_TYPEDEF_(0x87C51044L)")]
        public const int UTC_E_ACTION_NOT_SUPPORTED_IN_DESTINATION = unchecked((int)(0x87C51044));

        [NativeTypeName("#define UTC_E_FILTER_MISSING_ATTRIBUTE _HRESULT_TYPEDEF_(0x87C51045L)")]
        public const int UTC_E_FILTER_MISSING_ATTRIBUTE = unchecked((int)(0x87C51045));

        [NativeTypeName("#define UTC_E_FILTER_INVALID_TYPE _HRESULT_TYPEDEF_(0x87C51046L)")]
        public const int UTC_E_FILTER_INVALID_TYPE = unchecked((int)(0x87C51046));

        [NativeTypeName("#define UTC_E_FILTER_VARIABLE_NOT_FOUND _HRESULT_TYPEDEF_(0x87C51047L)")]
        public const int UTC_E_FILTER_VARIABLE_NOT_FOUND = unchecked((int)(0x87C51047));

        [NativeTypeName("#define UTC_E_FILTER_FUNCTION_RESTRICTED _HRESULT_TYPEDEF_(0x87C51048L)")]
        public const int UTC_E_FILTER_FUNCTION_RESTRICTED = unchecked((int)(0x87C51048));

        [NativeTypeName("#define UTC_E_FILTER_VERSION_MISMATCH _HRESULT_TYPEDEF_(0x87C51049L)")]
        public const int UTC_E_FILTER_VERSION_MISMATCH = unchecked((int)(0x87C51049));

        [NativeTypeName("#define UTC_E_FILTER_INVALID_FUNCTION _HRESULT_TYPEDEF_(0x87C51050L)")]
        public const int UTC_E_FILTER_INVALID_FUNCTION = unchecked((int)(0x87C51050));

        [NativeTypeName("#define UTC_E_FILTER_INVALID_FUNCTION_PARAMS _HRESULT_TYPEDEF_(0x87C51051L)")]
        public const int UTC_E_FILTER_INVALID_FUNCTION_PARAMS = unchecked((int)(0x87C51051));

        [NativeTypeName("#define UTC_E_FILTER_INVALID_COMMAND _HRESULT_TYPEDEF_(0x87C51052L)")]
        public const int UTC_E_FILTER_INVALID_COMMAND = unchecked((int)(0x87C51052));

        [NativeTypeName("#define UTC_E_FILTER_ILLEGAL_EVAL _HRESULT_TYPEDEF_(0x87C51053L)")]
        public const int UTC_E_FILTER_ILLEGAL_EVAL = unchecked((int)(0x87C51053));

        [NativeTypeName("#define UTC_E_TTTRACER_RETURNED_ERROR _HRESULT_TYPEDEF_(0x87C51054L)")]
        public const int UTC_E_TTTRACER_RETURNED_ERROR = unchecked((int)(0x87C51054));

        [NativeTypeName("#define UTC_E_AGENT_DIAGNOSTICS_TOO_LARGE _HRESULT_TYPEDEF_(0x87C51055L)")]
        public const int UTC_E_AGENT_DIAGNOSTICS_TOO_LARGE = unchecked((int)(0x87C51055));

        [NativeTypeName("#define UTC_E_FAILED_TO_RECEIVE_AGENT_DIAGNOSTICS _HRESULT_TYPEDEF_(0x87C51056L)")]
        public const int UTC_E_FAILED_TO_RECEIVE_AGENT_DIAGNOSTICS = unchecked((int)(0x87C51056));

        [NativeTypeName("#define UTC_E_SCENARIO_HAS_NO_ACTIONS _HRESULT_TYPEDEF_(0x87C51057L)")]
        public const int UTC_E_SCENARIO_HAS_NO_ACTIONS = unchecked((int)(0x87C51057));

        [NativeTypeName("#define UTC_E_TTTRACER_STORAGE_FULL _HRESULT_TYPEDEF_(0x87C51058L)")]
        public const int UTC_E_TTTRACER_STORAGE_FULL = unchecked((int)(0x87C51058));

        [NativeTypeName("#define UTC_E_INSUFFICIENT_SPACE_TO_START_TRACE _HRESULT_TYPEDEF_(0x87C51059L)")]
        public const int UTC_E_INSUFFICIENT_SPACE_TO_START_TRACE = unchecked((int)(0x87C51059));

        [NativeTypeName("#define UTC_E_ESCALATION_CANCELLED_AT_SHUTDOWN _HRESULT_TYPEDEF_(0x87C5105AL)")]
        public const int UTC_E_ESCALATION_CANCELLED_AT_SHUTDOWN = unchecked((int)(0x87C5105A));

        [NativeTypeName("#define UTC_E_GETFILEINFOACTION_FILE_NOT_APPROVED _HRESULT_TYPEDEF_(0x87C5105BL)")]
        public const int UTC_E_GETFILEINFOACTION_FILE_NOT_APPROVED = unchecked((int)(0x87C5105B));

        [NativeTypeName("#define UTC_E_SETREGKEYACTION_TYPE_NOT_APPROVED _HRESULT_TYPEDEF_(0x87C5105CL)")]
        public const int UTC_E_SETREGKEYACTION_TYPE_NOT_APPROVED = unchecked((int)(0x87C5105C));

        [NativeTypeName("#define WINML_ERR_INVALID_DEVICE _HRESULT_TYPEDEF_(0x88900001L)")]
        public const int WINML_ERR_INVALID_DEVICE = unchecked((int)(0x88900001));

        [NativeTypeName("#define WINML_ERR_INVALID_BINDING _HRESULT_TYPEDEF_(0x88900002L)")]
        public const int WINML_ERR_INVALID_BINDING = unchecked((int)(0x88900002));

        [NativeTypeName("#define WINML_ERR_VALUE_NOTFOUND _HRESULT_TYPEDEF_(0x88900003L)")]
        public const int WINML_ERR_VALUE_NOTFOUND = unchecked((int)(0x88900003));

        [NativeTypeName("#define WINML_ERR_SIZE_MISMATCH _HRESULT_TYPEDEF_(0x88900004L)")]
        public const int WINML_ERR_SIZE_MISMATCH = unchecked((int)(0x88900004));

        [NativeTypeName("#define ERROR_QUIC_HANDSHAKE_FAILURE _HRESULT_TYPEDEF_(0x80410000L)")]
        public const int ERROR_QUIC_HANDSHAKE_FAILURE = unchecked((int)(0x80410000));

        [NativeTypeName("#define ERROR_QUIC_VER_NEG_FAILURE _HRESULT_TYPEDEF_(0x80410001L)")]
        public const int ERROR_QUIC_VER_NEG_FAILURE = unchecked((int)(0x80410001));
#endif
    }
}
